/*
 * Copyright 2025 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * This file was created using the `create_project.py` script located in the
 * `<AndroidX root>/development/project-creator` directory.
 *
 * Please use that script when creating a new project, rather than copying an existing project and
 * modifying its settings.
 */

import androidx.build.SoftwareType
import androidx.build.PlatformIdentifier

plugins {
    id("AndroidXPlugin")
    id("AndroidXComposePlugin")
}

androidXMultiplatform {
    androidLibrary {
        compileSdk = 36
        namespace = "androidx.navigationevent.compose"
    }
    desktop()
    mac()
    linux()
    ios()
    watchos()
    tvos()
    mingwX64()
    js()
    wasmJs()

    defaultPlatform(PlatformIdentifier.ANDROID)

    sourceSets {
        commonMain {
            dependencies {
                api(project(":navigationevent:navigationevent"))
                api("androidx.compose.runtime:runtime:1.9.0-beta03")
                implementation(libs.kotlinStdlib)
                implementation(libs.kotlinCoroutinesCore)
            }
        }

        commonTest {
            dependencies {
                implementation(libs.kotlinTest)
                implementation(project(":navigationevent:navigationevent-testing"))
                implementation(project(":kruth:kruth"))
            }
        }

        androidMain {
            dependsOn(commonMain)
            dependencies {
                implementation("androidx.compose.ui:ui:1.9.0-beta03") {
                    because("LocalView")
                }
            }
        }

        androidUnitTest {
            dependsOn(commonTest)
        }

        androidInstrumentedTest {
            dependsOn(commonTest)
            dependencies {
                implementation("androidx.compose.material:material:1.9.0-beta03")
                implementation("androidx.compose.ui:ui-test:1.9.0-beta03")
                implementation("androidx.compose.ui:ui-test-junit4:1.9.0-beta03")
                implementation("androidx.compose.ui:ui-test-manifest:1.9.0-beta03")
                implementation(libs.testExtJunit)
                implementation(libs.testCore)
                implementation(libs.testRunner)
                implementation(libs.testRules)
            }
        }

        nonAndroidMain {
            dependsOn(commonMain)
        }

        nonAndroidTest {
            dependsOn(commonTest)
        }

        desktopMain {
            dependsOn(nonAndroidMain)
        }

        desktopTest {
            dependsOn(nonAndroidTest)
        }

        nativeMain {
            dependsOn(nonAndroidMain)
        }

        nativeTest {
            dependsOn(nonAndroidTest)
        }

        darwinMain {
            dependsOn(nativeMain)
        }

        darwinTest {
            dependsOn(nativeTest)
        }

        linuxMain {
            dependsOn(nativeMain)
        }

        linuxTest {
            dependsOn(nativeTest)
        }

        mingwMain {
            dependsOn(nativeMain)
        }

        mingwTest {
            dependsOn(nativeTest)
        }

        webMain {
            dependsOn(nonAndroidMain)
        }

        webTest {
            dependsOn(nonAndroidTest)
            dependencies {
                implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.9.0")
                implementation("org.jetbrains.kotlinx:kotlinx-coroutines-test:1.9.0")
            }
        }

        wasmJsMain {
            dependsOn(webMain)
            dependencies {
                implementation(libs.kotlinStdlibWasm)
                implementation(libs.kotlinXw3c)
            }
        }

        wasmJsTest {
            dependsOn(webTest)
            dependencies {
                implementation(libs.kotlinTestForWasmTests)
            }
        }

        jsMain {
            dependsOn(webMain)
            dependencies {
                implementation(libs.kotlinStdlibJs)
            }
        }

        jsTest {
            dependsOn(webTest)
            dependencies {
                implementation(libs.kotlinTestJs)
            }
        }

        targets.configureEach { target ->
            if (target.platformType == org.jetbrains.kotlin.gradle.plugin.KotlinPlatformType.native) {
                if (target.konanTarget.family.appleFamily) {
                    target.compilations["main"].defaultSourceSet.dependsOn(darwinMain)
                    target.compilations["test"].defaultSourceSet.dependsOn(darwinTest)
                } else if (target.konanTarget.family == org.jetbrains.kotlin.konan.target.Family.LINUX) {
                    target.compilations["main"].defaultSourceSet.dependsOn(linuxMain)
                    target.compilations["test"].defaultSourceSet.dependsOn(linuxTest)
                } else if (target.konanTarget.family == org.jetbrains.kotlin.konan.target.Family.MINGW) {
                    target.compilations["main"].defaultSourceSet.dependsOn(mingwMain)
                    target.compilations["test"].defaultSourceSet.dependsOn(mingwTest)
                } else {
                    target.compilations["main"].defaultSourceSet.dependsOn(nativeMain)
                    target.compilations["test"].defaultSourceSet.dependsOn(nativeTest)
                }
            } else if (target.platformType in [org.jetbrains.kotlin.gradle.plugin.KotlinPlatformType.js, org.jetbrains.kotlin.gradle.plugin.KotlinPlatformType.wasm]) {
                target.compilations["main"].defaultSourceSet.dependsOn(webMain)
                target.compilations["test"].defaultSourceSet.dependsOn(webTest)
            }
        }
    }
}

androidx {
    name = "NavigationEvent Compose"
    type = SoftwareType.PUBLISHED_LIBRARY_ONLY_USED_BY_KOTLIN_CONSUMERS
    inceptionYear = "2025"
    description = "Compose integration with NavigationEvent"
}
