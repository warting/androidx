// Signature format: 4.0
package androidx.navigationevent.compose {

  public final class LocalNavigationEventDispatcherOwner {
    method @androidx.compose.runtime.Composable public androidx.navigationevent.NavigationEventDispatcherOwner? getCurrent();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.navigationevent.NavigationEventDispatcherOwner? getCurrent(androidx.compose.runtime.Composer?, int);
    method public infix androidx.compose.runtime.ProvidedValue<androidx.navigationevent.NavigationEventDispatcherOwner?> provides(androidx.navigationevent.NavigationEventDispatcherOwner navigationEventDispatcherOwner);
    property @androidx.compose.runtime.Composable public androidx.navigationevent.NavigationEventDispatcherOwner? current;
    field public static final androidx.navigationevent.compose.LocalNavigationEventDispatcherOwner INSTANCE;
  }

  public final class NavigationEventDispatcherOwnerKt {
    method @androidx.compose.runtime.Composable public static void NavigationEventDispatcherOwner(optional boolean enabled, optional androidx.navigationevent.NavigationEventDispatcherOwner? parent, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void NavigationEventDispatcherOwner(boolean, androidx.navigationevent.NavigationEventDispatcherOwner?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
  }

  public final class NavigationEventHandlerKt {
    method @androidx.compose.runtime.Composable public static <T extends androidx.navigationevent.NavigationEventInfo> void NavigationBackHandler(T currentInfo, optional java.util.List<? extends T> backInfo, optional boolean isBackEnabled, optional kotlin.jvm.functions.Function0<kotlin.Unit> onBackCancelled, kotlin.jvm.functions.Function0<kotlin.Unit> onBackCompleted);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static <T extends androidx.navigationevent.NavigationEventInfo> void NavigationBackHandler(T, java.util.List<? extends T!>?, boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>?, kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static <T extends androidx.navigationevent.NavigationEventInfo> void NavigationEventHandler(T currentInfo, optional java.util.List<? extends T> backInfo, optional java.util.List<? extends T> forwardInfo, optional boolean isForwardEnabled, optional kotlin.jvm.functions.Function0<kotlin.Unit> onForwardCancelled, optional kotlin.jvm.functions.Function0<kotlin.Unit> onForwardCompleted, optional boolean isBackEnabled, optional kotlin.jvm.functions.Function0<kotlin.Unit> onBackCancelled, optional kotlin.jvm.functions.Function0<kotlin.Unit> onBackCompleted);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static <T extends androidx.navigationevent.NavigationEventInfo> void NavigationEventHandler(T, java.util.List<? extends T!>?, java.util.List<? extends T!>?, boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>?, kotlin.jvm.functions.Function0<kotlin.Unit!>?, boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>?, kotlin.jvm.functions.Function0<kotlin.Unit!>?, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static <T extends androidx.navigationevent.NavigationEventInfo> void NavigationForwardHandler(T currentInfo, optional java.util.List<? extends T> forwardInfo, optional boolean isForwardEnabled, optional kotlin.jvm.functions.Function0<kotlin.Unit> onForwardCancelled, kotlin.jvm.functions.Function0<kotlin.Unit> onForwardCompleted);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static <T extends androidx.navigationevent.NavigationEventInfo> void NavigationForwardHandler(T, java.util.List<? extends T!>?, boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>?, kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
  }

  public final class RememberNavigationEventStateKt {
    method @KotlinOnly @androidx.compose.runtime.Composable public static inline <reified T extends androidx.navigationevent.NavigationEventInfo> androidx.navigationevent.NavigationEventState<T> rememberNavigationEventState(T initialInfo);
  }

}

