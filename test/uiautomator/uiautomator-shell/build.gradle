/*
 * Copyright (C) 2025 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import androidx.build.PlatformIdentifier
import androidx.build.SoftwareType
import org.jetbrains.kotlin.konan.target.KonanTarget
import org.jetbrains.kotlin.konan.target.LinkerOutputKind

plugins {
    id("AndroidXPlugin")
    id("com.android.library")
}

android {
    namespace = "androidx.test.shell"
    defaultConfig {
        minSdk 23
    }
}

// This is a kmp library even though it targets only android. The reason is that KonanBuildService
// is used to build the native cli part of this project. KonanBuildService integration is only
// in kmp.
androidXMultiplatform {

    def requiredNativeTargets = [
            KonanTarget.ANDROID_ARM32,
            KonanTarget.ANDROID_ARM64,
            KonanTarget.ANDROID_X64,
            KonanTarget.ANDROID_X86,
    ].collect { it.INSTANCE }

    def shellNativeCompilation = createNativeCompilation("shell", LinkerOutputKind.EXECUTABLE) {
        configureEachTarget {
            it.sources.from(project.layout.projectDirectory.dir("src/androidMain/cxx/"))
            it.freeArgs.add("-O3")
        }
        configureTargets(requiredNativeTargets)
    }

    androidTarget() {
        addNativeLibrariesToVariantAssets(it, shellNativeCompilation)
    }

    sourceSets {
        commonMain {
            dependencies {
                api(libs.kotlinStdlib)
            }
        }

        androidMain {
            dependsOn(commonMain)
            dependencies {
                implementation(libs.testCore)
            }
        }

        androidInstrumentedTest {
            dependencies {
                implementation(libs.testCore)
                implementation(libs.testExtJunit)
                implementation(libs.testRunner)
                implementation(project(":kruth:kruth"))
            }
        }
    }

    defaultPlatform(PlatformIdentifier.ANDROID)
}

androidx {
    name = "Shell"
    type = SoftwareType.PUBLISHED_LIBRARY
    inceptionYear = "2025"
    description = "Allows executing shell command as shell user for testing purposes."
}
