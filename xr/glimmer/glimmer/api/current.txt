// Signature format: 4.0
package androidx.xr.glimmer {

  @androidx.compose.runtime.Immutable public final class Colors {
    ctor public Colors();
    ctor public Colors(optional long primary, optional long secondary, optional long positive, optional long negative, optional long surface, optional long outline, optional long outlineVariant);
    method public androidx.xr.glimmer.Colors copy(optional long primary, optional long secondary, optional long positive, optional long negative, optional long surface, optional long outline, optional long outlineVariant);
    method public long getNegative();
    method public long getOutline();
    method public long getOutlineVariant();
    method public long getPositive();
    method public long getPrimary();
    method public long getSecondary();
    method public long getSurface();
    property public long negative;
    property public long outline;
    property public long outlineVariant;
    property public long positive;
    property public long primary;
    property public long secondary;
    property public long surface;
  }

  public final class ContentColorKt {
    method public static long calculateContentColor(long backgroundColor);
  }

  @androidx.compose.runtime.Immutable public final class GlimmerTheme {
    ctor public GlimmerTheme();
    ctor public GlimmerTheme(optional androidx.xr.glimmer.Colors colors, optional androidx.xr.glimmer.Typography typography);
    method public androidx.xr.glimmer.Colors getColors();
    method public androidx.xr.glimmer.Typography getTypography();
    property public androidx.xr.glimmer.Colors colors;
    property public androidx.xr.glimmer.Typography typography;
    field public static final androidx.xr.glimmer.GlimmerTheme.Companion Companion;
  }

  public static final class GlimmerTheme.Companion {
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.xr.glimmer.Colors getColors();
    method public androidx.compose.runtime.CompositionLocal<androidx.xr.glimmer.GlimmerTheme> getLocalGlimmerTheme();
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.xr.glimmer.Typography getTypography();
    property public androidx.compose.runtime.CompositionLocal<androidx.xr.glimmer.GlimmerTheme> LocalGlimmerTheme;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.xr.glimmer.Colors colors;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.xr.glimmer.Typography typography;
  }

  public final class GlimmerThemeKt {
    method @androidx.compose.runtime.Composable public static void GlimmerTheme(optional androidx.xr.glimmer.Colors colors, optional androidx.xr.glimmer.Typography typography, kotlin.jvm.functions.Function0<kotlin.Unit> content);
  }

  public final class IconKt {
    method @androidx.compose.runtime.Composable public static void Icon(androidx.compose.ui.graphics.ImageBitmap bitmap, String? contentDescription, optional androidx.compose.ui.Modifier modifier);
    method @androidx.compose.runtime.Composable public static void Icon(androidx.compose.ui.graphics.ImageBitmap bitmap, long tint, String? contentDescription, optional androidx.compose.ui.Modifier modifier);
    method @androidx.compose.runtime.Composable public static void Icon(androidx.compose.ui.graphics.painter.Painter painter, androidx.compose.ui.graphics.ColorProducer? tint, String? contentDescription, optional androidx.compose.ui.Modifier modifier);
    method @androidx.compose.runtime.Composable public static void Icon(androidx.compose.ui.graphics.painter.Painter painter, String? contentDescription, optional androidx.compose.ui.Modifier modifier);
    method @androidx.compose.runtime.Composable public static void Icon(androidx.compose.ui.graphics.vector.ImageVector imageVector, String? contentDescription, optional androidx.compose.ui.Modifier modifier);
    method @androidx.compose.runtime.Composable public static void Icon(androidx.compose.ui.graphics.vector.ImageVector imageVector, long tint, String? contentDescription, optional androidx.compose.ui.Modifier modifier);
  }

  public final class SurfaceDefaults {
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.BorderStroke border();
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.BorderStroke border(optional float width, optional long color);
    method public androidx.compose.ui.graphics.Shape getShape();
    property public androidx.compose.ui.graphics.Shape Shape;
    field public static final androidx.xr.glimmer.SurfaceDefaults INSTANCE;
  }

  public final class SurfaceKt {
    method @androidx.compose.runtime.Composable public static androidx.compose.ui.Modifier surface(androidx.compose.ui.Modifier, optional androidx.compose.ui.graphics.Shape shape, optional long color, optional long contentColor, optional androidx.compose.foundation.BorderStroke? border);
  }

  public final class TextKt {
    method @androidx.compose.runtime.Composable public static void Text(androidx.compose.ui.text.AnnotatedString text, optional androidx.compose.ui.Modifier modifier, optional long color, optional long fontSize, optional androidx.compose.ui.text.font.FontStyle? fontStyle, optional androidx.compose.ui.text.font.FontWeight? fontWeight, optional androidx.compose.ui.text.font.FontFamily? fontFamily, optional long letterSpacing, optional androidx.compose.ui.text.style.TextDecoration? textDecoration, optional int textAlign, optional long lineHeight, optional int overflow, optional boolean softWrap, optional @IntRange(from=1L) int maxLines, optional @IntRange(from=1L) int minLines, optional java.util.Map<java.lang.String,androidx.compose.foundation.text.InlineTextContent> inlineContent, optional kotlin.jvm.functions.Function1<? super androidx.compose.ui.text.TextLayoutResult,kotlin.Unit>? onTextLayout, optional androidx.compose.foundation.text.TextAutoSize? autoSize, optional androidx.compose.ui.text.TextStyle style);
    method @androidx.compose.runtime.Composable public static void Text(String text, optional androidx.compose.ui.Modifier modifier, optional long color, optional long fontSize, optional androidx.compose.ui.text.font.FontStyle? fontStyle, optional androidx.compose.ui.text.font.FontWeight? fontWeight, optional androidx.compose.ui.text.font.FontFamily? fontFamily, optional long letterSpacing, optional androidx.compose.ui.text.style.TextDecoration? textDecoration, optional int textAlign, optional long lineHeight, optional int overflow, optional boolean softWrap, optional @IntRange(from=1L) int maxLines, optional @IntRange(from=1L) int minLines, optional kotlin.jvm.functions.Function1<? super androidx.compose.ui.text.TextLayoutResult,kotlin.Unit>? onTextLayout, optional androidx.compose.foundation.text.TextAutoSize? autoSize, optional androidx.compose.ui.text.TextStyle style);
    method public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.ui.text.TextStyle> getLocalTextStyle();
    property public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.ui.text.TextStyle> LocalTextStyle;
  }

  @androidx.compose.runtime.Immutable public final class Typography {
    ctor public Typography(optional androidx.compose.ui.text.font.FontFamily? defaultFontFamily, optional androidx.compose.ui.text.TextStyle titleLarge, optional androidx.compose.ui.text.TextStyle titleMedium, optional androidx.compose.ui.text.TextStyle titleSmall, optional androidx.compose.ui.text.TextStyle bodyLarge, optional androidx.compose.ui.text.TextStyle bodyMedium, optional androidx.compose.ui.text.TextStyle bodySmall);
    method public androidx.xr.glimmer.Typography copy(optional androidx.compose.ui.text.TextStyle titleLarge, optional androidx.compose.ui.text.TextStyle titleMedium, optional androidx.compose.ui.text.TextStyle titleSmall, optional androidx.compose.ui.text.TextStyle bodyLarge, optional androidx.compose.ui.text.TextStyle bodyMedium, optional androidx.compose.ui.text.TextStyle bodySmall);
    method public androidx.compose.ui.text.TextStyle getBodyLarge();
    method public androidx.compose.ui.text.TextStyle getBodyMedium();
    method public androidx.compose.ui.text.TextStyle getBodySmall();
    method public androidx.compose.ui.text.TextStyle getTitleLarge();
    method public androidx.compose.ui.text.TextStyle getTitleMedium();
    method public androidx.compose.ui.text.TextStyle getTitleSmall();
    property public androidx.compose.ui.text.TextStyle bodyLarge;
    property public androidx.compose.ui.text.TextStyle bodyMedium;
    property public androidx.compose.ui.text.TextStyle bodySmall;
    property public androidx.compose.ui.text.TextStyle titleLarge;
    property public androidx.compose.ui.text.TextStyle titleMedium;
    property public androidx.compose.ui.text.TextStyle titleSmall;
  }

}

