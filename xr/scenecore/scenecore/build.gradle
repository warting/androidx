/*
 * Copyright (C) 2024 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * This file was created using the `create_project.py` script located in the
 * `<AndroidX root>/development/project-creator` directory.
 *
 * Please use that script when creating a new project, rather than copying an existing project and
 * modifying its settings.
 */

import androidx.build.AndroidXConfig
import androidx.build.SoftwareType


plugins {
    id("AndroidXPlugin")
    id("com.android.library")
    id("org.jetbrains.kotlin.android")
}

dependencies {
    api(libs.jspecify)
    api(libs.kotlinStdlib)
    api(libs.guavaListenableFuture)
    api(project(":xr:arcore:arcore"))
    api(project(":xr:runtime:runtime"))

    implementation("androidx.annotation:annotation:1.8.1")
    implementation(libs.androidx.core)
    implementation("androidx.concurrent:concurrent-futures:1.0.0")
    implementation("com.google.errorprone:error_prone_annotations:2.30.0")
    implementation(project(":xr:runtime:runtime-openxr"))
    implementation("com.google.ar:impress:0.0.4")

    testImplementation(libs.junit)
    testImplementation(libs.kotlinTest)
    testImplementation(libs.testExtJunit)
    testImplementation(libs.testExtTruth)
    testImplementation(libs.testRules)
    testImplementation(libs.testRunner)
    testImplementation(libs.truth)
    testImplementation(libs.mockitoCore4)
    testImplementation(libs.mockitoKotlin4)
    testImplementation(libs.kotlinCoroutinesTest)
    testImplementation(project(":xr:scenecore:scenecore-testing"))
    testImplementation(project(":xr:runtime:runtime-testing"))
    testImplementation("androidx.appcompat:appcompat:1.2.0")

    androidTestImplementation(libs.junit)
    androidTestImplementation(libs.testExtJunit)
    androidTestImplementation(libs.testExtTruth)
    androidTestImplementation(libs.testRunner)
    androidTestImplementation(libs.truth)
    androidTestImplementation(libs.mockitoAndroid5)
    androidTestImplementation(libs.kotlinCoroutinesTest)
    androidTestImplementation("androidx.appcompat:appcompat:1.2.0")
    androidTestImplementation(project(":xr:scenecore:scenecore-testing"))

    // For com.android.xr.extensions.
    compileOnly(files(new File(AndroidXConfig.getPrebuiltsRoot(project), "androidx/xr/extensions/com.android.extensions.xr.jar")))
    testCompileOnly(files(new File(AndroidXConfig.getPrebuiltsRoot(project), "androidx/xr/extensions/com.android.extensions.xr.host.test.jar")))
    testCompileOnly(files(new File(AndroidXConfig.getPrebuiltsRoot(project), "androidx/xr/extensions/com.android.extensions.xr.jar")))
}

android {
    defaultConfig {
        consumerProguardFiles 'proguard-rules.pro'
        minSdkVersion 24
    }
    sourceSets {
        test {
            assets {
                srcDirs += ["src/test/java/androidx/xr/scenecore/impl/fake_assets"]
            }
        }
        androidTest {
            jniLibs.srcDirs += new File(AndroidXConfig.getPrebuiltsRoot(project), "androidx/xr/native/androidTest")
        }
    }
    namespace = "androidx.xr.scenecore"
}

androidx {
    name = "XR SceneCore"
    type = SoftwareType.PUBLISHED_LIBRARY
    inceptionYear = "2024"
    description = "Scene building libraries for the androidx.xr namespace."

    // TODO: b/379715750 - Remove this flag once the deprecated methods have been removed from the API.
    failOnDeprecationWarnings = false
    enableRobolectric()
}
