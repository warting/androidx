// Signature format: 4.0
package androidx.navigation3.ui {

  public final class LocalNavAnimatedContentScope_androidKt {
    method public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.animation.AnimatedContentScope> getLocalNavAnimatedContentScope();
    property public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.animation.AnimatedContentScope> LocalNavAnimatedContentScope;
  }

  public final class NavDisplay {
    method public java.util.Map<java.lang.String,java.lang.Object> popTransitionSpec(kotlin.jvm.functions.Function1<? super androidx.compose.animation.AnimatedContentTransitionScope<? extends java.lang.Object?>,androidx.compose.animation.ContentTransform?> popTransitionSpec);
    method public java.util.Map<java.lang.String,java.lang.Object> transitionSpec(kotlin.jvm.functions.Function1<? super androidx.compose.animation.AnimatedContentTransitionScope<? extends java.lang.Object?>,androidx.compose.animation.ContentTransform?> transitionSpec);
    field public static final androidx.navigation3.ui.NavDisplay INSTANCE;
  }

  public final class NavDisplay_androidKt {
    method @androidx.compose.runtime.Composable public static <T> void NavDisplay(java.util.List<? extends T> backStack, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Alignment contentAlignment, optional kotlin.jvm.functions.Function1<? super java.lang.Integer,kotlin.Unit> onBack, optional java.util.List<androidx.navigation3.runtime.NavEntryDecorator<? extends java.lang.Object?>> entryDecorators, optional androidx.navigation3.ui.SceneStrategy<T> sceneStrategy, optional androidx.compose.animation.SizeTransform? sizeTransform, optional kotlin.jvm.functions.Function1<? super androidx.compose.animation.AnimatedContentTransitionScope<? extends java.lang.Object?>,androidx.compose.animation.ContentTransform> transitionSpec, optional kotlin.jvm.functions.Function1<? super androidx.compose.animation.AnimatedContentTransitionScope<? extends java.lang.Object?>,androidx.compose.animation.ContentTransform> popTransitionSpec, kotlin.jvm.functions.Function1<? super T,? extends androidx.navigation3.runtime.NavEntry<T>> entryProvider);
  }

  public interface Scene<T> {
    method public kotlin.jvm.functions.Function0<kotlin.Unit> getContent();
    method public java.util.List<androidx.navigation3.runtime.NavEntry<T>> getEntries();
    method public Object getKey();
    method public java.util.List<androidx.navigation3.runtime.NavEntry<T>> getPreviousEntries();
    property public abstract kotlin.jvm.functions.Function0<kotlin.Unit> content;
    property public abstract java.util.List<androidx.navigation3.runtime.NavEntry<T>> entries;
    property public abstract Object key;
    property public abstract java.util.List<androidx.navigation3.runtime.NavEntry<T>> previousEntries;
  }

  public final class SceneSetupNavEntryDecoratorKt {
    method public static androidx.navigation3.runtime.NavEntryDecorator<java.lang.Object> SceneSetupNavEntryDecorator();
    method public static androidx.compose.runtime.ProvidableCompositionLocal<java.util.Set<java.lang.Object>> getLocalEntriesToRenderInCurrentScene();
    method @androidx.compose.runtime.Composable public static androidx.navigation3.runtime.NavEntryDecorator<java.lang.Object> rememberSceneSetupNavEntryDecorator();
    property public static androidx.compose.runtime.ProvidableCompositionLocal<java.util.Set<java.lang.Object>> LocalEntriesToRenderInCurrentScene;
  }

  public fun interface SceneStrategy<T> {
    method @androidx.compose.runtime.Composable public androidx.navigation3.ui.Scene<T>? calculateScene(java.util.List<? extends androidx.navigation3.runtime.NavEntry<T>> entries);
    method public default infix androidx.navigation3.ui.SceneStrategy<T> then(androidx.navigation3.ui.SceneStrategy<T> sceneStrategy);
  }

  public final class SinglePaneSceneStrategy<T> implements androidx.navigation3.ui.SceneStrategy<T> {
    ctor public SinglePaneSceneStrategy();
    method @androidx.compose.runtime.Composable public androidx.navigation3.ui.Scene<T> calculateScene(java.util.List<? extends androidx.navigation3.runtime.NavEntry<T>> entries);
  }

}

