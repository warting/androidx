<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 8.12.0-alpha08" type="baseline" client="gradle" dependencies="false" name="AGP (8.12.0-alpha08)" variant="all" version="8.12.0-alpha08">

    <issue
        id="LifecycleCurrentStateInComposition"
        message="Lifecycle.currentState should not be called within composition"
        errorLine1="        childRegistry.lifecycle.currentState = Lifecycle.State.RESUMED"
        errorLine2="                                ~~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/navigation3/runtime/SavedStateNavEntryDecorator.kt"/>
    </issue>

    <issue
        id="MutableCollectionMutableState"
        message="Creating a MutableState object with a mutable collection type"
        errorLine1="            currStateMap = remember { mutableStateOf(stateMap1) }"
        errorLine2="                                      ~~~~~~~~~~~~~~">
        <location
            file="src/androidInstrumentedTest/kotlin/androidx/navigation3/runtime/DecoratedNavEntryProviderTest.kt"/>
    </issue>

    <issue
        id="ListIterator"
        message="Creating an unnecessary Iterator to iterate through a List"
        errorLine1="        backStack.mapIndexed { index, key ->"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/navigation3/runtime/DecoratedNavEntryProvider.kt"/>
    </issue>

    <issue
        id="ListIterator"
        message="Creating an unnecessary Iterator to iterate through a List"
        errorLine1="                            latestDecorators.reversed().forEach { it.onPop(contentKey) }"
        errorLine2="                                             ~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/navigation3/runtime/DecoratedNavEntryProvider.kt"/>
    </issue>

    <issue
        id="ListIterator"
        message="Creating an unnecessary Iterator to iterate through a List"
        errorLine1="                            latestDecorators.reversed().forEach { it.onPop(contentKey) }"
        errorLine2="                                                        ~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/navigation3/runtime/DecoratedNavEntryProvider.kt"/>
    </issue>

    <issue
        id="ListIterator"
        message="Creating an unnecessary Iterator to iterate through a List"
        errorLine1="    val latestBackStack by rememberUpdatedState(entries.map { it.contentKey })"
        errorLine2="                                                        ~~~">
        <location
            file="src/commonMain/kotlin/androidx/navigation3/runtime/DecoratedNavEntryProvider.kt"/>
    </issue>

    <issue
        id="ListIterator"
        message="Creating an unnecessary Iterator to iterate through a List"
        errorLine1="    latestBackStack.forEach { contentKey ->"
        errorLine2="                    ~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/navigation3/runtime/DecoratedNavEntryProvider.kt"/>
    </issue>

    <issue
        id="ListIterator"
        message="Creating an unnecessary Iterator to iterate through a List"
        errorLine1="                    latestDecorators.reversed().forEach { it.onPop(contentKey) }"
        errorLine2="                                     ~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/navigation3/runtime/DecoratedNavEntryProvider.kt"/>
    </issue>

    <issue
        id="ListIterator"
        message="Creating an unnecessary Iterator to iterate through a List"
        errorLine1="                    latestDecorators.reversed().forEach { it.onPop(contentKey) }"
        errorLine2="                                                ~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/navigation3/runtime/DecoratedNavEntryProvider.kt"/>
    </issue>

    <issue
        id="ListIterator"
        message="Creating an unnecessary Iterator to iterate through a List"
        errorLine1="        save = { list -> list.map { encodeToSavedState(serializer, it) } },"
        errorLine2="                              ~~~">
        <location
            file="src/androidMain/kotlin/androidx/navigation3/runtime/NavBackStack.android.kt"/>
    </issue>

    <issue
        id="ListIterator"
        message="Creating an unnecessary Iterator to iterate through a List"
        errorLine1="        restore = { list -> list.map { decodeFromSavedState(serializer, it) } },"
        errorLine2="                                 ~~~">
        <location
            file="src/androidMain/kotlin/androidx/navigation3/runtime/NavBackStack.android.kt"/>
    </issue>

    <issue
        id="ListIterator"
        message="Creating an unnecessary Iterator to iterate through a List"
        errorLine1="        .distinct()"
        errorLine2="         ~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/navigation3/runtime/NavEntryDecorator.kt"/>
    </issue>

    <issue
        id="UnnecessaryLambdaCreation"
        message="Creating an unnecessary lambda to emit a captured lambda"
        errorLine1="    CompositionLocalProvider(LocalNavEntryDecoratorLocalInfo provides localInfo) { content() }"
        errorLine2="                                                                                   ~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/navigation3/runtime/DecoratedNavEntryProvider.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="field popCallbacks with type LinkedHashMap&lt;Integer, Function1&lt;Object, Unit>>: replace with IntObjectMap"
        errorLine1="    val popCallbacks: LinkedHashMap&lt;Int, (key: Any) -> Unit> = LinkedHashMap()"
        errorLine2="                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/navigation3/runtime/DecoratedNavEntryProvider.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="return type LinkedHashMap&lt;Integer, Function1&lt;Object, Unit>> of getPopCallbacks: replace with IntObjectMap"
        errorLine1="    val popCallbacks: LinkedHashMap&lt;Int, (key: Any) -> Unit> = LinkedHashMap()"
        errorLine2="                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/navigation3/runtime/DecoratedNavEntryProvider.kt"/>
    </issue>

</issues>
