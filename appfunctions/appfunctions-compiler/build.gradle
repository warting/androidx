/*
 * Copyright (C) 2025 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * This file was created using the `create_project.py` script located in the
 * `<AndroidX root>/development/project-creator` directory.
 *
 * Please use that script when creating a new project, rather than copying an existing project and
 * modifying its settings.
 */

import androidx.build.SdkHelperKt
import androidx.build.SoftwareType

plugins {
    id("AndroidXPlugin")
    id("kotlin")
}

androidx.configureAarAsJarForConfiguration("testImplementation")

dependencies {
    api(libs.kotlinStdlib)
    api(libs.kspApi)

    implementation("androidx.annotation:annotation:1.7.0")
    implementation("com.squareup:kotlinpoet:2.0.0")

    testImplementationAarAsJar(project(":appfunctions:appfunctions"))
    testImplementationAarAsJar(project(":appfunctions:appfunctions-service"))
    testImplementation(project(":room:room-compiler-processing-testing"))
    testImplementation(libs.junit)
    testImplementation(libs.truth)

    testRuntimeOnly(SdkHelperKt.getSdkDependency(project))
}

def testGeneratedSourcesPath = "${layout.buildDirectory.get().asFile}/testGeneratedSources"
tasks.withType(Test).configureEach { test ->
    test.doFirst {
        systemProperty("test_output_dir", testGeneratedSourcesPath)
        systemProperty("update_golden_files", System.getProperty("update_golden_files") ?: "false")
    }
}

androidx {
    name = "androidx.appfunctions:appfunctions-compiler"
    type = SoftwareType.ANNOTATION_PROCESSOR
    inceptionYear = "2025"
    description = "AppFunction Compiler"
}
