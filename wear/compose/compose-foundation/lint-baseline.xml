<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 8.11.0-alpha10" type="baseline" client="gradle" dependencies="false" name="AGP (8.11.0-alpha10)" variant="all" version="8.11.0-alpha10">

    <issue
        id="ComposableNaming"
        message="Composable functions that return Unit should start with an uppercase letter"
        errorLine1="    fun toggleScreen(saveableStateHolder: SaveableStateHolder) {"
        errorLine2="        ~~~~~~~~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/foundation/BasicSwipeToDismissBoxTest.kt"/>
    </issue>

    <issue
        id="ComposableNaming"
        message="Composable functions that return Unit should start with an uppercase letter"
        errorLine1="    fun counterScreen(saveableStateHolder: SaveableStateHolder) {"
        errorLine2="        ~~~~~~~~~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/foundation/BasicSwipeToDismissBoxTest.kt"/>
    </issue>

    <issue
        id="ComposableNaming"
        message="Composable functions that return Unit should start with an uppercase letter"
        errorLine1="    private fun swipeToRevealWithDefaults("
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/foundation/SwipeToRevealTest.kt"/>
    </issue>

    <issue
        id="ComposableNaming"
        message="Composable functions that return Unit should start with an uppercase letter"
        errorLine1="    private fun getBoxContent(onClick: () -> Unit = {}, modifier: Modifier = Modifier) {"
        errorLine2="                ~~~~~~~~~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/foundation/SwipeToRevealTest.kt"/>
    </issue>

    <issue
        id="ComposableNaming"
        message="Composable functions that return Unit should start with an uppercase letter"
        errorLine1="    private fun actionContent(modifier: Modifier = Modifier) {"
        errorLine2="                ~~~~~~~~~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/foundation/SwipeToRevealTest.kt"/>
    </issue>

    <issue
        id="ComposableNaming"
        message="Composable functions that return Unit should start with an uppercase letter"
        errorLine1="    private fun getAction("
        errorLine2="                ~~~~~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/foundation/SwipeToRevealTest.kt"/>
    </issue>

    <issue
        id="ModifierParameter"
        message="Modifier parameter should be the first optional parameter"
        errorLine1="        modifier: Modifier = Modifier,"
        errorLine2="        ~~~~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/foundation/SwipeToRevealTest.kt"/>
    </issue>

    <issue
        id="ModifierParameter"
        message="Modifier parameter should be the first optional parameter"
        errorLine1="    private fun getBoxContent(onClick: () -> Unit = {}, modifier: Modifier = Modifier) {"
        errorLine2="                                                        ~~~~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/foundation/SwipeToRevealTest.kt"/>
    </issue>

    <issue
        id="ModifierParameter"
        message="Modifier parameter should be the first optional parameter"
        errorLine1="        modifier: Modifier = Modifier,"
        errorLine2="        ~~~~~~~~">
        <location
            file="src/androidTest/kotlin/androidx/wear/compose/foundation/SwipeToRevealTest.kt"/>
    </issue>

    <issue
        id="ListIterator"
        message="Creating an unnecessary Iterator to iterate through a List"
        errorLine1="                        .firstOrNull {"
        errorLine2="                         ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/wear/compose/foundation/lazy/layout/LazyLayoutItemAnimator.kt"/>
    </issue>

    <issue
        id="ListIterator"
        message="Creating an unnecessary Iterator to iterate through a List"
        errorLine1="                        .firstOrNull {"
        errorLine2="                         ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/wear/compose/foundation/lazy/layout/LazyLayoutItemAnimator.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="variable weights with type List&lt;? extends Float>: replace with FloatList"
        errorLine1="        val weights ="
        errorLine2="        ^">
        <location
            file="src/main/java/androidx/wear/compose/foundation/CurvedColumn.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="method radialGradientBackground has parameter colors with type List&lt;Color>: replace with LongList"
        errorLine1="    colors: List&lt;Color>,"
        errorLine2="            ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/wear/compose/foundation/CurvedDraw.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="method angularGradientBackground has parameter colors with type List&lt;Color>: replace with LongList"
        errorLine1="    colors: List&lt;Color>,"
        errorLine2="            ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/wear/compose/foundation/CurvedDraw.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="method colorsToColorStops has parameter colors with type List&lt;Color>: replace with LongList"
        errorLine1="private fun colorsToColorStops(colors: List&lt;Color>): Array&lt;Pair&lt;Float, Color>> ="
        errorLine2="                                       ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/wear/compose/foundation/CurvedDraw.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="variable weights with type List&lt;? extends Float>: replace with FloatList"
        errorLine1="        val weights ="
        errorLine2="        ^">
        <location
            file="src/main/java/androidx/wear/compose/foundation/CurvedRow.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="constructor RevealState has parameter anchors with type Map&lt;RevealValue, Float>: replace with IntFloatMap"
        errorLine1="    internal val anchors: Map&lt;RevealValue, Float>,"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/wear/compose/foundation/SwipeToReveal.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="field anchors with type Map&lt;RevealValue, Float>: replace with IntFloatMap"
        errorLine1="    internal val anchors: Map&lt;RevealValue, Float>,"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/wear/compose/foundation/SwipeToReveal.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="return type Map&lt;RevealValue, Float> of getAnchors$compose_foundation: replace with IntFloatMap"
        errorLine1="    internal val anchors: Map&lt;RevealValue, Float>,"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/wear/compose/foundation/SwipeToReveal.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="return type Map&lt;RevealValue, Float> of getSwipeAnchors: replace with IntFloatMap"
        errorLine1="    public val swipeAnchors: Map&lt;RevealValue, Float>"
        errorLine2="               ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/wear/compose/foundation/SwipeToReveal.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="method rememberRevealState has parameter anchors with type Map&lt;RevealValue, Float>: replace with IntFloatMap"
        errorLine1="    anchors: Map&lt;RevealValue, Float> = createRevealAnchors(),"
        errorLine2="             ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/wear/compose/foundation/SwipeToReveal.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="variable previousAnchors with type Map&lt;T, ? extends Float>: replace with ObjectFloatMap"
        errorLine1="                val previousAnchors = state.anchors"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/wear/compose/foundation/SwipeableV2.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="variable newAnchors with type Map&lt;T, Float>: replace with ObjectFloatMap"
        errorLine1="                val newAnchors = mutableMapOf&lt;T, Float>()"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/wear/compose/foundation/SwipeableV2.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="method setAnchors$compose_foundation has parameter anchors with type Map&lt;T, Float>: replace with ObjectFloatMap"
        errorLine1="    internal var anchors by mutableStateOf(emptyMap&lt;T, Float>())"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/wear/compose/foundation/SwipeableV2.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="return type Map&lt;T, Float> of getAnchors$compose_foundation: replace with ObjectFloatMap"
        errorLine1="    internal var anchors by mutableStateOf(emptyMap&lt;T, Float>())"
        errorLine2="                 ~~~~~~~">
        <location
            file="src/main/java/androidx/wear/compose/foundation/SwipeableV2.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="method updateAnchors$compose_foundation has parameter newAnchors with type Map&lt;T, Float>: replace with ObjectFloatMap"
        errorLine1="    internal fun updateAnchors(newAnchors: Map&lt;T, Float>): Boolean {"
        errorLine2="                                           ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/wear/compose/foundation/SwipeableV2.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="variable currentAnchors with type Map&lt;T, ? extends Float>: replace with ObjectFloatMap"
        errorLine1="        val currentAnchors = anchors"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/wear/compose/foundation/SwipeableV2.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="method onAnchorsChanged has parameter previousAnchors with type Map&lt;T, Float>: replace with ObjectFloatMap"
        errorLine1="        previousAnchors: Map&lt;T, Float>,"
        errorLine2="                         ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/wear/compose/foundation/SwipeableV2.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="method onAnchorsChanged has parameter newAnchors with type Map&lt;T, Float>: replace with ObjectFloatMap"
        errorLine1="        newAnchors: Map&lt;T, Float>,"
        errorLine2="                    ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/wear/compose/foundation/SwipeableV2.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="method closestAnchor has parameter $this$closestAnchor with type Map&lt;T, Float>: replace with ObjectFloatMap"
        errorLine1="private fun &lt;T> Map&lt;T, Float>.closestAnchor(offset: Float = 0f, searchUpwards: Boolean = false): T {"
        errorLine2="                ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/wear/compose/foundation/SwipeableV2.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="method minOrNull has parameter $this$minOrNull with type Map&lt;T, Float>: replace with ObjectFloatMap"
        errorLine1="private fun &lt;T> Map&lt;T, Float>.minOrNull() = minOfOrNull { (_, offset) -> offset }"
        errorLine2="                ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/wear/compose/foundation/SwipeableV2.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="method maxOrNull has parameter $this$maxOrNull with type Map&lt;T, Float>: replace with ObjectFloatMap"
        errorLine1="private fun &lt;T> Map&lt;T, Float>.maxOrNull() = maxOfOrNull { (_, offset) -> offset }"
        errorLine2="                ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/wear/compose/foundation/SwipeableV2.kt"/>
    </issue>

</issues>
