// Signature format: 4.0
package androidx.wear.compose.material3 {

  public final class AlertDialogDefaults {
    method @androidx.compose.runtime.Composable public void ConfirmButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional androidx.wear.compose.material3.IconButtonColors colors, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public void ConfirmButton(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, androidx.wear.compose.material3.IconButtonColors?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public void DismissButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional androidx.wear.compose.material3.IconButtonColors colors, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public void DismissButton(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, androidx.wear.compose.material3.IconButtonColors?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public void EdgeButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional androidx.wear.compose.material3.ButtonColors colors, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public void EdgeButton(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, androidx.wear.compose.material3.ButtonColors?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public void GroupSeparator();
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void GroupSeparator(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.PaddingValues confirmDismissContentPadding();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.PaddingValues confirmDismissContentPadding(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.PaddingValues confirmDismissWithIconContentPadding();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.PaddingValues confirmDismissWithIconContentPadding(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.PaddingValues contentPadding();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.PaddingValues contentPadding(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.PaddingValues contentWithIconPadding();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.PaddingValues contentWithIconPadding(androidx.compose.runtime.Composer?, int);
    method public kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit> getConfirmIcon();
    method public kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit> getDismissIcon();
    method public androidx.compose.foundation.layout.Arrangement.Vertical getVerticalArrangement();
    property public kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit> ConfirmIcon;
    property public kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit> DismissIcon;
    property public androidx.compose.foundation.layout.Arrangement.Vertical VerticalArrangement;
    field public static final androidx.wear.compose.material3.AlertDialogDefaults INSTANCE;
  }

  public final class AlertDialogKt {
    method @androidx.compose.runtime.Composable public static void AlertDialog(boolean visible, kotlin.jvm.functions.Function0<kotlin.Unit> onDismissRequest, kotlin.jvm.functions.Function0<kotlin.Unit> title, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? text, optional androidx.compose.foundation.layout.Arrangement.Vertical verticalArrangement, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.ui.window.DialogProperties properties, optional kotlin.jvm.functions.Function1<? super androidx.wear.compose.foundation.lazy.ScalingLazyListScope,kotlin.Unit>? content);
    method @androidx.compose.runtime.Composable public static void AlertDialog(boolean visible, kotlin.jvm.functions.Function0<kotlin.Unit> onDismissRequest, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> edgeButton, kotlin.jvm.functions.Function0<kotlin.Unit> title, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? text, optional androidx.compose.foundation.layout.Arrangement.Vertical verticalArrangement, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.ui.window.DialogProperties properties, optional kotlin.jvm.functions.Function1<? super androidx.wear.compose.foundation.lazy.ScalingLazyListScope,kotlin.Unit>? content);
    method @androidx.compose.runtime.Composable public static void AlertDialog(boolean visible, kotlin.jvm.functions.Function0<kotlin.Unit> onDismissRequest, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> confirmButton, kotlin.jvm.functions.Function0<kotlin.Unit> title, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> dismissButton, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? text, optional androidx.compose.foundation.layout.Arrangement.Vertical verticalArrangement, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.ui.window.DialogProperties properties, optional kotlin.jvm.functions.Function1<? super androidx.wear.compose.foundation.lazy.ScalingLazyListScope,kotlin.Unit>? content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void AlertDialog(boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.foundation.layout.Arrangement.Vertical?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.ui.window.DialogProperties?, kotlin.jvm.functions.Function1<? super androidx.wear.compose.foundation.lazy.ScalingLazyListScope!,kotlin.Unit!>?, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void AlertDialog(boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.foundation.layout.Arrangement.Vertical?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.ui.window.DialogProperties?, kotlin.jvm.functions.Function1<? super androidx.wear.compose.foundation.lazy.ScalingLazyListScope!,kotlin.Unit!>?, androidx.compose.runtime.Composer?, int, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void AlertDialog(boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.foundation.layout.Arrangement.Vertical?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.ui.window.DialogProperties?, kotlin.jvm.functions.Function1<? super androidx.wear.compose.foundation.lazy.ScalingLazyListScope!,kotlin.Unit!>?, androidx.compose.runtime.Composer?, int, int, int);
    method @androidx.compose.runtime.Composable public static void AlertDialogContent(kotlin.jvm.functions.Function0<kotlin.Unit> title, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? text, optional androidx.compose.foundation.layout.Arrangement.Vertical verticalArrangement, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional kotlin.jvm.functions.Function1<? super androidx.wear.compose.foundation.lazy.ScalingLazyListScope,kotlin.Unit>? content);
    method @androidx.compose.runtime.Composable public static void AlertDialogContent(kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> edgeButton, kotlin.jvm.functions.Function0<kotlin.Unit> title, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? text, optional androidx.compose.foundation.layout.Arrangement.Vertical verticalArrangement, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional kotlin.jvm.functions.Function1<? super androidx.wear.compose.foundation.lazy.ScalingLazyListScope,kotlin.Unit>? content);
    method @androidx.compose.runtime.Composable public static void AlertDialogContent(kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> confirmButton, kotlin.jvm.functions.Function0<kotlin.Unit> title, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> dismissButton, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? text, optional androidx.compose.foundation.layout.Arrangement.Vertical verticalArrangement, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional kotlin.jvm.functions.Function1<? super androidx.wear.compose.foundation.lazy.ScalingLazyListScope,kotlin.Unit>? content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void AlertDialogContent(kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.foundation.layout.Arrangement.Vertical?, androidx.compose.foundation.layout.PaddingValues?, kotlin.jvm.functions.Function1<? super androidx.wear.compose.foundation.lazy.ScalingLazyListScope!,kotlin.Unit!>?, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void AlertDialogContent(kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.foundation.layout.Arrangement.Vertical?, androidx.compose.foundation.layout.PaddingValues?, kotlin.jvm.functions.Function1<? super androidx.wear.compose.foundation.lazy.ScalingLazyListScope!,kotlin.Unit!>?, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void AlertDialogContent(kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.foundation.layout.Arrangement.Vertical?, androidx.compose.foundation.layout.PaddingValues?, kotlin.jvm.functions.Function1<? super androidx.wear.compose.foundation.lazy.ScalingLazyListScope!,kotlin.Unit!>?, androidx.compose.runtime.Composer?, int, int);
  }

  @kotlin.jvm.JvmInline public final value class AngularDirection {
    method @BytecodeOnly public static androidx.wear.compose.material3.AngularDirection! box-impl(int);
    method @BytecodeOnly public int unbox-impl();
    field public static final androidx.wear.compose.material3.AngularDirection.Companion Companion;
  }

  public static final class AngularDirection.Companion {
    method @BytecodeOnly public int getClockwise-SOKjleI();
    method @BytecodeOnly public int getCounterClockwise-SOKjleI();
    property public androidx.wear.compose.material3.AngularDirection Clockwise;
    property public androidx.wear.compose.material3.AngularDirection CounterClockwise;
  }

  @RequiresApi(31) public final class AnimatedTextDefaults {
    method public int getCacheSize();
    property public int CacheSize;
    field public static final androidx.wear.compose.material3.AnimatedTextDefaults INSTANCE;
  }

  @RequiresApi(31) public final class AnimatedTextFontRegistry {
    ctor @KotlinOnly public AnimatedTextFontRegistry(androidx.compose.ui.text.TextStyle textStyle, androidx.compose.ui.text.font.FontVariation.Settings startFontVariationSettings, androidx.compose.ui.text.font.FontVariation.Settings endFontVariationSettings, androidx.compose.ui.unit.TextUnit startFontSize, androidx.compose.ui.unit.TextUnit endFontSize, androidx.compose.ui.unit.Density density, androidx.compose.ui.text.font.FontFamily.Resolver fontFamilyResolver, optional androidx.compose.ui.graphics.Color contentColor, optional int cacheSize);
    ctor @BytecodeOnly public AnimatedTextFontRegistry(androidx.compose.ui.text.TextStyle!, androidx.compose.ui.text.font.FontVariation.Settings!, androidx.compose.ui.text.font.FontVariation.Settings!, long, long, androidx.compose.ui.unit.Density!, androidx.compose.ui.text.font.FontFamily.Resolver!, long, int, kotlin.jvm.internal.DefaultConstructorMarker!);
  }

  public final class AnimatedTextKt {
    method @RequiresApi(31) @androidx.compose.runtime.Composable public static void AnimatedText(String text, androidx.wear.compose.material3.AnimatedTextFontRegistry fontRegistry, kotlin.jvm.functions.Function0<java.lang.Float> progressFraction, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Alignment contentAlignment);
    method @BytecodeOnly @RequiresApi(31) @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void AnimatedText(String, androidx.wear.compose.material3.AnimatedTextFontRegistry, kotlin.jvm.functions.Function0<java.lang.Float!>, androidx.compose.ui.Modifier?, androidx.compose.ui.Alignment?, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @RequiresApi(31) @androidx.compose.runtime.Composable public static androidx.wear.compose.material3.AnimatedTextFontRegistry rememberAnimatedTextFontRegistry(androidx.compose.ui.text.font.FontVariation.Settings startFontVariationSettings, androidx.compose.ui.text.font.FontVariation.Settings endFontVariationSettings, optional androidx.compose.ui.text.TextStyle textStyle, optional androidx.compose.ui.unit.TextUnit startFontSize, optional androidx.compose.ui.unit.TextUnit endFontSize);
    method @BytecodeOnly @RequiresApi(31) @androidx.compose.runtime.Composable public static androidx.wear.compose.material3.AnimatedTextFontRegistry rememberAnimatedTextFontRegistry-QPTIfYA(androidx.compose.ui.text.font.FontVariation.Settings, androidx.compose.ui.text.font.FontVariation.Settings, androidx.compose.ui.text.TextStyle?, long, long, androidx.compose.runtime.Composer?, int, int);
  }

  public final class AppScaffoldKt {
    method @KotlinOnly @androidx.compose.runtime.Composable public static void AppScaffold(optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit> timeText, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.BoxScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void AppScaffold-t6yy7ic(androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, long, long, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
  }

  public final class ArcProgressIndicatorDefaults {
    method @KotlinOnly public androidx.compose.ui.unit.Dp calculateRecommendedGapSize(androidx.compose.ui.unit.Dp strokeWidth);
    method @BytecodeOnly public float calculateRecommendedGapSize-5rwHm24(float);
    method public float getIndeterminateEndAngle();
    method public float getIndeterminateStartAngle();
    method @BytecodeOnly public float getIndeterminateStrokeWidth-D9Ej5fM();
    method @BytecodeOnly @androidx.compose.runtime.Composable public float getRecommendedIndeterminateDiameter(androidx.compose.runtime.Composer?, int);
    property public float IndeterminateEndAngle;
    property public float IndeterminateStartAngle;
    property public androidx.compose.ui.unit.Dp IndeterminateStrokeWidth;
    property public androidx.compose.ui.unit.Dp recommendedIndeterminateDiameter;
    field public static final androidx.wear.compose.material3.ArcProgressIndicatorDefaults INSTANCE;
  }

  public final class ArcProgressIndicatorKt {
    method @KotlinOnly @androidx.compose.runtime.Composable public static void ArcProgressIndicator(optional androidx.compose.ui.Modifier modifier, optional float startAngle, optional float endAngle, optional androidx.wear.compose.material3.AngularDirection angularDirection, optional androidx.wear.compose.material3.ProgressIndicatorColors colors, optional androidx.compose.ui.unit.Dp strokeWidth, optional androidx.compose.ui.unit.Dp gapSize);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void ArcProgressIndicator-q-q_ZrA(androidx.compose.ui.Modifier?, float, float, int, androidx.wear.compose.material3.ProgressIndicatorColors?, float, float, androidx.compose.runtime.Composer?, int, int);
  }

  @androidx.compose.runtime.Immutable public final class ButtonColors {
    ctor @KotlinOnly public ButtonColors(androidx.compose.ui.graphics.Color containerColor, androidx.compose.ui.graphics.Color contentColor, androidx.compose.ui.graphics.Color secondaryContentColor, androidx.compose.ui.graphics.Color iconColor, androidx.compose.ui.graphics.Color disabledContainerColor, androidx.compose.ui.graphics.Color disabledContentColor, androidx.compose.ui.graphics.Color disabledSecondaryContentColor, androidx.compose.ui.graphics.Color disabledIconColor);
    ctor @BytecodeOnly public ButtonColors(long, long, long, long, long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly public androidx.wear.compose.material3.ButtonColors copy(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color secondaryContentColor, optional androidx.compose.ui.graphics.Color iconColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledContentColor, optional androidx.compose.ui.graphics.Color disabledSecondaryContentColor, optional androidx.compose.ui.graphics.Color disabledIconColor);
    method @BytecodeOnly public androidx.wear.compose.material3.ButtonColors copy-FD3wquc(long, long, long, long, long, long, long, long);
    method @BytecodeOnly public long getContainerColor-0d7_KjU();
    method @BytecodeOnly public long getContentColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledContainerColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledContentColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledIconColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledSecondaryContentColor-0d7_KjU();
    method @BytecodeOnly public long getIconColor-0d7_KjU();
    method @BytecodeOnly public long getSecondaryContentColor-0d7_KjU();
    property public androidx.compose.ui.graphics.Color containerColor;
    property public androidx.compose.ui.graphics.Color contentColor;
    property public androidx.compose.ui.graphics.Color disabledContainerColor;
    property public androidx.compose.ui.graphics.Color disabledContentColor;
    property public androidx.compose.ui.graphics.Color disabledIconColor;
    property public androidx.compose.ui.graphics.Color disabledSecondaryContentColor;
    property public androidx.compose.ui.graphics.Color iconColor;
    property public androidx.compose.ui.graphics.Color secondaryContentColor;
  }

  public final class ButtonDefaults {
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ButtonColors buttonColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ButtonColors buttonColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ButtonColors buttonColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color secondaryContentColor, optional androidx.compose.ui.graphics.Color iconColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledContentColor, optional androidx.compose.ui.graphics.Color disabledSecondaryContentColor, optional androidx.compose.ui.graphics.Color disabledIconColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ButtonColors buttonColors-oq7We08(long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ButtonColors buttonWithContainerPainterColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ButtonColors buttonWithContainerPainterColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ButtonColors buttonWithContainerPainterColors(optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color secondaryContentColor, optional androidx.compose.ui.graphics.Color iconColor, optional androidx.compose.ui.graphics.Color disabledContentColor, optional androidx.compose.ui.graphics.Color disabledSecondaryContentColor, optional androidx.compose.ui.graphics.Color disabledIconColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ButtonColors buttonWithContainerPainterColors-5tl4gsc(long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ButtonColors childButtonColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ButtonColors childButtonColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ButtonColors childButtonColors(optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color secondaryContentColor, optional androidx.compose.ui.graphics.Color iconColor, optional androidx.compose.ui.graphics.Color disabledContentColor, optional androidx.compose.ui.graphics.Color disabledSecondaryContentColor, optional androidx.compose.ui.graphics.Color disabledIconColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ButtonColors childButtonColors-5tl4gsc(long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.painter.Painter containerPainter(androidx.compose.ui.graphics.painter.Painter image, optional androidx.compose.ui.graphics.Brush? scrim, optional boolean sizeToIntrinsics, optional androidx.compose.ui.Alignment alignment, optional androidx.compose.ui.layout.ContentScale contentScale, optional float alpha);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.painter.Painter containerPainter(androidx.compose.ui.graphics.painter.Painter, androidx.compose.ui.graphics.Brush?, boolean, androidx.compose.ui.Alignment?, androidx.compose.ui.layout.ContentScale?, float, androidx.compose.runtime.Composer?, int, int);
    method public androidx.compose.ui.graphics.painter.Painter disabledContainerPainter(androidx.compose.ui.graphics.painter.Painter containerPainter);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ButtonColors filledTonalButtonColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ButtonColors filledTonalButtonColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ButtonColors filledTonalButtonColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color secondaryContentColor, optional androidx.compose.ui.graphics.Color iconColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledContentColor, optional androidx.compose.ui.graphics.Color disabledSecondaryContentColor, optional androidx.compose.ui.graphics.Color disabledIconColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ButtonColors filledTonalButtonColors-oq7We08(long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ButtonColors filledVariantButtonColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ButtonColors filledVariantButtonColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ButtonColors filledVariantButtonColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color secondaryContentColor, optional androidx.compose.ui.graphics.Color iconColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledContentColor, optional androidx.compose.ui.graphics.Color disabledSecondaryContentColor, optional androidx.compose.ui.graphics.Color disabledIconColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ButtonColors filledVariantButtonColors-oq7We08(long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly public float getButtonExtraLargeIconStartPadding-D9Ej5fM();
    method @BytecodeOnly public float getButtonHorizontalPadding-D9Ej5fM();
    method @BytecodeOnly public float getButtonLargeIconStartPadding-D9Ej5fM();
    method @BytecodeOnly public float getButtonVerticalPadding-D9Ej5fM();
    method public androidx.compose.foundation.layout.PaddingValues getButtonWithExtraLargeIconContentPadding();
    method public androidx.compose.foundation.layout.PaddingValues getButtonWithLargeIconContentPadding();
    method public androidx.compose.foundation.layout.PaddingValues getCompactButtonContentPadding();
    method @BytecodeOnly public float getCompactButtonHeight-D9Ej5fM();
    method @BytecodeOnly public float getCompactButtonHorizontalPadding-D9Ej5fM();
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.RoundedCornerShape getCompactButtonShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.RoundedCornerShape getCompactButtonShape(androidx.compose.runtime.Composer?, int);
    method public androidx.compose.foundation.layout.PaddingValues getCompactButtonTapTargetPadding();
    method @BytecodeOnly public float getCompactButtonVerticalPadding-D9Ej5fM();
    method public androidx.compose.foundation.layout.PaddingValues getContentPadding();
    method public float getDisabledContainerAlpha();
    method @BytecodeOnly public float getExtraLargeIconSize-D9Ej5fM();
    method @BytecodeOnly public float getExtraSmallIconSize-D9Ej5fM();
    method @BytecodeOnly public float getHeight-D9Ej5fM();
    method @BytecodeOnly public float getIconSize-D9Ej5fM();
    method @BytecodeOnly public float getIconSpacing-D9Ej5fM();
    method @BytecodeOnly public float getLargeIconSize-D9Ej5fM();
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getScrimGradientEndColor(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getScrimGradientStartColor(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.RoundedCornerShape getShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.RoundedCornerShape getShape(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getSmallIconSize-D9Ej5fM();
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.BorderStroke outlinedButtonBorder(boolean enabled, optional androidx.compose.ui.graphics.Color borderColor, optional androidx.compose.ui.graphics.Color disabledBorderColor, optional androidx.compose.ui.unit.Dp borderWidth);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.BorderStroke outlinedButtonBorder-h1eT-Ww(boolean, long, long, float, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ButtonColors outlinedButtonColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ButtonColors outlinedButtonColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ButtonColors outlinedButtonColors(optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color secondaryContentColor, optional androidx.compose.ui.graphics.Color iconColor, optional androidx.compose.ui.graphics.Color disabledContentColor, optional androidx.compose.ui.graphics.Color disabledSecondaryContentColor, optional androidx.compose.ui.graphics.Color disabledIconColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ButtonColors outlinedButtonColors-5tl4gsc(long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Brush scrimBrush();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Brush scrimBrush(androidx.compose.runtime.Composer?, int);
    property public androidx.compose.ui.unit.Dp ButtonExtraLargeIconStartPadding;
    property public androidx.compose.ui.unit.Dp ButtonHorizontalPadding;
    property public androidx.compose.ui.unit.Dp ButtonLargeIconStartPadding;
    property public androidx.compose.ui.unit.Dp ButtonVerticalPadding;
    property public androidx.compose.foundation.layout.PaddingValues ButtonWithExtraLargeIconContentPadding;
    property public androidx.compose.foundation.layout.PaddingValues ButtonWithLargeIconContentPadding;
    property public androidx.compose.foundation.layout.PaddingValues CompactButtonContentPadding;
    property public androidx.compose.ui.unit.Dp CompactButtonHeight;
    property public androidx.compose.ui.unit.Dp CompactButtonHorizontalPadding;
    property public androidx.compose.foundation.layout.PaddingValues CompactButtonTapTargetPadding;
    property public androidx.compose.ui.unit.Dp CompactButtonVerticalPadding;
    property public androidx.compose.foundation.layout.PaddingValues ContentPadding;
    property public float DisabledContainerAlpha;
    property public androidx.compose.ui.unit.Dp ExtraLargeIconSize;
    property public androidx.compose.ui.unit.Dp ExtraSmallIconSize;
    property public androidx.compose.ui.unit.Dp Height;
    property public androidx.compose.ui.unit.Dp IconSize;
    property public androidx.compose.ui.unit.Dp IconSpacing;
    property public androidx.compose.ui.unit.Dp LargeIconSize;
    property public androidx.compose.ui.unit.Dp SmallIconSize;
    property @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.RoundedCornerShape compactButtonShape;
    property public androidx.compose.ui.graphics.Color scrimGradientEndColor;
    property public androidx.compose.ui.graphics.Color scrimGradientStartColor;
    property @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.RoundedCornerShape shape;
    field public static final androidx.wear.compose.material3.ButtonDefaults INSTANCE;
  }

  public final class ButtonGroupDefaults {
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.PaddingValues fullWidthPaddings();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.PaddingValues fullWidthPaddings(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getExpansionWidth-D9Ej5fM();
    method @BytecodeOnly public float getMinWidth-D9Ej5fM();
    method @BytecodeOnly public float getSpacing-D9Ej5fM();
    property public androidx.compose.ui.unit.Dp ExpansionWidth;
    property public androidx.compose.ui.unit.Dp MinWidth;
    property public androidx.compose.ui.unit.Dp Spacing;
    field public static final androidx.wear.compose.material3.ButtonGroupDefaults INSTANCE;
  }

  public final class ButtonGroupKt {
    method @KotlinOnly @androidx.compose.runtime.Composable public static void ButtonGroup(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.unit.Dp spacing, optional androidx.compose.ui.unit.Dp expansionWidth, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.ui.Alignment.Vertical verticalAlignment, kotlin.jvm.functions.Function1<androidx.wear.compose.material3.ButtonGroupScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void ButtonGroup-ZUYZQmM(androidx.compose.ui.Modifier?, float, float, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.ui.Alignment.Vertical?, kotlin.jvm.functions.Function3<? super androidx.wear.compose.material3.ButtonGroupScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
  }

  public interface ButtonGroupScope {
    method public androidx.compose.ui.Modifier animateWidth(androidx.compose.ui.Modifier, androidx.compose.foundation.interaction.InteractionSource interactionSource);
    method @KotlinOnly public androidx.compose.ui.Modifier minWidth(androidx.compose.ui.Modifier, optional androidx.compose.ui.unit.Dp minWidth);
    method @BytecodeOnly public androidx.compose.ui.Modifier minWidth-3ABfNKs(androidx.compose.ui.Modifier, float);
    method public androidx.compose.ui.Modifier weight(androidx.compose.ui.Modifier, @FloatRange(from=0.0, fromInclusive=false) float weight);
  }

  public final class ButtonKt {
    method @androidx.compose.runtime.Composable public static void Button(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, androidx.compose.ui.graphics.painter.Painter containerPainter, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional String? onLongClickLabel, optional boolean enabled, optional androidx.compose.ui.graphics.painter.Painter disabledContainerPainter, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.ButtonColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, optional androidx.wear.compose.material3.SurfaceTransformation? transformation, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void Button(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.graphics.painter.Painter, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function0<kotlin.Unit!>?, String?, boolean, androidx.compose.ui.graphics.painter.Painter?, androidx.compose.ui.graphics.Shape?, androidx.wear.compose.material3.ButtonColors?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.wear.compose.material3.SurfaceTransformation?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @androidx.compose.runtime.Composable public static void Button(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, androidx.compose.ui.graphics.painter.Painter containerPainter, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional String? onLongClickLabel, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit>? secondaryLabel, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? icon, optional boolean enabled, optional androidx.compose.ui.graphics.painter.Painter disabledContainerPainter, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.ButtonColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, optional androidx.wear.compose.material3.SurfaceTransformation? transformation, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> label);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void Button(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.graphics.painter.Painter, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function0<kotlin.Unit!>?, String?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, boolean, androidx.compose.ui.graphics.painter.Painter?, androidx.compose.ui.graphics.Shape?, androidx.wear.compose.material3.ButtonColors?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.wear.compose.material3.SurfaceTransformation?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @androidx.compose.runtime.Composable public static void Button(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional String? onLongClickLabel, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.ButtonColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, optional androidx.wear.compose.material3.SurfaceTransformation? transformation, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void Button(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function0<kotlin.Unit!>?, String?, boolean, androidx.compose.ui.graphics.Shape?, androidx.wear.compose.material3.ButtonColors?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.wear.compose.material3.SurfaceTransformation?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @androidx.compose.runtime.Composable public static void Button(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional String? onLongClickLabel, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit>? secondaryLabel, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? icon, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.ButtonColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, optional androidx.wear.compose.material3.SurfaceTransformation? transformation, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> label);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void Button(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function0<kotlin.Unit!>?, String?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, boolean, androidx.compose.ui.graphics.Shape?, androidx.wear.compose.material3.ButtonColors?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.wear.compose.material3.SurfaceTransformation?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @androidx.compose.runtime.Composable public static void ChildButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional String? onLongClickLabel, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.ButtonColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, optional androidx.wear.compose.material3.SurfaceTransformation? transformation, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void ChildButton(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function0<kotlin.Unit!>?, String?, boolean, androidx.compose.ui.graphics.Shape?, androidx.wear.compose.material3.ButtonColors?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.wear.compose.material3.SurfaceTransformation?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @androidx.compose.runtime.Composable public static void ChildButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional String? onLongClickLabel, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit>? secondaryLabel, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? icon, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.ButtonColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, optional androidx.wear.compose.material3.SurfaceTransformation? transformation, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> label);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void ChildButton(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function0<kotlin.Unit!>?, String?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, boolean, androidx.compose.ui.graphics.Shape?, androidx.wear.compose.material3.ButtonColors?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.wear.compose.material3.SurfaceTransformation?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @androidx.compose.runtime.Composable public static void CompactButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional String? onLongClickLabel, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? icon, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.ButtonColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, optional androidx.wear.compose.material3.SurfaceTransformation? transformation, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit>? label);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void CompactButton(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function0<kotlin.Unit!>?, String?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, boolean, androidx.compose.ui.graphics.Shape?, androidx.wear.compose.material3.ButtonColors?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.wear.compose.material3.SurfaceTransformation?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.runtime.Composer?, int, int, int);
    method @androidx.compose.runtime.Composable public static void FilledTonalButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional String? onLongClickLabel, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.ButtonColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, optional androidx.wear.compose.material3.SurfaceTransformation? transformation, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void FilledTonalButton(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function0<kotlin.Unit!>?, String?, boolean, androidx.compose.ui.graphics.Shape?, androidx.wear.compose.material3.ButtonColors?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.wear.compose.material3.SurfaceTransformation?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @androidx.compose.runtime.Composable public static void FilledTonalButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional String? onLongClickLabel, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit>? secondaryLabel, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? icon, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.ButtonColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, optional androidx.wear.compose.material3.SurfaceTransformation? transformation, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> label);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void FilledTonalButton(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function0<kotlin.Unit!>?, String?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, boolean, androidx.compose.ui.graphics.Shape?, androidx.wear.compose.material3.ButtonColors?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.wear.compose.material3.SurfaceTransformation?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @androidx.compose.runtime.Composable public static void OutlinedButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional String? onLongClickLabel, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.ButtonColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, optional androidx.wear.compose.material3.SurfaceTransformation? transformation, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void OutlinedButton(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function0<kotlin.Unit!>?, String?, boolean, androidx.compose.ui.graphics.Shape?, androidx.wear.compose.material3.ButtonColors?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.wear.compose.material3.SurfaceTransformation?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @androidx.compose.runtime.Composable public static void OutlinedButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional String? onLongClickLabel, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit>? secondaryLabel, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? icon, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.ButtonColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, optional androidx.wear.compose.material3.SurfaceTransformation? transformation, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> label);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void OutlinedButton(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function0<kotlin.Unit!>?, String?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, boolean, androidx.compose.ui.graphics.Shape?, androidx.wear.compose.material3.ButtonColors?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.wear.compose.material3.SurfaceTransformation?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
  }

  @androidx.compose.runtime.Immutable public final class CardColors {
    ctor @KotlinOnly public CardColors(androidx.compose.ui.graphics.Color containerColor, androidx.compose.ui.graphics.Color contentColor, androidx.compose.ui.graphics.Color appNameColor, androidx.compose.ui.graphics.Color timeColor, androidx.compose.ui.graphics.Color titleColor, androidx.compose.ui.graphics.Color subtitleColor);
    ctor @BytecodeOnly public CardColors(long, long, long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly public androidx.wear.compose.material3.CardColors copy(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color appNameColor, optional androidx.compose.ui.graphics.Color timeColor, optional androidx.compose.ui.graphics.Color titleColor, optional androidx.compose.ui.graphics.Color subtitleColor);
    method @BytecodeOnly public androidx.wear.compose.material3.CardColors copy-tNS2XkQ(long, long, long, long, long, long);
    method @BytecodeOnly public long getAppNameColor-0d7_KjU();
    method @BytecodeOnly public long getContainerColor-0d7_KjU();
    method @BytecodeOnly public long getContentColor-0d7_KjU();
    method @BytecodeOnly public long getSubtitleColor-0d7_KjU();
    method @BytecodeOnly public long getTimeColor-0d7_KjU();
    method @BytecodeOnly public long getTitleColor-0d7_KjU();
    property public androidx.compose.ui.graphics.Color appNameColor;
    property public androidx.compose.ui.graphics.Color containerColor;
    property public androidx.compose.ui.graphics.Color contentColor;
    property public androidx.compose.ui.graphics.Color subtitleColor;
    property public androidx.compose.ui.graphics.Color timeColor;
    property public androidx.compose.ui.graphics.Color titleColor;
  }

  public final class CardDefaults {
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.CardColors cardColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.CardColors cardColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.CardColors cardColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color appNameColor, optional androidx.compose.ui.graphics.Color timeColor, optional androidx.compose.ui.graphics.Color titleColor, optional androidx.compose.ui.graphics.Color subtitleColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.CardColors cardColors-5tl4gsc(long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.CardColors cardWithContainerPainterColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.CardColors cardWithContainerPainterColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.CardColors cardWithContainerPainterColors(optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color appNameColor, optional androidx.compose.ui.graphics.Color timeColor, optional androidx.compose.ui.graphics.Color titleColor, optional androidx.compose.ui.graphics.Color subtitleColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.CardColors cardWithContainerPainterColors-zjMxDiM(long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.painter.Painter containerPainter(androidx.compose.ui.graphics.painter.Painter image, optional androidx.compose.ui.graphics.Brush scrim, optional boolean sizeToIntrinsics, optional androidx.compose.ui.Alignment alignment, optional androidx.compose.ui.layout.ContentScale contentScale, optional float alpha);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.painter.Painter containerPainter(androidx.compose.ui.graphics.painter.Painter, androidx.compose.ui.graphics.Brush?, boolean, androidx.compose.ui.Alignment?, androidx.compose.ui.layout.ContentScale?, float, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly public float getAppImageSize-D9Ej5fM();
    method public androidx.compose.foundation.layout.PaddingValues getCardWithContainerPainterContentPadding();
    method public androidx.compose.foundation.layout.PaddingValues getContentPadding();
    method @BytecodeOnly public float getHeight-D9Ej5fM();
    method @BytecodeOnly public float getImageBottomPadding-D9Ej5fM();
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public long getScrimColor(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getShape(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.BorderStroke outlinedCardBorder(optional androidx.compose.ui.graphics.Color outlineColor, optional androidx.compose.ui.unit.Dp borderWidth);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.BorderStroke outlinedCardBorder-iPRSM58(long, float, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.CardColors outlinedCardColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.CardColors outlinedCardColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.CardColors outlinedCardColors(optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color appNameColor, optional androidx.compose.ui.graphics.Color timeColor, optional androidx.compose.ui.graphics.Color titleColor, optional androidx.compose.ui.graphics.Color subtitleColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.CardColors outlinedCardColors-zjMxDiM(long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Brush scrimBrush();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Brush scrimBrush(androidx.compose.runtime.Composer?, int);
    property public androidx.compose.ui.unit.Dp AppImageSize;
    property public androidx.compose.foundation.layout.PaddingValues CardWithContainerPainterContentPadding;
    property public androidx.compose.foundation.layout.PaddingValues ContentPadding;
    property public androidx.compose.ui.unit.Dp Height;
    property public androidx.compose.ui.unit.Dp ImageBottomPadding;
    property public androidx.compose.ui.graphics.Color scrimColor;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape shape;
    field public static final androidx.wear.compose.material3.CardDefaults INSTANCE;
  }

  public final class CardKt {
    method @androidx.compose.runtime.Composable public static void AppCard(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> appName, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> title, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional String? onLongClickLabel, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.CardColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, optional androidx.wear.compose.material3.SurfaceTransformation? transformation, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit>? appImage, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit>? time, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void AppCard(kotlin.jvm.functions.Function0<kotlin.Unit!>, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function0<kotlin.Unit!>?, String?, boolean, androidx.compose.ui.graphics.Shape?, androidx.wear.compose.material3.CardColors?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.wear.compose.material3.SurfaceTransformation?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @androidx.compose.runtime.Composable public static void Card(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, androidx.compose.ui.graphics.painter.Painter containerPainter, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional String? onLongClickLabel, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.CardColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, optional androidx.wear.compose.material3.SurfaceTransformation? transformation, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void Card(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.graphics.painter.Painter, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function0<kotlin.Unit!>?, String?, boolean, androidx.compose.ui.graphics.Shape?, androidx.wear.compose.material3.CardColors?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.wear.compose.material3.SurfaceTransformation?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @androidx.compose.runtime.Composable public static void Card(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional String? onLongClickLabel, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.CardColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, optional androidx.wear.compose.material3.SurfaceTransformation? transformation, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void Card(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function0<kotlin.Unit!>?, String?, boolean, androidx.compose.ui.graphics.Shape?, androidx.wear.compose.material3.CardColors?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.wear.compose.material3.SurfaceTransformation?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @androidx.compose.runtime.Composable public static void OutlinedCard(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional String? onLongClickLabel, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.CardColors colors, optional androidx.compose.foundation.BorderStroke border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, optional androidx.wear.compose.material3.SurfaceTransformation? transformation, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void OutlinedCard(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function0<kotlin.Unit!>?, String?, boolean, androidx.compose.ui.graphics.Shape?, androidx.wear.compose.material3.CardColors?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.wear.compose.material3.SurfaceTransformation?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @androidx.compose.runtime.Composable public static void TitleCard(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, androidx.compose.ui.graphics.painter.Painter containerPainter, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> title, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional String? onLongClickLabel, optional kotlin.jvm.functions.Function0<kotlin.Unit>? time, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.ColumnScope,kotlin.Unit>? subtitle, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.CardColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, optional androidx.wear.compose.material3.SurfaceTransformation? transformation, optional kotlin.jvm.functions.Function0<kotlin.Unit>? content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void TitleCard(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.graphics.painter.Painter, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function0<kotlin.Unit!>?, String?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, boolean, androidx.compose.ui.graphics.Shape?, androidx.wear.compose.material3.CardColors?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.wear.compose.material3.SurfaceTransformation?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.runtime.Composer?, int, int, int);
    method @androidx.compose.runtime.Composable public static void TitleCard(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> title, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional String? onLongClickLabel, optional kotlin.jvm.functions.Function0<kotlin.Unit>? time, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.ColumnScope,kotlin.Unit>? subtitle, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.CardColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, optional androidx.wear.compose.material3.SurfaceTransformation? transformation, optional kotlin.jvm.functions.Function0<kotlin.Unit>? content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void TitleCard(kotlin.jvm.functions.Function0<kotlin.Unit!>, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function0<kotlin.Unit!>?, String?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, boolean, androidx.compose.ui.graphics.Shape?, androidx.wear.compose.material3.CardColors?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.wear.compose.material3.SurfaceTransformation?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.runtime.Composer?, int, int, int);
  }

  @androidx.compose.runtime.Immutable public final class CheckboxButtonColors {
    ctor @KotlinOnly public CheckboxButtonColors(androidx.compose.ui.graphics.Color checkedContainerColor, androidx.compose.ui.graphics.Color checkedContentColor, androidx.compose.ui.graphics.Color checkedSecondaryContentColor, androidx.compose.ui.graphics.Color checkedIconColor, androidx.compose.ui.graphics.Color checkedBoxColor, androidx.compose.ui.graphics.Color checkedCheckmarkColor, androidx.compose.ui.graphics.Color uncheckedContainerColor, androidx.compose.ui.graphics.Color uncheckedContentColor, androidx.compose.ui.graphics.Color uncheckedSecondaryContentColor, androidx.compose.ui.graphics.Color uncheckedIconColor, androidx.compose.ui.graphics.Color uncheckedBoxColor, androidx.compose.ui.graphics.Color disabledCheckedContainerColor, androidx.compose.ui.graphics.Color disabledCheckedContentColor, androidx.compose.ui.graphics.Color disabledCheckedSecondaryContentColor, androidx.compose.ui.graphics.Color disabledCheckedIconColor, androidx.compose.ui.graphics.Color disabledCheckedBoxColor, androidx.compose.ui.graphics.Color disabledCheckedCheckmarkColor, androidx.compose.ui.graphics.Color disabledUncheckedContainerColor, androidx.compose.ui.graphics.Color disabledUncheckedContentColor, androidx.compose.ui.graphics.Color disabledUncheckedSecondaryContentColor, androidx.compose.ui.graphics.Color disabledUncheckedIconColor, androidx.compose.ui.graphics.Color disabledUncheckedBoxColor);
    ctor @BytecodeOnly public CheckboxButtonColors(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly public androidx.wear.compose.material3.CheckboxButtonColors copy(optional androidx.compose.ui.graphics.Color checkedContainerColor, optional androidx.compose.ui.graphics.Color checkedContentColor, optional androidx.compose.ui.graphics.Color checkedSecondaryContentColor, optional androidx.compose.ui.graphics.Color checkedIconColor, optional androidx.compose.ui.graphics.Color checkedBoxColor, optional androidx.compose.ui.graphics.Color checkedCheckmarkColor, optional androidx.compose.ui.graphics.Color uncheckedContainerColor, optional androidx.compose.ui.graphics.Color uncheckedContentColor, optional androidx.compose.ui.graphics.Color uncheckedSecondaryContentColor, optional androidx.compose.ui.graphics.Color uncheckedIconColor, optional androidx.compose.ui.graphics.Color uncheckedBoxColor, optional androidx.compose.ui.graphics.Color disabledCheckedContainerColor, optional androidx.compose.ui.graphics.Color disabledCheckedContentColor, optional androidx.compose.ui.graphics.Color disabledCheckedSecondaryContentColor, optional androidx.compose.ui.graphics.Color disabledCheckedIconColor, optional androidx.compose.ui.graphics.Color disabledCheckedBoxColor, optional androidx.compose.ui.graphics.Color disabledCheckedCheckmarkColor, optional androidx.compose.ui.graphics.Color disabledUncheckedContainerColor, optional androidx.compose.ui.graphics.Color disabledUncheckedContentColor, optional androidx.compose.ui.graphics.Color disabledUncheckedSecondaryContentColor, optional androidx.compose.ui.graphics.Color disabledUncheckedIconColor, optional androidx.compose.ui.graphics.Color disabledUncheckedBoxColor);
    method @BytecodeOnly public androidx.wear.compose.material3.CheckboxButtonColors copy-0VcbP8k(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long);
    method @BytecodeOnly public long getCheckedBoxColor-0d7_KjU();
    method @BytecodeOnly public long getCheckedCheckmarkColor-0d7_KjU();
    method @BytecodeOnly public long getCheckedContainerColor-0d7_KjU();
    method @BytecodeOnly public long getCheckedContentColor-0d7_KjU();
    method @BytecodeOnly public long getCheckedIconColor-0d7_KjU();
    method @BytecodeOnly public long getCheckedSecondaryContentColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledCheckedBoxColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledCheckedCheckmarkColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledCheckedContainerColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledCheckedContentColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledCheckedIconColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledCheckedSecondaryContentColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledUncheckedBoxColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledUncheckedContainerColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledUncheckedContentColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledUncheckedIconColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledUncheckedSecondaryContentColor-0d7_KjU();
    method @BytecodeOnly public long getUncheckedBoxColor-0d7_KjU();
    method @BytecodeOnly public long getUncheckedContainerColor-0d7_KjU();
    method @BytecodeOnly public long getUncheckedContentColor-0d7_KjU();
    method @BytecodeOnly public long getUncheckedIconColor-0d7_KjU();
    method @BytecodeOnly public long getUncheckedSecondaryContentColor-0d7_KjU();
    property public androidx.compose.ui.graphics.Color checkedBoxColor;
    property public androidx.compose.ui.graphics.Color checkedCheckmarkColor;
    property public androidx.compose.ui.graphics.Color checkedContainerColor;
    property public androidx.compose.ui.graphics.Color checkedContentColor;
    property public androidx.compose.ui.graphics.Color checkedIconColor;
    property public androidx.compose.ui.graphics.Color checkedSecondaryContentColor;
    property public androidx.compose.ui.graphics.Color disabledCheckedBoxColor;
    property public androidx.compose.ui.graphics.Color disabledCheckedCheckmarkColor;
    property public androidx.compose.ui.graphics.Color disabledCheckedContainerColor;
    property public androidx.compose.ui.graphics.Color disabledCheckedContentColor;
    property public androidx.compose.ui.graphics.Color disabledCheckedIconColor;
    property public androidx.compose.ui.graphics.Color disabledCheckedSecondaryContentColor;
    property public androidx.compose.ui.graphics.Color disabledUncheckedBoxColor;
    property public androidx.compose.ui.graphics.Color disabledUncheckedContainerColor;
    property public androidx.compose.ui.graphics.Color disabledUncheckedContentColor;
    property public androidx.compose.ui.graphics.Color disabledUncheckedIconColor;
    property public androidx.compose.ui.graphics.Color disabledUncheckedSecondaryContentColor;
    property public androidx.compose.ui.graphics.Color uncheckedBoxColor;
    property public androidx.compose.ui.graphics.Color uncheckedContainerColor;
    property public androidx.compose.ui.graphics.Color uncheckedContentColor;
    property public androidx.compose.ui.graphics.Color uncheckedIconColor;
    property public androidx.compose.ui.graphics.Color uncheckedSecondaryContentColor;
  }

  public final class CheckboxButtonDefaults {
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.CheckboxButtonColors checkboxButtonColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.CheckboxButtonColors checkboxButtonColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.CheckboxButtonColors checkboxButtonColors(optional androidx.compose.ui.graphics.Color checkedContainerColor, optional androidx.compose.ui.graphics.Color checkedContentColor, optional androidx.compose.ui.graphics.Color checkedSecondaryContentColor, optional androidx.compose.ui.graphics.Color checkedIconColor, optional androidx.compose.ui.graphics.Color checkedBoxColor, optional androidx.compose.ui.graphics.Color checkedCheckmarkColor, optional androidx.compose.ui.graphics.Color uncheckedContainerColor, optional androidx.compose.ui.graphics.Color uncheckedContentColor, optional androidx.compose.ui.graphics.Color uncheckedSecondaryContentColor, optional androidx.compose.ui.graphics.Color uncheckedIconColor, optional androidx.compose.ui.graphics.Color uncheckedBoxColor, optional androidx.compose.ui.graphics.Color disabledCheckedContainerColor, optional androidx.compose.ui.graphics.Color disabledCheckedContentColor, optional androidx.compose.ui.graphics.Color disabledCheckedSecondaryContentColor, optional androidx.compose.ui.graphics.Color disabledCheckedIconColor, optional androidx.compose.ui.graphics.Color disabledCheckedBoxColor, optional androidx.compose.ui.graphics.Color disabledCheckedCheckmarkColor, optional androidx.compose.ui.graphics.Color disabledUncheckedContainerColor, optional androidx.compose.ui.graphics.Color disabledUncheckedContentColor, optional androidx.compose.ui.graphics.Color disabledUncheckedSecondaryContentColor, optional androidx.compose.ui.graphics.Color disabledUncheckedIconColor, optional androidx.compose.ui.graphics.Color disabledUncheckedBoxColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.CheckboxButtonColors checkboxButtonColors-DlUQjxs(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int, int, int);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getCheckboxButtonShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getCheckboxButtonShape(androidx.compose.runtime.Composer?, int);
    method public androidx.compose.foundation.layout.PaddingValues getContentPadding();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getSplitCheckboxButtonShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getSplitCheckboxButtonShape(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.SplitCheckboxButtonColors splitCheckboxButtonColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.SplitCheckboxButtonColors splitCheckboxButtonColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.SplitCheckboxButtonColors splitCheckboxButtonColors(optional androidx.compose.ui.graphics.Color checkedContainerColor, optional androidx.compose.ui.graphics.Color checkedContentColor, optional androidx.compose.ui.graphics.Color checkedSecondaryContentColor, optional androidx.compose.ui.graphics.Color checkedSplitContainerColor, optional androidx.compose.ui.graphics.Color checkedBoxColor, optional androidx.compose.ui.graphics.Color checkedCheckmarkColor, optional androidx.compose.ui.graphics.Color uncheckedContainerColor, optional androidx.compose.ui.graphics.Color uncheckedContentColor, optional androidx.compose.ui.graphics.Color uncheckedSecondaryContentColor, optional androidx.compose.ui.graphics.Color uncheckedSplitContainerColor, optional androidx.compose.ui.graphics.Color uncheckedBoxColor, optional androidx.compose.ui.graphics.Color disabledCheckedContainerColor, optional androidx.compose.ui.graphics.Color disabledCheckedContentColor, optional androidx.compose.ui.graphics.Color disabledCheckedSecondaryContentColor, optional androidx.compose.ui.graphics.Color disabledCheckedSplitContainerColor, optional androidx.compose.ui.graphics.Color disabledCheckedBoxColor, optional androidx.compose.ui.graphics.Color disabledCheckedCheckmarkColor, optional androidx.compose.ui.graphics.Color disabledUncheckedContainerColor, optional androidx.compose.ui.graphics.Color disabledUncheckedContentColor, optional androidx.compose.ui.graphics.Color disabledUncheckedSecondaryContentColor, optional androidx.compose.ui.graphics.Color disabledUncheckedSplitContainerColor, optional androidx.compose.ui.graphics.Color disabledUncheckedBoxColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.SplitCheckboxButtonColors splitCheckboxButtonColors-DlUQjxs(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int, int, int);
    property public androidx.compose.foundation.layout.PaddingValues ContentPadding;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape checkboxButtonShape;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape splitCheckboxButtonShape;
    field public static final androidx.wear.compose.material3.CheckboxButtonDefaults INSTANCE;
  }

  public final class CheckboxButtonKt {
    method @androidx.compose.runtime.Composable public static void CheckboxButton(boolean checked, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onCheckedChange, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.CheckboxButtonColors colors, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, optional androidx.wear.compose.material3.SurfaceTransformation? transformation, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? icon, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit>? secondaryLabel, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> label);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void CheckboxButton(boolean, kotlin.jvm.functions.Function1<? super java.lang.Boolean!,kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, androidx.compose.ui.graphics.Shape?, androidx.wear.compose.material3.CheckboxButtonColors?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.wear.compose.material3.SurfaceTransformation?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @androidx.compose.runtime.Composable public static void SplitCheckboxButton(boolean checked, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onCheckedChange, String? toggleContentDescription, kotlin.jvm.functions.Function0<kotlin.Unit> onContainerClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.SplitCheckboxButtonColors colors, optional androidx.compose.foundation.interaction.MutableInteractionSource? toggleInteractionSource, optional androidx.compose.foundation.interaction.MutableInteractionSource? containerInteractionSource, optional androidx.wear.compose.material3.SurfaceTransformation? transformation, optional String? containerClickLabel, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit>? secondaryLabel, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> label);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void SplitCheckboxButton(boolean, kotlin.jvm.functions.Function1<? super java.lang.Boolean!,kotlin.Unit!>, String?, kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, androidx.compose.ui.graphics.Shape?, androidx.wear.compose.material3.SplitCheckboxButtonColors?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.wear.compose.material3.SurfaceTransformation?, String?, androidx.compose.foundation.layout.PaddingValues?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
  }

  public final class CircularProgressIndicatorDefaults {
    method @KotlinOnly public androidx.compose.ui.unit.Dp calculateRecommendedGapSize(androidx.compose.ui.unit.Dp strokeWidth);
    method @BytecodeOnly public float calculateRecommendedGapSize-5rwHm24(float);
    method @BytecodeOnly public float getFullScreenPadding-D9Ej5fM();
    method @BytecodeOnly public float getIndeterminateStrokeWidth-D9Ej5fM();
    method @BytecodeOnly @androidx.compose.runtime.Composable public float getLargeStrokeWidth(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public float getSmallStrokeWidth(androidx.compose.runtime.Composer?, int);
    method public float getStartAngle();
    property public androidx.compose.ui.unit.Dp FullScreenPadding;
    property public androidx.compose.ui.unit.Dp IndeterminateStrokeWidth;
    property public float StartAngle;
    property public androidx.compose.ui.unit.Dp largeStrokeWidth;
    property public androidx.compose.ui.unit.Dp smallStrokeWidth;
    field public static final androidx.wear.compose.material3.CircularProgressIndicatorDefaults INSTANCE;
  }

  public final class CircularProgressIndicatorKt {
    method @KotlinOnly @androidx.compose.runtime.Composable public static void CircularProgressIndicator(optional androidx.compose.ui.Modifier modifier, optional androidx.wear.compose.material3.ProgressIndicatorColors colors, optional androidx.compose.ui.unit.Dp strokeWidth, optional androidx.compose.ui.unit.Dp gapSize);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void CircularProgressIndicator(kotlin.jvm.functions.Function0<java.lang.Float> progress, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional boolean allowProgressOverflow, optional float startAngle, optional float endAngle, optional androidx.wear.compose.material3.ProgressIndicatorColors colors, optional androidx.compose.ui.unit.Dp strokeWidth, optional androidx.compose.ui.unit.Dp gapSize);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void CircularProgressIndicator-HXNGIdc(kotlin.jvm.functions.Function0<java.lang.Float!>, androidx.compose.ui.Modifier?, boolean, boolean, float, float, androidx.wear.compose.material3.ProgressIndicatorColors?, float, float, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void CircularProgressIndicator-UuyPYSY(androidx.compose.ui.Modifier?, androidx.wear.compose.material3.ProgressIndicatorColors?, float, float, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly public static void drawCircularProgressIndicator(androidx.compose.ui.graphics.drawscope.DrawScope, float progress, androidx.wear.compose.material3.ProgressIndicatorColors colors, androidx.compose.ui.unit.Dp strokeWidth, optional boolean enabled, optional float targetProgress, optional boolean allowProgressOverflow, optional float startAngle, optional float endAngle, optional androidx.compose.ui.unit.Dp gapSize);
    method @BytecodeOnly public static void drawCircularProgressIndicator-N_l63oY(androidx.compose.ui.graphics.drawscope.DrawScope, float, androidx.wear.compose.material3.ProgressIndicatorColors, float, boolean, float, boolean, float, float, float);
  }

  @androidx.compose.runtime.Immutable @androidx.compose.runtime.Stable public final class ColorScheme {
    ctor public ColorScheme();
    ctor @KotlinOnly public ColorScheme(optional androidx.compose.ui.graphics.Color primary, optional androidx.compose.ui.graphics.Color primaryDim, optional androidx.compose.ui.graphics.Color primaryContainer, optional androidx.compose.ui.graphics.Color onPrimary, optional androidx.compose.ui.graphics.Color onPrimaryContainer, optional androidx.compose.ui.graphics.Color secondary, optional androidx.compose.ui.graphics.Color secondaryDim, optional androidx.compose.ui.graphics.Color secondaryContainer, optional androidx.compose.ui.graphics.Color onSecondary, optional androidx.compose.ui.graphics.Color onSecondaryContainer, optional androidx.compose.ui.graphics.Color tertiary, optional androidx.compose.ui.graphics.Color tertiaryDim, optional androidx.compose.ui.graphics.Color tertiaryContainer, optional androidx.compose.ui.graphics.Color onTertiary, optional androidx.compose.ui.graphics.Color onTertiaryContainer, optional androidx.compose.ui.graphics.Color surfaceContainerLow, optional androidx.compose.ui.graphics.Color surfaceContainer, optional androidx.compose.ui.graphics.Color surfaceContainerHigh, optional androidx.compose.ui.graphics.Color onSurface, optional androidx.compose.ui.graphics.Color onSurfaceVariant, optional androidx.compose.ui.graphics.Color outline, optional androidx.compose.ui.graphics.Color outlineVariant, optional androidx.compose.ui.graphics.Color background, optional androidx.compose.ui.graphics.Color onBackground, optional androidx.compose.ui.graphics.Color error, optional androidx.compose.ui.graphics.Color errorDim, optional androidx.compose.ui.graphics.Color errorContainer, optional androidx.compose.ui.graphics.Color onError, optional androidx.compose.ui.graphics.Color onErrorContainer);
    ctor @BytecodeOnly public ColorScheme(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly public androidx.wear.compose.material3.ColorScheme copy(optional androidx.compose.ui.graphics.Color primary, optional androidx.compose.ui.graphics.Color primaryDim, optional androidx.compose.ui.graphics.Color primaryContainer, optional androidx.compose.ui.graphics.Color onPrimary, optional androidx.compose.ui.graphics.Color onPrimaryContainer, optional androidx.compose.ui.graphics.Color secondary, optional androidx.compose.ui.graphics.Color secondaryDim, optional androidx.compose.ui.graphics.Color secondaryContainer, optional androidx.compose.ui.graphics.Color onSecondary, optional androidx.compose.ui.graphics.Color onSecondaryContainer, optional androidx.compose.ui.graphics.Color tertiary, optional androidx.compose.ui.graphics.Color tertiaryDim, optional androidx.compose.ui.graphics.Color tertiaryContainer, optional androidx.compose.ui.graphics.Color onTertiary, optional androidx.compose.ui.graphics.Color onTertiaryContainer, optional androidx.compose.ui.graphics.Color surfaceContainerLow, optional androidx.compose.ui.graphics.Color surfaceContainer, optional androidx.compose.ui.graphics.Color surfaceContainerHigh, optional androidx.compose.ui.graphics.Color onSurface, optional androidx.compose.ui.graphics.Color onSurfaceVariant, optional androidx.compose.ui.graphics.Color outline, optional androidx.compose.ui.graphics.Color outlineVariant, optional androidx.compose.ui.graphics.Color background, optional androidx.compose.ui.graphics.Color onBackground, optional androidx.compose.ui.graphics.Color error, optional androidx.compose.ui.graphics.Color errorDim, optional androidx.compose.ui.graphics.Color errorContainer, optional androidx.compose.ui.graphics.Color onError, optional androidx.compose.ui.graphics.Color onErrorContainer);
    method @BytecodeOnly public androidx.wear.compose.material3.ColorScheme copy-G1PFc-w(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long);
    method @BytecodeOnly public long getBackground-0d7_KjU();
    method @BytecodeOnly public long getError-0d7_KjU();
    method @BytecodeOnly public long getErrorContainer-0d7_KjU();
    method @BytecodeOnly public long getErrorDim-0d7_KjU();
    method @BytecodeOnly public long getOnBackground-0d7_KjU();
    method @BytecodeOnly public long getOnError-0d7_KjU();
    method @BytecodeOnly public long getOnErrorContainer-0d7_KjU();
    method @BytecodeOnly public long getOnPrimary-0d7_KjU();
    method @BytecodeOnly public long getOnPrimaryContainer-0d7_KjU();
    method @BytecodeOnly public long getOnSecondary-0d7_KjU();
    method @BytecodeOnly public long getOnSecondaryContainer-0d7_KjU();
    method @BytecodeOnly public long getOnSurface-0d7_KjU();
    method @BytecodeOnly public long getOnSurfaceVariant-0d7_KjU();
    method @BytecodeOnly public long getOnTertiary-0d7_KjU();
    method @BytecodeOnly public long getOnTertiaryContainer-0d7_KjU();
    method @BytecodeOnly public long getOutline-0d7_KjU();
    method @BytecodeOnly public long getOutlineVariant-0d7_KjU();
    method @BytecodeOnly public long getPrimary-0d7_KjU();
    method @BytecodeOnly public long getPrimaryContainer-0d7_KjU();
    method @BytecodeOnly public long getPrimaryDim-0d7_KjU();
    method @BytecodeOnly public long getSecondary-0d7_KjU();
    method @BytecodeOnly public long getSecondaryContainer-0d7_KjU();
    method @BytecodeOnly public long getSecondaryDim-0d7_KjU();
    method @BytecodeOnly public long getSurfaceContainer-0d7_KjU();
    method @BytecodeOnly public long getSurfaceContainerHigh-0d7_KjU();
    method @BytecodeOnly public long getSurfaceContainerLow-0d7_KjU();
    method @BytecodeOnly public long getTertiary-0d7_KjU();
    method @BytecodeOnly public long getTertiaryContainer-0d7_KjU();
    method @BytecodeOnly public long getTertiaryDim-0d7_KjU();
    property public androidx.compose.ui.graphics.Color background;
    property public androidx.compose.ui.graphics.Color error;
    property public androidx.compose.ui.graphics.Color errorContainer;
    property public androidx.compose.ui.graphics.Color errorDim;
    property public androidx.compose.ui.graphics.Color onBackground;
    property public androidx.compose.ui.graphics.Color onError;
    property public androidx.compose.ui.graphics.Color onErrorContainer;
    property public androidx.compose.ui.graphics.Color onPrimary;
    property public androidx.compose.ui.graphics.Color onPrimaryContainer;
    property public androidx.compose.ui.graphics.Color onSecondary;
    property public androidx.compose.ui.graphics.Color onSecondaryContainer;
    property public androidx.compose.ui.graphics.Color onSurface;
    property public androidx.compose.ui.graphics.Color onSurfaceVariant;
    property public androidx.compose.ui.graphics.Color onTertiary;
    property public androidx.compose.ui.graphics.Color onTertiaryContainer;
    property public androidx.compose.ui.graphics.Color outline;
    property public androidx.compose.ui.graphics.Color outlineVariant;
    property public androidx.compose.ui.graphics.Color primary;
    property public androidx.compose.ui.graphics.Color primaryContainer;
    property public androidx.compose.ui.graphics.Color primaryDim;
    property public androidx.compose.ui.graphics.Color secondary;
    property public androidx.compose.ui.graphics.Color secondaryContainer;
    property public androidx.compose.ui.graphics.Color secondaryDim;
    property public androidx.compose.ui.graphics.Color surfaceContainer;
    property public androidx.compose.ui.graphics.Color surfaceContainerHigh;
    property public androidx.compose.ui.graphics.Color surfaceContainerLow;
    property public androidx.compose.ui.graphics.Color tertiary;
    property public androidx.compose.ui.graphics.Color tertiaryContainer;
    property public androidx.compose.ui.graphics.Color tertiaryDim;
  }

  public final class ColorSchemeKt {
    method @KotlinOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static androidx.compose.ui.graphics.Color contentColorFor(androidx.compose.ui.graphics.Color backgroundColor);
    method @KotlinOnly public static androidx.compose.ui.graphics.Color contentColorFor(androidx.wear.compose.material3.ColorScheme, androidx.compose.ui.graphics.Color backgroundColor);
    method @BytecodeOnly public static long contentColorFor-4WTKRHQ(androidx.wear.compose.material3.ColorScheme, long);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static long contentColorFor-ek8zF_U(long, androidx.compose.runtime.Composer?, int);
  }

  public final class ConfirmationDialogColors {
    ctor @KotlinOnly public ConfirmationDialogColors(androidx.compose.ui.graphics.Color iconColor, androidx.compose.ui.graphics.Color iconContainerColor, androidx.compose.ui.graphics.Color textColor);
    ctor @BytecodeOnly public ConfirmationDialogColors(long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly public androidx.wear.compose.material3.ConfirmationDialogColors copy(optional androidx.compose.ui.graphics.Color iconColor, optional androidx.compose.ui.graphics.Color iconContainerColor, optional androidx.compose.ui.graphics.Color textColor);
    method @BytecodeOnly public androidx.wear.compose.material3.ConfirmationDialogColors copy-ysEtTa8(long, long, long);
    method @BytecodeOnly public long getIconColor-0d7_KjU();
    method @BytecodeOnly public long getIconContainerColor-0d7_KjU();
    method @BytecodeOnly public long getTextColor-0d7_KjU();
    property public androidx.compose.ui.graphics.Color iconColor;
    property public androidx.compose.ui.graphics.Color iconContainerColor;
    property public androidx.compose.ui.graphics.Color textColor;
  }

  public final class ConfirmationDialogDefaults {
    method @androidx.compose.runtime.Composable public void FailureIcon(optional androidx.compose.ui.Modifier modifier);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void FailureIcon(androidx.compose.ui.Modifier?, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public void SuccessIcon(optional androidx.compose.ui.Modifier modifier);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void SuccessIcon(androidx.compose.ui.Modifier?, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ConfirmationDialogColors colors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ConfirmationDialogColors colors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ConfirmationDialogColors colors(optional androidx.compose.ui.graphics.Color iconColor, optional androidx.compose.ui.graphics.Color iconContainerColor, optional androidx.compose.ui.graphics.Color textColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ConfirmationDialogColors colors-RGew2ao(long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ConfirmationDialogColors failureColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ConfirmationDialogColors failureColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ConfirmationDialogColors failureColors(optional androidx.compose.ui.graphics.Color iconColor, optional androidx.compose.ui.graphics.Color iconContainerColor, optional androidx.compose.ui.graphics.Color textColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ConfirmationDialogColors failureColors-RGew2ao(long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.foundation.CurvedTextStyle getCurvedTextStyle();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.foundation.CurvedTextStyle getCurvedTextStyle(androidx.compose.runtime.Composer?, int);
    method public long getDurationMillis();
    method @BytecodeOnly public float getIconSize-D9Ej5fM();
    method @BytecodeOnly public float getSmallIconSize-D9Ej5fM();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ConfirmationDialogColors successColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ConfirmationDialogColors successColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ConfirmationDialogColors successColors(optional androidx.compose.ui.graphics.Color iconColor, optional androidx.compose.ui.graphics.Color iconContainerColor, optional androidx.compose.ui.graphics.Color textColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ConfirmationDialogColors successColors-RGew2ao(long, long, long, androidx.compose.runtime.Composer?, int, int);
    property public long DurationMillis;
    property public androidx.compose.ui.unit.Dp IconSize;
    property public androidx.compose.ui.unit.Dp SmallIconSize;
    property @androidx.compose.runtime.Composable public androidx.wear.compose.foundation.CurvedTextStyle curvedTextStyle;
    field public static final androidx.wear.compose.material3.ConfirmationDialogDefaults INSTANCE;
  }

  public final class ConfirmationDialogKt {
    method @androidx.compose.runtime.Composable public static void ConfirmationDialog(boolean visible, kotlin.jvm.functions.Function0<kotlin.Unit> onDismissRequest, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.ColumnScope,kotlin.Unit>? text, optional androidx.compose.ui.Modifier modifier, optional androidx.wear.compose.material3.ConfirmationDialogColors colors, optional androidx.compose.ui.window.DialogProperties properties, optional long durationMillis, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void ConfirmationDialog(boolean visible, kotlin.jvm.functions.Function0<kotlin.Unit> onDismissRequest, kotlin.jvm.functions.Function1<? super androidx.wear.compose.foundation.CurvedScope,kotlin.Unit>? curvedText, optional androidx.compose.ui.Modifier modifier, optional androidx.wear.compose.material3.ConfirmationDialogColors colors, optional androidx.compose.ui.window.DialogProperties properties, optional long durationMillis, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void ConfirmationDialog(boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>, kotlin.jvm.functions.Function1<? super androidx.wear.compose.foundation.CurvedScope!,kotlin.Unit!>?, androidx.compose.ui.Modifier?, androidx.wear.compose.material3.ConfirmationDialogColors?, androidx.compose.ui.window.DialogProperties?, long, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void ConfirmationDialog(boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.ui.Modifier?, androidx.wear.compose.material3.ConfirmationDialogColors?, androidx.compose.ui.window.DialogProperties?, long, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void ConfirmationDialogContent(kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.ColumnScope,kotlin.Unit>? text, optional androidx.compose.ui.Modifier modifier, optional androidx.wear.compose.material3.ConfirmationDialogColors colors, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void ConfirmationDialogContent(kotlin.jvm.functions.Function1<? super androidx.wear.compose.foundation.CurvedScope,kotlin.Unit>? curvedText, optional androidx.compose.ui.Modifier modifier, optional androidx.wear.compose.material3.ConfirmationDialogColors colors, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void ConfirmationDialogContent(kotlin.jvm.functions.Function1<? super androidx.wear.compose.foundation.CurvedScope!,kotlin.Unit!>?, androidx.compose.ui.Modifier?, androidx.wear.compose.material3.ConfirmationDialogColors?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void ConfirmationDialogContent(kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.ui.Modifier?, androidx.wear.compose.material3.ConfirmationDialogColors?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void FailureConfirmationDialog(boolean visible, kotlin.jvm.functions.Function0<kotlin.Unit> onDismissRequest, kotlin.jvm.functions.Function1<? super androidx.wear.compose.foundation.CurvedScope,kotlin.Unit>? curvedText, optional androidx.compose.ui.Modifier modifier, optional androidx.wear.compose.material3.ConfirmationDialogColors colors, optional androidx.compose.ui.window.DialogProperties properties, optional long durationMillis, optional kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void FailureConfirmationDialog(boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>, kotlin.jvm.functions.Function1<? super androidx.wear.compose.foundation.CurvedScope!,kotlin.Unit!>?, androidx.compose.ui.Modifier?, androidx.wear.compose.material3.ConfirmationDialogColors?, androidx.compose.ui.window.DialogProperties?, long, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void FailureConfirmationDialogContent(kotlin.jvm.functions.Function1<? super androidx.wear.compose.foundation.CurvedScope,kotlin.Unit>? curvedText, optional androidx.compose.ui.Modifier modifier, optional androidx.wear.compose.material3.ConfirmationDialogColors colors, optional kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void FailureConfirmationDialogContent(kotlin.jvm.functions.Function1<? super androidx.wear.compose.foundation.CurvedScope!,kotlin.Unit!>?, androidx.compose.ui.Modifier?, androidx.wear.compose.material3.ConfirmationDialogColors?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void SuccessConfirmationDialog(boolean visible, kotlin.jvm.functions.Function0<kotlin.Unit> onDismissRequest, kotlin.jvm.functions.Function1<? super androidx.wear.compose.foundation.CurvedScope,kotlin.Unit>? curvedText, optional androidx.compose.ui.Modifier modifier, optional androidx.wear.compose.material3.ConfirmationDialogColors colors, optional androidx.compose.ui.window.DialogProperties properties, optional long durationMillis, optional kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void SuccessConfirmationDialog(boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>, kotlin.jvm.functions.Function1<? super androidx.wear.compose.foundation.CurvedScope!,kotlin.Unit!>?, androidx.compose.ui.Modifier?, androidx.wear.compose.material3.ConfirmationDialogColors?, androidx.compose.ui.window.DialogProperties?, long, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void SuccessConfirmationDialogContent(kotlin.jvm.functions.Function1<? super androidx.wear.compose.foundation.CurvedScope,kotlin.Unit>? curvedText, optional androidx.compose.ui.Modifier modifier, optional androidx.wear.compose.material3.ConfirmationDialogColors colors, optional kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void SuccessConfirmationDialogContent(kotlin.jvm.functions.Function1<? super androidx.wear.compose.foundation.CurvedScope!,kotlin.Unit!>?, androidx.compose.ui.Modifier?, androidx.wear.compose.material3.ConfirmationDialogColors?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.runtime.Composer?, int, int);
    method public static void confirmationDialogCurvedText(androidx.wear.compose.foundation.CurvedScope, String text, androidx.wear.compose.foundation.CurvedTextStyle style);
  }

  public final class ContentColorKt {
    method public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.ui.graphics.Color> getLocalContentColor();
    property public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.ui.graphics.Color> LocalContentColor;
  }

  public final class CurvedTextDefaults {
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Color backgroundColor();
    method @BytecodeOnly @androidx.compose.runtime.Composable public long backgroundColor-WaAFU9c(androidx.compose.runtime.Composer?, int);
    method public float getScrollableContentMaxSweepAngle();
    method public float getStaticContentMaxSweepAngle();
    property public float ScrollableContentMaxSweepAngle;
    property public float StaticContentMaxSweepAngle;
    field public static final androidx.wear.compose.material3.CurvedTextDefaults INSTANCE;
  }

  public final class CurvedTextKt {
    method @KotlinOnly public static void curvedText(androidx.wear.compose.foundation.CurvedScope, String text, optional androidx.wear.compose.foundation.CurvedModifier modifier, optional float maxSweepAngle, optional androidx.compose.ui.graphics.Color background, optional androidx.compose.ui.graphics.Color color, optional androidx.compose.ui.unit.TextUnit fontSize, optional androidx.compose.ui.text.font.FontFamily? fontFamily, optional androidx.compose.ui.text.font.FontWeight? fontWeight, optional androidx.compose.ui.text.font.FontStyle? fontStyle, optional androidx.compose.ui.text.font.FontSynthesis? fontSynthesis, optional androidx.compose.ui.unit.TextUnit letterSpacing, optional androidx.compose.ui.unit.TextUnit letterSpacingCounterClockwise, optional androidx.wear.compose.foundation.CurvedTextStyle? style, optional androidx.wear.compose.foundation.CurvedDirection.Angular? angularDirection, optional androidx.compose.ui.text.style.TextOverflow overflow);
    method @BytecodeOnly public static void curvedText-8XmYcvk(androidx.wear.compose.foundation.CurvedScope, String, androidx.wear.compose.foundation.CurvedModifier, float, long, long, long, androidx.compose.ui.text.font.FontFamily?, androidx.compose.ui.text.font.FontWeight?, androidx.compose.ui.text.font.FontStyle?, androidx.compose.ui.text.font.FontSynthesis?, long, long, androidx.wear.compose.foundation.CurvedTextStyle?, androidx.wear.compose.foundation.CurvedDirection.Angular?, int);
  }

  @androidx.compose.runtime.Immutable public final class DatePickerColors {
    ctor @KotlinOnly public DatePickerColors(androidx.compose.ui.graphics.Color activePickerContentColor, androidx.compose.ui.graphics.Color inactivePickerContentColor, androidx.compose.ui.graphics.Color invalidPickerContentColor, androidx.compose.ui.graphics.Color pickerLabelColor, androidx.compose.ui.graphics.Color nextButtonContentColor, androidx.compose.ui.graphics.Color nextButtonContainerColor, androidx.compose.ui.graphics.Color confirmButtonContentColor, androidx.compose.ui.graphics.Color confirmButtonContainerColor);
    ctor @BytecodeOnly public DatePickerColors(long, long, long, long, long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly public androidx.wear.compose.material3.DatePickerColors copy(optional androidx.compose.ui.graphics.Color activePickerContentColor, optional androidx.compose.ui.graphics.Color inactivePickerContentColor, optional androidx.compose.ui.graphics.Color invalidPickerContentColor, optional androidx.compose.ui.graphics.Color pickerLabelColor, optional androidx.compose.ui.graphics.Color nextButtonContentColor, optional androidx.compose.ui.graphics.Color nextButtonContainerColor, optional androidx.compose.ui.graphics.Color confirmButtonContentColor, optional androidx.compose.ui.graphics.Color confirmButtonContainerColor);
    method @BytecodeOnly public androidx.wear.compose.material3.DatePickerColors copy-FD3wquc(long, long, long, long, long, long, long, long);
    method @BytecodeOnly public long getActivePickerContentColor-0d7_KjU();
    method @BytecodeOnly public long getConfirmButtonContainerColor-0d7_KjU();
    method @BytecodeOnly public long getConfirmButtonContentColor-0d7_KjU();
    method @BytecodeOnly public long getInactivePickerContentColor-0d7_KjU();
    method @BytecodeOnly public long getInvalidPickerContentColor-0d7_KjU();
    method @BytecodeOnly public long getNextButtonContainerColor-0d7_KjU();
    method @BytecodeOnly public long getNextButtonContentColor-0d7_KjU();
    method @BytecodeOnly public long getPickerLabelColor-0d7_KjU();
    property public androidx.compose.ui.graphics.Color activePickerContentColor;
    property public androidx.compose.ui.graphics.Color confirmButtonContainerColor;
    property public androidx.compose.ui.graphics.Color confirmButtonContentColor;
    property public androidx.compose.ui.graphics.Color inactivePickerContentColor;
    property public androidx.compose.ui.graphics.Color invalidPickerContentColor;
    property public androidx.compose.ui.graphics.Color nextButtonContainerColor;
    property public androidx.compose.ui.graphics.Color nextButtonContentColor;
    property public androidx.compose.ui.graphics.Color pickerLabelColor;
  }

  public final class DatePickerDefaults {
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.DatePickerColors datePickerColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.DatePickerColors datePickerColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.DatePickerColors datePickerColors(optional androidx.compose.ui.graphics.Color activePickerContentColor, optional androidx.compose.ui.graphics.Color inactivePickerContentColor, optional androidx.compose.ui.graphics.Color invalidPickerContentColor, optional androidx.compose.ui.graphics.Color pickerLabelColor, optional androidx.compose.ui.graphics.Color nextButtonContentColor, optional androidx.compose.ui.graphics.Color nextButtonContainerColor, optional androidx.compose.ui.graphics.Color confirmButtonContentColor, optional androidx.compose.ui.graphics.Color confirmButtonContainerColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.DatePickerColors datePickerColors-oq7We08(long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public int getDatePickerType(androidx.compose.runtime.Composer?, int);
    property public androidx.wear.compose.material3.DatePickerType datePickerType;
    field public static final androidx.wear.compose.material3.DatePickerDefaults INSTANCE;
  }

  public final class DatePickerKt {
    method @KotlinOnly @RequiresApi(android.os.Build.VERSION_CODES.O) @androidx.compose.runtime.Composable public static void DatePicker(java.time.LocalDate initialDate, kotlin.jvm.functions.Function1<java.time.LocalDate,kotlin.Unit> onDatePicked, optional androidx.compose.ui.Modifier modifier, optional java.time.LocalDate? minValidDate, optional java.time.LocalDate? maxValidDate, optional androidx.wear.compose.material3.DatePickerType datePickerType, optional androidx.wear.compose.material3.DatePickerColors colors);
    method @BytecodeOnly @RequiresApi(26) @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void DatePicker-zlYVwes(java.time.LocalDate, kotlin.jvm.functions.Function1<? super java.time.LocalDate!,kotlin.Unit!>, androidx.compose.ui.Modifier?, java.time.LocalDate?, java.time.LocalDate?, int, androidx.wear.compose.material3.DatePickerColors?, androidx.compose.runtime.Composer?, int, int);
  }

  @androidx.compose.runtime.Immutable @kotlin.jvm.JvmInline public final value class DatePickerType {
    method @BytecodeOnly public static androidx.wear.compose.material3.DatePickerType! box-impl(int);
    method @BytecodeOnly public int unbox-impl();
    field public static final androidx.wear.compose.material3.DatePickerType.Companion Companion;
  }

  public static final class DatePickerType.Companion {
    method @BytecodeOnly public int getDayMonthYear-15tL_DM();
    method @BytecodeOnly public int getMonthDayYear-15tL_DM();
    method @BytecodeOnly public int getYearMonthDay-15tL_DM();
    property public androidx.wear.compose.material3.DatePickerType DayMonthYear;
    property public androidx.wear.compose.material3.DatePickerType MonthDayYear;
    property public androidx.wear.compose.material3.DatePickerType YearMonthDay;
  }

  public final class DialogKt {
    method @androidx.compose.runtime.Composable public static void Dialog(boolean visible, kotlin.jvm.functions.Function0<kotlin.Unit> onDismissRequest, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.window.DialogProperties properties, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void Dialog(boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, androidx.compose.ui.window.DialogProperties?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
  }

  public final class DynamicColorSchemeKt {
    method public static androidx.wear.compose.material3.ColorScheme? dynamicColorScheme(android.content.Context context);
  }

  public final class EdgeButtonDefaults {
    method @BytecodeOnly public float getExtraSmallIconSize-D9Ej5fM();
    method @BytecodeOnly public float getLargeIconSize-D9Ej5fM();
    method @BytecodeOnly public float getMediumIconSize-D9Ej5fM();
    method @BytecodeOnly public float getSmallIconSize-D9Ej5fM();
    method @KotlinOnly public androidx.compose.ui.unit.Dp iconSizeFor(androidx.wear.compose.material3.EdgeButtonSize edgeButtonSize);
    method @BytecodeOnly public float iconSizeFor-wBXdqSs(float);
    property public androidx.compose.ui.unit.Dp ExtraSmallIconSize;
    property public androidx.compose.ui.unit.Dp LargeIconSize;
    property public androidx.compose.ui.unit.Dp MediumIconSize;
    property public androidx.compose.ui.unit.Dp SmallIconSize;
    field public static final androidx.wear.compose.material3.EdgeButtonDefaults INSTANCE;
  }

  public final class EdgeButtonKt {
    method @KotlinOnly @androidx.compose.runtime.Composable public static void EdgeButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional androidx.wear.compose.material3.EdgeButtonSize buttonSize, optional boolean enabled, optional androidx.wear.compose.material3.ButtonColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void EdgeButton-P1_1MVs(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, float, boolean, androidx.wear.compose.material3.ButtonColors?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
  }

  @kotlin.jvm.JvmInline public final value class EdgeButtonSize {
    method @BytecodeOnly public static androidx.wear.compose.material3.EdgeButtonSize! box-impl(float);
    method @BytecodeOnly public float unbox-impl();
    field public static final androidx.wear.compose.material3.EdgeButtonSize.Companion Companion;
  }

  public static final class EdgeButtonSize.Companion {
    method @BytecodeOnly public float getExtraSmall-Z3Txhm8();
    method @BytecodeOnly public float getLarge-Z3Txhm8();
    method @BytecodeOnly public float getMedium-Z3Txhm8();
    method @BytecodeOnly public float getSmall-Z3Txhm8();
    property public androidx.wear.compose.material3.EdgeButtonSize ExtraSmall;
    property public androidx.wear.compose.material3.EdgeButtonSize Large;
    property public androidx.wear.compose.material3.EdgeButtonSize Medium;
    property public androidx.wear.compose.material3.EdgeButtonSize Small;
  }

  public final class FadingExpandingLabelDefaults {
    method @androidx.compose.runtime.Composable public androidx.compose.animation.core.FiniteAnimationSpec<java.lang.Float> getAnimationSpec();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.animation.core.FiniteAnimationSpec<java.lang.Float!> getAnimationSpec(androidx.compose.runtime.Composer?, int);
    property @androidx.compose.runtime.Composable public androidx.compose.animation.core.FiniteAnimationSpec<java.lang.Float> animationSpec;
    field public static final androidx.wear.compose.material3.FadingExpandingLabelDefaults INSTANCE;
  }

  public final class FadingExpandingLabelKt {
    method @KotlinOnly @androidx.compose.runtime.Composable public static void FadingExpandingLabel(String text, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color color, optional androidx.compose.ui.unit.TextUnit fontSize, optional androidx.compose.ui.text.font.FontStyle? fontStyle, optional androidx.compose.ui.text.font.FontWeight? fontWeight, optional androidx.compose.ui.text.font.FontFamily? fontFamily, optional androidx.compose.ui.unit.TextUnit letterSpacing, optional androidx.compose.ui.text.style.TextDecoration? textDecoration, optional androidx.compose.ui.text.style.TextAlign? textAlign, optional androidx.compose.ui.unit.TextUnit lineHeight, optional boolean softWrap, optional int maxLines, optional int minLines, optional androidx.compose.ui.text.TextStyle textStyle, optional androidx.compose.animation.core.FiniteAnimationSpec<java.lang.Float> animationSpec);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void FadingExpandingLabel-oiE5lR0(String, androidx.compose.ui.Modifier?, long, long, androidx.compose.ui.text.font.FontStyle?, androidx.compose.ui.text.font.FontWeight?, androidx.compose.ui.text.font.FontFamily?, long, androidx.compose.ui.text.style.TextDecoration?, androidx.compose.ui.text.style.TextAlign?, long, boolean, int, int, androidx.compose.ui.text.TextStyle?, androidx.compose.animation.core.FiniteAnimationSpec<java.lang.Float!>?, androidx.compose.runtime.Composer?, int, int, int);
  }

  @androidx.compose.runtime.Immutable public final class IconButtonColors {
    ctor @KotlinOnly public IconButtonColors(androidx.compose.ui.graphics.Color containerColor, androidx.compose.ui.graphics.Color contentColor, androidx.compose.ui.graphics.Color disabledContainerColor, androidx.compose.ui.graphics.Color disabledContentColor);
    ctor @BytecodeOnly public IconButtonColors(long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly public androidx.wear.compose.material3.IconButtonColors copy(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledContentColor);
    method @BytecodeOnly public androidx.wear.compose.material3.IconButtonColors copy-jRlVdoo(long, long, long, long);
    method @BytecodeOnly public long getContainerColor-0d7_KjU();
    method @BytecodeOnly public long getContentColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledContainerColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledContentColor-0d7_KjU();
    property public androidx.compose.ui.graphics.Color containerColor;
    property public androidx.compose.ui.graphics.Color contentColor;
    property public androidx.compose.ui.graphics.Color disabledContainerColor;
    property public androidx.compose.ui.graphics.Color disabledContentColor;
  }

  public final class IconButtonDefaults {
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconButtonShapes animatedShapes();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconButtonShapes animatedShapes(optional androidx.compose.foundation.shape.CornerBasedShape? shape, optional androidx.compose.foundation.shape.CornerBasedShape? pressedShape);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconButtonShapes animatedShapes(androidx.compose.foundation.shape.CornerBasedShape?, androidx.compose.foundation.shape.CornerBasedShape?, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconButtonShapes animatedShapes(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconButtonColors filledIconButtonColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconButtonColors filledIconButtonColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconButtonColors filledIconButtonColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconButtonColors filledIconButtonColors-ro_MJ88(long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconButtonColors filledTonalIconButtonColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconButtonColors filledTonalIconButtonColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconButtonColors filledTonalIconButtonColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconButtonColors filledTonalIconButtonColors-ro_MJ88(long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconButtonColors filledVariantIconButtonColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconButtonColors filledVariantIconButtonColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconButtonColors filledVariantIconButtonColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconButtonColors filledVariantIconButtonColors-ro_MJ88(long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly public float getDefaultButtonSize-D9Ej5fM();
    method @BytecodeOnly public float getDefaultIconSize-D9Ej5fM();
    method public float getDisabledImageOpacity();
    method @BytecodeOnly public float getExtraSmallButtonSize-D9Ej5fM();
    method @BytecodeOnly public float getLargeButtonSize-D9Ej5fM();
    method @BytecodeOnly public float getLargeIconSize-D9Ej5fM();
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.CornerBasedShape getPressedShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.CornerBasedShape getPressedShape(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.RoundedCornerShape getShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.RoundedCornerShape getShape(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getSmallButtonSize-D9Ej5fM();
    method @BytecodeOnly public float getSmallIconSize-D9Ej5fM();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconButtonColors iconButtonColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconButtonColors iconButtonColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconButtonColors iconButtonColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconButtonColors iconButtonColors-ro_MJ88(long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly public androidx.compose.ui.unit.Dp iconSizeFor(androidx.compose.ui.unit.Dp buttonSize);
    method @BytecodeOnly public float iconSizeFor-5rwHm24(float);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconButtonColors outlinedIconButtonColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconButtonColors outlinedIconButtonColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconButtonColors outlinedIconButtonColors(optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color disabledContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconButtonColors outlinedIconButtonColors-dgg9oW8(long, long, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconButtonShapes shapes();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconButtonShapes shapes(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconButtonShapes shapes(androidx.compose.ui.graphics.Shape shape);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconButtonShapes shapes(androidx.compose.ui.graphics.Shape, androidx.compose.runtime.Composer?, int);
    property public androidx.compose.ui.unit.Dp DefaultButtonSize;
    property public androidx.compose.ui.unit.Dp DefaultIconSize;
    property public float DisabledImageOpacity;
    property public androidx.compose.ui.unit.Dp ExtraSmallButtonSize;
    property public androidx.compose.ui.unit.Dp LargeButtonSize;
    property public androidx.compose.ui.unit.Dp LargeIconSize;
    property public androidx.compose.ui.unit.Dp SmallButtonSize;
    property public androidx.compose.ui.unit.Dp SmallIconSize;
    property @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.CornerBasedShape pressedShape;
    property @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.RoundedCornerShape shape;
    field public static final androidx.wear.compose.material3.IconButtonDefaults INSTANCE;
  }

  public final class IconButtonKt {
    method @androidx.compose.runtime.Composable public static void FilledIconButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional String? onLongClickLabel, optional boolean enabled, optional androidx.wear.compose.material3.IconButtonShapes shapes, optional androidx.wear.compose.material3.IconButtonColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void FilledIconButton(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function0<kotlin.Unit!>?, String?, boolean, androidx.wear.compose.material3.IconButtonShapes?, androidx.wear.compose.material3.IconButtonColors?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void FilledTonalIconButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional String? onLongClickLabel, optional boolean enabled, optional androidx.wear.compose.material3.IconButtonShapes shapes, optional androidx.wear.compose.material3.IconButtonColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void FilledTonalIconButton(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function0<kotlin.Unit!>?, String?, boolean, androidx.wear.compose.material3.IconButtonShapes?, androidx.wear.compose.material3.IconButtonColors?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void IconButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional String? onLongClickLabel, optional boolean enabled, optional androidx.wear.compose.material3.IconButtonShapes shapes, optional androidx.wear.compose.material3.IconButtonColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void IconButton(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function0<kotlin.Unit!>?, String?, boolean, androidx.wear.compose.material3.IconButtonShapes?, androidx.wear.compose.material3.IconButtonColors?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void OutlinedIconButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional String? onLongClickLabel, optional boolean enabled, optional androidx.wear.compose.material3.IconButtonShapes shapes, optional androidx.wear.compose.material3.IconButtonColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void OutlinedIconButton(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function0<kotlin.Unit!>?, String?, boolean, androidx.wear.compose.material3.IconButtonShapes?, androidx.wear.compose.material3.IconButtonColors?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
  }

  public final class IconButtonShapes {
    ctor public IconButtonShapes(androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Shape pressedShape);
    method public androidx.wear.compose.material3.IconButtonShapes copy(optional androidx.compose.ui.graphics.Shape? shape, optional androidx.compose.ui.graphics.Shape? pressedShape);
    method public androidx.compose.ui.graphics.Shape getPressedShape();
    method public androidx.compose.ui.graphics.Shape getShape();
    property public androidx.compose.ui.graphics.Shape pressedShape;
    property public androidx.compose.ui.graphics.Shape shape;
  }

  public final class IconKt {
    method @KotlinOnly @androidx.compose.runtime.Composable public static void Icon(androidx.compose.ui.graphics.ImageBitmap bitmap, String? contentDescription, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color tint);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void Icon(androidx.compose.ui.graphics.painter.Painter painter, String? contentDescription, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color tint);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void Icon(androidx.compose.ui.graphics.vector.ImageVector imageVector, String? contentDescription, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color tint);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void Icon-ww6aTOc(androidx.compose.ui.graphics.ImageBitmap, String?, androidx.compose.ui.Modifier?, long, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void Icon-ww6aTOc(androidx.compose.ui.graphics.painter.Painter, String?, androidx.compose.ui.Modifier?, long, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void Icon-ww6aTOc(androidx.compose.ui.graphics.vector.ImageVector, String?, androidx.compose.ui.Modifier?, long, androidx.compose.runtime.Composer?, int, int);
  }

  @androidx.compose.runtime.Immutable public final class IconToggleButtonColors {
    ctor @KotlinOnly public IconToggleButtonColors(androidx.compose.ui.graphics.Color checkedContainerColor, androidx.compose.ui.graphics.Color checkedContentColor, androidx.compose.ui.graphics.Color uncheckedContainerColor, androidx.compose.ui.graphics.Color uncheckedContentColor, androidx.compose.ui.graphics.Color disabledCheckedContainerColor, androidx.compose.ui.graphics.Color disabledCheckedContentColor, androidx.compose.ui.graphics.Color disabledUncheckedContainerColor, androidx.compose.ui.graphics.Color disabledUncheckedContentColor);
    ctor @BytecodeOnly public IconToggleButtonColors(long, long, long, long, long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly public androidx.wear.compose.material3.IconToggleButtonColors copy(optional androidx.compose.ui.graphics.Color checkedContainerColor, optional androidx.compose.ui.graphics.Color checkedContentColor, optional androidx.compose.ui.graphics.Color uncheckedContainerColor, optional androidx.compose.ui.graphics.Color uncheckedContentColor, optional androidx.compose.ui.graphics.Color disabledCheckedContainerColor, optional androidx.compose.ui.graphics.Color disabledCheckedContentColor, optional androidx.compose.ui.graphics.Color disabledUncheckedContainerColor, optional androidx.compose.ui.graphics.Color disabledUncheckedContentColor);
    method @BytecodeOnly public androidx.wear.compose.material3.IconToggleButtonColors copy-FD3wquc(long, long, long, long, long, long, long, long);
    method @BytecodeOnly public long getCheckedContainerColor-0d7_KjU();
    method @BytecodeOnly public long getCheckedContentColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledCheckedContainerColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledCheckedContentColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledUncheckedContainerColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledUncheckedContentColor-0d7_KjU();
    method @BytecodeOnly public long getUncheckedContainerColor-0d7_KjU();
    method @BytecodeOnly public long getUncheckedContentColor-0d7_KjU();
    property public androidx.compose.ui.graphics.Color checkedContainerColor;
    property public androidx.compose.ui.graphics.Color checkedContentColor;
    property public androidx.compose.ui.graphics.Color disabledCheckedContainerColor;
    property public androidx.compose.ui.graphics.Color disabledCheckedContentColor;
    property public androidx.compose.ui.graphics.Color disabledUncheckedContainerColor;
    property public androidx.compose.ui.graphics.Color disabledUncheckedContentColor;
    property public androidx.compose.ui.graphics.Color uncheckedContainerColor;
    property public androidx.compose.ui.graphics.Color uncheckedContentColor;
  }

  public final class IconToggleButtonDefaults {
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconToggleButtonShapes animatedShapes();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconToggleButtonShapes animatedShapes(optional androidx.compose.foundation.shape.CornerBasedShape? shape, optional androidx.compose.foundation.shape.CornerBasedShape? pressedShape);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconToggleButtonShapes animatedShapes(androidx.compose.foundation.shape.CornerBasedShape?, androidx.compose.foundation.shape.CornerBasedShape?, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconToggleButtonShapes animatedShapes(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconToggleButtonColors colors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconToggleButtonColors colors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconToggleButtonColors colors(optional androidx.compose.ui.graphics.Color checkedContainerColor, optional androidx.compose.ui.graphics.Color checkedContentColor, optional androidx.compose.ui.graphics.Color uncheckedContainerColor, optional androidx.compose.ui.graphics.Color uncheckedContentColor, optional androidx.compose.ui.graphics.Color disabledCheckedContainerColor, optional androidx.compose.ui.graphics.Color disabledCheckedContentColor, optional androidx.compose.ui.graphics.Color disabledUncheckedContainerColor, optional androidx.compose.ui.graphics.Color disabledUncheckedContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconToggleButtonColors colors-oq7We08(long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.CornerBasedShape getCheckedShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.CornerBasedShape getCheckedShape(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getDefaultIconSize-D9Ej5fM();
    method @BytecodeOnly public float getExtraLargeIconSize-D9Ej5fM();
    method @BytecodeOnly public float getExtraLargeSize-D9Ej5fM();
    method @BytecodeOnly public float getLargeIconSize-D9Ej5fM();
    method @BytecodeOnly public float getLargeSize-D9Ej5fM();
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.CornerBasedShape getPressedShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.CornerBasedShape getPressedShape(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.RoundedCornerShape getShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.RoundedCornerShape getShape(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getSize-D9Ej5fM();
    method @BytecodeOnly public float getSmallIconSize-D9Ej5fM();
    method @BytecodeOnly public float getSmallSize-D9Ej5fM();
    method @KotlinOnly public androidx.compose.ui.unit.Dp iconSizeFor(androidx.compose.ui.unit.Dp buttonSize);
    method @BytecodeOnly public float iconSizeFor-5rwHm24(float);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconToggleButtonShapes shapes();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconToggleButtonShapes shapes(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconToggleButtonShapes shapes(androidx.compose.ui.graphics.Shape shape);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconToggleButtonShapes shapes(androidx.compose.ui.graphics.Shape, androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconToggleButtonShapes variantAnimatedShapes();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconToggleButtonShapes variantAnimatedShapes(optional androidx.compose.foundation.shape.CornerBasedShape? uncheckedShape, optional androidx.compose.foundation.shape.CornerBasedShape? checkedShape);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconToggleButtonShapes variantAnimatedShapes(androidx.compose.foundation.shape.CornerBasedShape?, androidx.compose.foundation.shape.CornerBasedShape?, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.IconToggleButtonShapes variantAnimatedShapes(androidx.compose.runtime.Composer?, int);
    property public androidx.compose.ui.unit.Dp DefaultIconSize;
    property public androidx.compose.ui.unit.Dp ExtraLargeIconSize;
    property public androidx.compose.ui.unit.Dp ExtraLargeSize;
    property public androidx.compose.ui.unit.Dp LargeIconSize;
    property public androidx.compose.ui.unit.Dp LargeSize;
    property public androidx.compose.ui.unit.Dp Size;
    property public androidx.compose.ui.unit.Dp SmallIconSize;
    property public androidx.compose.ui.unit.Dp SmallSize;
    property @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.CornerBasedShape checkedShape;
    property @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.CornerBasedShape pressedShape;
    property @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.RoundedCornerShape shape;
    field public static final androidx.wear.compose.material3.IconToggleButtonDefaults INSTANCE;
  }

  public final class IconToggleButtonKt {
    method @androidx.compose.runtime.Composable public static void IconToggleButton(boolean checked, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onCheckedChange, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.wear.compose.material3.IconToggleButtonColors colors, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, optional androidx.wear.compose.material3.IconToggleButtonShapes shapes, optional androidx.compose.foundation.BorderStroke? border, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void IconToggleButton(boolean, kotlin.jvm.functions.Function1<? super java.lang.Boolean!,kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, androidx.wear.compose.material3.IconToggleButtonColors?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.wear.compose.material3.IconToggleButtonShapes?, androidx.compose.foundation.BorderStroke?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
  }

  public final class IconToggleButtonShapes {
    ctor public IconToggleButtonShapes(androidx.compose.ui.graphics.Shape uncheckedShape, optional androidx.compose.ui.graphics.Shape checkedShape, optional androidx.compose.ui.graphics.Shape uncheckedPressedShape, optional androidx.compose.ui.graphics.Shape checkedPressedShape);
    method public androidx.wear.compose.material3.IconToggleButtonShapes copy(optional androidx.compose.ui.graphics.Shape? uncheckedShape, optional androidx.compose.ui.graphics.Shape? checkedShape, optional androidx.compose.ui.graphics.Shape? uncheckedPressedShape, optional androidx.compose.ui.graphics.Shape? checkedPressedShape);
    method public androidx.compose.ui.graphics.Shape getCheckedPressedShape();
    method public androidx.compose.ui.graphics.Shape getCheckedShape();
    method public androidx.compose.ui.graphics.Shape getUncheckedPressedShape();
    method public androidx.compose.ui.graphics.Shape getUncheckedShape();
    property public androidx.compose.ui.graphics.Shape checkedPressedShape;
    property public androidx.compose.ui.graphics.Shape checkedShape;
    property public androidx.compose.ui.graphics.Shape uncheckedPressedShape;
    property public androidx.compose.ui.graphics.Shape uncheckedShape;
  }

  public final class InteractiveComponentSizeKt {
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier minimumInteractiveComponentSize(androidx.compose.ui.Modifier);
  }

  public final class LevelIndicatorColors {
    ctor @KotlinOnly public LevelIndicatorColors(androidx.compose.ui.graphics.Color indicatorColor, androidx.compose.ui.graphics.Color trackColor, androidx.compose.ui.graphics.Color disabledIndicatorColor, androidx.compose.ui.graphics.Color disabledTrackColor);
    ctor @BytecodeOnly public LevelIndicatorColors(long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly public androidx.wear.compose.material3.LevelIndicatorColors copy(optional androidx.compose.ui.graphics.Color indicatorColor, optional androidx.compose.ui.graphics.Color trackColor, optional androidx.compose.ui.graphics.Color disabledIndicatorColor, optional androidx.compose.ui.graphics.Color disabledTrackColor);
    method @BytecodeOnly public androidx.wear.compose.material3.LevelIndicatorColors copy-jRlVdoo(long, long, long, long);
    method @BytecodeOnly public long getDisabledIndicatorColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledTrackColor-0d7_KjU();
    method @BytecodeOnly public long getIndicatorColor-0d7_KjU();
    method @BytecodeOnly public long getTrackColor-0d7_KjU();
    property public androidx.compose.ui.graphics.Color disabledIndicatorColor;
    property public androidx.compose.ui.graphics.Color disabledTrackColor;
    property public androidx.compose.ui.graphics.Color indicatorColor;
    property public androidx.compose.ui.graphics.Color trackColor;
  }

  public final class LevelIndicatorDefaults {
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.LevelIndicatorColors colors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.LevelIndicatorColors colors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.LevelIndicatorColors colors(optional androidx.compose.ui.graphics.Color indicatorColor, optional androidx.compose.ui.graphics.Color trackColor, optional androidx.compose.ui.graphics.Color disabledIndicatorColor, optional androidx.compose.ui.graphics.Color disabledTrackColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.LevelIndicatorColors colors-ro_MJ88(long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly public float getStrokeWidth-D9Ej5fM();
    method public float getSweepAngle();
    property public androidx.compose.ui.unit.Dp StrokeWidth;
    property public float SweepAngle;
    field public static final androidx.wear.compose.material3.LevelIndicatorDefaults INSTANCE;
  }

  public final class LevelIndicatorKt {
    method @KotlinOnly @androidx.compose.runtime.Composable public static void LevelIndicator(kotlin.jvm.functions.Function0<java.lang.Float> value, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.wear.compose.material3.LevelIndicatorColors colors, optional androidx.compose.ui.unit.Dp strokeWidth, optional @FloatRange(from=0.0, to=360.0) float sweepAngle, optional boolean reverseDirection);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void LevelIndicator-iHT-50w(kotlin.jvm.functions.Function0<java.lang.Float!>, androidx.compose.ui.Modifier?, boolean, androidx.wear.compose.material3.LevelIndicatorColors?, float, @FloatRange(from=0.0, to=360.0) float, boolean, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void StepperLevelIndicator(kotlin.jvm.functions.Function0<java.lang.Float> value, optional androidx.compose.ui.Modifier modifier, optional kotlin.ranges.ClosedFloatingPointRange<java.lang.Float> valueRange, optional boolean enabled, optional androidx.wear.compose.material3.LevelIndicatorColors colors, optional androidx.compose.ui.unit.Dp strokeWidth, optional @FloatRange(from=0.0, to=360.0) float sweepAngle, optional boolean reverseDirection);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void StepperLevelIndicator(kotlin.jvm.functions.Function0<java.lang.Integer> value, kotlin.ranges.IntProgression valueProgression, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.wear.compose.material3.LevelIndicatorColors colors, optional androidx.compose.ui.unit.Dp strokeWidth, optional @FloatRange(from=0.0, to=360.0) float sweepAngle, optional boolean reverseDirection);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void StepperLevelIndicator-eHTjO5g(kotlin.jvm.functions.Function0<java.lang.Float!>, androidx.compose.ui.Modifier?, kotlin.ranges.ClosedFloatingPointRange<java.lang.Float!>?, boolean, androidx.wear.compose.material3.LevelIndicatorColors?, float, @FloatRange(from=0.0, to=360.0) float, boolean, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void StepperLevelIndicator-eHTjO5g(kotlin.jvm.functions.Function0<java.lang.Integer!>, kotlin.ranges.IntProgression, androidx.compose.ui.Modifier?, boolean, androidx.wear.compose.material3.LevelIndicatorColors?, float, @FloatRange(from=0.0, to=360.0) float, boolean, androidx.compose.runtime.Composer?, int, int);
  }

  public final class LinearProgressIndicatorDefaults {
    method @BytecodeOnly public float getStrokeWidthLarge-D9Ej5fM();
    method @BytecodeOnly public float getStrokeWidthSmall-D9Ej5fM();
    property public androidx.compose.ui.unit.Dp StrokeWidthLarge;
    property public androidx.compose.ui.unit.Dp StrokeWidthSmall;
    field public static final androidx.wear.compose.material3.LinearProgressIndicatorDefaults INSTANCE;
  }

  public final class LinearProgressIndicatorKt {
    method @KotlinOnly @androidx.compose.runtime.Composable public static void LinearProgressIndicator(kotlin.jvm.functions.Function0<java.lang.Float> progress, optional androidx.compose.ui.Modifier modifier, optional androidx.wear.compose.material3.ProgressIndicatorColors colors, optional androidx.compose.ui.unit.Dp strokeWidth, optional boolean enabled);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void LinearProgressIndicator-hGBTI10(kotlin.jvm.functions.Function0<java.lang.Float!>, androidx.compose.ui.Modifier?, androidx.wear.compose.material3.ProgressIndicatorColors?, float, boolean, androidx.compose.runtime.Composer?, int, int);
  }

  public final class ListHeaderDefaults {
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getContentColor(androidx.compose.runtime.Composer?, int);
    method public androidx.compose.foundation.layout.PaddingValues getContentPadding();
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getSubHeaderContentColor(androidx.compose.runtime.Composer?, int);
    method public androidx.compose.foundation.layout.PaddingValues getSubHeaderContentPadding();
    property public androidx.compose.foundation.layout.PaddingValues ContentPadding;
    property public androidx.compose.foundation.layout.PaddingValues SubHeaderContentPadding;
    property public androidx.compose.ui.graphics.Color contentColor;
    property public androidx.compose.ui.graphics.Color subHeaderContentColor;
    field public static final androidx.wear.compose.material3.ListHeaderDefaults INSTANCE;
  }

  public final class ListHeaderKt {
    method @KotlinOnly @androidx.compose.runtime.Composable public static void ListHeader(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color backgroundColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.wear.compose.material3.SurfaceTransformation? transformation, kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void ListHeader-qi6gXK8(androidx.compose.ui.Modifier?, long, long, androidx.compose.foundation.layout.PaddingValues?, androidx.wear.compose.material3.SurfaceTransformation?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void ListSubHeader(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color backgroundColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.wear.compose.material3.SurfaceTransformation? transformation, optional kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? icon, kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit> label);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void ListSubHeader-K2djEUw(androidx.compose.ui.Modifier?, long, long, androidx.compose.foundation.layout.PaddingValues?, androidx.wear.compose.material3.SurfaceTransformation?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
  }

  public final class MaterialTheme {
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.wear.compose.material3.ColorScheme getColorScheme();
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.wear.compose.material3.ColorScheme getColorScheme(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.wear.compose.material3.MotionScheme getMotionScheme();
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.wear.compose.material3.MotionScheme getMotionScheme(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.wear.compose.material3.Shapes getShapes();
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.wear.compose.material3.Shapes getShapes(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.wear.compose.material3.Typography getTypography();
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.wear.compose.material3.Typography getTypography(androidx.compose.runtime.Composer?, int);
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.wear.compose.material3.ColorScheme colorScheme;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.wear.compose.material3.MotionScheme motionScheme;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.wear.compose.material3.Shapes shapes;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.wear.compose.material3.Typography typography;
    field public static final androidx.wear.compose.material3.MaterialTheme INSTANCE;
  }

  public final class MaterialThemeKt {
    method @androidx.compose.runtime.Composable public static void MaterialTheme(optional androidx.wear.compose.material3.ColorScheme colorScheme, optional androidx.wear.compose.material3.Typography typography, optional androidx.wear.compose.material3.Shapes shapes, optional androidx.wear.compose.material3.MotionScheme motionScheme, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void MaterialTheme(androidx.wear.compose.material3.ColorScheme?, androidx.wear.compose.material3.Typography?, androidx.wear.compose.material3.Shapes?, androidx.wear.compose.material3.MotionScheme?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
  }

  @androidx.compose.runtime.Immutable public interface MotionScheme {
    method public <T> androidx.compose.animation.core.FiniteAnimationSpec<T> defaultEffectsSpec();
    method public <T> androidx.compose.animation.core.FiniteAnimationSpec<T> defaultSpatialSpec();
    method public <T> androidx.compose.animation.core.FiniteAnimationSpec<T> fastEffectsSpec();
    method public <T> androidx.compose.animation.core.FiniteAnimationSpec<T> fastSpatialSpec();
    method public <T> androidx.compose.animation.core.FiniteAnimationSpec<T> slowEffectsSpec();
    method public <T> androidx.compose.animation.core.FiniteAnimationSpec<T> slowSpatialSpec();
    field public static final androidx.wear.compose.material3.MotionScheme.Companion Companion;
  }

  public static final class MotionScheme.Companion {
    method public androidx.wear.compose.material3.MotionScheme expressive();
    method public androidx.wear.compose.material3.MotionScheme standard();
  }

  public final class NonClickableCardKt {
    method @androidx.compose.runtime.Composable public static void AppCard(kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> appName, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> title, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.CardColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, optional androidx.wear.compose.material3.SurfaceTransformation? transformation, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit>? appImage, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit>? time, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void AppCard(kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, androidx.compose.ui.graphics.Shape?, androidx.wear.compose.material3.CardColors?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.wear.compose.material3.SurfaceTransformation?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @androidx.compose.runtime.Composable public static void Card(androidx.compose.ui.graphics.painter.Painter containerPainter, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.CardColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, optional androidx.wear.compose.material3.SurfaceTransformation? transformation, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void Card(androidx.compose.ui.graphics.painter.Painter, androidx.compose.ui.Modifier?, androidx.compose.ui.graphics.Shape?, androidx.wear.compose.material3.CardColors?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.wear.compose.material3.SurfaceTransformation?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void Card(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.CardColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, optional androidx.wear.compose.material3.SurfaceTransformation? transformation, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void Card(androidx.compose.ui.Modifier?, androidx.compose.ui.graphics.Shape?, androidx.wear.compose.material3.CardColors?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.wear.compose.material3.SurfaceTransformation?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void OutlinedCard(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.CardColors colors, optional androidx.compose.foundation.BorderStroke border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, optional androidx.wear.compose.material3.SurfaceTransformation? transformation, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void OutlinedCard(androidx.compose.ui.Modifier?, androidx.compose.ui.graphics.Shape?, androidx.wear.compose.material3.CardColors?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.wear.compose.material3.SurfaceTransformation?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void TitleCard(androidx.compose.ui.graphics.painter.Painter containerPainter, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> title, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? time, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.ColumnScope,kotlin.Unit>? subtitle, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.CardColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, optional androidx.wear.compose.material3.SurfaceTransformation? transformation, optional kotlin.jvm.functions.Function0<kotlin.Unit>? content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void TitleCard(androidx.compose.ui.graphics.painter.Painter, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.ui.graphics.Shape?, androidx.wear.compose.material3.CardColors?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.wear.compose.material3.SurfaceTransformation?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.runtime.Composer?, int, int, int);
    method @androidx.compose.runtime.Composable public static void TitleCard(kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> title, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? time, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.ColumnScope,kotlin.Unit>? subtitle, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.CardColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, optional androidx.wear.compose.material3.SurfaceTransformation? transformation, optional kotlin.jvm.functions.Function0<kotlin.Unit>? content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void TitleCard(kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.ui.graphics.Shape?, androidx.wear.compose.material3.CardColors?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.wear.compose.material3.SurfaceTransformation?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.runtime.Composer?, int, int, int);
  }

  public final class OpenOnPhoneDialogColors {
    ctor @KotlinOnly public OpenOnPhoneDialogColors(androidx.compose.ui.graphics.Color iconColor, androidx.compose.ui.graphics.Color iconContainerColor, androidx.compose.ui.graphics.Color progressIndicatorColor, androidx.compose.ui.graphics.Color progressTrackColor, androidx.compose.ui.graphics.Color textColor);
    ctor @BytecodeOnly public OpenOnPhoneDialogColors(long, long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly public androidx.wear.compose.material3.OpenOnPhoneDialogColors copy(optional androidx.compose.ui.graphics.Color iconColor, optional androidx.compose.ui.graphics.Color iconContainerColor, optional androidx.compose.ui.graphics.Color progressIndicatorColor, optional androidx.compose.ui.graphics.Color progressTrackColor, optional androidx.compose.ui.graphics.Color textColor);
    method @BytecodeOnly public androidx.wear.compose.material3.OpenOnPhoneDialogColors copy-t635Npw(long, long, long, long, long);
    method @BytecodeOnly public long getIconColor-0d7_KjU();
    method @BytecodeOnly public long getIconContainerColor-0d7_KjU();
    method @BytecodeOnly public long getProgressIndicatorColor-0d7_KjU();
    method @BytecodeOnly public long getProgressTrackColor-0d7_KjU();
    method @BytecodeOnly public long getTextColor-0d7_KjU();
    property public androidx.compose.ui.graphics.Color iconColor;
    property public androidx.compose.ui.graphics.Color iconContainerColor;
    property public androidx.compose.ui.graphics.Color progressIndicatorColor;
    property public androidx.compose.ui.graphics.Color progressTrackColor;
    property public androidx.compose.ui.graphics.Color textColor;
  }

  public final class OpenOnPhoneDialogDefaults {
    method @androidx.compose.runtime.Composable public void Icon(optional androidx.compose.ui.Modifier modifier);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void Icon(androidx.compose.ui.Modifier?, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.OpenOnPhoneDialogColors colors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.OpenOnPhoneDialogColors colors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.OpenOnPhoneDialogColors colors(optional androidx.compose.ui.graphics.Color iconColor, optional androidx.compose.ui.graphics.Color iconContainerColor, optional androidx.compose.ui.graphics.Color progressIndicatorColor, optional androidx.compose.ui.graphics.Color progressTrackColor, optional androidx.compose.ui.graphics.Color textColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.OpenOnPhoneDialogColors colors-zjMxDiM(long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.foundation.CurvedTextStyle getCurvedTextStyle();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.foundation.CurvedTextStyle getCurvedTextStyle(androidx.compose.runtime.Composer?, int);
    method public long getDurationMillis();
    method @androidx.compose.runtime.Composable public String getText();
    method @BytecodeOnly @androidx.compose.runtime.Composable public String getText(androidx.compose.runtime.Composer?, int);
    property public long DurationMillis;
    property @androidx.compose.runtime.Composable public androidx.wear.compose.foundation.CurvedTextStyle curvedTextStyle;
    property @androidx.compose.runtime.Composable public String text;
    field public static final androidx.wear.compose.material3.OpenOnPhoneDialogDefaults INSTANCE;
  }

  public final class OpenOnPhoneDialogKt {
    method @androidx.compose.runtime.Composable public static void OpenOnPhoneDialog(boolean visible, kotlin.jvm.functions.Function0<kotlin.Unit> onDismissRequest, kotlin.jvm.functions.Function1<? super androidx.wear.compose.foundation.CurvedScope,kotlin.Unit>? curvedText, optional androidx.compose.ui.Modifier modifier, optional androidx.wear.compose.material3.OpenOnPhoneDialogColors colors, optional androidx.compose.ui.window.DialogProperties properties, optional long durationMillis, optional kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void OpenOnPhoneDialog(boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>, kotlin.jvm.functions.Function1<? super androidx.wear.compose.foundation.CurvedScope!,kotlin.Unit!>?, androidx.compose.ui.Modifier?, androidx.wear.compose.material3.OpenOnPhoneDialogColors?, androidx.compose.ui.window.DialogProperties?, long, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void OpenOnPhoneDialogContent(kotlin.jvm.functions.Function1<? super androidx.wear.compose.foundation.CurvedScope,kotlin.Unit>? curvedText, long durationMillis, optional androidx.compose.ui.Modifier modifier, optional androidx.wear.compose.material3.OpenOnPhoneDialogColors colors, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void OpenOnPhoneDialogContent(kotlin.jvm.functions.Function1<? super androidx.wear.compose.foundation.CurvedScope!,kotlin.Unit!>?, long, androidx.compose.ui.Modifier?, androidx.wear.compose.material3.OpenOnPhoneDialogColors?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method public static void openOnPhoneDialogCurvedText(androidx.wear.compose.foundation.CurvedScope, String text, androidx.wear.compose.foundation.CurvedTextStyle style);
  }

  public final class PageIndicatorDefaults {
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public long getBackgroundColor(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public long getSelectedColor(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public long getUnselectedColor(androidx.compose.runtime.Composer?, int);
    property public androidx.compose.ui.graphics.Color backgroundColor;
    property public androidx.compose.ui.graphics.Color selectedColor;
    property public androidx.compose.ui.graphics.Color unselectedColor;
    field public static final androidx.wear.compose.material3.PageIndicatorDefaults INSTANCE;
  }

  public final class PageIndicatorKt {
    method @KotlinOnly @androidx.compose.runtime.Composable public static void HorizontalPageIndicator(androidx.wear.compose.foundation.pager.PagerState pagerState, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color selectedColor, optional androidx.compose.ui.graphics.Color unselectedColor, optional androidx.compose.ui.graphics.Color backgroundColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void HorizontalPageIndicator-aDBTMWw(androidx.wear.compose.foundation.pager.PagerState, androidx.compose.ui.Modifier?, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void VerticalPageIndicator(androidx.wear.compose.foundation.pager.PagerState pagerState, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color selectedColor, optional androidx.compose.ui.graphics.Color unselectedColor, optional androidx.compose.ui.graphics.Color backgroundColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void VerticalPageIndicator-aDBTMWw(androidx.wear.compose.foundation.pager.PagerState, androidx.compose.ui.Modifier?, long, long, long, androidx.compose.runtime.Composer?, int, int);
  }

  public final class PagerScaffoldDefaults {
    method public androidx.compose.animation.core.AnimationSpec<java.lang.Float> getFadeOutAnimationSpec();
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.gestures.TargetedFlingBehavior snapWithSpringFlingBehavior(androidx.wear.compose.foundation.pager.PagerState state);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.gestures.TargetedFlingBehavior snapWithSpringFlingBehavior(androidx.wear.compose.foundation.pager.PagerState, androidx.compose.runtime.Composer?, int);
    property public androidx.compose.animation.core.AnimationSpec<java.lang.Float> FadeOutAnimationSpec;
    field public static final androidx.wear.compose.material3.PagerScaffoldDefaults INSTANCE;
  }

  public final class PagerScaffoldKt {
    method @KotlinOnly @androidx.compose.runtime.Composable public static void AnimatedPage(int pageIndex, androidx.wear.compose.foundation.pager.PagerState pagerState, optional androidx.compose.ui.graphics.Color contentScrimColor, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void AnimatedPage-cf5BqRc(int, androidx.wear.compose.foundation.pager.PagerState, long, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void HorizontalPagerScaffold(androidx.wear.compose.foundation.pager.PagerState pagerState, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? pageIndicator, optional androidx.compose.animation.core.AnimationSpec<java.lang.Float>? pageIndicatorAnimationSpec, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void HorizontalPagerScaffold(androidx.wear.compose.foundation.pager.PagerState, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.animation.core.AnimationSpec<java.lang.Float!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void VerticalPagerScaffold(androidx.wear.compose.foundation.pager.PagerState pagerState, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? pageIndicator, optional androidx.compose.animation.core.AnimationSpec<java.lang.Float>? pageIndicatorAnimationSpec, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void VerticalPagerScaffold(androidx.wear.compose.foundation.pager.PagerState, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.animation.core.AnimationSpec<java.lang.Float!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
  }

  public final class PickerDefaults {
    method public float getGradientRatio();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.foundation.rotary.RotaryScrollableBehavior rotarySnapBehavior(androidx.wear.compose.material3.PickerState state);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.foundation.rotary.RotaryScrollableBehavior rotarySnapBehavior(androidx.wear.compose.material3.PickerState, androidx.compose.runtime.Composer?, int);
    property public float GradientRatio;
    field public static final androidx.wear.compose.material3.PickerDefaults INSTANCE;
  }

  public final class PickerGroupKt {
    method @androidx.compose.runtime.Composable public static void PickerGroup(optional androidx.compose.ui.Modifier modifier, optional androidx.wear.compose.material3.PickerState? selectedPickerState, optional boolean autoCenter, optional boolean propagateMinConstraints, kotlin.jvm.functions.Function1<? super androidx.wear.compose.material3.PickerGroupScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void PickerGroup(androidx.compose.ui.Modifier?, androidx.wear.compose.material3.PickerState?, boolean, boolean, kotlin.jvm.functions.Function3<? super androidx.wear.compose.material3.PickerGroupScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
  }

  public final class PickerGroupScope {
    ctor public PickerGroupScope();
    method @KotlinOnly @androidx.compose.runtime.Composable public void PickerGroupItem(androidx.wear.compose.material3.PickerState pickerState, boolean selected, kotlin.jvm.functions.Function0<kotlin.Unit> onSelected, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<java.lang.String>? contentDescription, optional androidx.compose.ui.focus.FocusRequester? focusRequester, optional kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? readOnlyLabel, optional androidx.compose.ui.unit.Dp verticalSpacing, kotlin.jvm.functions.Function3<androidx.wear.compose.material3.PickerScope,java.lang.Integer,java.lang.Boolean,kotlin.Unit> option);
    method @BytecodeOnly @androidx.compose.runtime.Composable public void PickerGroupItem-gMrHQkA(androidx.wear.compose.material3.PickerState, boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function0<java.lang.String!>?, androidx.compose.ui.focus.FocusRequester?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, float, kotlin.jvm.functions.Function5<? super androidx.wear.compose.material3.PickerScope!,? super java.lang.Integer!,? super java.lang.Boolean!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
  }

  public final class PickerKt {
    method @KotlinOnly @androidx.compose.runtime.Composable public static void Picker(androidx.wear.compose.material3.PickerState state, kotlin.jvm.functions.Function0<java.lang.String>? contentDescription, optional androidx.compose.ui.Modifier modifier, optional boolean readOnly, optional kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? readOnlyLabel, optional kotlin.jvm.functions.Function0<kotlin.Unit> onSelected, optional androidx.compose.ui.unit.Dp verticalSpacing, optional @FloatRange(from=0.0, to=0.5) float gradientRatio, optional androidx.compose.ui.graphics.Color gradientColor, optional boolean userScrollEnabled, optional androidx.wear.compose.foundation.rotary.RotaryScrollableBehavior? rotaryScrollableBehavior, kotlin.jvm.functions.Function2<androidx.wear.compose.material3.PickerScope,java.lang.Integer,kotlin.Unit> option);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void Picker-jSk6agE(androidx.wear.compose.material3.PickerState, kotlin.jvm.functions.Function0<java.lang.String!>?, androidx.compose.ui.Modifier?, boolean, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function0<kotlin.Unit!>?, float, @FloatRange(from=0.0, to=0.5) float, long, boolean, androidx.wear.compose.foundation.rotary.RotaryScrollableBehavior?, kotlin.jvm.functions.Function4<? super androidx.wear.compose.material3.PickerScope!,? super java.lang.Integer!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @androidx.compose.runtime.Composable public static androidx.wear.compose.material3.PickerState rememberPickerState(@IntRange(from=1L) int initialNumberOfOptions, optional @IntRange(from=0L) int initiallySelectedIndex, optional boolean shouldRepeatOptions);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static androidx.wear.compose.material3.PickerState rememberPickerState(@IntRange(from=1L) int, @IntRange(from=0L) int, boolean, androidx.compose.runtime.Composer?, int, int);
  }

  public interface PickerScope {
    method public int getSelectedOptionIndex();
    property public abstract int selectedOptionIndex;
  }

  @androidx.compose.runtime.Stable public final class PickerState implements androidx.compose.foundation.gestures.ScrollableState {
    ctor public PickerState(@IntRange(from=1L) int initialNumberOfOptions, optional @IntRange(from=0L) int initiallySelectedIndex, optional boolean shouldRepeatOptions);
    method public suspend Object? animateScrollToOption(int index, kotlin.coroutines.Continuation<? super kotlin.Unit>);
    method public float dispatchRawDelta(float delta);
    method public int getNumberOfOptions();
    method public int getSelectedOptionIndex();
    method public boolean getShouldRepeatOptions();
    method public boolean isScrollInProgress();
    method public suspend Object? scroll(androidx.compose.foundation.MutatePriority scrollPriority, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.gestures.ScrollScope,? super kotlin.coroutines.Continuation<? super kotlin.Unit>,? extends java.lang.Object?> block, kotlin.coroutines.Continuation<? super kotlin.Unit>);
    method public suspend Object? scrollToOption(int index, kotlin.coroutines.Continuation<? super kotlin.Unit>);
    method public void setNumberOfOptions(int);
    property public boolean canScrollBackward;
    property public boolean canScrollForward;
    property public boolean isScrollInProgress;
    property public int numberOfOptions;
    property public int selectedOptionIndex;
    property public boolean shouldRepeatOptions;
    field public static final androidx.wear.compose.material3.PickerState.Companion Companion;
  }

  public static final class PickerState.Companion {
    method public androidx.compose.runtime.saveable.Saver<androidx.wear.compose.material3.PickerState,java.lang.Object> getSaver();
    property public androidx.compose.runtime.saveable.Saver<androidx.wear.compose.material3.PickerState,java.lang.Object> Saver;
  }

  public final class PlaceholderDefaults {
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getColor(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getShape(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getShimmerColor(androidx.compose.runtime.Composer?, int);
    property public androidx.compose.ui.graphics.Color color;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape shape;
    property public androidx.compose.ui.graphics.Color shimmerColor;
    field public static final androidx.wear.compose.material3.PlaceholderDefaults INSTANCE;
  }

  public final class PlaceholderKt {
    method @KotlinOnly @androidx.compose.runtime.Composable public static androidx.compose.ui.Modifier placeholder(androidx.compose.ui.Modifier, androidx.wear.compose.material3.PlaceholderState placeholderState, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Color color);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static androidx.compose.ui.Modifier placeholder-ww6aTOc(androidx.compose.ui.Modifier, androidx.wear.compose.material3.PlaceholderState, androidx.compose.ui.graphics.Shape?, long, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public static androidx.compose.ui.Modifier placeholderShimmer(androidx.compose.ui.Modifier, androidx.wear.compose.material3.PlaceholderState placeholderState, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Color color);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static androidx.compose.ui.Modifier placeholderShimmer-ww6aTOc(androidx.compose.ui.Modifier, androidx.wear.compose.material3.PlaceholderState, androidx.compose.ui.graphics.Shape?, long, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static androidx.wear.compose.material3.PlaceholderState rememberPlaceholderState(boolean isVisible);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static androidx.wear.compose.material3.PlaceholderState rememberPlaceholderState(boolean, androidx.compose.runtime.Composer?, int);
  }

  @androidx.compose.runtime.Stable public final class PlaceholderState {
    ctor public PlaceholderState(boolean isVisible);
    method public boolean isVisible();
    method public void setVisible(boolean);
    property public boolean isVisible;
  }

  public final class ProgressIndicatorColors {
    ctor public ProgressIndicatorColors(androidx.compose.ui.graphics.Brush indicatorBrush, androidx.compose.ui.graphics.Brush trackBrush, androidx.compose.ui.graphics.Brush overflowTrackBrush, androidx.compose.ui.graphics.Brush disabledIndicatorBrush, androidx.compose.ui.graphics.Brush disabledTrackBrush, androidx.compose.ui.graphics.Brush disabledOverflowTrackBrush);
    method public androidx.wear.compose.material3.ProgressIndicatorColors copy(optional androidx.compose.ui.graphics.Brush? indicatorBrush, optional androidx.compose.ui.graphics.Brush? trackBrush, optional androidx.compose.ui.graphics.Brush? overflowTrackBrush, optional androidx.compose.ui.graphics.Brush? disabledIndicatorBrush, optional androidx.compose.ui.graphics.Brush? disabledTrackBrush, optional androidx.compose.ui.graphics.Brush? disabledOverflowTrackBrush);
    method @KotlinOnly public androidx.wear.compose.material3.ProgressIndicatorColors copy(optional androidx.compose.ui.graphics.Color indicatorColor, optional androidx.compose.ui.graphics.Color trackColor, optional androidx.compose.ui.graphics.Color overflowTrackColor, optional androidx.compose.ui.graphics.Color disabledIndicatorColor, optional androidx.compose.ui.graphics.Color disabledTrackColor, optional androidx.compose.ui.graphics.Color disabledOverflowTrackColor);
    method @BytecodeOnly public androidx.wear.compose.material3.ProgressIndicatorColors copy-tNS2XkQ(long, long, long, long, long, long);
    method public androidx.compose.ui.graphics.Brush getDisabledIndicatorBrush();
    method public androidx.compose.ui.graphics.Brush getDisabledOverflowTrackBrush();
    method public androidx.compose.ui.graphics.Brush getDisabledTrackBrush();
    method public androidx.compose.ui.graphics.Brush getIndicatorBrush();
    method public androidx.compose.ui.graphics.Brush getOverflowTrackBrush();
    method public androidx.compose.ui.graphics.Brush getTrackBrush();
    property public androidx.compose.ui.graphics.Brush disabledIndicatorBrush;
    property public androidx.compose.ui.graphics.Brush disabledOverflowTrackBrush;
    property public androidx.compose.ui.graphics.Brush disabledTrackBrush;
    property public androidx.compose.ui.graphics.Brush indicatorBrush;
    property public androidx.compose.ui.graphics.Brush overflowTrackBrush;
    property public androidx.compose.ui.graphics.Brush trackBrush;
  }

  public final class ProgressIndicatorDefaults {
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ProgressIndicatorColors colors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ProgressIndicatorColors colors(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ProgressIndicatorColors colors(optional androidx.compose.ui.graphics.Brush? indicatorBrush, optional androidx.compose.ui.graphics.Brush? trackBrush, optional androidx.compose.ui.graphics.Brush? overflowTrackBrush, optional androidx.compose.ui.graphics.Brush? disabledIndicatorBrush, optional androidx.compose.ui.graphics.Brush? disabledTrackBrush, optional androidx.compose.ui.graphics.Brush? disabledOverflowTrackBrush);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ProgressIndicatorColors colors(androidx.compose.ui.graphics.Brush?, androidx.compose.ui.graphics.Brush?, androidx.compose.ui.graphics.Brush?, androidx.compose.ui.graphics.Brush?, androidx.compose.ui.graphics.Brush?, androidx.compose.ui.graphics.Brush?, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ProgressIndicatorColors colors(optional androidx.compose.ui.graphics.Color indicatorColor, optional androidx.compose.ui.graphics.Color trackColor, optional androidx.compose.ui.graphics.Color overflowTrackColor, optional androidx.compose.ui.graphics.Color disabledIndicatorColor, optional androidx.compose.ui.graphics.Color disabledTrackColor, optional androidx.compose.ui.graphics.Color disabledOverflowTrackColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ProgressIndicatorColors colors-5tl4gsc(long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    field public static final androidx.wear.compose.material3.ProgressIndicatorDefaults INSTANCE;
  }

  @androidx.compose.runtime.Immutable public final class RadioButtonColors {
    ctor @KotlinOnly public RadioButtonColors(androidx.compose.ui.graphics.Color selectedContainerColor, androidx.compose.ui.graphics.Color selectedContentColor, androidx.compose.ui.graphics.Color selectedSecondaryContentColor, androidx.compose.ui.graphics.Color selectedIconColor, androidx.compose.ui.graphics.Color selectedControlColor, androidx.compose.ui.graphics.Color unselectedContainerColor, androidx.compose.ui.graphics.Color unselectedContentColor, androidx.compose.ui.graphics.Color unselectedSecondaryContentColor, androidx.compose.ui.graphics.Color unselectedIconColor, androidx.compose.ui.graphics.Color unselectedControlColor, androidx.compose.ui.graphics.Color disabledSelectedContainerColor, androidx.compose.ui.graphics.Color disabledSelectedContentColor, androidx.compose.ui.graphics.Color disabledSelectedSecondaryContentColor, androidx.compose.ui.graphics.Color disabledSelectedIconColor, androidx.compose.ui.graphics.Color disabledSelectedControlColor, androidx.compose.ui.graphics.Color disabledUnselectedContainerColor, androidx.compose.ui.graphics.Color disabledUnselectedContentColor, androidx.compose.ui.graphics.Color disabledUnselectedSecondaryContentColor, androidx.compose.ui.graphics.Color disabledUnselectedIconColor, androidx.compose.ui.graphics.Color disabledUnselectedControlColor);
    ctor @BytecodeOnly public RadioButtonColors(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly public androidx.wear.compose.material3.RadioButtonColors copy(optional androidx.compose.ui.graphics.Color selectedContainerColor, optional androidx.compose.ui.graphics.Color selectedContentColor, optional androidx.compose.ui.graphics.Color selectedSecondaryContentColor, optional androidx.compose.ui.graphics.Color selectedIconColor, optional androidx.compose.ui.graphics.Color selectedControlColor, optional androidx.compose.ui.graphics.Color unselectedContainerColor, optional androidx.compose.ui.graphics.Color unselectedContentColor, optional androidx.compose.ui.graphics.Color unselectedSecondaryContentColor, optional androidx.compose.ui.graphics.Color unselectedIconColor, optional androidx.compose.ui.graphics.Color unselectedControlColor, optional androidx.compose.ui.graphics.Color disabledSelectedContainerColor, optional androidx.compose.ui.graphics.Color disabledSelectedContentColor, optional androidx.compose.ui.graphics.Color disabledSelectedSecondaryContentColor, optional androidx.compose.ui.graphics.Color disabledSelectedIconColor, optional androidx.compose.ui.graphics.Color disabledSelectedControlColor, optional androidx.compose.ui.graphics.Color disabledUnselectedContainerColor, optional androidx.compose.ui.graphics.Color disabledUnselectedContentColor, optional androidx.compose.ui.graphics.Color disabledUnselectedSecondaryContentColor, optional androidx.compose.ui.graphics.Color disabledUnselectedIconColor, optional androidx.compose.ui.graphics.Color disabledUnselectedControlColor);
    method @BytecodeOnly public androidx.wear.compose.material3.RadioButtonColors copy-Cmkg8xs(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long);
    method @BytecodeOnly public long getDisabledSelectedContainerColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledSelectedContentColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledSelectedControlColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledSelectedIconColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledSelectedSecondaryContentColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledUnselectedContainerColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledUnselectedContentColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledUnselectedControlColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledUnselectedIconColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledUnselectedSecondaryContentColor-0d7_KjU();
    method @BytecodeOnly public long getSelectedContainerColor-0d7_KjU();
    method @BytecodeOnly public long getSelectedContentColor-0d7_KjU();
    method @BytecodeOnly public long getSelectedControlColor-0d7_KjU();
    method @BytecodeOnly public long getSelectedIconColor-0d7_KjU();
    method @BytecodeOnly public long getSelectedSecondaryContentColor-0d7_KjU();
    method @BytecodeOnly public long getUnselectedContainerColor-0d7_KjU();
    method @BytecodeOnly public long getUnselectedContentColor-0d7_KjU();
    method @BytecodeOnly public long getUnselectedControlColor-0d7_KjU();
    method @BytecodeOnly public long getUnselectedIconColor-0d7_KjU();
    method @BytecodeOnly public long getUnselectedSecondaryContentColor-0d7_KjU();
    property public androidx.compose.ui.graphics.Color disabledSelectedContainerColor;
    property public androidx.compose.ui.graphics.Color disabledSelectedContentColor;
    property public androidx.compose.ui.graphics.Color disabledSelectedControlColor;
    property public androidx.compose.ui.graphics.Color disabledSelectedIconColor;
    property public androidx.compose.ui.graphics.Color disabledSelectedSecondaryContentColor;
    property public androidx.compose.ui.graphics.Color disabledUnselectedContainerColor;
    property public androidx.compose.ui.graphics.Color disabledUnselectedContentColor;
    property public androidx.compose.ui.graphics.Color disabledUnselectedControlColor;
    property public androidx.compose.ui.graphics.Color disabledUnselectedIconColor;
    property public androidx.compose.ui.graphics.Color disabledUnselectedSecondaryContentColor;
    property public androidx.compose.ui.graphics.Color selectedContainerColor;
    property public androidx.compose.ui.graphics.Color selectedContentColor;
    property public androidx.compose.ui.graphics.Color selectedControlColor;
    property public androidx.compose.ui.graphics.Color selectedIconColor;
    property public androidx.compose.ui.graphics.Color selectedSecondaryContentColor;
    property public androidx.compose.ui.graphics.Color unselectedContainerColor;
    property public androidx.compose.ui.graphics.Color unselectedContentColor;
    property public androidx.compose.ui.graphics.Color unselectedControlColor;
    property public androidx.compose.ui.graphics.Color unselectedIconColor;
    property public androidx.compose.ui.graphics.Color unselectedSecondaryContentColor;
  }

  public final class RadioButtonDefaults {
    method public androidx.compose.foundation.layout.PaddingValues getContentPadding();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getRadioButtonShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getRadioButtonShape(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getSplitRadioButtonShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getSplitRadioButtonShape(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.RadioButtonColors radioButtonColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.RadioButtonColors radioButtonColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.RadioButtonColors radioButtonColors(optional androidx.compose.ui.graphics.Color selectedContainerColor, optional androidx.compose.ui.graphics.Color selectedContentColor, optional androidx.compose.ui.graphics.Color selectedSecondaryContentColor, optional androidx.compose.ui.graphics.Color selectedIconColor, optional androidx.compose.ui.graphics.Color selectedControlColor, optional androidx.compose.ui.graphics.Color unselectedContainerColor, optional androidx.compose.ui.graphics.Color unselectedContentColor, optional androidx.compose.ui.graphics.Color unselectedSecondaryContentColor, optional androidx.compose.ui.graphics.Color unselectedIconColor, optional androidx.compose.ui.graphics.Color unselectedControlColor, optional androidx.compose.ui.graphics.Color disabledSelectedContainerColor, optional androidx.compose.ui.graphics.Color disabledSelectedContentColor, optional androidx.compose.ui.graphics.Color disabledSelectedSecondaryContentColor, optional androidx.compose.ui.graphics.Color disabledSelectedIconColor, optional androidx.compose.ui.graphics.Color disabledSelectedControlColor, optional androidx.compose.ui.graphics.Color disabledUnselectedContainerColor, optional androidx.compose.ui.graphics.Color disabledUnselectedContentColor, optional androidx.compose.ui.graphics.Color disabledUnselectedSecondaryContentColor, optional androidx.compose.ui.graphics.Color disabledUnselectedIconColor, optional androidx.compose.ui.graphics.Color disabledUnselectedControlColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.RadioButtonColors radioButtonColors-Xf8s2Ik(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int, int, int);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.SplitRadioButtonColors splitRadioButtonColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.SplitRadioButtonColors splitRadioButtonColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.SplitRadioButtonColors splitRadioButtonColors(optional androidx.compose.ui.graphics.Color selectedContainerColor, optional androidx.compose.ui.graphics.Color selectedContentColor, optional androidx.compose.ui.graphics.Color selectedSecondaryContentColor, optional androidx.compose.ui.graphics.Color selectedSplitContainerColor, optional androidx.compose.ui.graphics.Color selectedControlColor, optional androidx.compose.ui.graphics.Color unselectedContainerColor, optional androidx.compose.ui.graphics.Color unselectedContentColor, optional androidx.compose.ui.graphics.Color unselectedSecondaryContentColor, optional androidx.compose.ui.graphics.Color unselectedSplitContainerColor, optional androidx.compose.ui.graphics.Color unselectedControlColor, optional androidx.compose.ui.graphics.Color disabledSelectedContainerColor, optional androidx.compose.ui.graphics.Color disabledSelectedContentColor, optional androidx.compose.ui.graphics.Color disabledSelectedSecondaryContentColor, optional androidx.compose.ui.graphics.Color disabledSelectedSplitContainerColor, optional androidx.compose.ui.graphics.Color disabledSelectedControlColor, optional androidx.compose.ui.graphics.Color disabledUnselectedContainerColor, optional androidx.compose.ui.graphics.Color disabledUnselectedContentColor, optional androidx.compose.ui.graphics.Color disabledUnselectedSecondaryContentColor, optional androidx.compose.ui.graphics.Color disabledUnselectedSplitContainerColor, optional androidx.compose.ui.graphics.Color disabledUnselectedControlColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.SplitRadioButtonColors splitRadioButtonColors-Xf8s2Ik(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int, int, int);
    property public androidx.compose.foundation.layout.PaddingValues ContentPadding;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape radioButtonShape;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape splitRadioButtonShape;
    field public static final androidx.wear.compose.material3.RadioButtonDefaults INSTANCE;
  }

  public final class RadioButtonKt {
    method @androidx.compose.runtime.Composable public static void RadioButton(boolean selected, kotlin.jvm.functions.Function0<kotlin.Unit> onSelect, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.RadioButtonColors colors, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, optional androidx.wear.compose.material3.SurfaceTransformation? transformation, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? icon, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit>? secondaryLabel, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> label);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void RadioButton(boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, androidx.compose.ui.graphics.Shape?, androidx.wear.compose.material3.RadioButtonColors?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.wear.compose.material3.SurfaceTransformation?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @androidx.compose.runtime.Composable public static void SplitRadioButton(boolean selected, kotlin.jvm.functions.Function0<kotlin.Unit> onSelectionClick, String? selectionContentDescription, kotlin.jvm.functions.Function0<kotlin.Unit> onContainerClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.SplitRadioButtonColors colors, optional androidx.compose.foundation.interaction.MutableInteractionSource? selectionInteractionSource, optional androidx.compose.foundation.interaction.MutableInteractionSource? containerInteractionSource, optional androidx.wear.compose.material3.SurfaceTransformation? transformation, optional String? containerClickLabel, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit>? secondaryLabel, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> label);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void SplitRadioButton(boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>, String?, kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, androidx.compose.ui.graphics.Shape?, androidx.wear.compose.material3.SplitRadioButtonColors?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.wear.compose.material3.SurfaceTransformation?, String?, androidx.compose.foundation.layout.PaddingValues?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
  }

  public final class RangeSemanticsKt {
    method public static androidx.compose.ui.Modifier rangeSemantics(androidx.compose.ui.Modifier, float value, boolean enabled, kotlin.jvm.functions.Function1<? super java.lang.Float,kotlin.Unit> onValueChange, kotlin.ranges.ClosedFloatingPointRange<java.lang.Float> valueRange, int steps);
  }

  @kotlin.jvm.JvmInline public final value class RevealDirection {
    method @BytecodeOnly public static androidx.wear.compose.material3.RevealDirection! box-impl(int);
    method @BytecodeOnly public int unbox-impl();
    field public static final androidx.wear.compose.material3.RevealDirection.Companion Companion;
  }

  public static final class RevealDirection.Companion {
    method @BytecodeOnly public int getBidirectional-OFG4b4o();
    method @BytecodeOnly public int getRightToLeft-OFG4b4o();
    property public androidx.wear.compose.material3.RevealDirection Bidirectional;
    property public androidx.wear.compose.material3.RevealDirection RightToLeft;
  }

  public final class RevealState {
    ctor @KotlinOnly public RevealState(androidx.wear.compose.material3.RevealValue initialValue);
    ctor @BytecodeOnly public RevealState(int, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly public suspend Object? animateTo(androidx.wear.compose.material3.RevealValue targetValue, kotlin.coroutines.Continuation<? super java.lang.Void>);
    method @BytecodeOnly public Object? animateTo-1PKuNuk(int, kotlin.coroutines.Continuation<? super kotlin.Unit!>);
    method @BytecodeOnly public int getCurrentValue-OMiAi4w();
    method public float getOffset();
    method @BytecodeOnly public int getTargetValue-OMiAi4w();
    method public boolean isAnimationRunning();
    method @KotlinOnly public suspend Object? snapTo(androidx.wear.compose.material3.RevealValue targetValue, kotlin.coroutines.Continuation<? super java.lang.Void>);
    method @BytecodeOnly public Object? snapTo-1PKuNuk(int, kotlin.coroutines.Continuation<? super kotlin.Unit!>);
    property public androidx.wear.compose.material3.RevealValue currentValue;
    property public boolean isAnimationRunning;
    property public float offset;
    property public androidx.wear.compose.material3.RevealValue targetValue;
  }

  @kotlin.jvm.JvmInline public final value class RevealValue {
    method @BytecodeOnly public static androidx.wear.compose.material3.RevealValue! box-impl(int);
    method @BytecodeOnly public int unbox-impl();
    field public static final androidx.wear.compose.material3.RevealValue.Companion Companion;
  }

  public static final class RevealValue.Companion {
    method @BytecodeOnly public int getCovered-OMiAi4w();
    method @BytecodeOnly public int getLeftRevealed-OMiAi4w();
    method @BytecodeOnly public int getLeftRevealing-OMiAi4w();
    method @BytecodeOnly public int getRightRevealed-OMiAi4w();
    method @BytecodeOnly public int getRightRevealing-OMiAi4w();
    property public androidx.wear.compose.material3.RevealValue Covered;
    property public androidx.wear.compose.material3.RevealValue LeftRevealed;
    property public androidx.wear.compose.material3.RevealValue LeftRevealing;
    property public androidx.wear.compose.material3.RevealValue RightRevealed;
    property public androidx.wear.compose.material3.RevealValue RightRevealing;
  }

  public final class RippleKt {
    method @KotlinOnly @androidx.compose.runtime.Stable public static androidx.compose.foundation.IndicationNodeFactory ripple(androidx.compose.ui.graphics.ColorProducer color, optional boolean bounded, optional androidx.compose.ui.unit.Dp radius);
    method @KotlinOnly @androidx.compose.runtime.Stable public static androidx.compose.foundation.IndicationNodeFactory ripple(optional boolean bounded, optional androidx.compose.ui.unit.Dp radius, optional androidx.compose.ui.graphics.Color color);
    method @BytecodeOnly @androidx.compose.runtime.Stable public static androidx.compose.foundation.IndicationNodeFactory ripple-H2RKhps(boolean, float, long);
    method @BytecodeOnly @androidx.compose.runtime.Stable public static androidx.compose.foundation.IndicationNodeFactory ripple-wH6b6FI(androidx.compose.ui.graphics.ColorProducer, boolean, float);
  }

  public final class ScreenScaffoldDefaults {
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.PaddingValues getContentPadding();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.PaddingValues getContentPadding(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getEdgeButtonMinSpacing-D9Ej5fM();
    method @BytecodeOnly public float getEdgeButtonSpacing-D9Ej5fM();
    property public androidx.compose.ui.unit.Dp EdgeButtonMinSpacing;
    property public androidx.compose.ui.unit.Dp EdgeButtonSpacing;
    property @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.PaddingValues contentPadding;
    field public static final androidx.wear.compose.material3.ScreenScaffoldDefaults INSTANCE;
  }

  public final class ScreenScaffoldKt {
    method @androidx.compose.runtime.Composable public static void ScreenScaffold(androidx.compose.foundation.lazy.LazyListState scrollState, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional kotlin.jvm.functions.Function0<kotlin.Unit>? timeText, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? scrollIndicator, optional androidx.compose.foundation.OverscrollEffect? overscrollEffect, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.layout.BoxScope,? super androidx.compose.foundation.layout.PaddingValues,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void ScreenScaffold(androidx.compose.foundation.lazy.LazyListState, androidx.compose.ui.Modifier?, androidx.compose.foundation.layout.PaddingValues?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.foundation.OverscrollEffect?, kotlin.jvm.functions.Function4<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.foundation.layout.PaddingValues!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void ScreenScaffold(androidx.compose.foundation.lazy.LazyListState scrollState, kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.BoxScope,kotlin.Unit> edgeButton, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional kotlin.jvm.functions.Function0<kotlin.Unit>? timeText, optional kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? scrollIndicator, optional androidx.compose.foundation.OverscrollEffect? overscrollEffect, optional androidx.compose.ui.unit.Dp edgeButtonSpacing, kotlin.jvm.functions.Function2<androidx.compose.foundation.layout.BoxScope,androidx.compose.foundation.layout.PaddingValues,kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void ScreenScaffold(androidx.compose.foundation.ScrollState scrollState, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional kotlin.jvm.functions.Function0<kotlin.Unit>? timeText, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? scrollIndicator, optional androidx.compose.foundation.OverscrollEffect? overscrollEffect, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.layout.BoxScope,? super androidx.compose.foundation.layout.PaddingValues,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void ScreenScaffold(androidx.compose.foundation.ScrollState, androidx.compose.ui.Modifier?, androidx.compose.foundation.layout.PaddingValues?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.foundation.OverscrollEffect?, kotlin.jvm.functions.Function4<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.foundation.layout.PaddingValues!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void ScreenScaffold(optional androidx.compose.ui.Modifier modifier, optional androidx.wear.compose.foundation.ScrollInfoProvider? scrollInfoProvider, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional kotlin.jvm.functions.Function0<kotlin.Unit>? timeText, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? scrollIndicator, optional androidx.compose.foundation.OverscrollEffect? overscrollEffect, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.layout.BoxScope,? super androidx.compose.foundation.layout.PaddingValues,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void ScreenScaffold(androidx.compose.ui.Modifier?, androidx.wear.compose.foundation.ScrollInfoProvider?, androidx.compose.foundation.layout.PaddingValues?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.foundation.OverscrollEffect?, kotlin.jvm.functions.Function4<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.foundation.layout.PaddingValues!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void ScreenScaffold(androidx.wear.compose.foundation.lazy.ScalingLazyListState scrollState, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional kotlin.jvm.functions.Function0<kotlin.Unit>? timeText, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? scrollIndicator, optional androidx.compose.foundation.OverscrollEffect? overscrollEffect, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.layout.BoxScope,? super androidx.compose.foundation.layout.PaddingValues,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void ScreenScaffold(androidx.wear.compose.foundation.lazy.ScalingLazyListState, androidx.compose.ui.Modifier?, androidx.compose.foundation.layout.PaddingValues?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.foundation.OverscrollEffect?, kotlin.jvm.functions.Function4<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.foundation.layout.PaddingValues!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void ScreenScaffold(androidx.wear.compose.foundation.lazy.ScalingLazyListState scrollState, kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.BoxScope,kotlin.Unit> edgeButton, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional kotlin.jvm.functions.Function0<kotlin.Unit>? timeText, optional kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? scrollIndicator, optional androidx.compose.ui.unit.Dp edgeButtonSpacing, optional androidx.compose.foundation.OverscrollEffect? overscrollEffect, kotlin.jvm.functions.Function2<androidx.compose.foundation.layout.BoxScope,androidx.compose.foundation.layout.PaddingValues,kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void ScreenScaffold(androidx.wear.compose.foundation.lazy.TransformingLazyColumnState scrollState, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional kotlin.jvm.functions.Function0<kotlin.Unit>? timeText, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? scrollIndicator, optional androidx.compose.foundation.OverscrollEffect? overscrollEffect, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.layout.BoxScope,? super androidx.compose.foundation.layout.PaddingValues,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void ScreenScaffold(androidx.wear.compose.foundation.lazy.TransformingLazyColumnState, androidx.compose.ui.Modifier?, androidx.compose.foundation.layout.PaddingValues?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.foundation.OverscrollEffect?, kotlin.jvm.functions.Function4<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.foundation.layout.PaddingValues!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void ScreenScaffold(androidx.wear.compose.foundation.lazy.TransformingLazyColumnState scrollState, kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.BoxScope,kotlin.Unit> edgeButton, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional kotlin.jvm.functions.Function0<kotlin.Unit>? timeText, optional kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? scrollIndicator, optional androidx.compose.ui.unit.Dp edgeButtonSpacing, optional androidx.compose.foundation.OverscrollEffect? overscrollEffect, kotlin.jvm.functions.Function2<androidx.compose.foundation.layout.BoxScope,androidx.compose.foundation.layout.PaddingValues,kotlin.Unit> content);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void ScreenScaffold(androidx.wear.compose.foundation.ScrollInfoProvider scrollInfoProvider, kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.BoxScope,kotlin.Unit> edgeButton, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional kotlin.jvm.functions.Function0<kotlin.Unit>? timeText, optional kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? scrollIndicator, optional androidx.compose.ui.unit.Dp edgeButtonSpacing, optional androidx.compose.foundation.OverscrollEffect? overscrollEffect, kotlin.jvm.functions.Function2<androidx.compose.foundation.layout.BoxScope,androidx.compose.foundation.layout.PaddingValues,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void ScreenScaffold-V-95POc(androidx.wear.compose.foundation.lazy.ScalingLazyListState, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, androidx.compose.foundation.layout.PaddingValues?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, float, androidx.compose.foundation.OverscrollEffect?, kotlin.jvm.functions.Function4<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.foundation.layout.PaddingValues!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void ScreenScaffold-V-95POc(androidx.wear.compose.foundation.lazy.TransformingLazyColumnState, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, androidx.compose.foundation.layout.PaddingValues?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, float, androidx.compose.foundation.OverscrollEffect?, kotlin.jvm.functions.Function4<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.foundation.layout.PaddingValues!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void ScreenScaffold-V-95POc(androidx.wear.compose.foundation.ScrollInfoProvider, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, androidx.compose.foundation.layout.PaddingValues?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, float, androidx.compose.foundation.OverscrollEffect?, kotlin.jvm.functions.Function4<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.foundation.layout.PaddingValues!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void ScreenScaffold-gMrHQkA(androidx.compose.foundation.lazy.LazyListState, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, androidx.compose.foundation.layout.PaddingValues?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.foundation.OverscrollEffect?, float, kotlin.jvm.functions.Function4<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.foundation.layout.PaddingValues!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
  }

  @androidx.compose.runtime.Immutable @kotlin.jvm.JvmInline public final value class ScreenStage {
    method @BytecodeOnly public static androidx.wear.compose.material3.ScreenStage! box-impl(int);
    method @BytecodeOnly public int unbox-impl();
    field public static final androidx.wear.compose.material3.ScreenStage.Companion Companion;
  }

  public static final class ScreenStage.Companion {
    method @BytecodeOnly public int getIdle-5IOn0kw();
    method @BytecodeOnly public int getNew-5IOn0kw();
    method @BytecodeOnly public int getScrolling-5IOn0kw();
    property public androidx.wear.compose.material3.ScreenStage Idle;
    property public androidx.wear.compose.material3.ScreenStage New;
    property public androidx.wear.compose.material3.ScreenStage Scrolling;
  }

  public final class ScrollAwayKt {
    method public static androidx.compose.ui.Modifier scrollAway(androidx.compose.ui.Modifier, androidx.wear.compose.foundation.ScrollInfoProvider scrollInfoProvider, kotlin.jvm.functions.Function0<androidx.wear.compose.material3.ScreenStage> screenStage);
  }

  public final class ScrollIndicatorColors {
    ctor @KotlinOnly public ScrollIndicatorColors(androidx.compose.ui.graphics.Color indicatorColor, androidx.compose.ui.graphics.Color trackColor);
    ctor @BytecodeOnly public ScrollIndicatorColors(long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly public androidx.wear.compose.material3.ScrollIndicatorColors copy(optional androidx.compose.ui.graphics.Color indicatorColor, optional androidx.compose.ui.graphics.Color trackColor);
    method @BytecodeOnly public androidx.wear.compose.material3.ScrollIndicatorColors copy--OWjLjI(long, long);
    method @BytecodeOnly public long getIndicatorColor-0d7_KjU();
    method @BytecodeOnly public long getTrackColor-0d7_KjU();
    property public androidx.compose.ui.graphics.Color indicatorColor;
    property public androidx.compose.ui.graphics.Color trackColor;
  }

  public final class ScrollIndicatorDefaults {
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ScrollIndicatorColors colors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ScrollIndicatorColors colors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ScrollIndicatorColors colors(optional androidx.compose.ui.graphics.Color indicatorColor, optional androidx.compose.ui.graphics.Color trackColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.ScrollIndicatorColors colors-dgg9oW8(long, long, androidx.compose.runtime.Composer?, int, int);
    method public androidx.compose.animation.core.AnimationSpec<java.lang.Float> getPositionAnimationSpec();
    property public androidx.compose.animation.core.AnimationSpec<java.lang.Float> PositionAnimationSpec;
    field public static final androidx.wear.compose.material3.ScrollIndicatorDefaults INSTANCE;
  }

  public final class ScrollIndicatorKt {
    method @androidx.compose.runtime.Composable public static void ScrollIndicator(androidx.compose.foundation.lazy.LazyListState state, optional androidx.compose.ui.Modifier modifier, optional androidx.wear.compose.material3.ScrollIndicatorColors colors, optional boolean reverseDirection, optional androidx.compose.animation.core.AnimationSpec<java.lang.Float> positionAnimationSpec);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void ScrollIndicator(androidx.compose.foundation.lazy.LazyListState, androidx.compose.ui.Modifier?, androidx.wear.compose.material3.ScrollIndicatorColors?, boolean, androidx.compose.animation.core.AnimationSpec<java.lang.Float!>?, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void ScrollIndicator(androidx.compose.foundation.ScrollState state, optional androidx.compose.ui.Modifier modifier, optional androidx.wear.compose.material3.ScrollIndicatorColors colors, optional boolean reverseDirection, optional androidx.compose.animation.core.AnimationSpec<java.lang.Float> positionAnimationSpec);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void ScrollIndicator(androidx.compose.foundation.ScrollState, androidx.compose.ui.Modifier?, androidx.wear.compose.material3.ScrollIndicatorColors?, boolean, androidx.compose.animation.core.AnimationSpec<java.lang.Float!>?, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void ScrollIndicator(androidx.wear.compose.foundation.lazy.ScalingLazyListState state, optional androidx.compose.ui.Modifier modifier, optional androidx.wear.compose.material3.ScrollIndicatorColors colors, optional boolean reverseDirection, optional androidx.compose.animation.core.AnimationSpec<java.lang.Float> positionAnimationSpec);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void ScrollIndicator(androidx.wear.compose.foundation.lazy.ScalingLazyListState, androidx.compose.ui.Modifier?, androidx.wear.compose.material3.ScrollIndicatorColors?, boolean, androidx.compose.animation.core.AnimationSpec<java.lang.Float!>?, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void ScrollIndicator(androidx.wear.compose.foundation.lazy.TransformingLazyColumnState state, optional androidx.compose.ui.Modifier modifier, optional androidx.wear.compose.material3.ScrollIndicatorColors colors, optional boolean reverseDirection, optional androidx.compose.animation.core.AnimationSpec<java.lang.Float> positionAnimationSpec);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void ScrollIndicator(androidx.wear.compose.foundation.lazy.TransformingLazyColumnState, androidx.compose.ui.Modifier?, androidx.wear.compose.material3.ScrollIndicatorColors?, boolean, androidx.compose.animation.core.AnimationSpec<java.lang.Float!>?, androidx.compose.runtime.Composer?, int, int);
  }

  public final class SegmentedCircularProgressIndicatorKt {
    method @KotlinOnly @androidx.compose.runtime.Composable public static void SegmentedCircularProgressIndicator(@IntRange(from=1L) int segmentCount, kotlin.jvm.functions.Function0<java.lang.Float> progress, optional androidx.compose.ui.Modifier modifier, optional boolean allowProgressOverflow, optional float startAngle, optional float endAngle, optional androidx.wear.compose.material3.ProgressIndicatorColors colors, optional androidx.compose.ui.unit.Dp strokeWidth, optional androidx.compose.ui.unit.Dp gapSize, optional boolean enabled);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void SegmentedCircularProgressIndicator(@IntRange(from=1L) int segmentCount, kotlin.jvm.functions.Function1<java.lang.Integer,java.lang.Boolean> segmentValue, optional androidx.compose.ui.Modifier modifier, optional float startAngle, optional float endAngle, optional androidx.wear.compose.material3.ProgressIndicatorColors colors, optional androidx.compose.ui.unit.Dp strokeWidth, optional androidx.compose.ui.unit.Dp gapSize, optional boolean enabled);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void SegmentedCircularProgressIndicator-EQC0FA8(@IntRange(from=1L) int, kotlin.jvm.functions.Function1<? super java.lang.Integer!,java.lang.Boolean!>, androidx.compose.ui.Modifier?, float, float, androidx.wear.compose.material3.ProgressIndicatorColors?, float, float, boolean, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void SegmentedCircularProgressIndicator-KBW6s6s(@IntRange(from=1L) int, kotlin.jvm.functions.Function0<java.lang.Float!>, androidx.compose.ui.Modifier?, boolean, float, float, androidx.wear.compose.material3.ProgressIndicatorColors?, float, float, boolean, androidx.compose.runtime.Composer?, int, int);
  }

  public final class ShapeDefaults {
    method public androidx.compose.foundation.shape.RoundedCornerShape getExtraLarge();
    method public androidx.compose.foundation.shape.RoundedCornerShape getExtraSmall();
    method public androidx.compose.foundation.shape.RoundedCornerShape getLarge();
    method public androidx.compose.foundation.shape.RoundedCornerShape getMedium();
    method public androidx.compose.foundation.shape.RoundedCornerShape getSmall();
    property public androidx.compose.foundation.shape.RoundedCornerShape ExtraLarge;
    property public androidx.compose.foundation.shape.RoundedCornerShape ExtraSmall;
    property public androidx.compose.foundation.shape.RoundedCornerShape Large;
    property public androidx.compose.foundation.shape.RoundedCornerShape Medium;
    property public androidx.compose.foundation.shape.RoundedCornerShape Small;
    field public static final androidx.wear.compose.material3.ShapeDefaults INSTANCE;
  }

  @androidx.compose.runtime.Immutable public final class Shapes {
    ctor public Shapes();
    ctor public Shapes(optional androidx.compose.foundation.shape.CornerBasedShape extraSmall, optional androidx.compose.foundation.shape.CornerBasedShape small, optional androidx.compose.foundation.shape.CornerBasedShape medium, optional androidx.compose.foundation.shape.CornerBasedShape large, optional androidx.compose.foundation.shape.CornerBasedShape extraLarge);
    method public androidx.wear.compose.material3.Shapes copy(optional androidx.compose.foundation.shape.CornerBasedShape extraSmall, optional androidx.compose.foundation.shape.CornerBasedShape small, optional androidx.compose.foundation.shape.CornerBasedShape medium, optional androidx.compose.foundation.shape.CornerBasedShape large, optional androidx.compose.foundation.shape.CornerBasedShape extraLarge);
    method public androidx.compose.foundation.shape.CornerBasedShape getExtraLarge();
    method public androidx.compose.foundation.shape.CornerBasedShape getExtraSmall();
    method public androidx.compose.foundation.shape.CornerBasedShape getLarge();
    method public androidx.compose.foundation.shape.CornerBasedShape getMedium();
    method public androidx.compose.foundation.shape.CornerBasedShape getSmall();
    property public androidx.compose.foundation.shape.CornerBasedShape extraLarge;
    property public androidx.compose.foundation.shape.CornerBasedShape extraSmall;
    property public androidx.compose.foundation.shape.CornerBasedShape large;
    property public androidx.compose.foundation.shape.CornerBasedShape medium;
    property public androidx.compose.foundation.shape.CornerBasedShape small;
  }

  @androidx.compose.runtime.Immutable public final class SliderColors {
    ctor @KotlinOnly public SliderColors(androidx.compose.ui.graphics.Color containerColor, androidx.compose.ui.graphics.Color buttonIconColor, androidx.compose.ui.graphics.Color selectedBarColor, androidx.compose.ui.graphics.Color unselectedBarColor, androidx.compose.ui.graphics.Color selectedBarSeparatorColor, androidx.compose.ui.graphics.Color unselectedBarSeparatorColor, androidx.compose.ui.graphics.Color disabledContainerColor, androidx.compose.ui.graphics.Color disabledButtonIconColor, androidx.compose.ui.graphics.Color disabledSelectedBarColor, androidx.compose.ui.graphics.Color disabledUnselectedBarColor, androidx.compose.ui.graphics.Color disabledSelectedBarSeparatorColor, androidx.compose.ui.graphics.Color disabledUnselectedBarSeparatorColor);
    ctor @BytecodeOnly public SliderColors(long, long, long, long, long, long, long, long, long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly public androidx.wear.compose.material3.SliderColors copy(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color buttonIconColor, optional androidx.compose.ui.graphics.Color selectedBarColor, optional androidx.compose.ui.graphics.Color unselectedBarColor, optional androidx.compose.ui.graphics.Color selectedBarSeparatorColor, optional androidx.compose.ui.graphics.Color unselectedBarSeparatorColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledButtonIconColor, optional androidx.compose.ui.graphics.Color disabledSelectedBarColor, optional androidx.compose.ui.graphics.Color disabledUnselectedBarColor, optional androidx.compose.ui.graphics.Color disabledSelectedBarSeparatorColor, optional androidx.compose.ui.graphics.Color disabledUnselectedBarSeparatorColor);
    method @BytecodeOnly public androidx.wear.compose.material3.SliderColors copy-2qZNXz8(long, long, long, long, long, long, long, long, long, long, long, long);
    method @BytecodeOnly public long getButtonIconColor-0d7_KjU();
    method @BytecodeOnly public long getContainerColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledButtonIconColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledContainerColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledSelectedBarColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledSelectedBarSeparatorColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledUnselectedBarColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledUnselectedBarSeparatorColor-0d7_KjU();
    method @BytecodeOnly public long getSelectedBarColor-0d7_KjU();
    method @BytecodeOnly public long getSelectedBarSeparatorColor-0d7_KjU();
    method @BytecodeOnly public long getUnselectedBarColor-0d7_KjU();
    method @BytecodeOnly public long getUnselectedBarSeparatorColor-0d7_KjU();
    property public androidx.compose.ui.graphics.Color buttonIconColor;
    property public androidx.compose.ui.graphics.Color containerColor;
    property public androidx.compose.ui.graphics.Color disabledButtonIconColor;
    property public androidx.compose.ui.graphics.Color disabledContainerColor;
    property public androidx.compose.ui.graphics.Color disabledSelectedBarColor;
    property public androidx.compose.ui.graphics.Color disabledSelectedBarSeparatorColor;
    property public androidx.compose.ui.graphics.Color disabledUnselectedBarColor;
    property public androidx.compose.ui.graphics.Color disabledUnselectedBarSeparatorColor;
    property public androidx.compose.ui.graphics.Color selectedBarColor;
    property public androidx.compose.ui.graphics.Color selectedBarSeparatorColor;
    property public androidx.compose.ui.graphics.Color unselectedBarColor;
    property public androidx.compose.ui.graphics.Color unselectedBarSeparatorColor;
  }

  public final class SliderDefaults {
    method @androidx.compose.runtime.Composable public void DecreaseIcon(optional androidx.compose.ui.Modifier modifier, optional String contentDescription);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void DecreaseIcon(androidx.compose.ui.Modifier?, String?, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public void IncreaseIcon(optional androidx.compose.ui.Modifier modifier, optional String contentDescription);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void IncreaseIcon(androidx.compose.ui.Modifier?, String?, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public String getDecreaseIconContentDescription();
    method @BytecodeOnly @androidx.compose.runtime.Composable public String getDecreaseIconContentDescription(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getIconSize-D9Ej5fM();
    method @androidx.compose.runtime.Composable public String getIncreaseIconContentDescription();
    method @BytecodeOnly @androidx.compose.runtime.Composable public String getIncreaseIconContentDescription(androidx.compose.runtime.Composer?, int);
    method public int getMaxSegmentSteps();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getShape(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.SliderColors sliderColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.SliderColors sliderColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.SliderColors sliderColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color buttonIconColor, optional androidx.compose.ui.graphics.Color selectedBarColor, optional androidx.compose.ui.graphics.Color unselectedBarColor, optional androidx.compose.ui.graphics.Color selectedBarSeparatorColor, optional androidx.compose.ui.graphics.Color unselectedBarSeparatorColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledButtonIconColor, optional androidx.compose.ui.graphics.Color disabledSelectedBarColor, optional androidx.compose.ui.graphics.Color disabledUnselectedBarColor, optional androidx.compose.ui.graphics.Color disabledSelectedBarSeparatorColor, optional androidx.compose.ui.graphics.Color disabledUnselectedBarSeparatorColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.SliderColors sliderColors-XqyqHi0(long, long, long, long, long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int, int);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.SliderColors variantSliderColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.SliderColors variantSliderColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.SliderColors variantSliderColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color buttonIconColor, optional androidx.compose.ui.graphics.Color selectedBarColor, optional androidx.compose.ui.graphics.Color unselectedBarColor, optional androidx.compose.ui.graphics.Color selectedBarSeparatorColor, optional androidx.compose.ui.graphics.Color unselectedBarSeparatorColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledButtonIconColor, optional androidx.compose.ui.graphics.Color disabledSelectedBarColor, optional androidx.compose.ui.graphics.Color disabledUnselectedBarColor, optional androidx.compose.ui.graphics.Color disabledSelectedBarSeparatorColor, optional androidx.compose.ui.graphics.Color disabledUnselectedBarSeparatorColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.SliderColors variantSliderColors-XqyqHi0(long, long, long, long, long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int, int);
    property public androidx.compose.ui.unit.Dp IconSize;
    property public int MaxSegmentSteps;
    property @androidx.compose.runtime.Composable public String decreaseIconContentDescription;
    property @androidx.compose.runtime.Composable public String increaseIconContentDescription;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape shape;
    field public static final androidx.wear.compose.material3.SliderDefaults INSTANCE;
  }

  public final class SliderKt {
    method @androidx.compose.runtime.Composable public static void Slider(float value, kotlin.jvm.functions.Function1<? super java.lang.Float,kotlin.Unit> onValueChange, int steps, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit> decreaseIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit> increaseIcon, optional boolean enabled, optional kotlin.ranges.ClosedFloatingPointRange<java.lang.Float> valueRange, optional boolean segmented, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.SliderColors colors);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void Slider(float, kotlin.jvm.functions.Function1<? super java.lang.Float!,kotlin.Unit!>, int, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, boolean, kotlin.ranges.ClosedFloatingPointRange<java.lang.Float!>?, boolean, androidx.compose.ui.graphics.Shape?, androidx.wear.compose.material3.SliderColors?, androidx.compose.runtime.Composer?, int, int, int);
    method @androidx.compose.runtime.Composable public static void Slider(int value, kotlin.jvm.functions.Function1<? super java.lang.Integer,kotlin.Unit> onValueChange, kotlin.ranges.IntProgression valueProgression, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit> decreaseIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit> increaseIcon, optional boolean enabled, optional boolean segmented, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.SliderColors colors);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void Slider(int, kotlin.jvm.functions.Function1<? super java.lang.Integer!,kotlin.Unit!>, kotlin.ranges.IntProgression, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, boolean, boolean, androidx.compose.ui.graphics.Shape?, androidx.wear.compose.material3.SliderColors?, androidx.compose.runtime.Composer?, int, int);
  }

  public final class SplitCheckboxButtonColors {
    ctor @KotlinOnly public SplitCheckboxButtonColors(androidx.compose.ui.graphics.Color checkedContainerColor, androidx.compose.ui.graphics.Color checkedContentColor, androidx.compose.ui.graphics.Color checkedSecondaryContentColor, androidx.compose.ui.graphics.Color checkedSplitContainerColor, androidx.compose.ui.graphics.Color checkedBoxColor, androidx.compose.ui.graphics.Color checkedCheckmarkColor, androidx.compose.ui.graphics.Color uncheckedContainerColor, androidx.compose.ui.graphics.Color uncheckedContentColor, androidx.compose.ui.graphics.Color uncheckedSecondaryContentColor, androidx.compose.ui.graphics.Color uncheckedSplitContainerColor, androidx.compose.ui.graphics.Color uncheckedBoxColor, androidx.compose.ui.graphics.Color disabledCheckedContainerColor, androidx.compose.ui.graphics.Color disabledCheckedContentColor, androidx.compose.ui.graphics.Color disabledCheckedSecondaryContentColor, androidx.compose.ui.graphics.Color disabledCheckedSplitContainerColor, androidx.compose.ui.graphics.Color disabledCheckedBoxColor, androidx.compose.ui.graphics.Color disabledCheckedCheckmarkColor, androidx.compose.ui.graphics.Color disabledUncheckedContainerColor, androidx.compose.ui.graphics.Color disabledUncheckedContentColor, androidx.compose.ui.graphics.Color disabledUncheckedSecondaryContentColor, androidx.compose.ui.graphics.Color disabledUncheckedSplitContainerColor, androidx.compose.ui.graphics.Color disabledUncheckedBoxColor);
    ctor @BytecodeOnly public SplitCheckboxButtonColors(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly public androidx.wear.compose.material3.SplitCheckboxButtonColors copy(optional androidx.compose.ui.graphics.Color checkedContainerColor, optional androidx.compose.ui.graphics.Color checkedContentColor, optional androidx.compose.ui.graphics.Color checkedSecondaryContentColor, optional androidx.compose.ui.graphics.Color checkedSplitContainerColor, optional androidx.compose.ui.graphics.Color checkedBoxColor, optional androidx.compose.ui.graphics.Color checkedCheckmarkColor, optional androidx.compose.ui.graphics.Color uncheckedContainerColor, optional androidx.compose.ui.graphics.Color uncheckedContentColor, optional androidx.compose.ui.graphics.Color uncheckedSecondaryContentColor, optional androidx.compose.ui.graphics.Color uncheckedSplitContainerColor, optional androidx.compose.ui.graphics.Color uncheckedBoxColor, optional androidx.compose.ui.graphics.Color disabledCheckedContainerColor, optional androidx.compose.ui.graphics.Color disabledCheckedContentColor, optional androidx.compose.ui.graphics.Color disabledCheckedSecondaryContentColor, optional androidx.compose.ui.graphics.Color disabledCheckedSplitContainerColor, optional androidx.compose.ui.graphics.Color disabledCheckedBoxColor, optional androidx.compose.ui.graphics.Color disabledCheckedCheckmarkColor, optional androidx.compose.ui.graphics.Color disabledUncheckedContainerColor, optional androidx.compose.ui.graphics.Color disabledUncheckedContentColor, optional androidx.compose.ui.graphics.Color disabledUncheckedSecondaryContentColor, optional androidx.compose.ui.graphics.Color disabledUncheckedSplitContainerColor, optional androidx.compose.ui.graphics.Color disabledUncheckedBoxColor);
    method @BytecodeOnly public androidx.wear.compose.material3.SplitCheckboxButtonColors copy-0VcbP8k(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long);
    method @BytecodeOnly public long getCheckedBoxColor-0d7_KjU();
    method @BytecodeOnly public long getCheckedCheckmarkColor-0d7_KjU();
    method @BytecodeOnly public long getCheckedContainerColor-0d7_KjU();
    method @BytecodeOnly public long getCheckedContentColor-0d7_KjU();
    method @BytecodeOnly public long getCheckedSecondaryContentColor-0d7_KjU();
    method @BytecodeOnly public long getCheckedSplitContainerColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledCheckedBoxColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledCheckedCheckmarkColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledCheckedContainerColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledCheckedContentColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledCheckedSecondaryContentColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledCheckedSplitContainerColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledUncheckedBoxColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledUncheckedContainerColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledUncheckedContentColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledUncheckedSecondaryContentColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledUncheckedSplitContainerColor-0d7_KjU();
    method @BytecodeOnly public long getUncheckedBoxColor-0d7_KjU();
    method @BytecodeOnly public long getUncheckedContainerColor-0d7_KjU();
    method @BytecodeOnly public long getUncheckedContentColor-0d7_KjU();
    method @BytecodeOnly public long getUncheckedSecondaryContentColor-0d7_KjU();
    method @BytecodeOnly public long getUncheckedSplitContainerColor-0d7_KjU();
    property public androidx.compose.ui.graphics.Color checkedBoxColor;
    property public androidx.compose.ui.graphics.Color checkedCheckmarkColor;
    property public androidx.compose.ui.graphics.Color checkedContainerColor;
    property public androidx.compose.ui.graphics.Color checkedContentColor;
    property public androidx.compose.ui.graphics.Color checkedSecondaryContentColor;
    property public androidx.compose.ui.graphics.Color checkedSplitContainerColor;
    property public androidx.compose.ui.graphics.Color disabledCheckedBoxColor;
    property public androidx.compose.ui.graphics.Color disabledCheckedCheckmarkColor;
    property public androidx.compose.ui.graphics.Color disabledCheckedContainerColor;
    property public androidx.compose.ui.graphics.Color disabledCheckedContentColor;
    property public androidx.compose.ui.graphics.Color disabledCheckedSecondaryContentColor;
    property public androidx.compose.ui.graphics.Color disabledCheckedSplitContainerColor;
    property public androidx.compose.ui.graphics.Color disabledUncheckedBoxColor;
    property public androidx.compose.ui.graphics.Color disabledUncheckedContainerColor;
    property public androidx.compose.ui.graphics.Color disabledUncheckedContentColor;
    property public androidx.compose.ui.graphics.Color disabledUncheckedSecondaryContentColor;
    property public androidx.compose.ui.graphics.Color disabledUncheckedSplitContainerColor;
    property public androidx.compose.ui.graphics.Color uncheckedBoxColor;
    property public androidx.compose.ui.graphics.Color uncheckedContainerColor;
    property public androidx.compose.ui.graphics.Color uncheckedContentColor;
    property public androidx.compose.ui.graphics.Color uncheckedSecondaryContentColor;
    property public androidx.compose.ui.graphics.Color uncheckedSplitContainerColor;
  }

  public final class SplitRadioButtonColors {
    ctor @KotlinOnly public SplitRadioButtonColors(androidx.compose.ui.graphics.Color selectedContainerColor, androidx.compose.ui.graphics.Color selectedContentColor, androidx.compose.ui.graphics.Color selectedSecondaryContentColor, androidx.compose.ui.graphics.Color selectedSplitContainerColor, androidx.compose.ui.graphics.Color selectedControlColor, androidx.compose.ui.graphics.Color unselectedContainerColor, androidx.compose.ui.graphics.Color unselectedContentColor, androidx.compose.ui.graphics.Color unselectedSecondaryContentColor, androidx.compose.ui.graphics.Color unselectedSplitContainerColor, androidx.compose.ui.graphics.Color unselectedControlColor, androidx.compose.ui.graphics.Color disabledSelectedContainerColor, androidx.compose.ui.graphics.Color disabledSelectedContentColor, androidx.compose.ui.graphics.Color disabledSelectedSecondaryContentColor, androidx.compose.ui.graphics.Color disabledSelectedSplitContainerColor, androidx.compose.ui.graphics.Color disabledSelectedControlColor, androidx.compose.ui.graphics.Color disabledUnselectedContainerColor, androidx.compose.ui.graphics.Color disabledUnselectedContentColor, androidx.compose.ui.graphics.Color disabledUnselectedSecondaryContentColor, androidx.compose.ui.graphics.Color disabledUnselectedSplitContainerColor, androidx.compose.ui.graphics.Color disabledUnselectedControlColor);
    ctor @BytecodeOnly public SplitRadioButtonColors(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly public androidx.wear.compose.material3.SplitRadioButtonColors copy(optional androidx.compose.ui.graphics.Color selectedContainerColor, optional androidx.compose.ui.graphics.Color selectedContentColor, optional androidx.compose.ui.graphics.Color selectedSecondaryContentColor, optional androidx.compose.ui.graphics.Color selectedSplitContainerColor, optional androidx.compose.ui.graphics.Color selectedControlColor, optional androidx.compose.ui.graphics.Color unselectedContainerColor, optional androidx.compose.ui.graphics.Color unselectedContentColor, optional androidx.compose.ui.graphics.Color unselectedSecondaryContentColor, optional androidx.compose.ui.graphics.Color unselectedSplitContainerColor, optional androidx.compose.ui.graphics.Color unselectedControlColor, optional androidx.compose.ui.graphics.Color disabledSelectedContainerColor, optional androidx.compose.ui.graphics.Color disabledSelectedContentColor, optional androidx.compose.ui.graphics.Color disabledSelectedSecondaryContentColor, optional androidx.compose.ui.graphics.Color disabledSelectedSplitContainerColor, optional androidx.compose.ui.graphics.Color disabledSelectedControlColor, optional androidx.compose.ui.graphics.Color disabledUnselectedContainerColor, optional androidx.compose.ui.graphics.Color disabledUnselectedContentColor, optional androidx.compose.ui.graphics.Color disabledUnselectedSecondaryContentColor, optional androidx.compose.ui.graphics.Color disabledUnselectedSplitContainerColor, optional androidx.compose.ui.graphics.Color disabledUnselectedControlColor);
    method @BytecodeOnly public androidx.wear.compose.material3.SplitRadioButtonColors copy-Cmkg8xs(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long);
    method @BytecodeOnly public long getDisabledSelectedContainerColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledSelectedContentColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledSelectedControlColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledSelectedSecondaryContentColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledSelectedSplitContainerColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledUnselectedContainerColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledUnselectedContentColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledUnselectedControlColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledUnselectedSecondaryContentColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledUnselectedSplitContainerColor-0d7_KjU();
    method @BytecodeOnly public long getSelectedContainerColor-0d7_KjU();
    method @BytecodeOnly public long getSelectedContentColor-0d7_KjU();
    method @BytecodeOnly public long getSelectedControlColor-0d7_KjU();
    method @BytecodeOnly public long getSelectedSecondaryContentColor-0d7_KjU();
    method @BytecodeOnly public long getSelectedSplitContainerColor-0d7_KjU();
    method @BytecodeOnly public long getUnselectedContainerColor-0d7_KjU();
    method @BytecodeOnly public long getUnselectedContentColor-0d7_KjU();
    method @BytecodeOnly public long getUnselectedControlColor-0d7_KjU();
    method @BytecodeOnly public long getUnselectedSecondaryContentColor-0d7_KjU();
    method @BytecodeOnly public long getUnselectedSplitContainerColor-0d7_KjU();
    property public androidx.compose.ui.graphics.Color disabledSelectedContainerColor;
    property public androidx.compose.ui.graphics.Color disabledSelectedContentColor;
    property public androidx.compose.ui.graphics.Color disabledSelectedControlColor;
    property public androidx.compose.ui.graphics.Color disabledSelectedSecondaryContentColor;
    property public androidx.compose.ui.graphics.Color disabledSelectedSplitContainerColor;
    property public androidx.compose.ui.graphics.Color disabledUnselectedContainerColor;
    property public androidx.compose.ui.graphics.Color disabledUnselectedContentColor;
    property public androidx.compose.ui.graphics.Color disabledUnselectedControlColor;
    property public androidx.compose.ui.graphics.Color disabledUnselectedSecondaryContentColor;
    property public androidx.compose.ui.graphics.Color disabledUnselectedSplitContainerColor;
    property public androidx.compose.ui.graphics.Color selectedContainerColor;
    property public androidx.compose.ui.graphics.Color selectedContentColor;
    property public androidx.compose.ui.graphics.Color selectedControlColor;
    property public androidx.compose.ui.graphics.Color selectedSecondaryContentColor;
    property public androidx.compose.ui.graphics.Color selectedSplitContainerColor;
    property public androidx.compose.ui.graphics.Color unselectedContainerColor;
    property public androidx.compose.ui.graphics.Color unselectedContentColor;
    property public androidx.compose.ui.graphics.Color unselectedControlColor;
    property public androidx.compose.ui.graphics.Color unselectedSecondaryContentColor;
    property public androidx.compose.ui.graphics.Color unselectedSplitContainerColor;
  }

  public final class SplitSwitchButtonColors {
    ctor @KotlinOnly public SplitSwitchButtonColors(androidx.compose.ui.graphics.Color checkedContainerColor, androidx.compose.ui.graphics.Color checkedContentColor, androidx.compose.ui.graphics.Color checkedSecondaryContentColor, androidx.compose.ui.graphics.Color checkedSplitContainerColor, androidx.compose.ui.graphics.Color checkedThumbColor, androidx.compose.ui.graphics.Color checkedThumbIconColor, androidx.compose.ui.graphics.Color checkedTrackColor, androidx.compose.ui.graphics.Color checkedTrackBorderColor, androidx.compose.ui.graphics.Color uncheckedContainerColor, androidx.compose.ui.graphics.Color uncheckedContentColor, androidx.compose.ui.graphics.Color uncheckedSecondaryContentColor, androidx.compose.ui.graphics.Color uncheckedSplitContainerColor, androidx.compose.ui.graphics.Color uncheckedThumbColor, androidx.compose.ui.graphics.Color uncheckedTrackColor, androidx.compose.ui.graphics.Color uncheckedTrackBorderColor, androidx.compose.ui.graphics.Color disabledCheckedContainerColor, androidx.compose.ui.graphics.Color disabledCheckedContentColor, androidx.compose.ui.graphics.Color disabledCheckedSecondaryContentColor, androidx.compose.ui.graphics.Color disabledCheckedSplitContainerColor, androidx.compose.ui.graphics.Color disabledCheckedThumbColor, androidx.compose.ui.graphics.Color disabledCheckedThumbIconColor, androidx.compose.ui.graphics.Color disabledCheckedTrackColor, androidx.compose.ui.graphics.Color disabledCheckedTrackBorderColor, androidx.compose.ui.graphics.Color disabledUncheckedContainerColor, androidx.compose.ui.graphics.Color disabledUncheckedContentColor, androidx.compose.ui.graphics.Color disabledUncheckedSecondaryContentColor, androidx.compose.ui.graphics.Color disabledUncheckedSplitContainerColor, androidx.compose.ui.graphics.Color disabledUncheckedThumbColor, androidx.compose.ui.graphics.Color disabledUncheckedTrackBorderColor);
    ctor @BytecodeOnly public SplitSwitchButtonColors(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly public androidx.wear.compose.material3.SplitSwitchButtonColors copy(optional androidx.compose.ui.graphics.Color checkedContainerColor, optional androidx.compose.ui.graphics.Color checkedContentColor, optional androidx.compose.ui.graphics.Color checkedSecondaryContentColor, optional androidx.compose.ui.graphics.Color checkedSplitContainerColor, optional androidx.compose.ui.graphics.Color checkedThumbColor, optional androidx.compose.ui.graphics.Color checkedThumbIconColor, optional androidx.compose.ui.graphics.Color checkedTrackColor, optional androidx.compose.ui.graphics.Color checkedTrackBorderColor, optional androidx.compose.ui.graphics.Color uncheckedContainerColor, optional androidx.compose.ui.graphics.Color uncheckedContentColor, optional androidx.compose.ui.graphics.Color uncheckedSecondaryContentColor, optional androidx.compose.ui.graphics.Color uncheckedSplitContainerColor, optional androidx.compose.ui.graphics.Color uncheckedThumbColor, optional androidx.compose.ui.graphics.Color uncheckedTrackColor, optional androidx.compose.ui.graphics.Color uncheckedTrackBorderColor, optional androidx.compose.ui.graphics.Color disabledCheckedContainerColor, optional androidx.compose.ui.graphics.Color disabledCheckedContentColor, optional androidx.compose.ui.graphics.Color disabledCheckedSecondaryContentColor, optional androidx.compose.ui.graphics.Color disabledCheckedSplitContainerColor, optional androidx.compose.ui.graphics.Color disabledCheckedThumbColor, optional androidx.compose.ui.graphics.Color disabledCheckedThumbIconColor, optional androidx.compose.ui.graphics.Color disabledCheckedTrackColor, optional androidx.compose.ui.graphics.Color disabledCheckedTrackBorderColor, optional androidx.compose.ui.graphics.Color disabledUncheckedContainerColor, optional androidx.compose.ui.graphics.Color disabledUncheckedContentColor, optional androidx.compose.ui.graphics.Color disabledUncheckedSecondaryContentColor, optional androidx.compose.ui.graphics.Color disabledUncheckedSplitContainerColor, optional androidx.compose.ui.graphics.Color disabledUncheckedThumbColor, optional androidx.compose.ui.graphics.Color disabledUncheckedTrackBorderColor);
    method @BytecodeOnly public androidx.wear.compose.material3.SplitSwitchButtonColors copy-G1PFc-w(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long);
    method @BytecodeOnly public long getCheckedContainerColor-0d7_KjU();
    method @BytecodeOnly public long getCheckedContentColor-0d7_KjU();
    method @BytecodeOnly public long getCheckedSecondaryContentColor-0d7_KjU();
    method @BytecodeOnly public long getCheckedSplitContainerColor-0d7_KjU();
    method @BytecodeOnly public long getCheckedThumbColor-0d7_KjU();
    method @BytecodeOnly public long getCheckedThumbIconColor-0d7_KjU();
    method @BytecodeOnly public long getCheckedTrackBorderColor-0d7_KjU();
    method @BytecodeOnly public long getCheckedTrackColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledCheckedContainerColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledCheckedContentColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledCheckedSecondaryContentColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledCheckedSplitContainerColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledCheckedThumbColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledCheckedThumbIconColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledCheckedTrackBorderColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledCheckedTrackColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledUncheckedContainerColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledUncheckedContentColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledUncheckedSecondaryContentColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledUncheckedSplitContainerColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledUncheckedThumbColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledUncheckedTrackBorderColor-0d7_KjU();
    method @BytecodeOnly public long getUncheckedContainerColor-0d7_KjU();
    method @BytecodeOnly public long getUncheckedContentColor-0d7_KjU();
    method @BytecodeOnly public long getUncheckedSecondaryContentColor-0d7_KjU();
    method @BytecodeOnly public long getUncheckedSplitContainerColor-0d7_KjU();
    method @BytecodeOnly public long getUncheckedThumbColor-0d7_KjU();
    method @BytecodeOnly public long getUncheckedTrackBorderColor-0d7_KjU();
    method @BytecodeOnly public long getUncheckedTrackColor-0d7_KjU();
    property public androidx.compose.ui.graphics.Color checkedContainerColor;
    property public androidx.compose.ui.graphics.Color checkedContentColor;
    property public androidx.compose.ui.graphics.Color checkedSecondaryContentColor;
    property public androidx.compose.ui.graphics.Color checkedSplitContainerColor;
    property public androidx.compose.ui.graphics.Color checkedThumbColor;
    property public androidx.compose.ui.graphics.Color checkedThumbIconColor;
    property public androidx.compose.ui.graphics.Color checkedTrackBorderColor;
    property public androidx.compose.ui.graphics.Color checkedTrackColor;
    property public androidx.compose.ui.graphics.Color disabledCheckedContainerColor;
    property public androidx.compose.ui.graphics.Color disabledCheckedContentColor;
    property public androidx.compose.ui.graphics.Color disabledCheckedSecondaryContentColor;
    property public androidx.compose.ui.graphics.Color disabledCheckedSplitContainerColor;
    property public androidx.compose.ui.graphics.Color disabledCheckedThumbColor;
    property public androidx.compose.ui.graphics.Color disabledCheckedThumbIconColor;
    property public androidx.compose.ui.graphics.Color disabledCheckedTrackBorderColor;
    property public androidx.compose.ui.graphics.Color disabledCheckedTrackColor;
    property public androidx.compose.ui.graphics.Color disabledUncheckedContainerColor;
    property public androidx.compose.ui.graphics.Color disabledUncheckedContentColor;
    property public androidx.compose.ui.graphics.Color disabledUncheckedSecondaryContentColor;
    property public androidx.compose.ui.graphics.Color disabledUncheckedSplitContainerColor;
    property public androidx.compose.ui.graphics.Color disabledUncheckedThumbColor;
    property public androidx.compose.ui.graphics.Color disabledUncheckedTrackBorderColor;
    property public androidx.compose.ui.graphics.Color uncheckedContainerColor;
    property public androidx.compose.ui.graphics.Color uncheckedContentColor;
    property public androidx.compose.ui.graphics.Color uncheckedSecondaryContentColor;
    property public androidx.compose.ui.graphics.Color uncheckedSplitContainerColor;
    property public androidx.compose.ui.graphics.Color uncheckedThumbColor;
    property public androidx.compose.ui.graphics.Color uncheckedTrackBorderColor;
    property public androidx.compose.ui.graphics.Color uncheckedTrackColor;
  }

  public final class StepperColors {
    ctor @KotlinOnly public StepperColors(androidx.compose.ui.graphics.Color contentColor, androidx.compose.ui.graphics.Color buttonContainerColor, androidx.compose.ui.graphics.Color buttonIconColor, androidx.compose.ui.graphics.Color disabledContentColor, androidx.compose.ui.graphics.Color disabledButtonContainerColor, androidx.compose.ui.graphics.Color disabledButtonIconColor);
    ctor @BytecodeOnly public StepperColors(long, long, long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly public androidx.wear.compose.material3.StepperColors copy(optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color buttonContainerColor, optional androidx.compose.ui.graphics.Color buttonIconColor, optional androidx.compose.ui.graphics.Color disabledContentColor, optional androidx.compose.ui.graphics.Color disabledButtonContainerColor, optional androidx.compose.ui.graphics.Color disabledButtonIconColor);
    method @BytecodeOnly public androidx.wear.compose.material3.StepperColors copy-tNS2XkQ(long, long, long, long, long, long);
    method @BytecodeOnly public long getButtonContainerColor-0d7_KjU();
    method @BytecodeOnly public long getButtonIconColor-0d7_KjU();
    method @BytecodeOnly public long getContentColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledButtonContainerColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledButtonIconColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledContentColor-0d7_KjU();
    property public androidx.compose.ui.graphics.Color buttonContainerColor;
    property public androidx.compose.ui.graphics.Color buttonIconColor;
    property public androidx.compose.ui.graphics.Color contentColor;
    property public androidx.compose.ui.graphics.Color disabledButtonContainerColor;
    property public androidx.compose.ui.graphics.Color disabledButtonIconColor;
    property public androidx.compose.ui.graphics.Color disabledContentColor;
  }

  public final class StepperDefaults {
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.StepperColors colors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.StepperColors colors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.StepperColors colors(optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color buttonContainerColor, optional androidx.compose.ui.graphics.Color buttonIconColor, optional androidx.compose.ui.graphics.Color disabledContentColor, optional androidx.compose.ui.graphics.Color disabledButtonContainerColor, optional androidx.compose.ui.graphics.Color disabledButtonIconColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.StepperColors colors-5tl4gsc(long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly public float getIconSize-D9Ej5fM();
    property public androidx.compose.ui.unit.Dp IconSize;
    field public static final androidx.wear.compose.material3.StepperDefaults INSTANCE;
  }

  public final class StepperKt {
    method @androidx.compose.runtime.Composable public static void Stepper(float value, kotlin.jvm.functions.Function1<? super java.lang.Float,kotlin.Unit> onValueChange, int steps, kotlin.jvm.functions.Function0<kotlin.Unit> decreaseIcon, kotlin.jvm.functions.Function0<kotlin.Unit> increaseIcon, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional kotlin.ranges.ClosedFloatingPointRange<java.lang.Float> valueRange, optional androidx.wear.compose.material3.StepperColors colors, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void Stepper(float, kotlin.jvm.functions.Function1<? super java.lang.Float!,kotlin.Unit!>, int, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, kotlin.ranges.ClosedFloatingPointRange<java.lang.Float!>?, androidx.wear.compose.material3.StepperColors?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void Stepper(int value, kotlin.jvm.functions.Function1<? super java.lang.Integer,kotlin.Unit> onValueChange, kotlin.ranges.IntProgression valueProgression, kotlin.jvm.functions.Function0<kotlin.Unit> decreaseIcon, kotlin.jvm.functions.Function0<kotlin.Unit> increaseIcon, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.wear.compose.material3.StepperColors colors, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void Stepper(int, kotlin.jvm.functions.Function1<? super java.lang.Integer!,kotlin.Unit!>, kotlin.ranges.IntProgression, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, androidx.wear.compose.material3.StepperColors?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
  }

  public interface SurfaceTransformation {
    method public void applyContainerTransformation(androidx.compose.ui.graphics.GraphicsLayerScope);
    method public void applyContentTransformation(androidx.compose.ui.graphics.GraphicsLayerScope);
    method public androidx.compose.ui.graphics.painter.Painter createContainerPainter(androidx.compose.ui.graphics.painter.Painter painter, androidx.compose.ui.graphics.Shape shape, optional androidx.compose.foundation.BorderStroke? border);
  }

  public final class SurfaceTransformationKt {
    method @androidx.compose.runtime.Stable public static androidx.wear.compose.material3.SurfaceTransformation SurfaceTransformation(androidx.wear.compose.foundation.lazy.TransformingLazyColumnItemScope, androidx.wear.compose.material3.lazy.TransformationSpec spec);
  }

  public final class SwipeToDismissBoxKt {
    method @KotlinOnly @androidx.compose.runtime.Composable public static void SwipeToDismissBox(androidx.wear.compose.foundation.SwipeToDismissBoxState state, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color backgroundScrimColor, optional androidx.compose.ui.graphics.Color contentScrimColor, optional Object backgroundKey, optional Object contentKey, optional boolean userSwipeEnabled, kotlin.jvm.functions.Function2<androidx.compose.foundation.layout.BoxScope,java.lang.Boolean,kotlin.Unit> content);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void SwipeToDismissBox(kotlin.jvm.functions.Function0<kotlin.Unit> onDismissed, optional androidx.compose.ui.Modifier modifier, optional androidx.wear.compose.foundation.SwipeToDismissBoxState state, optional androidx.compose.ui.graphics.Color backgroundScrimColor, optional androidx.compose.ui.graphics.Color contentScrimColor, optional Object backgroundKey, optional Object contentKey, optional boolean userSwipeEnabled, kotlin.jvm.functions.Function2<androidx.compose.foundation.layout.BoxScope,java.lang.Boolean,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void SwipeToDismissBox-LHOAhiI(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, androidx.wear.compose.foundation.SwipeToDismissBoxState?, long, long, Object?, Object?, boolean, kotlin.jvm.functions.Function4<? super androidx.compose.foundation.layout.BoxScope!,? super java.lang.Boolean!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void SwipeToDismissBox-njYn8yo(androidx.wear.compose.foundation.SwipeToDismissBoxState, androidx.compose.ui.Modifier?, long, long, Object?, Object?, boolean, kotlin.jvm.functions.Function4<? super androidx.compose.foundation.layout.BoxScope!,? super java.lang.Boolean!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
  }

  public final class SwipeToRevealDefaults {
    method public androidx.wear.compose.foundation.GestureInclusion gestureInclusion(androidx.wear.compose.material3.RevealState state, optional @FloatRange(from=0.0, to=1.0) float edgeZoneFraction);
    method public androidx.wear.compose.foundation.GestureInclusion getBidirectionalGestureInclusion();
    method @BytecodeOnly public float getLargeActionButtonHeight-D9Ej5fM();
    method public float getLeftEdgeZoneFraction();
    property public androidx.compose.ui.unit.Dp LargeActionButtonHeight;
    property public float LeftEdgeZoneFraction;
    property public androidx.wear.compose.foundation.GestureInclusion bidirectionalGestureInclusion;
    field public static final androidx.wear.compose.material3.SwipeToRevealDefaults INSTANCE;
  }

  public final class SwipeToRevealKt {
    method @KotlinOnly @androidx.compose.runtime.Composable public static void SwipeToReveal(kotlin.jvm.functions.Function1<androidx.wear.compose.material3.SwipeToRevealScope,kotlin.Unit> primaryAction, kotlin.jvm.functions.Function0<kotlin.Unit> onSwipePrimaryAction, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function1<androidx.wear.compose.material3.SwipeToRevealScope,kotlin.Unit>? secondaryAction, optional kotlin.jvm.functions.Function1<androidx.wear.compose.material3.SwipeToRevealScope,kotlin.Unit>? undoPrimaryAction, optional kotlin.jvm.functions.Function1<androidx.wear.compose.material3.SwipeToRevealScope,kotlin.Unit>? undoSecondaryAction, optional androidx.wear.compose.material3.RevealState revealState, optional androidx.wear.compose.material3.RevealDirection revealDirection, optional boolean hasPartiallyRevealedState, optional androidx.wear.compose.foundation.GestureInclusion gestureInclusion, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void SwipeToReveal-TBs7xKg(kotlin.jvm.functions.Function3<? super androidx.wear.compose.material3.SwipeToRevealScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function3<? super androidx.wear.compose.material3.SwipeToRevealScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.wear.compose.material3.SwipeToRevealScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.wear.compose.material3.SwipeToRevealScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.wear.compose.material3.RevealState?, int, boolean, androidx.wear.compose.foundation.GestureInclusion?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public static androidx.wear.compose.material3.RevealState rememberRevealState(optional androidx.wear.compose.material3.RevealValue initialValue);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static androidx.wear.compose.material3.RevealState rememberRevealState-pkmXi8A(int, androidx.compose.runtime.Composer?, int, int);
  }

  public final class SwipeToRevealScope {
    method @KotlinOnly @androidx.compose.runtime.Composable public void PrimaryActionButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, kotlin.jvm.functions.Function0<kotlin.Unit> icon, kotlin.jvm.functions.Function0<kotlin.Unit> text, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public void PrimaryActionButton-wBJOh4Y(kotlin.jvm.functions.Function0<kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, long, long, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public void SecondaryActionButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, kotlin.jvm.functions.Function0<kotlin.Unit> icon, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public void SecondaryActionButton-jA1GFJw(kotlin.jvm.functions.Function0<kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, long, long, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public void UndoActionButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, kotlin.jvm.functions.Function0<kotlin.Unit> text, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public void UndoActionButton-wBJOh4Y(kotlin.jvm.functions.Function0<kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, long, long, androidx.compose.runtime.Composer?, int, int);
  }

  @androidx.compose.runtime.Immutable public final class SwitchButtonColors {
    ctor @KotlinOnly public SwitchButtonColors(androidx.compose.ui.graphics.Color checkedContainerColor, androidx.compose.ui.graphics.Color checkedContentColor, androidx.compose.ui.graphics.Color checkedSecondaryContentColor, androidx.compose.ui.graphics.Color checkedIconColor, androidx.compose.ui.graphics.Color checkedThumbColor, androidx.compose.ui.graphics.Color checkedThumbIconColor, androidx.compose.ui.graphics.Color checkedTrackBorderColor, androidx.compose.ui.graphics.Color checkedTrackColor, androidx.compose.ui.graphics.Color uncheckedContainerColor, androidx.compose.ui.graphics.Color uncheckedContentColor, androidx.compose.ui.graphics.Color uncheckedSecondaryContentColor, androidx.compose.ui.graphics.Color uncheckedIconColor, androidx.compose.ui.graphics.Color uncheckedThumbColor, androidx.compose.ui.graphics.Color uncheckedTrackColor, androidx.compose.ui.graphics.Color uncheckedTrackBorderColor, androidx.compose.ui.graphics.Color disabledCheckedContainerColor, androidx.compose.ui.graphics.Color disabledCheckedContentColor, androidx.compose.ui.graphics.Color disabledCheckedSecondaryContentColor, androidx.compose.ui.graphics.Color disabledCheckedIconColor, androidx.compose.ui.graphics.Color disabledCheckedThumbColor, androidx.compose.ui.graphics.Color disabledCheckedThumbIconColor, androidx.compose.ui.graphics.Color disabledCheckedTrackColor, androidx.compose.ui.graphics.Color disabledCheckedTrackBorderColor, androidx.compose.ui.graphics.Color disabledUncheckedContainerColor, androidx.compose.ui.graphics.Color disabledUncheckedContentColor, androidx.compose.ui.graphics.Color disabledUncheckedSecondaryContentColor, androidx.compose.ui.graphics.Color disabledUncheckedIconColor, androidx.compose.ui.graphics.Color disabledUncheckedThumbColor, androidx.compose.ui.graphics.Color disabledUncheckedTrackBorderColor);
    ctor @BytecodeOnly public SwitchButtonColors(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly public androidx.wear.compose.material3.SwitchButtonColors copy(optional androidx.compose.ui.graphics.Color checkedContainerColor, optional androidx.compose.ui.graphics.Color checkedContentColor, optional androidx.compose.ui.graphics.Color checkedSecondaryContentColor, optional androidx.compose.ui.graphics.Color checkedIconColor, optional androidx.compose.ui.graphics.Color checkedThumbColor, optional androidx.compose.ui.graphics.Color checkedThumbIconColor, optional androidx.compose.ui.graphics.Color checkedTrackColor, optional androidx.compose.ui.graphics.Color checkedTrackBorderColor, optional androidx.compose.ui.graphics.Color uncheckedContainerColor, optional androidx.compose.ui.graphics.Color uncheckedContentColor, optional androidx.compose.ui.graphics.Color uncheckedSecondaryContentColor, optional androidx.compose.ui.graphics.Color uncheckedIconColor, optional androidx.compose.ui.graphics.Color uncheckedThumbColor, optional androidx.compose.ui.graphics.Color uncheckedTrackColor, optional androidx.compose.ui.graphics.Color uncheckedTrackBorderColor, optional androidx.compose.ui.graphics.Color disabledCheckedContainerColor, optional androidx.compose.ui.graphics.Color disabledCheckedContentColor, optional androidx.compose.ui.graphics.Color disabledCheckedSecondaryContentColor, optional androidx.compose.ui.graphics.Color disabledCheckedIconColor, optional androidx.compose.ui.graphics.Color disabledCheckedThumbColor, optional androidx.compose.ui.graphics.Color disabledCheckedThumbIconColor, optional androidx.compose.ui.graphics.Color disabledCheckedTrackColor, optional androidx.compose.ui.graphics.Color disabledCheckedTrackBorderColor, optional androidx.compose.ui.graphics.Color disabledUncheckedContainerColor, optional androidx.compose.ui.graphics.Color disabledUncheckedContentColor, optional androidx.compose.ui.graphics.Color disabledUncheckedSecondaryContentColor, optional androidx.compose.ui.graphics.Color disabledUncheckedIconColor, optional androidx.compose.ui.graphics.Color disabledUncheckedThumbColor, optional androidx.compose.ui.graphics.Color disabledUncheckedTrackBorderColor);
    method @BytecodeOnly public androidx.wear.compose.material3.SwitchButtonColors copy-G1PFc-w(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long);
    method @BytecodeOnly public long getCheckedContainerColor-0d7_KjU();
    method @BytecodeOnly public long getCheckedContentColor-0d7_KjU();
    method @BytecodeOnly public long getCheckedIconColor-0d7_KjU();
    method @BytecodeOnly public long getCheckedSecondaryContentColor-0d7_KjU();
    method @BytecodeOnly public long getCheckedThumbColor-0d7_KjU();
    method @BytecodeOnly public long getCheckedThumbIconColor-0d7_KjU();
    method @BytecodeOnly public long getCheckedTrackBorderColor-0d7_KjU();
    method @BytecodeOnly public long getCheckedTrackColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledCheckedContainerColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledCheckedContentColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledCheckedIconColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledCheckedSecondaryContentColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledCheckedThumbColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledCheckedThumbIconColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledCheckedTrackBorderColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledCheckedTrackColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledUncheckedContainerColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledUncheckedContentColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledUncheckedIconColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledUncheckedSecondaryContentColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledUncheckedThumbColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledUncheckedTrackBorderColor-0d7_KjU();
    method @BytecodeOnly public long getUncheckedContainerColor-0d7_KjU();
    method @BytecodeOnly public long getUncheckedContentColor-0d7_KjU();
    method @BytecodeOnly public long getUncheckedIconColor-0d7_KjU();
    method @BytecodeOnly public long getUncheckedSecondaryContentColor-0d7_KjU();
    method @BytecodeOnly public long getUncheckedThumbColor-0d7_KjU();
    method @BytecodeOnly public long getUncheckedTrackBorderColor-0d7_KjU();
    method @BytecodeOnly public long getUncheckedTrackColor-0d7_KjU();
    property public androidx.compose.ui.graphics.Color checkedContainerColor;
    property public androidx.compose.ui.graphics.Color checkedContentColor;
    property public androidx.compose.ui.graphics.Color checkedIconColor;
    property public androidx.compose.ui.graphics.Color checkedSecondaryContentColor;
    property public androidx.compose.ui.graphics.Color checkedThumbColor;
    property public androidx.compose.ui.graphics.Color checkedThumbIconColor;
    property public androidx.compose.ui.graphics.Color checkedTrackBorderColor;
    property public androidx.compose.ui.graphics.Color checkedTrackColor;
    property public androidx.compose.ui.graphics.Color disabledCheckedContainerColor;
    property public androidx.compose.ui.graphics.Color disabledCheckedContentColor;
    property public androidx.compose.ui.graphics.Color disabledCheckedIconColor;
    property public androidx.compose.ui.graphics.Color disabledCheckedSecondaryContentColor;
    property public androidx.compose.ui.graphics.Color disabledCheckedThumbColor;
    property public androidx.compose.ui.graphics.Color disabledCheckedThumbIconColor;
    property public androidx.compose.ui.graphics.Color disabledCheckedTrackBorderColor;
    property public androidx.compose.ui.graphics.Color disabledCheckedTrackColor;
    property public androidx.compose.ui.graphics.Color disabledUncheckedContainerColor;
    property public androidx.compose.ui.graphics.Color disabledUncheckedContentColor;
    property public androidx.compose.ui.graphics.Color disabledUncheckedIconColor;
    property public androidx.compose.ui.graphics.Color disabledUncheckedSecondaryContentColor;
    property public androidx.compose.ui.graphics.Color disabledUncheckedThumbColor;
    property public androidx.compose.ui.graphics.Color disabledUncheckedTrackBorderColor;
    property public androidx.compose.ui.graphics.Color uncheckedContainerColor;
    property public androidx.compose.ui.graphics.Color uncheckedContentColor;
    property public androidx.compose.ui.graphics.Color uncheckedIconColor;
    property public androidx.compose.ui.graphics.Color uncheckedSecondaryContentColor;
    property public androidx.compose.ui.graphics.Color uncheckedThumbColor;
    property public androidx.compose.ui.graphics.Color uncheckedTrackBorderColor;
    property public androidx.compose.ui.graphics.Color uncheckedTrackColor;
  }

  public final class SwitchButtonDefaults {
    method public androidx.compose.foundation.layout.PaddingValues getContentPadding();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getSplitSwitchButtonShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getSplitSwitchButtonShape(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getSwitchButtonShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getSwitchButtonShape(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.SplitSwitchButtonColors splitSwitchButtonColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.SplitSwitchButtonColors splitSwitchButtonColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.SplitSwitchButtonColors splitSwitchButtonColors(optional androidx.compose.ui.graphics.Color checkedContainerColor, optional androidx.compose.ui.graphics.Color checkedContentColor, optional androidx.compose.ui.graphics.Color checkedSecondaryContentColor, optional androidx.compose.ui.graphics.Color checkedSplitContainerColor, optional androidx.compose.ui.graphics.Color checkedThumbColor, optional androidx.compose.ui.graphics.Color checkedThumbIconColor, optional androidx.compose.ui.graphics.Color checkedTrackColor, optional androidx.compose.ui.graphics.Color checkedTrackBorderColor, optional androidx.compose.ui.graphics.Color uncheckedContainerColor, optional androidx.compose.ui.graphics.Color uncheckedContentColor, optional androidx.compose.ui.graphics.Color uncheckedSecondaryContentColor, optional androidx.compose.ui.graphics.Color uncheckedSplitContainerColor, optional androidx.compose.ui.graphics.Color uncheckedThumbColor, optional androidx.compose.ui.graphics.Color uncheckedTrackColor, optional androidx.compose.ui.graphics.Color uncheckedTrackBorderColor, optional androidx.compose.ui.graphics.Color disabledCheckedContainerColor, optional androidx.compose.ui.graphics.Color disabledCheckedContentColor, optional androidx.compose.ui.graphics.Color disabledCheckedSecondaryContentColor, optional androidx.compose.ui.graphics.Color disabledCheckedSplitContainerColor, optional androidx.compose.ui.graphics.Color disabledCheckedThumbColor, optional androidx.compose.ui.graphics.Color disabledCheckedThumbIconColor, optional androidx.compose.ui.graphics.Color disabledCheckedTrackColor, optional androidx.compose.ui.graphics.Color disabledCheckedTrackBorderColor, optional androidx.compose.ui.graphics.Color disabledUncheckedContainerColor, optional androidx.compose.ui.graphics.Color disabledUncheckedContentColor, optional androidx.compose.ui.graphics.Color disabledUncheckedSecondaryContentColor, optional androidx.compose.ui.graphics.Color disabledUncheckedSplitContainerColor, optional androidx.compose.ui.graphics.Color disabledUncheckedThumbColor, optional androidx.compose.ui.graphics.Color disabledUncheckedTrackBorderColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.SplitSwitchButtonColors splitSwitchButtonColors-MmU5H5k(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int, int, int);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.SwitchButtonColors switchButtonColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.SwitchButtonColors switchButtonColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.SwitchButtonColors switchButtonColors(optional androidx.compose.ui.graphics.Color checkedContainerColor, optional androidx.compose.ui.graphics.Color checkedContentColor, optional androidx.compose.ui.graphics.Color checkedSecondaryContentColor, optional androidx.compose.ui.graphics.Color checkedIconColor, optional androidx.compose.ui.graphics.Color checkedThumbColor, optional androidx.compose.ui.graphics.Color checkedThumbIconColor, optional androidx.compose.ui.graphics.Color checkedTrackColor, optional androidx.compose.ui.graphics.Color checkedTrackBorderColor, optional androidx.compose.ui.graphics.Color uncheckedContainerColor, optional androidx.compose.ui.graphics.Color uncheckedContentColor, optional androidx.compose.ui.graphics.Color uncheckedSecondaryContentColor, optional androidx.compose.ui.graphics.Color uncheckedIconColor, optional androidx.compose.ui.graphics.Color uncheckedThumbColor, optional androidx.compose.ui.graphics.Color uncheckedTrackColor, optional androidx.compose.ui.graphics.Color uncheckedTrackBorderColor, optional androidx.compose.ui.graphics.Color disabledCheckedContainerColor, optional androidx.compose.ui.graphics.Color disabledCheckedContentColor, optional androidx.compose.ui.graphics.Color disabledCheckedSecondaryContentColor, optional androidx.compose.ui.graphics.Color disabledCheckedIconColor, optional androidx.compose.ui.graphics.Color disabledCheckedThumbColor, optional androidx.compose.ui.graphics.Color disabledCheckedThumbIconColor, optional androidx.compose.ui.graphics.Color disabledCheckedTrackColor, optional androidx.compose.ui.graphics.Color disabledCheckedTrackBorderColor, optional androidx.compose.ui.graphics.Color disabledUncheckedContainerColor, optional androidx.compose.ui.graphics.Color disabledUncheckedContentColor, optional androidx.compose.ui.graphics.Color disabledUncheckedSecondaryContentColor, optional androidx.compose.ui.graphics.Color disabledUncheckedIconColor, optional androidx.compose.ui.graphics.Color disabledUncheckedThumbColor, optional androidx.compose.ui.graphics.Color disabledUncheckedTrackBorderColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.SwitchButtonColors switchButtonColors-MmU5H5k(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int, int, int);
    property public androidx.compose.foundation.layout.PaddingValues ContentPadding;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape splitSwitchButtonShape;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape switchButtonShape;
    field public static final androidx.wear.compose.material3.SwitchButtonDefaults INSTANCE;
  }

  public final class SwitchButtonKt {
    method @androidx.compose.runtime.Composable public static void SplitSwitchButton(boolean checked, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onCheckedChange, String? toggleContentDescription, kotlin.jvm.functions.Function0<kotlin.Unit> onContainerClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.SplitSwitchButtonColors colors, optional androidx.compose.foundation.interaction.MutableInteractionSource? toggleInteractionSource, optional androidx.compose.foundation.interaction.MutableInteractionSource? containerInteractionSource, optional androidx.wear.compose.material3.SurfaceTransformation? transformation, optional String? containerClickLabel, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit>? secondaryLabel, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> label);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void SplitSwitchButton(boolean, kotlin.jvm.functions.Function1<? super java.lang.Boolean!,kotlin.Unit!>, String?, kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, androidx.compose.ui.graphics.Shape?, androidx.wear.compose.material3.SplitSwitchButtonColors?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.wear.compose.material3.SurfaceTransformation?, String?, androidx.compose.foundation.layout.PaddingValues?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @androidx.compose.runtime.Composable public static void SwitchButton(boolean checked, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onCheckedChange, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.wear.compose.material3.SwitchButtonColors colors, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, optional androidx.wear.compose.material3.SurfaceTransformation? transformation, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? icon, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit>? secondaryLabel, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> label);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void SwitchButton(boolean, kotlin.jvm.functions.Function1<? super java.lang.Boolean!,kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, androidx.compose.ui.graphics.Shape?, androidx.wear.compose.material3.SwitchButtonColors?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.wear.compose.material3.SurfaceTransformation?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
  }

  @androidx.compose.runtime.Immutable public final class TextButtonColors {
    ctor @KotlinOnly public TextButtonColors(androidx.compose.ui.graphics.Color containerColor, androidx.compose.ui.graphics.Color contentColor, androidx.compose.ui.graphics.Color disabledContainerColor, androidx.compose.ui.graphics.Color disabledContentColor);
    ctor @BytecodeOnly public TextButtonColors(long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly public androidx.wear.compose.material3.TextButtonColors copy(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledContentColor);
    method @BytecodeOnly public androidx.wear.compose.material3.TextButtonColors copy-jRlVdoo(long, long, long, long);
    method @BytecodeOnly public long getContainerColor-0d7_KjU();
    method @BytecodeOnly public long getContentColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledContainerColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledContentColor-0d7_KjU();
    property public androidx.compose.ui.graphics.Color containerColor;
    property public androidx.compose.ui.graphics.Color contentColor;
    property public androidx.compose.ui.graphics.Color disabledContainerColor;
    property public androidx.compose.ui.graphics.Color disabledContentColor;
  }

  public final class TextButtonDefaults {
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextButtonShapes animatedShapes();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextButtonShapes animatedShapes(optional androidx.compose.foundation.shape.CornerBasedShape? shape, optional androidx.compose.foundation.shape.CornerBasedShape? pressedShape);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextButtonShapes animatedShapes(androidx.compose.foundation.shape.CornerBasedShape?, androidx.compose.foundation.shape.CornerBasedShape?, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextButtonShapes animatedShapes(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextButtonColors filledTextButtonColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextButtonColors filledTextButtonColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextButtonColors filledTextButtonColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextButtonColors filledTextButtonColors-ro_MJ88(long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextButtonColors filledTonalTextButtonColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextButtonColors filledTonalTextButtonColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextButtonColors filledTonalTextButtonColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextButtonColors filledTonalTextButtonColors-ro_MJ88(long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextButtonColors filledVariantTextButtonColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextButtonColors filledVariantTextButtonColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextButtonColors filledVariantTextButtonColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextButtonColors filledVariantTextButtonColors-ro_MJ88(long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly public float getDefaultButtonSize-D9Ej5fM();
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.ui.text.TextStyle getDefaultButtonTextStyle();
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.ui.text.TextStyle getDefaultButtonTextStyle(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getLargeButtonSize-D9Ej5fM();
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.ui.text.TextStyle getLargeButtonTextStyle();
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.ui.text.TextStyle getLargeButtonTextStyle(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.CornerBasedShape getPressedShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.CornerBasedShape getPressedShape(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.RoundedCornerShape getShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.RoundedCornerShape getShape(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getSmallButtonSize-D9Ej5fM();
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.ui.text.TextStyle getSmallButtonTextStyle();
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.ui.text.TextStyle getSmallButtonTextStyle(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextButtonColors outlinedTextButtonColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextButtonColors outlinedTextButtonColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextButtonColors outlinedTextButtonColors(optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color disabledContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextButtonColors outlinedTextButtonColors-dgg9oW8(long, long, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextButtonShapes shapes();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextButtonShapes shapes(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextButtonShapes shapes(androidx.compose.ui.graphics.Shape shape);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextButtonShapes shapes(androidx.compose.ui.graphics.Shape, androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextButtonColors textButtonColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextButtonColors textButtonColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextButtonColors textButtonColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextButtonColors textButtonColors-ro_MJ88(long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    property public androidx.compose.ui.unit.Dp DefaultButtonSize;
    property public androidx.compose.ui.unit.Dp LargeButtonSize;
    property public androidx.compose.ui.unit.Dp SmallButtonSize;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.ui.text.TextStyle defaultButtonTextStyle;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.ui.text.TextStyle largeButtonTextStyle;
    property @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.CornerBasedShape pressedShape;
    property @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.RoundedCornerShape shape;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.ui.text.TextStyle smallButtonTextStyle;
    field public static final androidx.wear.compose.material3.TextButtonDefaults INSTANCE;
  }

  public final class TextButtonKt {
    method @androidx.compose.runtime.Composable public static void TextButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional String? onLongClickLabel, optional boolean enabled, optional androidx.wear.compose.material3.TextButtonShapes shapes, optional androidx.wear.compose.material3.TextButtonColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void TextButton(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function0<kotlin.Unit!>?, String?, boolean, androidx.wear.compose.material3.TextButtonShapes?, androidx.wear.compose.material3.TextButtonColors?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
  }

  public final class TextButtonShapes {
    ctor public TextButtonShapes(androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Shape pressedShape);
    method public androidx.wear.compose.material3.TextButtonShapes copy(optional androidx.compose.ui.graphics.Shape? shape, optional androidx.compose.ui.graphics.Shape? pressedShape);
    method public androidx.compose.ui.graphics.Shape getPressedShape();
    method public androidx.compose.ui.graphics.Shape getShape();
    property public androidx.compose.ui.graphics.Shape pressedShape;
    property public androidx.compose.ui.graphics.Shape shape;
  }

  public final class TextConfiguration {
    ctor @KotlinOnly public TextConfiguration(androidx.compose.ui.text.style.TextAlign? textAlign, androidx.compose.ui.text.style.TextOverflow overflow, int maxLines);
    ctor @BytecodeOnly public TextConfiguration(androidx.compose.ui.text.style.TextAlign!, int, int, kotlin.jvm.internal.DefaultConstructorMarker!);
    method public int getMaxLines();
    method @BytecodeOnly public int getOverflow-gIe3tQ8();
    method @BytecodeOnly public androidx.compose.ui.text.style.TextAlign? getTextAlign-buA522U();
    property public int maxLines;
    property public androidx.compose.ui.text.style.TextOverflow overflow;
    property public androidx.compose.ui.text.style.TextAlign? textAlign;
  }

  public final class TextConfigurationDefaults {
    method public int getMaxLines();
    method @BytecodeOnly public int getOverflow-gIe3tQ8();
    method @BytecodeOnly public androidx.compose.ui.text.style.TextAlign? getTextAlign-buA522U();
    property public int MaxLines;
    property public androidx.compose.ui.text.style.TextOverflow Overflow;
    property public androidx.compose.ui.text.style.TextAlign? TextAlign;
    field public static final androidx.wear.compose.material3.TextConfigurationDefaults INSTANCE;
  }

  public final class TextKt {
    method @androidx.compose.runtime.Composable public static void ProvideTextStyle(androidx.compose.ui.text.TextStyle value, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void ProvideTextStyle(androidx.compose.ui.text.TextStyle, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void Text(androidx.compose.ui.text.AnnotatedString text, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color color, optional androidx.compose.ui.unit.TextUnit fontSize, optional androidx.compose.ui.text.font.FontStyle? fontStyle, optional androidx.compose.ui.text.font.FontWeight? fontWeight, optional androidx.compose.ui.text.font.FontFamily? fontFamily, optional androidx.compose.ui.unit.TextUnit letterSpacing, optional androidx.compose.ui.text.style.TextDecoration? textDecoration, optional androidx.compose.ui.text.style.TextAlign? textAlign, optional androidx.compose.ui.unit.TextUnit lineHeight, optional androidx.compose.ui.text.style.TextOverflow overflow, optional boolean softWrap, optional int maxLines, optional int minLines, optional java.util.Map<java.lang.String,androidx.compose.foundation.text.InlineTextContent> inlineContent, optional kotlin.jvm.functions.Function1<androidx.compose.ui.text.TextLayoutResult,kotlin.Unit> onTextLayout, optional androidx.compose.ui.text.TextStyle style);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void Text(String text, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color color, optional androidx.compose.ui.unit.TextUnit fontSize, optional androidx.compose.ui.text.font.FontStyle? fontStyle, optional androidx.compose.ui.text.font.FontWeight? fontWeight, optional androidx.compose.ui.text.font.FontFamily? fontFamily, optional androidx.compose.ui.unit.TextUnit letterSpacing, optional androidx.compose.ui.text.style.TextDecoration? textDecoration, optional androidx.compose.ui.text.style.TextAlign? textAlign, optional androidx.compose.ui.unit.TextUnit lineHeight, optional androidx.compose.ui.text.style.TextOverflow overflow, optional boolean softWrap, optional int maxLines, optional int minLines, optional kotlin.jvm.functions.Function1<androidx.compose.ui.text.TextLayoutResult,kotlin.Unit> onTextLayout, optional androidx.compose.ui.text.TextStyle style);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void Text--4IGK_g(String, androidx.compose.ui.Modifier?, long, long, androidx.compose.ui.text.font.FontStyle?, androidx.compose.ui.text.font.FontWeight?, androidx.compose.ui.text.font.FontFamily?, long, androidx.compose.ui.text.style.TextDecoration?, androidx.compose.ui.text.style.TextAlign?, long, int, boolean, int, int, kotlin.jvm.functions.Function1<? super androidx.compose.ui.text.TextLayoutResult!,kotlin.Unit!>?, androidx.compose.ui.text.TextStyle?, androidx.compose.runtime.Composer?, int, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void Text-IbK3jfQ(androidx.compose.ui.text.AnnotatedString, androidx.compose.ui.Modifier?, long, long, androidx.compose.ui.text.font.FontStyle?, androidx.compose.ui.text.font.FontWeight?, androidx.compose.ui.text.font.FontFamily?, long, androidx.compose.ui.text.style.TextDecoration?, androidx.compose.ui.text.style.TextAlign?, long, int, boolean, int, int, java.util.Map<java.lang.String!,androidx.compose.foundation.text.InlineTextContent!>?, kotlin.jvm.functions.Function1<? super androidx.compose.ui.text.TextLayoutResult!,kotlin.Unit!>?, androidx.compose.ui.text.TextStyle?, androidx.compose.runtime.Composer?, int, int, int);
    method public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.wear.compose.material3.TextConfiguration> getLocalTextConfiguration();
    method public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.ui.text.TextStyle> getLocalTextStyle();
    property public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.wear.compose.material3.TextConfiguration> LocalTextConfiguration;
    property public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.ui.text.TextStyle> LocalTextStyle;
  }

  @androidx.compose.runtime.Immutable public final class TextToggleButtonColors {
    ctor @KotlinOnly public TextToggleButtonColors(androidx.compose.ui.graphics.Color checkedContainerColor, androidx.compose.ui.graphics.Color checkedContentColor, androidx.compose.ui.graphics.Color uncheckedContainerColor, androidx.compose.ui.graphics.Color uncheckedContentColor, androidx.compose.ui.graphics.Color disabledCheckedContainerColor, androidx.compose.ui.graphics.Color disabledCheckedContentColor, androidx.compose.ui.graphics.Color disabledUncheckedContainerColor, androidx.compose.ui.graphics.Color disabledUncheckedContentColor);
    ctor @BytecodeOnly public TextToggleButtonColors(long, long, long, long, long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly public androidx.wear.compose.material3.TextToggleButtonColors copy(optional androidx.compose.ui.graphics.Color checkedContainerColor, optional androidx.compose.ui.graphics.Color checkedContentColor, optional androidx.compose.ui.graphics.Color uncheckedContainerColor, optional androidx.compose.ui.graphics.Color uncheckedContentColor, optional androidx.compose.ui.graphics.Color disabledCheckedContainerColor, optional androidx.compose.ui.graphics.Color disabledCheckedContentColor, optional androidx.compose.ui.graphics.Color disabledUncheckedContainerColor, optional androidx.compose.ui.graphics.Color disabledUncheckedContentColor);
    method @BytecodeOnly public androidx.wear.compose.material3.TextToggleButtonColors copy-FD3wquc(long, long, long, long, long, long, long, long);
    method @BytecodeOnly public long getCheckedContainerColor-0d7_KjU();
    method @BytecodeOnly public long getCheckedContentColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledCheckedContainerColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledCheckedContentColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledUncheckedContainerColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledUncheckedContentColor-0d7_KjU();
    method @BytecodeOnly public long getUncheckedContainerColor-0d7_KjU();
    method @BytecodeOnly public long getUncheckedContentColor-0d7_KjU();
    property public androidx.compose.ui.graphics.Color checkedContainerColor;
    property public androidx.compose.ui.graphics.Color checkedContentColor;
    property public androidx.compose.ui.graphics.Color disabledCheckedContainerColor;
    property public androidx.compose.ui.graphics.Color disabledCheckedContentColor;
    property public androidx.compose.ui.graphics.Color disabledUncheckedContainerColor;
    property public androidx.compose.ui.graphics.Color disabledUncheckedContentColor;
    property public androidx.compose.ui.graphics.Color uncheckedContainerColor;
    property public androidx.compose.ui.graphics.Color uncheckedContentColor;
  }

  public final class TextToggleButtonDefaults {
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextToggleButtonShapes animatedShapes();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextToggleButtonShapes animatedShapes(optional androidx.compose.foundation.shape.CornerBasedShape? shape, optional androidx.compose.foundation.shape.CornerBasedShape? pressedShape);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextToggleButtonShapes animatedShapes(androidx.compose.foundation.shape.CornerBasedShape?, androidx.compose.foundation.shape.CornerBasedShape?, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextToggleButtonShapes animatedShapes(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextToggleButtonColors colors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextToggleButtonColors colors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextToggleButtonColors colors(optional androidx.compose.ui.graphics.Color checkedContainerColor, optional androidx.compose.ui.graphics.Color checkedContentColor, optional androidx.compose.ui.graphics.Color uncheckedContainerColor, optional androidx.compose.ui.graphics.Color uncheckedContentColor, optional androidx.compose.ui.graphics.Color disabledCheckedContainerColor, optional androidx.compose.ui.graphics.Color disabledCheckedContentColor, optional androidx.compose.ui.graphics.Color disabledUncheckedContainerColor, optional androidx.compose.ui.graphics.Color disabledUncheckedContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextToggleButtonColors colors-oq7We08(long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.CornerBasedShape getCheckedShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.CornerBasedShape getCheckedShape(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getExtraLargeSize-D9Ej5fM();
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.ui.text.TextStyle getExtraLargeTextStyle();
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.ui.text.TextStyle getExtraLargeTextStyle(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getLargeSize-D9Ej5fM();
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.ui.text.TextStyle getLargeTextStyle();
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.ui.text.TextStyle getLargeTextStyle(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.CornerBasedShape getPressedShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.CornerBasedShape getPressedShape(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.RoundedCornerShape getShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.RoundedCornerShape getShape(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getSize-D9Ej5fM();
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.ui.text.TextStyle getTextStyle();
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.ui.text.TextStyle getTextStyle(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextToggleButtonShapes shapes();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextToggleButtonShapes shapes(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextToggleButtonShapes shapes(androidx.compose.ui.graphics.Shape shape);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextToggleButtonShapes shapes(androidx.compose.ui.graphics.Shape, androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextToggleButtonShapes variantAnimatedShapes();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextToggleButtonShapes variantAnimatedShapes(optional androidx.compose.foundation.shape.CornerBasedShape? uncheckedShape, optional androidx.compose.foundation.shape.CornerBasedShape? checkedShape);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextToggleButtonShapes variantAnimatedShapes(androidx.compose.foundation.shape.CornerBasedShape?, androidx.compose.foundation.shape.CornerBasedShape?, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TextToggleButtonShapes variantAnimatedShapes(androidx.compose.runtime.Composer?, int);
    property public androidx.compose.ui.unit.Dp ExtraLargeSize;
    property public androidx.compose.ui.unit.Dp LargeSize;
    property public androidx.compose.ui.unit.Dp Size;
    property @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.CornerBasedShape checkedShape;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.ui.text.TextStyle extraLargeTextStyle;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.ui.text.TextStyle largeTextStyle;
    property @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.CornerBasedShape pressedShape;
    property @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.RoundedCornerShape shape;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.ui.text.TextStyle textStyle;
    field public static final androidx.wear.compose.material3.TextToggleButtonDefaults INSTANCE;
  }

  public final class TextToggleButtonKt {
    method @androidx.compose.runtime.Composable public static void TextToggleButton(boolean checked, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onCheckedChange, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.wear.compose.material3.TextToggleButtonColors colors, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, optional androidx.wear.compose.material3.TextToggleButtonShapes shapes, optional androidx.compose.foundation.BorderStroke? border, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void TextToggleButton(boolean, kotlin.jvm.functions.Function1<? super java.lang.Boolean!,kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, androidx.wear.compose.material3.TextToggleButtonColors?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.wear.compose.material3.TextToggleButtonShapes?, androidx.compose.foundation.BorderStroke?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
  }

  public final class TextToggleButtonShapes {
    ctor public TextToggleButtonShapes(androidx.compose.ui.graphics.Shape uncheckedShape, optional androidx.compose.ui.graphics.Shape checkedShape, optional androidx.compose.ui.graphics.Shape uncheckedPressedShape, optional androidx.compose.ui.graphics.Shape checkedPressedShape);
    method public androidx.wear.compose.material3.TextToggleButtonShapes copy(optional androidx.compose.ui.graphics.Shape? uncheckedShape, optional androidx.compose.ui.graphics.Shape? checkedShape, optional androidx.compose.ui.graphics.Shape? uncheckedPressedShape, optional androidx.compose.ui.graphics.Shape? checkedPressedShape);
    method public androidx.compose.ui.graphics.Shape getCheckedPressedShape();
    method public androidx.compose.ui.graphics.Shape getCheckedShape();
    method public androidx.compose.ui.graphics.Shape getUncheckedPressedShape();
    method public androidx.compose.ui.graphics.Shape getUncheckedShape();
    property public androidx.compose.ui.graphics.Shape checkedPressedShape;
    property public androidx.compose.ui.graphics.Shape checkedShape;
    property public androidx.compose.ui.graphics.Shape uncheckedPressedShape;
    property public androidx.compose.ui.graphics.Shape uncheckedShape;
  }

  @androidx.compose.runtime.Immutable public final class TimePickerColors {
    ctor @KotlinOnly public TimePickerColors(androidx.compose.ui.graphics.Color selectedPickerContentColor, androidx.compose.ui.graphics.Color unselectedPickerContentColor, androidx.compose.ui.graphics.Color separatorColor, androidx.compose.ui.graphics.Color pickerLabelColor, androidx.compose.ui.graphics.Color confirmButtonContentColor, androidx.compose.ui.graphics.Color confirmButtonContainerColor);
    ctor @BytecodeOnly public TimePickerColors(long, long, long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly public androidx.wear.compose.material3.TimePickerColors copy(optional androidx.compose.ui.graphics.Color selectedPickerContentColor, optional androidx.compose.ui.graphics.Color unselectedPickerContentColor, optional androidx.compose.ui.graphics.Color separatorColor, optional androidx.compose.ui.graphics.Color pickerLabelColor, optional androidx.compose.ui.graphics.Color confirmButtonContentColor, optional androidx.compose.ui.graphics.Color confirmButtonContainerColor);
    method @BytecodeOnly public androidx.wear.compose.material3.TimePickerColors copy-tNS2XkQ(long, long, long, long, long, long);
    method @BytecodeOnly public long getConfirmButtonContainerColor-0d7_KjU();
    method @BytecodeOnly public long getConfirmButtonContentColor-0d7_KjU();
    method @BytecodeOnly public long getPickerLabelColor-0d7_KjU();
    method @BytecodeOnly public long getSelectedPickerContentColor-0d7_KjU();
    method @BytecodeOnly public long getSeparatorColor-0d7_KjU();
    method @BytecodeOnly public long getUnselectedPickerContentColor-0d7_KjU();
    property public androidx.compose.ui.graphics.Color confirmButtonContainerColor;
    property public androidx.compose.ui.graphics.Color confirmButtonContentColor;
    property public androidx.compose.ui.graphics.Color pickerLabelColor;
    property public androidx.compose.ui.graphics.Color selectedPickerContentColor;
    property public androidx.compose.ui.graphics.Color separatorColor;
    property public androidx.compose.ui.graphics.Color unselectedPickerContentColor;
  }

  public final class TimePickerDefaults {
    method @BytecodeOnly @androidx.compose.runtime.Composable public int getTimePickerType(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TimePickerColors timePickerColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TimePickerColors timePickerColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TimePickerColors timePickerColors(optional androidx.compose.ui.graphics.Color selectedPickerContentColor, optional androidx.compose.ui.graphics.Color unselectedPickerContentColor, optional androidx.compose.ui.graphics.Color separatorColor, optional androidx.compose.ui.graphics.Color pickerLabelColor, optional androidx.compose.ui.graphics.Color confirmButtonContentColor, optional androidx.compose.ui.graphics.Color confirmButtonContainerColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TimePickerColors timePickerColors-5tl4gsc(long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    property public androidx.wear.compose.material3.TimePickerType timePickerType;
    field public static final androidx.wear.compose.material3.TimePickerDefaults INSTANCE;
  }

  public final class TimePickerKt {
    method @KotlinOnly @RequiresApi(android.os.Build.VERSION_CODES.O) @androidx.compose.runtime.Composable public static void TimePicker(java.time.LocalTime initialTime, kotlin.jvm.functions.Function1<java.time.LocalTime,kotlin.Unit> onTimePicked, optional androidx.compose.ui.Modifier modifier, optional androidx.wear.compose.material3.TimePickerType timePickerType, optional androidx.wear.compose.material3.TimePickerColors colors);
    method @BytecodeOnly @RequiresApi(26) @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void TimePicker-0NXZJ5M(java.time.LocalTime, kotlin.jvm.functions.Function1<? super java.time.LocalTime!,kotlin.Unit!>, androidx.compose.ui.Modifier?, int, androidx.wear.compose.material3.TimePickerColors?, androidx.compose.runtime.Composer?, int, int);
  }

  @androidx.compose.runtime.Immutable @kotlin.jvm.JvmInline public final value class TimePickerType {
    method @BytecodeOnly public static androidx.wear.compose.material3.TimePickerType! box-impl(int);
    method @BytecodeOnly public int unbox-impl();
    field public static final androidx.wear.compose.material3.TimePickerType.Companion Companion;
  }

  public static final class TimePickerType.Companion {
    method @BytecodeOnly public int getHoursMinutes24H-5KJDQV4();
    method @BytecodeOnly public int getHoursMinutesAmPm12H-5KJDQV4();
    method @BytecodeOnly public int getHoursMinutesSeconds24H-5KJDQV4();
    method @BytecodeOnly public int getMinutesSeconds-5KJDQV4();
    property public androidx.wear.compose.material3.TimePickerType HoursMinutes24H;
    property public androidx.wear.compose.material3.TimePickerType HoursMinutesAmPm12H;
    property public androidx.wear.compose.material3.TimePickerType HoursMinutesSeconds24H;
    property public androidx.wear.compose.material3.TimePickerType MinutesSeconds;
  }

  public interface TimeSource {
    method @androidx.compose.runtime.Composable public String currentTime();
    method @BytecodeOnly @androidx.compose.runtime.Composable public String currentTime(androidx.compose.runtime.Composer?, int);
  }

  public final class TimeTextDefaults {
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Color backgroundColor();
    method @BytecodeOnly @androidx.compose.runtime.Composable public long backgroundColor-WaAFU9c(androidx.compose.runtime.Composer?, int);
    method public androidx.compose.foundation.layout.PaddingValues getContentPadding();
    method public float getMaxSweepAngle();
    method public String getTimeFormat12Hours();
    method public String getTimeFormat24Hours();
    method @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TimeSource rememberTimeSource(String timeFormat);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.material3.TimeSource rememberTimeSource(String, androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public String timeFormat();
    method @BytecodeOnly @androidx.compose.runtime.Composable public String timeFormat(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.wear.compose.foundation.CurvedTextStyle timeTextStyle(optional androidx.compose.ui.graphics.Color background, optional androidx.compose.ui.graphics.Color color, optional androidx.compose.ui.unit.TextUnit fontSize);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.wear.compose.foundation.CurvedTextStyle timeTextStyle-28gAR5Q(long, long, long, androidx.compose.runtime.Composer?, int, int);
    property public androidx.compose.foundation.layout.PaddingValues ContentPadding;
    property public float MaxSweepAngle;
    property public String TimeFormat12Hours;
    property public String TimeFormat24Hours;
    field public static final androidx.wear.compose.material3.TimeTextDefaults INSTANCE;
  }

  public final class TimeTextKt {
    method @KotlinOnly @androidx.compose.runtime.Composable public static void TimeText(optional androidx.compose.ui.Modifier modifier, optional androidx.wear.compose.foundation.CurvedModifier curvedModifier, optional float maxSweepAngle, optional androidx.compose.ui.graphics.Color backgroundColor, optional androidx.wear.compose.material3.TimeSource timeSource, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional kotlin.jvm.functions.Function2<androidx.wear.compose.foundation.CurvedScope,java.lang.String,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void TimeText-hYmLsZ8(androidx.compose.ui.Modifier?, androidx.wear.compose.foundation.CurvedModifier?, float, long, androidx.wear.compose.material3.TimeSource?, androidx.compose.foundation.layout.PaddingValues?, kotlin.jvm.functions.Function2<? super androidx.wear.compose.foundation.CurvedScope!,? super java.lang.String!,kotlin.Unit!>?, androidx.compose.runtime.Composer?, int, int);
    method public static void timeTextCurvedText(androidx.wear.compose.foundation.CurvedScope, String time, optional androidx.wear.compose.foundation.CurvedTextStyle? style);
    method public static void timeTextSeparator(androidx.wear.compose.foundation.CurvedScope, optional androidx.wear.compose.foundation.CurvedTextStyle? curvedTextStyle, optional androidx.wear.compose.foundation.ArcPaddingValues contentArcPadding);
  }

  public final class TouchTargetAwareSizeKt {
    method @KotlinOnly public static androidx.compose.ui.Modifier touchTargetAwareSize(androidx.compose.ui.Modifier, androidx.compose.ui.unit.Dp size);
    method @BytecodeOnly public static androidx.compose.ui.Modifier touchTargetAwareSize-3ABfNKs(androidx.compose.ui.Modifier, float);
  }

  @androidx.compose.runtime.Immutable public final class Typography {
    ctor public Typography(optional androidx.compose.ui.text.font.FontFamily defaultFontFamily, optional androidx.wear.compose.foundation.CurvedTextStyle arcLarge, optional androidx.wear.compose.foundation.CurvedTextStyle arcMedium, optional androidx.wear.compose.foundation.CurvedTextStyle arcSmall, optional androidx.compose.ui.text.TextStyle displayLarge, optional androidx.compose.ui.text.TextStyle displayMedium, optional androidx.compose.ui.text.TextStyle displaySmall, optional androidx.compose.ui.text.TextStyle titleLarge, optional androidx.compose.ui.text.TextStyle titleMedium, optional androidx.compose.ui.text.TextStyle titleSmall, optional androidx.compose.ui.text.TextStyle labelLarge, optional androidx.compose.ui.text.TextStyle labelMedium, optional androidx.compose.ui.text.TextStyle labelSmall, optional androidx.compose.ui.text.TextStyle bodyLarge, optional androidx.compose.ui.text.TextStyle bodyMedium, optional androidx.compose.ui.text.TextStyle bodySmall, optional androidx.compose.ui.text.TextStyle bodyExtraSmall, optional androidx.compose.ui.text.TextStyle numeralExtraLarge, optional androidx.compose.ui.text.TextStyle numeralLarge, optional androidx.compose.ui.text.TextStyle numeralMedium, optional androidx.compose.ui.text.TextStyle numeralSmall, optional androidx.compose.ui.text.TextStyle numeralExtraSmall);
    method public androidx.wear.compose.material3.Typography copy(optional androidx.wear.compose.foundation.CurvedTextStyle arcLarge, optional androidx.wear.compose.foundation.CurvedTextStyle arcMedium, optional androidx.wear.compose.foundation.CurvedTextStyle arcSmall, optional androidx.compose.ui.text.TextStyle displayLarge, optional androidx.compose.ui.text.TextStyle displayMedium, optional androidx.compose.ui.text.TextStyle displaySmall, optional androidx.compose.ui.text.TextStyle titleLarge, optional androidx.compose.ui.text.TextStyle titleMedium, optional androidx.compose.ui.text.TextStyle titleSmall, optional androidx.compose.ui.text.TextStyle labelLarge, optional androidx.compose.ui.text.TextStyle labelMedium, optional androidx.compose.ui.text.TextStyle labelSmall, optional androidx.compose.ui.text.TextStyle bodyLarge, optional androidx.compose.ui.text.TextStyle bodyMedium, optional androidx.compose.ui.text.TextStyle bodySmall, optional androidx.compose.ui.text.TextStyle bodyExtraSmall, optional androidx.compose.ui.text.TextStyle numeralExtraLarge, optional androidx.compose.ui.text.TextStyle numeralLarge, optional androidx.compose.ui.text.TextStyle numeralMedium, optional androidx.compose.ui.text.TextStyle numeralSmall, optional androidx.compose.ui.text.TextStyle numeralExtraSmall);
    method public androidx.wear.compose.foundation.CurvedTextStyle getArcLarge();
    method public androidx.wear.compose.foundation.CurvedTextStyle getArcMedium();
    method public androidx.wear.compose.foundation.CurvedTextStyle getArcSmall();
    method public androidx.compose.ui.text.TextStyle getBodyExtraSmall();
    method public androidx.compose.ui.text.TextStyle getBodyLarge();
    method public androidx.compose.ui.text.TextStyle getBodyMedium();
    method public androidx.compose.ui.text.TextStyle getBodySmall();
    method public androidx.compose.ui.text.TextStyle getDisplayLarge();
    method public androidx.compose.ui.text.TextStyle getDisplayMedium();
    method public androidx.compose.ui.text.TextStyle getDisplaySmall();
    method public androidx.compose.ui.text.TextStyle getLabelLarge();
    method public androidx.compose.ui.text.TextStyle getLabelMedium();
    method public androidx.compose.ui.text.TextStyle getLabelSmall();
    method public androidx.compose.ui.text.TextStyle getNumeralExtraLarge();
    method public androidx.compose.ui.text.TextStyle getNumeralExtraSmall();
    method public androidx.compose.ui.text.TextStyle getNumeralLarge();
    method public androidx.compose.ui.text.TextStyle getNumeralMedium();
    method public androidx.compose.ui.text.TextStyle getNumeralSmall();
    method public androidx.compose.ui.text.TextStyle getTitleLarge();
    method public androidx.compose.ui.text.TextStyle getTitleMedium();
    method public androidx.compose.ui.text.TextStyle getTitleSmall();
    property public androidx.wear.compose.foundation.CurvedTextStyle arcLarge;
    property public androidx.wear.compose.foundation.CurvedTextStyle arcMedium;
    property public androidx.wear.compose.foundation.CurvedTextStyle arcSmall;
    property public androidx.compose.ui.text.TextStyle bodyExtraSmall;
    property public androidx.compose.ui.text.TextStyle bodyLarge;
    property public androidx.compose.ui.text.TextStyle bodyMedium;
    property public androidx.compose.ui.text.TextStyle bodySmall;
    property public androidx.compose.ui.text.TextStyle displayLarge;
    property public androidx.compose.ui.text.TextStyle displayMedium;
    property public androidx.compose.ui.text.TextStyle displaySmall;
    property public androidx.compose.ui.text.TextStyle labelLarge;
    property public androidx.compose.ui.text.TextStyle labelMedium;
    property public androidx.compose.ui.text.TextStyle labelSmall;
    property public androidx.compose.ui.text.TextStyle numeralExtraLarge;
    property public androidx.compose.ui.text.TextStyle numeralExtraSmall;
    property public androidx.compose.ui.text.TextStyle numeralLarge;
    property public androidx.compose.ui.text.TextStyle numeralMedium;
    property public androidx.compose.ui.text.TextStyle numeralSmall;
    property public androidx.compose.ui.text.TextStyle titleLarge;
    property public androidx.compose.ui.text.TextStyle titleMedium;
    property public androidx.compose.ui.text.TextStyle titleSmall;
  }

}

package androidx.wear.compose.material3.lazy {

  public sealed interface ResponsiveTransformationSpec extends androidx.wear.compose.material3.lazy.TransformationSpec {
    field public static final androidx.wear.compose.material3.lazy.ResponsiveTransformationSpec.Companion Companion;
  }

  public static final class ResponsiveTransformationSpec.Companion {
    method @KotlinOnly public androidx.wear.compose.material3.lazy.ResponsiveTransformationSpec largeScreen(optional androidx.compose.ui.unit.Dp screenSize, optional @FloatRange(from=0.0, to=1.0) float minElementHeightFraction, optional @FloatRange(from=0.0, to=1.0) float maxElementHeightFraction, optional @FloatRange(from=0.0, to=1.0) float minTransitionAreaHeightFraction, optional @FloatRange(from=0.0, to=1.0) float maxTransitionAreaHeightFraction, optional androidx.compose.animation.core.Easing easing, optional androidx.wear.compose.material3.lazy.TransformationVariableSpec containerAlpha, optional androidx.wear.compose.material3.lazy.TransformationVariableSpec contentAlpha, optional androidx.wear.compose.material3.lazy.TransformationVariableSpec scale);
    method @BytecodeOnly public androidx.wear.compose.material3.lazy.ResponsiveTransformationSpec largeScreen-Q1bl1hc(float, @FloatRange(from=0.0, to=1.0) float, @FloatRange(from=0.0, to=1.0) float, @FloatRange(from=0.0, to=1.0) float, @FloatRange(from=0.0, to=1.0) float, androidx.compose.animation.core.Easing, androidx.wear.compose.material3.lazy.TransformationVariableSpec, androidx.wear.compose.material3.lazy.TransformationVariableSpec, androidx.wear.compose.material3.lazy.TransformationVariableSpec);
    method @KotlinOnly public androidx.wear.compose.material3.lazy.ResponsiveTransformationSpec smallScreen(optional androidx.compose.ui.unit.Dp screenSize, optional @FloatRange(from=0.0, to=1.0) float minElementHeightFraction, optional @FloatRange(from=0.0, to=1.0) float maxElementHeightFraction, optional @FloatRange(from=0.0, to=1.0) float minTransitionAreaHeightFraction, optional @FloatRange(from=0.0, to=1.0) float maxTransitionAreaHeightFraction, optional androidx.compose.animation.core.Easing easing, optional androidx.wear.compose.material3.lazy.TransformationVariableSpec containerAlpha, optional androidx.wear.compose.material3.lazy.TransformationVariableSpec contentAlpha, optional androidx.wear.compose.material3.lazy.TransformationVariableSpec scale);
    method @BytecodeOnly public androidx.wear.compose.material3.lazy.ResponsiveTransformationSpec smallScreen-Q1bl1hc(float, @FloatRange(from=0.0, to=1.0) float, @FloatRange(from=0.0, to=1.0) float, @FloatRange(from=0.0, to=1.0) float, @FloatRange(from=0.0, to=1.0) float, androidx.compose.animation.core.Easing, androidx.wear.compose.material3.lazy.TransformationVariableSpec, androidx.wear.compose.material3.lazy.TransformationVariableSpec, androidx.wear.compose.material3.lazy.TransformationVariableSpec);
  }

  public final class ResponsiveTransformationSpecDefaults {
    method @BytecodeOnly public float getLargeScreenSize-D9Ej5fM();
    method @BytecodeOnly public float getSmallScreenSize-D9Ej5fM();
    property public androidx.compose.ui.unit.Dp LargeScreenSize;
    property public androidx.compose.ui.unit.Dp SmallScreenSize;
    field public static final androidx.wear.compose.material3.lazy.ResponsiveTransformationSpecDefaults INSTANCE;
  }

  public final class ResponsiveTransformationSpecKt {
    method @androidx.compose.runtime.Composable public static androidx.wear.compose.material3.lazy.TransformationSpec rememberTransformationSpec();
    method @BytecodeOnly @androidx.compose.runtime.Composable public static androidx.wear.compose.material3.lazy.TransformationSpec rememberTransformationSpec(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public static androidx.wear.compose.material3.lazy.TransformationSpec rememberTransformationSpec(androidx.wear.compose.material3.lazy.ResponsiveTransformationSpec... specs);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static androidx.wear.compose.material3.lazy.TransformationSpec rememberTransformationSpec(androidx.wear.compose.material3.lazy.ResponsiveTransformationSpec![], androidx.compose.runtime.Composer?, int);
  }

  public interface TransformationSpec {
    method @KotlinOnly public void applyContainerTransformation(androidx.compose.ui.graphics.GraphicsLayerScope, androidx.wear.compose.foundation.lazy.TransformingLazyColumnItemScrollProgress scrollProgress);
    method @BytecodeOnly public void applyContainerTransformation-BvjJYIE(androidx.compose.ui.graphics.GraphicsLayerScope, long);
    method @KotlinOnly public void applyContentTransformation(androidx.compose.ui.graphics.GraphicsLayerScope, androidx.wear.compose.foundation.lazy.TransformingLazyColumnItemScrollProgress scrollProgress);
    method @BytecodeOnly public void applyContentTransformation-BvjJYIE(androidx.compose.ui.graphics.GraphicsLayerScope, long);
    method public androidx.compose.ui.graphics.painter.Painter createTransformedContainerPainter(androidx.wear.compose.material3.lazy.TransformedContainerPainterScope, androidx.compose.ui.graphics.painter.Painter painter, androidx.compose.ui.graphics.Shape shape, androidx.compose.foundation.BorderStroke? border);
    method @KotlinOnly public int getTransformedHeight(int measuredHeight, androidx.wear.compose.foundation.lazy.TransformingLazyColumnItemScrollProgress scrollProgress);
    method @BytecodeOnly public int getTransformedHeight-BvjJYIE(int, long);
  }

  public final class TransformationSpecKt {
    method public static androidx.wear.compose.material3.lazy.TransformationVariableSpec lerp(androidx.wear.compose.material3.lazy.TransformationVariableSpec start, androidx.wear.compose.material3.lazy.TransformationVariableSpec stop, float progress);
    method public static androidx.compose.ui.Modifier transformedHeight(androidx.compose.ui.Modifier, androidx.wear.compose.foundation.lazy.TransformingLazyColumnItemScope scope, androidx.wear.compose.material3.lazy.TransformationSpec transformationSpec);
  }

  public final class TransformationVariableSpec {
    ctor public TransformationVariableSpec(@FloatRange(from=0.0, to=1.0) float topValue, optional @FloatRange(from=0.0, to=1.0) float targetValue, optional @FloatRange(from=0.0, to=1.0) float bottomValue, optional @FloatRange(from=0.0, to=1.0) float transformationZoneEnterFraction, optional @FloatRange(from=0.0, to=1.0) float transformationZoneExitFraction);
    method public androidx.wear.compose.material3.lazy.TransformationVariableSpec copy(optional float topValue, optional float targetValue, optional float bottomValue, optional float transformationZoneEnterFraction, optional float transformationZoneExitFraction);
    method public float getBottomValue();
    method public float getTargetValue();
    method public float getTopValue();
    method public float getTransformationZoneEnterFraction();
    method public float getTransformationZoneExitFraction();
    property public float bottomValue;
    property public float targetValue;
    property public float topValue;
    property public float transformationZoneEnterFraction;
    property public float transformationZoneExitFraction;
  }

  public interface TransformedContainerPainterScope {
    method public float getItemHeight(androidx.compose.ui.graphics.drawscope.DrawScope);
    method @BytecodeOnly public long getScrollProgress-CyslRjo(androidx.compose.ui.graphics.drawscope.DrawScope);
    property public abstract float androidx.compose.ui.graphics.drawscope.DrawScope.itemHeight;
    property public abstract androidx.wear.compose.foundation.lazy.TransformingLazyColumnItemScrollProgress androidx.compose.ui.graphics.drawscope.DrawScope.scrollProgress;
  }

}

