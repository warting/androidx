/*
 * Copyright 2020 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * This file was created using the `create_project.py` script located in the
 * `<AndroidX root>/development/project-creator` directory.
 *
 * Please use that script when creating a new project, rather than copying an existing project and
 * modifying its settings.
 */
import androidx.build.SoftwareType

plugins {
    id("AndroidXPlugin")
    id("com.android.library")
    id("org.jetbrains.kotlin.android")
}

dependencies {
    api(libs.jspecify)
    api("androidx.annotation:annotation:1.8.1")
    api(libs.kotlinStdlib)

    testImplementation(libs.testExtJunit)
    testImplementation(libs.testCore)
    testImplementation(libs.testRunner)
    testImplementation(libs.testRules)
    testImplementation(libs.mockitoCore4)
    testImplementation(fileTree(dir: "../wear_stubs", include: ["com.google.android.wearable-stubs.jar"]))
    testImplementation(project(":wear:wear-input-testing"))

    compileOnly(fileTree(dir: "../wear_stubs", include: ["com.google.android.wearable-stubs.jar"]))
    compileOnly(project(":annotation:annotation-sampled"))
}

android {
    defaultConfig {
        minSdk = 25
    }
    namespace = "androidx.wear.input"
}

androidx {
    name = "Android Wear Input"
    type = SoftwareType.PUBLISHED_LIBRARY
    mavenVersion = LibraryVersions.WEAR_INPUT
    inceptionYear = "2020"
    description = "Android Wear Support Input"
    legacyDisableKotlinStrictApiMode = true
    samples(project(":wear:wear-input-samples"))
    enableRobolectric()
}
