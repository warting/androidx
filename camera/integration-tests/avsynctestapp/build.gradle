/*
 * Copyright 2022 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id("AndroidXPlugin")
    id("com.android.application")
    id("org.jetbrains.kotlin.android")
    id("AndroidXComposePlugin")
}

android {
    namespace = "androidx.camera.integration.avsync"
    compileSdk = 35
    defaultConfig {
        applicationId = "androidx.camera.integration.avsync"
    }

    buildTypes {
        release {
            minifyEnabled = true
            shrinkResources = true
        }
    }
}

dependencies {
    implementation("androidx.concurrent:concurrent-futures-ktx:1.1.0")

    // Internal library
    implementation(project(":camera:camera-camera2"))
    implementation(project(":camera:camera-camera2-pipe-integration"))
    implementation(project(":camera:camera-lifecycle"))
    implementation(project(":camera:camera-video"))

    // Compose
    def compose_version = "1.7.2"
    implementation("androidx.activity:activity-compose:1.5.0")
    implementation("androidx.compose.material:material:$compose_version")
    implementation("androidx.compose.material:material-icons-core:1.6.7")
    implementation("androidx.compose.ui:ui:$compose_version")
    implementation("androidx.compose.ui:ui-tooling-preview:$compose_version")
    implementation("androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1")
    implementation("androidx.lifecycle:lifecycle-viewmodel:2.6.1")

    // Add camera-testing as 'implementation' dependency to use utils in camera-testing.
    implementation(project(":camera:camera-testing")) {
        // Ensure camera-testing does not pull in androidx.test dependencies.
        exclude(group:"androidx.test")
    }

    // Align dependencies in debugRuntimeClasspath and debugAndroidTestRuntimeClasspath.
    androidTestImplementation("androidx.annotation:annotation-experimental:1.4.1")
    androidTestImplementation("androidx.annotation:annotation:1.4.0")
    androidTestImplementation("androidx.lifecycle:lifecycle-common:2.8.3")

    // Testing framework
    testImplementation(libs.kotlinCoroutinesTest)
    testImplementation(libs.junit)
    testImplementation(libs.truth)
    androidTestImplementation(project(":concurrent:concurrent-futures"))
    androidTestImplementation(project(":concurrent:concurrent-futures-ktx"))
    androidTestImplementation("androidx.lifecycle:lifecycle-viewmodel:2.6.1")
    androidTestImplementation(libs.kotlinCoroutinesTest)
    androidTestImplementation(libs.testExtJunit)
    androidTestImplementation(libs.testRules)
    androidTestImplementation(libs.testRunner)
    androidTestImplementation(libs.truth)

    // Transitive dependencies
    implementation 'androidx.activity:activity:1.7.0'
    implementation 'androidx.compose.foundation:foundation-layout:1.7.2'
    implementation 'androidx.compose.foundation:foundation:1.7.2'
    implementation 'androidx.compose.material:material-ripple:1.7.2'
    implementation 'androidx.compose.runtime:runtime:1.7.2'
    implementation 'androidx.compose.ui:ui-graphics:1.7.2'
    implementation 'androidx.compose.ui:ui-unit:1.7.2'
    implementation 'androidx.lifecycle:lifecycle-runtime-compose:2.8.3'
    implementation libs.androidx.core
    implementation libs.guavaAndroid
    implementation libs.jspecify
    implementation libs.kotlinCoroutinesCore
    implementation project(':camera:camera-core')
    androidTestImplementation libs.junit
    androidTestImplementation libs.testCore
}
