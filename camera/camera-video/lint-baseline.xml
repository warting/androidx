<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 8.13.0-alpha01" type="baseline" client="gradle" dependencies="false" name="AGP (8.13.0-alpha01)" variant="all" version="8.13.0-alpha01">

    <issue
        id="BanThreadSleep"
        message="Uses Thread.sleep()"
        errorLine1="        Thread.sleep(3000L)"
        errorLine2="               ~~~~~">
        <location
            file="src/androidTest/java/androidx/camera/video/internal/encoder/AudioEncoderTest.kt"/>
    </issue>

    <issue
        id="BanThreadSleep"
        message="Uses Thread.sleep()"
        errorLine1="        Thread.sleep(pauseDurationMs)"
        errorLine2="               ~~~~~">
        <location
            file="src/androidTest/java/androidx/camera/video/internal/encoder/AudioEncoderTest.kt"/>
    </issue>

    <issue
        id="BanThreadSleep"
        message="Uses Thread.sleep()"
        errorLine1="                Thread.sleep(TimeUnit.NANOSECONDS.toMillis(requiredBlockTimeNs));"
        errorLine2="                       ~~~~~">
        <location
            file="src/main/java/androidx/camera/video/internal/audio/SilentAudioStream.java"/>
    </issue>

    <issue
        id="BanThreadSleep"
        message="Uses Thread.sleep()"
        errorLine1="            Thread.sleep(2000L)"
        errorLine2="                   ~~~~~">
        <location
            file="src/androidTest/java/androidx/camera/video/internal/encoder/VideoEncoderTest.kt"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        message="Unnecessary; `SDK_INT` is always >= 23"
        errorLine1="@RequiresApi(23)"
        errorLine2="~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/camera/video/internal/compat/Api23Impl.java"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        message="Unnecessary; `SDK_INT` is always >= 23"
        errorLine1="        if (Build.VERSION.SDK_INT >= 23) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/camera/video/internal/audio/AudioStreamImpl.java"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        message="Unnecessary; `SDK_INT` is never &lt; 23"
        errorLine1="        return Build.VERSION.SDK_INT &lt;= 22;"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/camera/video/internal/compat/quirk/DeactivateEncoderSurfaceBeforeStopEncoderQuirk.java"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        message="Unnecessary; `SDK_INT` is always >= 23"
        errorLine1="    @RequiresApi(23)"
        errorLine2="    ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/camera/video/internal/encoder/EncoderImpl.java"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        message="Unnecessary; `SDK_INT` is never &lt; 23"
        errorLine1="        return Build.VERSION.SDK_INT &lt;= 22 || DEVICE_MODELS.contains("
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/camera/video/internal/compat/quirk/EncoderNotUsePersistentInputSurfaceQuirk.java"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        message="Unnecessary; `SDK_INT` is never &lt; 23"
        errorLine1="        return Build.VERSION.SDK_INT == Build.VERSION_CODES.LOLLIPOP;"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/camera/video/internal/compat/quirk/MediaFormatMustNotUseFrameRateToFindEncoderQuirk.java"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        message="Unnecessary; `Build.VERSION.SDK_INT &lt; Build.VERSION_CODES.O` is never true here"
        errorLine1="        if (Build.VERSION.SDK_INT &lt; Build.VERSION_CODES.O) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/camera/video/Recorder.java"/>
    </issue>

</issues>
