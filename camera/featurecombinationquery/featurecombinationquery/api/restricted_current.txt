// Signature format: 4.0
package androidx.camera.featurecombinationquery {

  public interface CameraDeviceSetupCompat {
    method public androidx.camera.featurecombinationquery.CameraDeviceSetupCompat.SupportQueryResult isSessionConfigurationSupported(android.hardware.camera2.params.SessionConfiguration) throws android.hardware.camera2.CameraAccessException;
    method public androidx.camera.featurecombinationquery.CameraDeviceSetupCompat.SupportQueryResult isSessionConfigurationSupported(androidx.camera.featurecombinationquery.SessionConfigurationCompat);
  }

  public static final class CameraDeviceSetupCompat.SupportQueryResult {
    ctor public CameraDeviceSetupCompat.SupportQueryResult(int, int, long);
    method public int getSource();
    method public int getSupported();
    method public long getTimestampMillis();
    field public static final int RESULT_SUPPORTED = 1; // 0x1
    field public static final int RESULT_UNDEFINED = 0; // 0x0
    field public static final int RESULT_UNSUPPORTED = 2; // 0x2
    field public static final int SOURCE_ANDROID_FRAMEWORK = 2; // 0x2
    field public static final int SOURCE_PLAY_SERVICES = 1; // 0x1
    field public static final int SOURCE_UNDEFINED = 0; // 0x0
  }

  public class CameraDeviceSetupCompatFactory {
    ctor public CameraDeviceSetupCompatFactory(android.content.Context);
    method public androidx.camera.featurecombinationquery.CameraDeviceSetupCompat getCameraDeviceSetupCompat(String) throws android.hardware.camera2.CameraAccessException;
  }

  public class SessionConfigurationCompat {
    method public java.util.List<android.hardware.camera2.params.OutputConfiguration!> getOutputConfigurations();
    method public androidx.camera.featurecombinationquery.SessionParametersCompat getSessionParameters();
  }

  public static final class SessionConfigurationCompat.Builder {
    ctor public SessionConfigurationCompat.Builder();
    method public androidx.camera.featurecombinationquery.SessionConfigurationCompat.Builder addOutputConfiguration(android.hardware.camera2.params.OutputConfiguration);
    method public androidx.camera.featurecombinationquery.SessionConfigurationCompat.Builder addOutputConfigurations(java.util.Collection<android.hardware.camera2.params.OutputConfiguration>);
    method public androidx.camera.featurecombinationquery.SessionConfigurationCompat build();
    method public androidx.camera.featurecombinationquery.SessionConfigurationCompat.Builder setSessionParameters(androidx.camera.featurecombinationquery.SessionParametersCompat);
  }

  public class SessionParametersCompat {
    method public <T> T? get(android.hardware.camera2.CaptureRequest.Key<T!>);
    method public java.util.Set<android.hardware.camera2.CaptureRequest.Key<? extends java.lang.Object!>!> getKeys();
  }

  public static final class SessionParametersCompat.Builder {
    ctor public SessionParametersCompat.Builder();
    method public androidx.camera.featurecombinationquery.SessionParametersCompat build();
    method public <T> androidx.camera.featurecombinationquery.SessionParametersCompat.Builder set(android.hardware.camera2.CaptureRequest.Key<T!>, T);
  }

}

