// Signature format: 4.0
package androidx.ink.authoring {

  public final class InProgressStrokeId {
    ctor @VisibleForTesting public InProgressStrokeId();
  }

  @UiThread public interface InProgressStrokesFinishedListener {
    method public default void onStrokesFinished(java.util.Map<androidx.ink.authoring.InProgressStrokeId,androidx.ink.strokes.Stroke> strokes);
  }

  public final class InProgressStrokesView extends android.widget.FrameLayout {
    ctor public InProgressStrokesView(android.content.Context context);
    ctor public InProgressStrokesView(android.content.Context context, optional android.util.AttributeSet? attrs);
    ctor public InProgressStrokesView(android.content.Context context, optional android.util.AttributeSet? attrs, optional @AttrRes int defStyleAttr);
    method public void addFinishedStrokesListener(androidx.ink.authoring.InProgressStrokesFinishedListener listener);
    method public void addToStroke(android.view.MotionEvent event, int pointerId, androidx.ink.authoring.InProgressStrokeId strokeId);
    method public void addToStroke(android.view.MotionEvent event, int pointerId, androidx.ink.authoring.InProgressStrokeId strokeId, optional android.view.MotionEvent? prediction);
    method public void addToStroke(androidx.ink.strokes.StrokeInputBatch inputs, androidx.ink.authoring.InProgressStrokeId strokeId);
    method public void addToStroke(androidx.ink.strokes.StrokeInputBatch inputs, androidx.ink.authoring.InProgressStrokeId strokeId, optional androidx.ink.strokes.StrokeInputBatch prediction);
    method public void cancelStroke(androidx.ink.authoring.InProgressStrokeId strokeId);
    method public void cancelStroke(androidx.ink.authoring.InProgressStrokeId strokeId, optional android.view.MotionEvent? event);
    method public void eagerInit();
    method public void finishStroke(android.view.MotionEvent event, int pointerId, androidx.ink.authoring.InProgressStrokeId strokeId);
    method public void finishStroke(androidx.ink.strokes.StrokeInput input, androidx.ink.authoring.InProgressStrokeId strokeId);
    method public java.util.Map<androidx.ink.authoring.InProgressStrokeId,androidx.ink.strokes.Stroke> getFinishedStrokes();
    method public androidx.test.espresso.idling.CountingIdlingResource? getInProgressStrokeCounter();
    method public android.graphics.Path? getMaskPath();
    method public android.graphics.Matrix getMotionEventToViewTransform();
    method public kotlin.jvm.functions.Function0<androidx.ink.rendering.android.canvas.CanvasStrokeRenderer> getRendererFactory();
    method @SuppressCompatibility @androidx.ink.brush.ExperimentalInkCustomBrushApi public androidx.ink.brush.TextureBitmapStore getTextureBitmapStore();
    method @UiThread public void removeFinishedStrokes(java.util.Set<androidx.ink.authoring.InProgressStrokeId> strokeIds);
    method public void removeFinishedStrokesListener(androidx.ink.authoring.InProgressStrokesFinishedListener listener);
    method public void setInProgressStrokeCounter(androidx.test.espresso.idling.CountingIdlingResource?);
    method public void setMaskPath(android.graphics.Path?);
    method public void setMotionEventToViewTransform(android.graphics.Matrix);
    method public void setRendererFactory(kotlin.jvm.functions.Function0<? extends androidx.ink.rendering.android.canvas.CanvasStrokeRenderer>);
    method @SuppressCompatibility @androidx.ink.brush.ExperimentalInkCustomBrushApi public void setTextureBitmapStore(androidx.ink.brush.TextureBitmapStore value);
    method public androidx.ink.authoring.InProgressStrokeId startStroke(android.view.MotionEvent event, int pointerId, androidx.ink.brush.Brush brush);
    method public androidx.ink.authoring.InProgressStrokeId startStroke(android.view.MotionEvent event, int pointerId, androidx.ink.brush.Brush brush, optional android.graphics.Matrix motionEventToWorldTransform);
    method public androidx.ink.authoring.InProgressStrokeId startStroke(android.view.MotionEvent event, int pointerId, androidx.ink.brush.Brush brush, optional android.graphics.Matrix motionEventToWorldTransform, optional android.graphics.Matrix strokeToWorldTransform);
    method public androidx.ink.authoring.InProgressStrokeId startStroke(androidx.ink.strokes.StrokeInput input, androidx.ink.brush.Brush brush);
    method public androidx.ink.authoring.InProgressStrokeId startStroke(androidx.ink.strokes.StrokeInput input, androidx.ink.brush.Brush brush, optional android.graphics.Matrix strokeToViewTransform);
    property @VisibleForTesting public androidx.test.espresso.idling.CountingIdlingResource? inProgressStrokeCounter;
    property public android.graphics.Path? maskPath;
    property public android.graphics.Matrix motionEventToViewTransform;
    property public kotlin.jvm.functions.Function0<androidx.ink.rendering.android.canvas.CanvasStrokeRenderer> rendererFactory;
  }

}

