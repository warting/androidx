/*
 * Copyright (C) 2020 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * This file was created using the `create_project.py` script located in the
 * `<AndroidX root>/development/project-creator` directory.
 *
 * Please use that script when creating a new project, rather than copying an existing project and
 * modifying its settings.
 */

import androidx.build.SoftwareType
import androidx.build.PlatformIdentifier
import org.jetbrains.kotlin.gradle.plugin.KotlinPlatformType

plugins {
    id("AndroidXPlugin")
    id("com.android.library")
}

android {
    externalNativeBuild {
        cmake {
            path "src/androidMain/cpp/CMakeLists.txt"
            version = libs.versions.cmake.get()
        }
    }
    namespace = "androidx.datastore.core"
    buildTypes.configureEach {
        consumerProguardFiles("proguard-rules.pro")
    }
}

androidXMultiplatform {
    jvm()
    mac()
    linux()
    ios()
    watchos()
    tvos()
    androidTarget()

    defaultPlatform(PlatformIdentifier.ANDROID)

    sourceSets {
        configureEach {
            languageSettings.optIn("kotlin.RequiresOptIn")
        }

        commonMain {
            dependencies {
                api(libs.kotlinStdlib)
                api(libs.kotlinCoroutinesCore)
                api("androidx.annotation:annotation:1.9.1")
            }
        }

        jvmAndroidMain {
            dependsOn(commonMain)
        }

        androidMain {
            dependsOn(jvmAndroidMain)
        }

        jvmMain {
            dependsOn(jvmAndroidMain)
        }

        commonTest {
            dependencies {
                implementation(libs.kotlinTestCommon)
                implementation(libs.kotlinTestAnnotationsCommon)
                implementation(libs.kotlinCoroutinesTest)
                implementation(libs.okio)
                implementation(project(":datastore:datastore-core-okio"))
                implementation(project(":kruth:kruth"))
                implementation(project(":internal-testutils-datastore"))
            }
        }

        jvmAndroidTest {
            dependsOn(commonTest)
            dependencies {
                implementation(libs.junit)
                implementation(libs.kotlinTest)
                implementation(project(":kruth:kruth"))
                implementation(project(":internal-testutils-datastore"))

                // Workaround bug in 1.8.0, was supposed be fixed in RC2/final, but apparently not.
                implementation(libs.kotlinTestJunit)
            }
        }
        // tests that are run on AndroidUnit and instrumented targets.
        // similar to jvmAndroidTest, except, they don't run on JVM outside Robolectric.
        androidUnitAndInstrumentedTest {
            dependsOn(jvmAndroidTest)
        }

        jvmTest {
            dependsOn(jvmAndroidTest)
        }

        androidUnitTest {
            dependsOn(jvmAndroidTest)
            dependsOn(androidUnitAndInstrumentedTest)
            dependencies {
                implementation(libs.protobufLite)
                implementation(libs.testRules)
                implementation(libs.testRunner)
                implementation(libs.robolectric)
                implementation(libs.testExtJunit)
            }
        }

        androidInstrumentedTest {
            dependsOn(jvmAndroidTest)
            dependsOn(androidUnitAndInstrumentedTest)
            dependencies {
                implementation(libs.truth)
                implementation(project(":internal-testutils-truth"))
                implementation(libs.testRunner)
                implementation(libs.testCore)
                implementation("androidx.lifecycle:lifecycle-service:2.6.1")
                implementation(libs.testExtJunit)

                // Workaround bug in 1.8.0, was supposed be fixed in RC2/final, but apparently not.
                implementation(libs.kotlinTestJunit)
            }
        }

        nativeMain {
            dependsOn(commonMain)
            dependencies {
                implementation(libs.atomicFu)
            }
        }
        nativeTest {
            dependsOn(commonTest)
        }

        targets.configureEach { target ->
            if (target.platformType == KotlinPlatformType.native) {
                target.compilations["main"].defaultSourceSet {
                    dependsOn(nativeMain)
                }
                target.compilations["test"].defaultSourceSet {
                    dependsOn(nativeTest)
                }
            }
        }
    }
}

androidx {
    name = "DataStore Core"
    type = SoftwareType.PUBLISHED_LIBRARY
    inceptionYear = "2020"
    description = "Android DataStore Core - contains the underlying store used by each serialization method"
    legacyDisableKotlinStrictApiMode = true
}
