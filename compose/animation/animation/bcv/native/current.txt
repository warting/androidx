// Klib ABI Dump
// Targets: [linuxX64.linuxx64Stubs]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <androidx.compose.animation:animation>
open annotation class androidx.compose.animation/ExperimentalAnimationApi : kotlin/Annotation { // androidx.compose.animation/ExperimentalAnimationApi|null[0]
    constructor <init>() // androidx.compose.animation/ExperimentalAnimationApi.<init>|<init>(){}[0]
}

open annotation class androidx.compose.animation/ExperimentalSharedTransitionApi : kotlin/Annotation { // androidx.compose.animation/ExperimentalSharedTransitionApi|null[0]
    constructor <init>() // androidx.compose.animation/ExperimentalSharedTransitionApi.<init>|<init>(){}[0]
}

final enum class androidx.compose.animation/EnterExitState : kotlin/Enum<androidx.compose.animation/EnterExitState> { // androidx.compose.animation/EnterExitState|null[0]
    enum entry PostExit // androidx.compose.animation/EnterExitState.PostExit|null[0]
    enum entry PreEnter // androidx.compose.animation/EnterExitState.PreEnter|null[0]
    enum entry Visible // androidx.compose.animation/EnterExitState.Visible|null[0]

    final val entries // androidx.compose.animation/EnterExitState.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<androidx.compose.animation/EnterExitState> // androidx.compose.animation/EnterExitState.entries.<get-entries>|<get-entries>#static(){}[0]

    final fun valueOf(kotlin/String): androidx.compose.animation/EnterExitState // androidx.compose.animation/EnterExitState.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<androidx.compose.animation/EnterExitState> // androidx.compose.animation/EnterExitState.values|values#static(){}[0]
}

abstract interface androidx.compose.animation/AnimatedVisibilityScope { // androidx.compose.animation/AnimatedVisibilityScope|null[0]
    abstract val transition // androidx.compose.animation/AnimatedVisibilityScope.transition|{}transition[0]
        abstract fun <get-transition>(): androidx.compose.animation.core/Transition<androidx.compose.animation/EnterExitState> // androidx.compose.animation/AnimatedVisibilityScope.transition.<get-transition>|<get-transition>(){}[0]

    open fun (androidx.compose.ui/Modifier).animateEnterExit(androidx.compose.animation/EnterTransition = ..., androidx.compose.animation/ExitTransition = ..., kotlin/String = ...): androidx.compose.ui/Modifier // androidx.compose.animation/AnimatedVisibilityScope.animateEnterExit|animateEnterExit@androidx.compose.ui.Modifier(androidx.compose.animation.EnterTransition;androidx.compose.animation.ExitTransition;kotlin.String){}[0]
}

abstract interface androidx.compose.animation/SizeTransform { // androidx.compose.animation/SizeTransform|null[0]
    abstract val clip // androidx.compose.animation/SizeTransform.clip|{}clip[0]
        abstract fun <get-clip>(): kotlin/Boolean // androidx.compose.animation/SizeTransform.clip.<get-clip>|<get-clip>(){}[0]

    abstract fun createAnimationSpec(androidx.compose.ui.unit/IntSize, androidx.compose.ui.unit/IntSize): androidx.compose.animation.core/FiniteAnimationSpec<androidx.compose.ui.unit/IntSize> // androidx.compose.animation/SizeTransform.createAnimationSpec|createAnimationSpec(androidx.compose.ui.unit.IntSize;androidx.compose.ui.unit.IntSize){}[0]
}

sealed interface <#A: kotlin/Any?> androidx.compose.animation/AnimatedContentTransitionScope : androidx.compose.animation.core/Transition.Segment<#A> { // androidx.compose.animation/AnimatedContentTransitionScope|null[0]
    abstract val contentAlignment // androidx.compose.animation/AnimatedContentTransitionScope.contentAlignment|{}contentAlignment[0]
        abstract fun <get-contentAlignment>(): androidx.compose.ui/Alignment // androidx.compose.animation/AnimatedContentTransitionScope.contentAlignment.<get-contentAlignment>|<get-contentAlignment>(){}[0]
    open val KeepUntilTransitionsFinished // androidx.compose.animation/AnimatedContentTransitionScope.KeepUntilTransitionsFinished|@androidx.compose.animation.ExitTransition.Companion{}KeepUntilTransitionsFinished[0]
        open fun (androidx.compose.animation/ExitTransition.Companion).<get-KeepUntilTransitionsFinished>(): androidx.compose.animation/ExitTransition // androidx.compose.animation/AnimatedContentTransitionScope.KeepUntilTransitionsFinished.<get-KeepUntilTransitionsFinished>|<get-KeepUntilTransitionsFinished>@androidx.compose.animation.ExitTransition.Companion(){}[0]

    abstract fun (androidx.compose.animation/ContentTransform).using(androidx.compose.animation/SizeTransform?): androidx.compose.animation/ContentTransform // androidx.compose.animation/AnimatedContentTransitionScope.using|using@androidx.compose.animation.ContentTransform(androidx.compose.animation.SizeTransform?){}[0]
    abstract fun slideIntoContainer(androidx.compose.animation/AnimatedContentTransitionScope.SlideDirection, androidx.compose.animation.core/FiniteAnimationSpec<androidx.compose.ui.unit/IntOffset> = ..., kotlin/Function1<kotlin/Int, kotlin/Int> = ...): androidx.compose.animation/EnterTransition // androidx.compose.animation/AnimatedContentTransitionScope.slideIntoContainer|slideIntoContainer(androidx.compose.animation.AnimatedContentTransitionScope.SlideDirection;androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.unit.IntOffset>;kotlin.Function1<kotlin.Int,kotlin.Int>){}[0]
    abstract fun slideOutOfContainer(androidx.compose.animation/AnimatedContentTransitionScope.SlideDirection, androidx.compose.animation.core/FiniteAnimationSpec<androidx.compose.ui.unit/IntOffset> = ..., kotlin/Function1<kotlin/Int, kotlin/Int> = ...): androidx.compose.animation/ExitTransition // androidx.compose.animation/AnimatedContentTransitionScope.slideOutOfContainer|slideOutOfContainer(androidx.compose.animation.AnimatedContentTransitionScope.SlideDirection;androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.unit.IntOffset>;kotlin.Function1<kotlin.Int,kotlin.Int>){}[0]

    final value class SlideDirection { // androidx.compose.animation/AnimatedContentTransitionScope.SlideDirection|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // androidx.compose.animation/AnimatedContentTransitionScope.SlideDirection.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // androidx.compose.animation/AnimatedContentTransitionScope.SlideDirection.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // androidx.compose.animation/AnimatedContentTransitionScope.SlideDirection.toString|toString(){}[0]

        final object Companion { // androidx.compose.animation/AnimatedContentTransitionScope.SlideDirection.Companion|null[0]
            final val Down // androidx.compose.animation/AnimatedContentTransitionScope.SlideDirection.Companion.Down|{}Down[0]
                final fun <get-Down>(): androidx.compose.animation/AnimatedContentTransitionScope.SlideDirection // androidx.compose.animation/AnimatedContentTransitionScope.SlideDirection.Companion.Down.<get-Down>|<get-Down>(){}[0]
            final val End // androidx.compose.animation/AnimatedContentTransitionScope.SlideDirection.Companion.End|{}End[0]
                final fun <get-End>(): androidx.compose.animation/AnimatedContentTransitionScope.SlideDirection // androidx.compose.animation/AnimatedContentTransitionScope.SlideDirection.Companion.End.<get-End>|<get-End>(){}[0]
            final val Left // androidx.compose.animation/AnimatedContentTransitionScope.SlideDirection.Companion.Left|{}Left[0]
                final fun <get-Left>(): androidx.compose.animation/AnimatedContentTransitionScope.SlideDirection // androidx.compose.animation/AnimatedContentTransitionScope.SlideDirection.Companion.Left.<get-Left>|<get-Left>(){}[0]
            final val Right // androidx.compose.animation/AnimatedContentTransitionScope.SlideDirection.Companion.Right|{}Right[0]
                final fun <get-Right>(): androidx.compose.animation/AnimatedContentTransitionScope.SlideDirection // androidx.compose.animation/AnimatedContentTransitionScope.SlideDirection.Companion.Right.<get-Right>|<get-Right>(){}[0]
            final val Start // androidx.compose.animation/AnimatedContentTransitionScope.SlideDirection.Companion.Start|{}Start[0]
                final fun <get-Start>(): androidx.compose.animation/AnimatedContentTransitionScope.SlideDirection // androidx.compose.animation/AnimatedContentTransitionScope.SlideDirection.Companion.Start.<get-Start>|<get-Start>(){}[0]
            final val Up // androidx.compose.animation/AnimatedContentTransitionScope.SlideDirection.Companion.Up|{}Up[0]
                final fun <get-Up>(): androidx.compose.animation/AnimatedContentTransitionScope.SlideDirection // androidx.compose.animation/AnimatedContentTransitionScope.SlideDirection.Companion.Up.<get-Up>|<get-Up>(){}[0]
        }
    }
}

sealed interface androidx.compose.animation/AnimatedContentScope : androidx.compose.animation/AnimatedVisibilityScope // androidx.compose.animation/AnimatedContentScope|null[0]

final class androidx.compose.animation/ContentTransform { // androidx.compose.animation/ContentTransform|null[0]
    constructor <init>(androidx.compose.animation/EnterTransition, androidx.compose.animation/ExitTransition, kotlin/Float = ..., androidx.compose.animation/SizeTransform? = ...) // androidx.compose.animation/ContentTransform.<init>|<init>(androidx.compose.animation.EnterTransition;androidx.compose.animation.ExitTransition;kotlin.Float;androidx.compose.animation.SizeTransform?){}[0]

    final val initialContentExit // androidx.compose.animation/ContentTransform.initialContentExit|{}initialContentExit[0]
        final fun <get-initialContentExit>(): androidx.compose.animation/ExitTransition // androidx.compose.animation/ContentTransform.initialContentExit.<get-initialContentExit>|<get-initialContentExit>(){}[0]
    final val targetContentEnter // androidx.compose.animation/ContentTransform.targetContentEnter|{}targetContentEnter[0]
        final fun <get-targetContentEnter>(): androidx.compose.animation/EnterTransition // androidx.compose.animation/ContentTransform.targetContentEnter.<get-targetContentEnter>|<get-targetContentEnter>(){}[0]

    final var sizeTransform // androidx.compose.animation/ContentTransform.sizeTransform|{}sizeTransform[0]
        final fun <get-sizeTransform>(): androidx.compose.animation/SizeTransform? // androidx.compose.animation/ContentTransform.sizeTransform.<get-sizeTransform>|<get-sizeTransform>(){}[0]
    final var targetContentZIndex // androidx.compose.animation/ContentTransform.targetContentZIndex|{}targetContentZIndex[0]
        final fun <get-targetContentZIndex>(): kotlin/Float // androidx.compose.animation/ContentTransform.targetContentZIndex.<get-targetContentZIndex>|<get-targetContentZIndex>(){}[0]
        final fun <set-targetContentZIndex>(kotlin/Float) // androidx.compose.animation/ContentTransform.targetContentZIndex.<set-targetContentZIndex>|<set-targetContentZIndex>(kotlin.Float){}[0]
}

final class androidx.compose.animation/SplineBasedFloatDecayAnimationSpec : androidx.compose.animation.core/FloatDecayAnimationSpec { // androidx.compose.animation/SplineBasedFloatDecayAnimationSpec|null[0]
    constructor <init>(androidx.compose.ui.unit/Density) // androidx.compose.animation/SplineBasedFloatDecayAnimationSpec.<init>|<init>(androidx.compose.ui.unit.Density){}[0]

    final val absVelocityThreshold // androidx.compose.animation/SplineBasedFloatDecayAnimationSpec.absVelocityThreshold|{}absVelocityThreshold[0]
        final fun <get-absVelocityThreshold>(): kotlin/Float // androidx.compose.animation/SplineBasedFloatDecayAnimationSpec.absVelocityThreshold.<get-absVelocityThreshold>|<get-absVelocityThreshold>(){}[0]

    final fun getDurationNanos(kotlin/Float, kotlin/Float): kotlin/Long // androidx.compose.animation/SplineBasedFloatDecayAnimationSpec.getDurationNanos|getDurationNanos(kotlin.Float;kotlin.Float){}[0]
    final fun getTargetValue(kotlin/Float, kotlin/Float): kotlin/Float // androidx.compose.animation/SplineBasedFloatDecayAnimationSpec.getTargetValue|getTargetValue(kotlin.Float;kotlin.Float){}[0]
    final fun getValueFromNanos(kotlin/Long, kotlin/Float, kotlin/Float): kotlin/Float // androidx.compose.animation/SplineBasedFloatDecayAnimationSpec.getValueFromNanos|getValueFromNanos(kotlin.Long;kotlin.Float;kotlin.Float){}[0]
    final fun getVelocityFromNanos(kotlin/Long, kotlin/Float, kotlin/Float): kotlin/Float // androidx.compose.animation/SplineBasedFloatDecayAnimationSpec.getVelocityFromNanos|getVelocityFromNanos(kotlin.Long;kotlin.Float;kotlin.Float){}[0]
}

sealed class androidx.compose.animation/EnterTransition { // androidx.compose.animation/EnterTransition|null[0]
    final fun plus(androidx.compose.animation/EnterTransition): androidx.compose.animation/EnterTransition // androidx.compose.animation/EnterTransition.plus|plus(androidx.compose.animation.EnterTransition){}[0]
    open fun equals(kotlin/Any?): kotlin/Boolean // androidx.compose.animation/EnterTransition.equals|equals(kotlin.Any?){}[0]
    open fun hashCode(): kotlin/Int // androidx.compose.animation/EnterTransition.hashCode|hashCode(){}[0]
    open fun toString(): kotlin/String // androidx.compose.animation/EnterTransition.toString|toString(){}[0]

    final object Companion { // androidx.compose.animation/EnterTransition.Companion|null[0]
        final val None // androidx.compose.animation/EnterTransition.Companion.None|{}None[0]
            final fun <get-None>(): androidx.compose.animation/EnterTransition // androidx.compose.animation/EnterTransition.Companion.None.<get-None>|<get-None>(){}[0]
    }
}

sealed class androidx.compose.animation/ExitTransition { // androidx.compose.animation/ExitTransition|null[0]
    final fun plus(androidx.compose.animation/ExitTransition): androidx.compose.animation/ExitTransition // androidx.compose.animation/ExitTransition.plus|plus(androidx.compose.animation.ExitTransition){}[0]
    open fun equals(kotlin/Any?): kotlin/Boolean // androidx.compose.animation/ExitTransition.equals|equals(kotlin.Any?){}[0]
    open fun hashCode(): kotlin/Int // androidx.compose.animation/ExitTransition.hashCode|hashCode(){}[0]
    open fun toString(): kotlin/String // androidx.compose.animation/ExitTransition.toString|toString(){}[0]

    final object Companion { // androidx.compose.animation/ExitTransition.Companion|null[0]
        final val None // androidx.compose.animation/ExitTransition.Companion.None|{}None[0]
            final fun <get-None>(): androidx.compose.animation/ExitTransition // androidx.compose.animation/ExitTransition.Companion.None.<get-None>|<get-None>(){}[0]
    }
}

final val androidx.compose.animation/VectorConverter // androidx.compose.animation/VectorConverter|@androidx.compose.ui.graphics.Color.Companion{}VectorConverter[0]
    final fun (androidx.compose.ui.graphics/Color.Companion).<get-VectorConverter>(): kotlin/Function1<androidx.compose.ui.graphics.colorspace/ColorSpace, androidx.compose.animation.core/TwoWayConverter<androidx.compose.ui.graphics/Color, androidx.compose.animation.core/AnimationVector4D>> // androidx.compose.animation/VectorConverter.<get-VectorConverter>|<get-VectorConverter>@androidx.compose.ui.graphics.Color.Companion(){}[0]
final val androidx.compose.animation/androidx_compose_animation_AndroidFlingSpline$stableprop // androidx.compose.animation/androidx_compose_animation_AndroidFlingSpline$stableprop|#static{}androidx_compose_animation_AndroidFlingSpline$stableprop[0]
final val androidx.compose.animation/androidx_compose_animation_AndroidFlingSpline_FlingResult$stableprop // androidx.compose.animation/androidx_compose_animation_AndroidFlingSpline_FlingResult$stableprop|#static{}androidx_compose_animation_AndroidFlingSpline_FlingResult$stableprop[0]
final val androidx.compose.animation/androidx_compose_animation_AnimatedContentTransitionScopeImpl$stableprop // androidx.compose.animation/androidx_compose_animation_AnimatedContentTransitionScopeImpl$stableprop|#static{}androidx_compose_animation_AnimatedContentTransitionScopeImpl$stableprop[0]
final val androidx.compose.animation/androidx_compose_animation_AnimatedContentTransitionScopeImpl_ChildData$stableprop // androidx.compose.animation/androidx_compose_animation_AnimatedContentTransitionScopeImpl_ChildData$stableprop|#static{}androidx_compose_animation_AnimatedContentTransitionScopeImpl_ChildData$stableprop[0]
final val androidx.compose.animation/androidx_compose_animation_AnimatedVisibilityScopeImpl$stableprop // androidx.compose.animation/androidx_compose_animation_AnimatedVisibilityScopeImpl$stableprop|#static{}androidx_compose_animation_AnimatedVisibilityScopeImpl$stableprop[0]
final val androidx.compose.animation/androidx_compose_animation_BoundsAnimation$stableprop // androidx.compose.animation/androidx_compose_animation_BoundsAnimation$stableprop|#static{}androidx_compose_animation_BoundsAnimation$stableprop[0]
final val androidx.compose.animation/androidx_compose_animation_BoundsAnimationElement$stableprop // androidx.compose.animation/androidx_compose_animation_BoundsAnimationElement$stableprop|#static{}androidx_compose_animation_BoundsAnimationElement$stableprop[0]
final val androidx.compose.animation/androidx_compose_animation_BoundsAnimationModifierNode$stableprop // androidx.compose.animation/androidx_compose_animation_BoundsAnimationModifierNode$stableprop|#static{}androidx_compose_animation_BoundsAnimationModifierNode$stableprop[0]
final val androidx.compose.animation/androidx_compose_animation_BoundsTransformDeferredAnimation$stableprop // androidx.compose.animation/androidx_compose_animation_BoundsTransformDeferredAnimation$stableprop|#static{}androidx_compose_animation_BoundsTransformDeferredAnimation$stableprop[0]
final val androidx.compose.animation/androidx_compose_animation_ChangeSize$stableprop // androidx.compose.animation/androidx_compose_animation_ChangeSize$stableprop|#static{}androidx_compose_animation_ChangeSize$stableprop[0]
final val androidx.compose.animation/androidx_compose_animation_ContentScaleTransitionEffect$stableprop // androidx.compose.animation/androidx_compose_animation_ContentScaleTransitionEffect$stableprop|#static{}androidx_compose_animation_ContentScaleTransitionEffect$stableprop[0]
final val androidx.compose.animation/androidx_compose_animation_ContentTransform$stableprop // androidx.compose.animation/androidx_compose_animation_ContentTransform$stableprop|#static{}androidx_compose_animation_ContentTransform$stableprop[0]
final val androidx.compose.animation/androidx_compose_animation_EnterTransition$stableprop // androidx.compose.animation/androidx_compose_animation_EnterTransition$stableprop|#static{}androidx_compose_animation_EnterTransition$stableprop[0]
final val androidx.compose.animation/androidx_compose_animation_ExitTransition$stableprop // androidx.compose.animation/androidx_compose_animation_ExitTransition$stableprop|#static{}androidx_compose_animation_ExitTransition$stableprop[0]
final val androidx.compose.animation/androidx_compose_animation_Fade$stableprop // androidx.compose.animation/androidx_compose_animation_Fade$stableprop|#static{}androidx_compose_animation_Fade$stableprop[0]
final val androidx.compose.animation/androidx_compose_animation_FlingCalculator$stableprop // androidx.compose.animation/androidx_compose_animation_FlingCalculator$stableprop|#static{}androidx_compose_animation_FlingCalculator$stableprop[0]
final val androidx.compose.animation/androidx_compose_animation_FlingCalculator_FlingInfo$stableprop // androidx.compose.animation/androidx_compose_animation_FlingCalculator_FlingInfo$stableprop|#static{}androidx_compose_animation_FlingCalculator_FlingInfo$stableprop[0]
final val androidx.compose.animation/androidx_compose_animation_LayoutModifierNodeWithPassThroughIntrinsics$stableprop // androidx.compose.animation/androidx_compose_animation_LayoutModifierNodeWithPassThroughIntrinsics$stableprop|#static{}androidx_compose_animation_LayoutModifierNodeWithPassThroughIntrinsics$stableprop[0]
final val androidx.compose.animation/androidx_compose_animation_RenderInTransitionOverlayNode$stableprop // androidx.compose.animation/androidx_compose_animation_RenderInTransitionOverlayNode$stableprop|#static{}androidx_compose_animation_RenderInTransitionOverlayNode$stableprop[0]
final val androidx.compose.animation/androidx_compose_animation_RenderInTransitionOverlayNodeElement$stableprop // androidx.compose.animation/androidx_compose_animation_RenderInTransitionOverlayNodeElement$stableprop|#static{}androidx_compose_animation_RenderInTransitionOverlayNodeElement$stableprop[0]
final val androidx.compose.animation/androidx_compose_animation_Scale$stableprop // androidx.compose.animation/androidx_compose_animation_Scale$stableprop|#static{}androidx_compose_animation_Scale$stableprop[0]
final val androidx.compose.animation/androidx_compose_animation_ScaleToBoundsImpl$stableprop // androidx.compose.animation/androidx_compose_animation_ScaleToBoundsImpl$stableprop|#static{}androidx_compose_animation_ScaleToBoundsImpl$stableprop[0]
final val androidx.compose.animation/androidx_compose_animation_SharedBoundsNode$stableprop // androidx.compose.animation/androidx_compose_animation_SharedBoundsNode$stableprop|#static{}androidx_compose_animation_SharedBoundsNode$stableprop[0]
final val androidx.compose.animation/androidx_compose_animation_SharedBoundsNodeElement$stableprop // androidx.compose.animation/androidx_compose_animation_SharedBoundsNodeElement$stableprop|#static{}androidx_compose_animation_SharedBoundsNodeElement$stableprop[0]
final val androidx.compose.animation/androidx_compose_animation_SharedElement$stableprop // androidx.compose.animation/androidx_compose_animation_SharedElement$stableprop|#static{}androidx_compose_animation_SharedElement$stableprop[0]
final val androidx.compose.animation/androidx_compose_animation_SharedElementInternalState$stableprop // androidx.compose.animation/androidx_compose_animation_SharedElementInternalState$stableprop|#static{}androidx_compose_animation_SharedElementInternalState$stableprop[0]
final val androidx.compose.animation/androidx_compose_animation_SharedTransitionScopeImpl$stableprop // androidx.compose.animation/androidx_compose_animation_SharedTransitionScopeImpl$stableprop|#static{}androidx_compose_animation_SharedTransitionScopeImpl$stableprop[0]
final val androidx.compose.animation/androidx_compose_animation_SharedTransitionScope_SharedContentState$stableprop // androidx.compose.animation/androidx_compose_animation_SharedTransitionScope_SharedContentState$stableprop|#static{}androidx_compose_animation_SharedTransitionScope_SharedContentState$stableprop[0]
final val androidx.compose.animation/androidx_compose_animation_SizeAnimationModifierNode_AnimData$stableprop // androidx.compose.animation/androidx_compose_animation_SizeAnimationModifierNode_AnimData$stableprop|#static{}androidx_compose_animation_SizeAnimationModifierNode_AnimData$stableprop[0]
final val androidx.compose.animation/androidx_compose_animation_SkipToLookaheadElement$stableprop // androidx.compose.animation/androidx_compose_animation_SkipToLookaheadElement$stableprop|#static{}androidx_compose_animation_SkipToLookaheadElement$stableprop[0]
final val androidx.compose.animation/androidx_compose_animation_SkipToLookaheadNode$stableprop // androidx.compose.animation/androidx_compose_animation_SkipToLookaheadNode$stableprop|#static{}androidx_compose_animation_SkipToLookaheadNode$stableprop[0]
final val androidx.compose.animation/androidx_compose_animation_Slide$stableprop // androidx.compose.animation/androidx_compose_animation_Slide$stableprop|#static{}androidx_compose_animation_Slide$stableprop[0]
final val androidx.compose.animation/androidx_compose_animation_SplineBasedFloatDecayAnimationSpec$stableprop // androidx.compose.animation/androidx_compose_animation_SplineBasedFloatDecayAnimationSpec$stableprop|#static{}androidx_compose_animation_SplineBasedFloatDecayAnimationSpec$stableprop[0]
final val androidx.compose.animation/androidx_compose_animation_TargetData$stableprop // androidx.compose.animation/androidx_compose_animation_TargetData$stableprop|#static{}androidx_compose_animation_TargetData$stableprop[0]
final val androidx.compose.animation/androidx_compose_animation_TransitionData$stableprop // androidx.compose.animation/androidx_compose_animation_TransitionData$stableprop|#static{}androidx_compose_animation_TransitionData$stableprop[0]
final val androidx.compose.animation/androidx_compose_animation_TransitionEffect$stableprop // androidx.compose.animation/androidx_compose_animation_TransitionEffect$stableprop|#static{}androidx_compose_animation_TransitionEffect$stableprop[0]

final fun (androidx.compose.animation.core/InfiniteTransition).androidx.compose.animation/animateColor(androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.animation.core/InfiniteRepeatableSpec<androidx.compose.ui.graphics/Color>, androidx.compose.runtime/Composer?, kotlin/Int): androidx.compose.runtime/State<androidx.compose.ui.graphics/Color> // androidx.compose.animation/animateColor|animateColor@androidx.compose.animation.core.InfiniteTransition(androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.animation.core.InfiniteRepeatableSpec<androidx.compose.ui.graphics.Color>;androidx.compose.runtime.Composer?;kotlin.Int){}[0]
final fun (androidx.compose.animation.core/InfiniteTransition).androidx.compose.animation/animateColor(androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.animation.core/InfiniteRepeatableSpec<androidx.compose.ui.graphics/Color>, kotlin/String?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int): androidx.compose.runtime/State<androidx.compose.ui.graphics/Color> // androidx.compose.animation/animateColor|animateColor@androidx.compose.animation.core.InfiniteTransition(androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.animation.core.InfiniteRepeatableSpec<androidx.compose.ui.graphics.Color>;kotlin.String?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun (androidx.compose.animation/EnterTransition).androidx.compose.animation/togetherWith(androidx.compose.animation/ExitTransition): androidx.compose.animation/ContentTransform // androidx.compose.animation/togetherWith|togetherWith@androidx.compose.animation.EnterTransition(androidx.compose.animation.ExitTransition){}[0]
final fun (androidx.compose.foundation.layout/ColumnScope).androidx.compose.animation/AnimatedVisibility(androidx.compose.animation.core/MutableTransitionState<kotlin/Boolean>, androidx.compose.ui/Modifier?, androidx.compose.animation/EnterTransition?, androidx.compose.animation/ExitTransition?, kotlin/String?, kotlin/Function3<androidx.compose.animation/AnimatedVisibilityScope, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // androidx.compose.animation/AnimatedVisibility|AnimatedVisibility@androidx.compose.foundation.layout.ColumnScope(androidx.compose.animation.core.MutableTransitionState<kotlin.Boolean>;androidx.compose.ui.Modifier?;androidx.compose.animation.EnterTransition?;androidx.compose.animation.ExitTransition?;kotlin.String?;kotlin.Function3<androidx.compose.animation.AnimatedVisibilityScope,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun (androidx.compose.foundation.layout/ColumnScope).androidx.compose.animation/AnimatedVisibility(kotlin/Boolean, androidx.compose.ui/Modifier?, androidx.compose.animation/EnterTransition?, androidx.compose.animation/ExitTransition?, kotlin/String?, kotlin/Function3<androidx.compose.animation/AnimatedVisibilityScope, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // androidx.compose.animation/AnimatedVisibility|AnimatedVisibility@androidx.compose.foundation.layout.ColumnScope(kotlin.Boolean;androidx.compose.ui.Modifier?;androidx.compose.animation.EnterTransition?;androidx.compose.animation.ExitTransition?;kotlin.String?;kotlin.Function3<androidx.compose.animation.AnimatedVisibilityScope,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun (androidx.compose.foundation.layout/RowScope).androidx.compose.animation/AnimatedVisibility(androidx.compose.animation.core/MutableTransitionState<kotlin/Boolean>, androidx.compose.ui/Modifier?, androidx.compose.animation/EnterTransition?, androidx.compose.animation/ExitTransition?, kotlin/String?, kotlin/Function3<androidx.compose.animation/AnimatedVisibilityScope, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // androidx.compose.animation/AnimatedVisibility|AnimatedVisibility@androidx.compose.foundation.layout.RowScope(androidx.compose.animation.core.MutableTransitionState<kotlin.Boolean>;androidx.compose.ui.Modifier?;androidx.compose.animation.EnterTransition?;androidx.compose.animation.ExitTransition?;kotlin.String?;kotlin.Function3<androidx.compose.animation.AnimatedVisibilityScope,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun (androidx.compose.foundation.layout/RowScope).androidx.compose.animation/AnimatedVisibility(kotlin/Boolean, androidx.compose.ui/Modifier?, androidx.compose.animation/EnterTransition?, androidx.compose.animation/ExitTransition?, kotlin/String?, kotlin/Function3<androidx.compose.animation/AnimatedVisibilityScope, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // androidx.compose.animation/AnimatedVisibility|AnimatedVisibility@androidx.compose.foundation.layout.RowScope(kotlin.Boolean;androidx.compose.ui.Modifier?;androidx.compose.animation.EnterTransition?;androidx.compose.animation.ExitTransition?;kotlin.String?;kotlin.Function3<androidx.compose.animation.AnimatedVisibilityScope,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.animation/animateContentSize(androidx.compose.animation.core/FiniteAnimationSpec<androidx.compose.ui.unit/IntSize> = ..., androidx.compose.ui/Alignment = ..., kotlin/Function2<androidx.compose.ui.unit/IntSize, androidx.compose.ui.unit/IntSize, kotlin/Unit>? = ...): androidx.compose.ui/Modifier // androidx.compose.animation/animateContentSize|animateContentSize@androidx.compose.ui.Modifier(androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.unit.IntSize>;androidx.compose.ui.Alignment;kotlin.Function2<androidx.compose.ui.unit.IntSize,androidx.compose.ui.unit.IntSize,kotlin.Unit>?){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.animation/animateContentSize(androidx.compose.animation.core/FiniteAnimationSpec<androidx.compose.ui.unit/IntSize> = ..., kotlin/Function2<androidx.compose.ui.unit/IntSize, androidx.compose.ui.unit/IntSize, kotlin/Unit>? = ...): androidx.compose.ui/Modifier // androidx.compose.animation/animateContentSize|animateContentSize@androidx.compose.ui.Modifier(androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.unit.IntSize>;kotlin.Function2<androidx.compose.ui.unit.IntSize,androidx.compose.ui.unit.IntSize,kotlin.Unit>?){}[0]
final fun <#A: kotlin/Any?> (androidx.compose.animation.core/Transition<#A>).androidx.compose.animation/AnimatedContent(androidx.compose.ui/Modifier?, kotlin/Function1<androidx.compose.animation/AnimatedContentTransitionScope<#A>, androidx.compose.animation/ContentTransform>?, androidx.compose.ui/Alignment?, kotlin/Function1<#A, kotlin/Any?>?, kotlin/Function4<androidx.compose.animation/AnimatedContentScope, #A, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // androidx.compose.animation/AnimatedContent|AnimatedContent@androidx.compose.animation.core.Transition<0:0>(androidx.compose.ui.Modifier?;kotlin.Function1<androidx.compose.animation.AnimatedContentTransitionScope<0:0>,androidx.compose.animation.ContentTransform>?;androidx.compose.ui.Alignment?;kotlin.Function1<0:0,kotlin.Any?>?;kotlin.Function4<androidx.compose.animation.AnimatedContentScope,0:0,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> (androidx.compose.animation.core/Transition<#A>).androidx.compose.animation/AnimatedVisibility(kotlin/Function1<#A, kotlin/Boolean>, androidx.compose.ui/Modifier?, androidx.compose.animation/EnterTransition?, androidx.compose.animation/ExitTransition?, kotlin/Function3<androidx.compose.animation/AnimatedVisibilityScope, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // androidx.compose.animation/AnimatedVisibility|AnimatedVisibility@androidx.compose.animation.core.Transition<0:0>(kotlin.Function1<0:0,kotlin.Boolean>;androidx.compose.ui.Modifier?;androidx.compose.animation.EnterTransition?;androidx.compose.animation.ExitTransition?;kotlin.Function3<androidx.compose.animation.AnimatedVisibilityScope,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.compose.animation/AnimatedContent(#A, androidx.compose.ui/Modifier?, kotlin/Function1<androidx.compose.animation/AnimatedContentTransitionScope<#A>, androidx.compose.animation/ContentTransform>?, androidx.compose.ui/Alignment?, kotlin/String?, kotlin/Function1<#A, kotlin/Any?>?, kotlin/Function4<androidx.compose.animation/AnimatedContentScope, #A, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // androidx.compose.animation/AnimatedContent|AnimatedContent(0:0;androidx.compose.ui.Modifier?;kotlin.Function1<androidx.compose.animation.AnimatedContentTransitionScope<0:0>,androidx.compose.animation.ContentTransform>?;androidx.compose.ui.Alignment?;kotlin.String?;kotlin.Function1<0:0,kotlin.Any?>?;kotlin.Function4<androidx.compose.animation.AnimatedContentScope,0:0,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.compose.animation/Crossfade(#A, androidx.compose.ui/Modifier?, androidx.compose.animation.core/FiniteAnimationSpec<kotlin/Float>?, kotlin/Function3<#A, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // androidx.compose.animation/Crossfade|Crossfade(0:0;androidx.compose.ui.Modifier?;androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float>?;kotlin.Function3<0:0,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.compose.animation/Crossfade(#A, androidx.compose.ui/Modifier?, androidx.compose.animation.core/FiniteAnimationSpec<kotlin/Float>?, kotlin/String?, kotlin/Function3<#A, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // androidx.compose.animation/Crossfade|Crossfade(0:0;androidx.compose.ui.Modifier?;androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float>?;kotlin.String?;kotlin.Function3<0:0,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.compose.animation/rememberSplineBasedDecay(androidx.compose.runtime/Composer?, kotlin/Int): androidx.compose.animation.core/DecayAnimationSpec<#A> // androidx.compose.animation/rememberSplineBasedDecay|rememberSplineBasedDecay(androidx.compose.runtime.Composer?;kotlin.Int){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.compose.animation/splineBasedDecay(androidx.compose.ui.unit/Density): androidx.compose.animation.core/DecayAnimationSpec<#A> // androidx.compose.animation/splineBasedDecay|splineBasedDecay(androidx.compose.ui.unit.Density){0§<kotlin.Any?>}[0]
final fun androidx.compose.animation/Animatable(androidx.compose.ui.graphics/Color): androidx.compose.animation.core/Animatable<androidx.compose.ui.graphics/Color, androidx.compose.animation.core/AnimationVector4D> // androidx.compose.animation/Animatable|Animatable(androidx.compose.ui.graphics.Color){}[0]
final fun androidx.compose.animation/AnimatedVisibility(androidx.compose.animation.core/MutableTransitionState<kotlin/Boolean>, androidx.compose.ui/Modifier?, androidx.compose.animation/EnterTransition?, androidx.compose.animation/ExitTransition?, kotlin/String?, kotlin/Function3<androidx.compose.animation/AnimatedVisibilityScope, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // androidx.compose.animation/AnimatedVisibility|AnimatedVisibility(androidx.compose.animation.core.MutableTransitionState<kotlin.Boolean>;androidx.compose.ui.Modifier?;androidx.compose.animation.EnterTransition?;androidx.compose.animation.ExitTransition?;kotlin.String?;kotlin.Function3<androidx.compose.animation.AnimatedVisibilityScope,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.animation/AnimatedVisibility(kotlin/Boolean, androidx.compose.ui/Modifier?, androidx.compose.animation/EnterTransition?, androidx.compose.animation/ExitTransition?, kotlin/String?, kotlin/Function3<androidx.compose.animation/AnimatedVisibilityScope, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // androidx.compose.animation/AnimatedVisibility|AnimatedVisibility(kotlin.Boolean;androidx.compose.ui.Modifier?;androidx.compose.animation.EnterTransition?;androidx.compose.animation.ExitTransition?;kotlin.String?;kotlin.Function3<androidx.compose.animation.AnimatedVisibilityScope,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.animation/SizeTransform(kotlin/Boolean = ..., kotlin/Function2<androidx.compose.ui.unit/IntSize, androidx.compose.ui.unit/IntSize, androidx.compose.animation.core/FiniteAnimationSpec<androidx.compose.ui.unit/IntSize>> = ...): androidx.compose.animation/SizeTransform // androidx.compose.animation/SizeTransform|SizeTransform(kotlin.Boolean;kotlin.Function2<androidx.compose.ui.unit.IntSize,androidx.compose.ui.unit.IntSize,androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.unit.IntSize>>){}[0]
final fun androidx.compose.animation/androidx_compose_animation_AndroidFlingSpline$stableprop_getter(): kotlin/Int // androidx.compose.animation/androidx_compose_animation_AndroidFlingSpline$stableprop_getter|androidx_compose_animation_AndroidFlingSpline$stableprop_getter(){}[0]
final fun androidx.compose.animation/androidx_compose_animation_AndroidFlingSpline_FlingResult$stableprop_getter(): kotlin/Int // androidx.compose.animation/androidx_compose_animation_AndroidFlingSpline_FlingResult$stableprop_getter|androidx_compose_animation_AndroidFlingSpline_FlingResult$stableprop_getter(){}[0]
final fun androidx.compose.animation/androidx_compose_animation_AnimatedContentTransitionScopeImpl$stableprop_getter(): kotlin/Int // androidx.compose.animation/androidx_compose_animation_AnimatedContentTransitionScopeImpl$stableprop_getter|androidx_compose_animation_AnimatedContentTransitionScopeImpl$stableprop_getter(){}[0]
final fun androidx.compose.animation/androidx_compose_animation_AnimatedContentTransitionScopeImpl_ChildData$stableprop_getter(): kotlin/Int // androidx.compose.animation/androidx_compose_animation_AnimatedContentTransitionScopeImpl_ChildData$stableprop_getter|androidx_compose_animation_AnimatedContentTransitionScopeImpl_ChildData$stableprop_getter(){}[0]
final fun androidx.compose.animation/androidx_compose_animation_AnimatedVisibilityScopeImpl$stableprop_getter(): kotlin/Int // androidx.compose.animation/androidx_compose_animation_AnimatedVisibilityScopeImpl$stableprop_getter|androidx_compose_animation_AnimatedVisibilityScopeImpl$stableprop_getter(){}[0]
final fun androidx.compose.animation/androidx_compose_animation_BoundsAnimation$stableprop_getter(): kotlin/Int // androidx.compose.animation/androidx_compose_animation_BoundsAnimation$stableprop_getter|androidx_compose_animation_BoundsAnimation$stableprop_getter(){}[0]
final fun androidx.compose.animation/androidx_compose_animation_BoundsAnimationElement$stableprop_getter(): kotlin/Int // androidx.compose.animation/androidx_compose_animation_BoundsAnimationElement$stableprop_getter|androidx_compose_animation_BoundsAnimationElement$stableprop_getter(){}[0]
final fun androidx.compose.animation/androidx_compose_animation_BoundsAnimationModifierNode$stableprop_getter(): kotlin/Int // androidx.compose.animation/androidx_compose_animation_BoundsAnimationModifierNode$stableprop_getter|androidx_compose_animation_BoundsAnimationModifierNode$stableprop_getter(){}[0]
final fun androidx.compose.animation/androidx_compose_animation_BoundsTransformDeferredAnimation$stableprop_getter(): kotlin/Int // androidx.compose.animation/androidx_compose_animation_BoundsTransformDeferredAnimation$stableprop_getter|androidx_compose_animation_BoundsTransformDeferredAnimation$stableprop_getter(){}[0]
final fun androidx.compose.animation/androidx_compose_animation_ChangeSize$stableprop_getter(): kotlin/Int // androidx.compose.animation/androidx_compose_animation_ChangeSize$stableprop_getter|androidx_compose_animation_ChangeSize$stableprop_getter(){}[0]
final fun androidx.compose.animation/androidx_compose_animation_ContentScaleTransitionEffect$stableprop_getter(): kotlin/Int // androidx.compose.animation/androidx_compose_animation_ContentScaleTransitionEffect$stableprop_getter|androidx_compose_animation_ContentScaleTransitionEffect$stableprop_getter(){}[0]
final fun androidx.compose.animation/androidx_compose_animation_ContentTransform$stableprop_getter(): kotlin/Int // androidx.compose.animation/androidx_compose_animation_ContentTransform$stableprop_getter|androidx_compose_animation_ContentTransform$stableprop_getter(){}[0]
final fun androidx.compose.animation/androidx_compose_animation_EnterTransition$stableprop_getter(): kotlin/Int // androidx.compose.animation/androidx_compose_animation_EnterTransition$stableprop_getter|androidx_compose_animation_EnterTransition$stableprop_getter(){}[0]
final fun androidx.compose.animation/androidx_compose_animation_ExitTransition$stableprop_getter(): kotlin/Int // androidx.compose.animation/androidx_compose_animation_ExitTransition$stableprop_getter|androidx_compose_animation_ExitTransition$stableprop_getter(){}[0]
final fun androidx.compose.animation/androidx_compose_animation_Fade$stableprop_getter(): kotlin/Int // androidx.compose.animation/androidx_compose_animation_Fade$stableprop_getter|androidx_compose_animation_Fade$stableprop_getter(){}[0]
final fun androidx.compose.animation/androidx_compose_animation_FlingCalculator$stableprop_getter(): kotlin/Int // androidx.compose.animation/androidx_compose_animation_FlingCalculator$stableprop_getter|androidx_compose_animation_FlingCalculator$stableprop_getter(){}[0]
final fun androidx.compose.animation/androidx_compose_animation_FlingCalculator_FlingInfo$stableprop_getter(): kotlin/Int // androidx.compose.animation/androidx_compose_animation_FlingCalculator_FlingInfo$stableprop_getter|androidx_compose_animation_FlingCalculator_FlingInfo$stableprop_getter(){}[0]
final fun androidx.compose.animation/androidx_compose_animation_LayoutModifierNodeWithPassThroughIntrinsics$stableprop_getter(): kotlin/Int // androidx.compose.animation/androidx_compose_animation_LayoutModifierNodeWithPassThroughIntrinsics$stableprop_getter|androidx_compose_animation_LayoutModifierNodeWithPassThroughIntrinsics$stableprop_getter(){}[0]
final fun androidx.compose.animation/androidx_compose_animation_RenderInTransitionOverlayNode$stableprop_getter(): kotlin/Int // androidx.compose.animation/androidx_compose_animation_RenderInTransitionOverlayNode$stableprop_getter|androidx_compose_animation_RenderInTransitionOverlayNode$stableprop_getter(){}[0]
final fun androidx.compose.animation/androidx_compose_animation_RenderInTransitionOverlayNodeElement$stableprop_getter(): kotlin/Int // androidx.compose.animation/androidx_compose_animation_RenderInTransitionOverlayNodeElement$stableprop_getter|androidx_compose_animation_RenderInTransitionOverlayNodeElement$stableprop_getter(){}[0]
final fun androidx.compose.animation/androidx_compose_animation_Scale$stableprop_getter(): kotlin/Int // androidx.compose.animation/androidx_compose_animation_Scale$stableprop_getter|androidx_compose_animation_Scale$stableprop_getter(){}[0]
final fun androidx.compose.animation/androidx_compose_animation_ScaleToBoundsImpl$stableprop_getter(): kotlin/Int // androidx.compose.animation/androidx_compose_animation_ScaleToBoundsImpl$stableprop_getter|androidx_compose_animation_ScaleToBoundsImpl$stableprop_getter(){}[0]
final fun androidx.compose.animation/androidx_compose_animation_SharedBoundsNode$stableprop_getter(): kotlin/Int // androidx.compose.animation/androidx_compose_animation_SharedBoundsNode$stableprop_getter|androidx_compose_animation_SharedBoundsNode$stableprop_getter(){}[0]
final fun androidx.compose.animation/androidx_compose_animation_SharedBoundsNodeElement$stableprop_getter(): kotlin/Int // androidx.compose.animation/androidx_compose_animation_SharedBoundsNodeElement$stableprop_getter|androidx_compose_animation_SharedBoundsNodeElement$stableprop_getter(){}[0]
final fun androidx.compose.animation/androidx_compose_animation_SharedElement$stableprop_getter(): kotlin/Int // androidx.compose.animation/androidx_compose_animation_SharedElement$stableprop_getter|androidx_compose_animation_SharedElement$stableprop_getter(){}[0]
final fun androidx.compose.animation/androidx_compose_animation_SharedElementInternalState$stableprop_getter(): kotlin/Int // androidx.compose.animation/androidx_compose_animation_SharedElementInternalState$stableprop_getter|androidx_compose_animation_SharedElementInternalState$stableprop_getter(){}[0]
final fun androidx.compose.animation/androidx_compose_animation_SharedTransitionScopeImpl$stableprop_getter(): kotlin/Int // androidx.compose.animation/androidx_compose_animation_SharedTransitionScopeImpl$stableprop_getter|androidx_compose_animation_SharedTransitionScopeImpl$stableprop_getter(){}[0]
final fun androidx.compose.animation/androidx_compose_animation_SharedTransitionScope_SharedContentState$stableprop_getter(): kotlin/Int // androidx.compose.animation/androidx_compose_animation_SharedTransitionScope_SharedContentState$stableprop_getter|androidx_compose_animation_SharedTransitionScope_SharedContentState$stableprop_getter(){}[0]
final fun androidx.compose.animation/androidx_compose_animation_SizeAnimationModifierNode_AnimData$stableprop_getter(): kotlin/Int // androidx.compose.animation/androidx_compose_animation_SizeAnimationModifierNode_AnimData$stableprop_getter|androidx_compose_animation_SizeAnimationModifierNode_AnimData$stableprop_getter(){}[0]
final fun androidx.compose.animation/androidx_compose_animation_SkipToLookaheadElement$stableprop_getter(): kotlin/Int // androidx.compose.animation/androidx_compose_animation_SkipToLookaheadElement$stableprop_getter|androidx_compose_animation_SkipToLookaheadElement$stableprop_getter(){}[0]
final fun androidx.compose.animation/androidx_compose_animation_SkipToLookaheadNode$stableprop_getter(): kotlin/Int // androidx.compose.animation/androidx_compose_animation_SkipToLookaheadNode$stableprop_getter|androidx_compose_animation_SkipToLookaheadNode$stableprop_getter(){}[0]
final fun androidx.compose.animation/androidx_compose_animation_Slide$stableprop_getter(): kotlin/Int // androidx.compose.animation/androidx_compose_animation_Slide$stableprop_getter|androidx_compose_animation_Slide$stableprop_getter(){}[0]
final fun androidx.compose.animation/androidx_compose_animation_SplineBasedFloatDecayAnimationSpec$stableprop_getter(): kotlin/Int // androidx.compose.animation/androidx_compose_animation_SplineBasedFloatDecayAnimationSpec$stableprop_getter|androidx_compose_animation_SplineBasedFloatDecayAnimationSpec$stableprop_getter(){}[0]
final fun androidx.compose.animation/androidx_compose_animation_TargetData$stableprop_getter(): kotlin/Int // androidx.compose.animation/androidx_compose_animation_TargetData$stableprop_getter|androidx_compose_animation_TargetData$stableprop_getter(){}[0]
final fun androidx.compose.animation/androidx_compose_animation_TransitionData$stableprop_getter(): kotlin/Int // androidx.compose.animation/androidx_compose_animation_TransitionData$stableprop_getter|androidx_compose_animation_TransitionData$stableprop_getter(){}[0]
final fun androidx.compose.animation/androidx_compose_animation_TransitionEffect$stableprop_getter(): kotlin/Int // androidx.compose.animation/androidx_compose_animation_TransitionEffect$stableprop_getter|androidx_compose_animation_TransitionEffect$stableprop_getter(){}[0]
final fun androidx.compose.animation/animateColorAsState(androidx.compose.ui.graphics/Color, androidx.compose.animation.core/AnimationSpec<androidx.compose.ui.graphics/Color>?, kotlin/Function1<androidx.compose.ui.graphics/Color, kotlin/Unit>?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int): androidx.compose.runtime/State<androidx.compose.ui.graphics/Color> // androidx.compose.animation/animateColorAsState|animateColorAsState(androidx.compose.ui.graphics.Color;androidx.compose.animation.core.AnimationSpec<androidx.compose.ui.graphics.Color>?;kotlin.Function1<androidx.compose.ui.graphics.Color,kotlin.Unit>?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.animation/animateColorAsState(androidx.compose.ui.graphics/Color, androidx.compose.animation.core/AnimationSpec<androidx.compose.ui.graphics/Color>?, kotlin/String?, kotlin/Function1<androidx.compose.ui.graphics/Color, kotlin/Unit>?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int): androidx.compose.runtime/State<androidx.compose.ui.graphics/Color> // androidx.compose.animation/animateColorAsState|animateColorAsState(androidx.compose.ui.graphics.Color;androidx.compose.animation.core.AnimationSpec<androidx.compose.ui.graphics.Color>?;kotlin.String?;kotlin.Function1<androidx.compose.ui.graphics.Color,kotlin.Unit>?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.animation/defaultDecayAnimationSpec(androidx.compose.runtime/Composer?, kotlin/Int): androidx.compose.animation.core/DecayAnimationSpec<kotlin/Float> // androidx.compose.animation/defaultDecayAnimationSpec|defaultDecayAnimationSpec(androidx.compose.runtime.Composer?;kotlin.Int){}[0]
final fun androidx.compose.animation/expandHorizontally(androidx.compose.animation.core/FiniteAnimationSpec<androidx.compose.ui.unit/IntSize> = ..., androidx.compose.ui/Alignment.Horizontal = ..., kotlin/Boolean = ..., kotlin/Function1<kotlin/Int, kotlin/Int> = ...): androidx.compose.animation/EnterTransition // androidx.compose.animation/expandHorizontally|expandHorizontally(androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.unit.IntSize>;androidx.compose.ui.Alignment.Horizontal;kotlin.Boolean;kotlin.Function1<kotlin.Int,kotlin.Int>){}[0]
final fun androidx.compose.animation/expandIn(androidx.compose.animation.core/FiniteAnimationSpec<androidx.compose.ui.unit/IntSize> = ..., androidx.compose.ui/Alignment = ..., kotlin/Boolean = ..., kotlin/Function1<androidx.compose.ui.unit/IntSize, androidx.compose.ui.unit/IntSize> = ...): androidx.compose.animation/EnterTransition // androidx.compose.animation/expandIn|expandIn(androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.unit.IntSize>;androidx.compose.ui.Alignment;kotlin.Boolean;kotlin.Function1<androidx.compose.ui.unit.IntSize,androidx.compose.ui.unit.IntSize>){}[0]
final fun androidx.compose.animation/expandVertically(androidx.compose.animation.core/FiniteAnimationSpec<androidx.compose.ui.unit/IntSize> = ..., androidx.compose.ui/Alignment.Vertical = ..., kotlin/Boolean = ..., kotlin/Function1<kotlin/Int, kotlin/Int> = ...): androidx.compose.animation/EnterTransition // androidx.compose.animation/expandVertically|expandVertically(androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.unit.IntSize>;androidx.compose.ui.Alignment.Vertical;kotlin.Boolean;kotlin.Function1<kotlin.Int,kotlin.Int>){}[0]
final fun androidx.compose.animation/fadeIn(androidx.compose.animation.core/FiniteAnimationSpec<kotlin/Float> = ..., kotlin/Float = ...): androidx.compose.animation/EnterTransition // androidx.compose.animation/fadeIn|fadeIn(androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float>;kotlin.Float){}[0]
final fun androidx.compose.animation/fadeOut(androidx.compose.animation.core/FiniteAnimationSpec<kotlin/Float> = ..., kotlin/Float = ...): androidx.compose.animation/ExitTransition // androidx.compose.animation/fadeOut|fadeOut(androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float>;kotlin.Float){}[0]
final fun androidx.compose.animation/scaleIn(androidx.compose.animation.core/FiniteAnimationSpec<kotlin/Float> = ..., kotlin/Float = ..., androidx.compose.ui.graphics/TransformOrigin = ...): androidx.compose.animation/EnterTransition // androidx.compose.animation/scaleIn|scaleIn(androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float>;kotlin.Float;androidx.compose.ui.graphics.TransformOrigin){}[0]
final fun androidx.compose.animation/scaleOut(androidx.compose.animation.core/FiniteAnimationSpec<kotlin/Float> = ..., kotlin/Float = ..., androidx.compose.ui.graphics/TransformOrigin = ...): androidx.compose.animation/ExitTransition // androidx.compose.animation/scaleOut|scaleOut(androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float>;kotlin.Float;androidx.compose.ui.graphics.TransformOrigin){}[0]
final fun androidx.compose.animation/shrinkHorizontally(androidx.compose.animation.core/FiniteAnimationSpec<androidx.compose.ui.unit/IntSize> = ..., androidx.compose.ui/Alignment.Horizontal = ..., kotlin/Boolean = ..., kotlin/Function1<kotlin/Int, kotlin/Int> = ...): androidx.compose.animation/ExitTransition // androidx.compose.animation/shrinkHorizontally|shrinkHorizontally(androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.unit.IntSize>;androidx.compose.ui.Alignment.Horizontal;kotlin.Boolean;kotlin.Function1<kotlin.Int,kotlin.Int>){}[0]
final fun androidx.compose.animation/shrinkOut(androidx.compose.animation.core/FiniteAnimationSpec<androidx.compose.ui.unit/IntSize> = ..., androidx.compose.ui/Alignment = ..., kotlin/Boolean = ..., kotlin/Function1<androidx.compose.ui.unit/IntSize, androidx.compose.ui.unit/IntSize> = ...): androidx.compose.animation/ExitTransition // androidx.compose.animation/shrinkOut|shrinkOut(androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.unit.IntSize>;androidx.compose.ui.Alignment;kotlin.Boolean;kotlin.Function1<androidx.compose.ui.unit.IntSize,androidx.compose.ui.unit.IntSize>){}[0]
final fun androidx.compose.animation/shrinkVertically(androidx.compose.animation.core/FiniteAnimationSpec<androidx.compose.ui.unit/IntSize> = ..., androidx.compose.ui/Alignment.Vertical = ..., kotlin/Boolean = ..., kotlin/Function1<kotlin/Int, kotlin/Int> = ...): androidx.compose.animation/ExitTransition // androidx.compose.animation/shrinkVertically|shrinkVertically(androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.unit.IntSize>;androidx.compose.ui.Alignment.Vertical;kotlin.Boolean;kotlin.Function1<kotlin.Int,kotlin.Int>){}[0]
final fun androidx.compose.animation/slideIn(androidx.compose.animation.core/FiniteAnimationSpec<androidx.compose.ui.unit/IntOffset> = ..., kotlin/Function1<androidx.compose.ui.unit/IntSize, androidx.compose.ui.unit/IntOffset>): androidx.compose.animation/EnterTransition // androidx.compose.animation/slideIn|slideIn(androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.unit.IntOffset>;kotlin.Function1<androidx.compose.ui.unit.IntSize,androidx.compose.ui.unit.IntOffset>){}[0]
final fun androidx.compose.animation/slideInHorizontally(androidx.compose.animation.core/FiniteAnimationSpec<androidx.compose.ui.unit/IntOffset> = ..., kotlin/Function1<kotlin/Int, kotlin/Int> = ...): androidx.compose.animation/EnterTransition // androidx.compose.animation/slideInHorizontally|slideInHorizontally(androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.unit.IntOffset>;kotlin.Function1<kotlin.Int,kotlin.Int>){}[0]
final fun androidx.compose.animation/slideInVertically(androidx.compose.animation.core/FiniteAnimationSpec<androidx.compose.ui.unit/IntOffset> = ..., kotlin/Function1<kotlin/Int, kotlin/Int> = ...): androidx.compose.animation/EnterTransition // androidx.compose.animation/slideInVertically|slideInVertically(androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.unit.IntOffset>;kotlin.Function1<kotlin.Int,kotlin.Int>){}[0]
final fun androidx.compose.animation/slideOut(androidx.compose.animation.core/FiniteAnimationSpec<androidx.compose.ui.unit/IntOffset> = ..., kotlin/Function1<androidx.compose.ui.unit/IntSize, androidx.compose.ui.unit/IntOffset>): androidx.compose.animation/ExitTransition // androidx.compose.animation/slideOut|slideOut(androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.unit.IntOffset>;kotlin.Function1<androidx.compose.ui.unit.IntSize,androidx.compose.ui.unit.IntOffset>){}[0]
final fun androidx.compose.animation/slideOutHorizontally(androidx.compose.animation.core/FiniteAnimationSpec<androidx.compose.ui.unit/IntOffset> = ..., kotlin/Function1<kotlin/Int, kotlin/Int> = ...): androidx.compose.animation/ExitTransition // androidx.compose.animation/slideOutHorizontally|slideOutHorizontally(androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.unit.IntOffset>;kotlin.Function1<kotlin.Int,kotlin.Int>){}[0]
final fun androidx.compose.animation/slideOutVertically(androidx.compose.animation.core/FiniteAnimationSpec<androidx.compose.ui.unit/IntOffset> = ..., kotlin/Function1<kotlin/Int, kotlin/Int> = ...): androidx.compose.animation/ExitTransition // androidx.compose.animation/slideOutVertically|slideOutVertically(androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.unit.IntOffset>;kotlin.Function1<kotlin.Int,kotlin.Int>){}[0]
final inline fun <#A: kotlin/Any?> (androidx.compose.animation.core/Transition<#A>).androidx.compose.animation/animateColor(noinline kotlin/Function3<androidx.compose.animation.core/Transition.Segment<#A>, androidx.compose.runtime/Composer, kotlin/Int, androidx.compose.animation.core/FiniteAnimationSpec<androidx.compose.ui.graphics/Color>>?, kotlin/String?, kotlin/Function3<#A, androidx.compose.runtime/Composer, kotlin/Int, androidx.compose.ui.graphics/Color>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int): androidx.compose.runtime/State<androidx.compose.ui.graphics/Color> // androidx.compose.animation/animateColor|animateColor@androidx.compose.animation.core.Transition<0:0>(kotlin.Function3<androidx.compose.animation.core.Transition.Segment<0:0>,androidx.compose.runtime.Composer,kotlin.Int,androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.graphics.Color>>?;kotlin.String?;kotlin.Function3<0:0,androidx.compose.runtime.Composer,kotlin.Int,androidx.compose.ui.graphics.Color>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){0§<kotlin.Any?>}[0]
