// Signature format: 4.0
package androidx.compose.material.navigation {

  public final class BottomSheetKt {
    method @androidx.compose.runtime.Composable public static void ModalBottomSheetLayout(androidx.compose.material.navigation.BottomSheetNavigator bottomSheetNavigator, optional androidx.compose.ui.Modifier modifier, optional boolean sheetGesturesEnabled, optional androidx.compose.ui.graphics.Shape sheetShape, optional float sheetElevation, optional long sheetBackgroundColor, optional long sheetContentColor, optional long scrimColor, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable public static void ModalBottomSheetLayout-4erKP6g(androidx.compose.material.navigation.BottomSheetNavigator!, androidx.compose.ui.Modifier!, androidx.compose.ui.graphics.Shape!, float, long, long, long, kotlin.jvm.functions.Function2!, androidx.compose.runtime.Composer!, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void ModalBottomSheetLayout-BzaUkTc(androidx.compose.material.navigation.BottomSheetNavigator, androidx.compose.ui.Modifier?, boolean, androidx.compose.ui.graphics.Shape?, float, long, long, long, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
  }

  @androidx.navigation.Navigator.Name("bottomSheet") public final class BottomSheetNavigator extends androidx.navigation.Navigator<androidx.compose.material.navigation.BottomSheetNavigator.Destination> {
    ctor public BottomSheetNavigator(androidx.compose.material.ModalBottomSheetState sheetState);
    method public androidx.compose.material.navigation.BottomSheetNavigator.Destination createDestination();
    method public androidx.compose.material.navigation.BottomSheetNavigatorSheetState getNavigatorSheetState();
    property public androidx.compose.material.navigation.BottomSheetNavigatorSheetState navigatorSheetState;
  }

  @androidx.navigation.NavDestination.ClassType(Composable::class) public static final class BottomSheetNavigator.Destination extends androidx.navigation.NavDestination implements androidx.navigation.FloatingWindow {
    ctor public BottomSheetNavigator.Destination(androidx.compose.material.navigation.BottomSheetNavigator navigator, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.layout.ColumnScope,? super androidx.navigation.NavBackStackEntry,kotlin.Unit> content);
    ctor @BytecodeOnly public BottomSheetNavigator.Destination(androidx.compose.material.navigation.BottomSheetNavigator, kotlin.jvm.functions.Function4<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.navigation.NavBackStackEntry!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>);
  }

  @androidx.navigation.NavDestinationDsl public final class BottomSheetNavigatorDestinationBuilder extends androidx.navigation.NavDestinationBuilder<androidx.compose.material.navigation.BottomSheetNavigator.Destination> {
    ctor public BottomSheetNavigatorDestinationBuilder(androidx.compose.material.navigation.BottomSheetNavigator navigator, String route, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.layout.ColumnScope,? super androidx.navigation.NavBackStackEntry,kotlin.Unit> content);
    ctor @BytecodeOnly public BottomSheetNavigatorDestinationBuilder(androidx.compose.material.navigation.BottomSheetNavigator, String, kotlin.jvm.functions.Function4<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.navigation.NavBackStackEntry!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>);
    ctor public BottomSheetNavigatorDestinationBuilder(androidx.compose.material.navigation.BottomSheetNavigator navigator, kotlin.reflect.KClass<? extends java.lang.Object?> route, java.util.Map<kotlin.reflect.KType,androidx.navigation.NavType<? extends java.lang.Object?>> typeMap, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.layout.ColumnScope,? super androidx.navigation.NavBackStackEntry,kotlin.Unit> content);
    ctor @BytecodeOnly public BottomSheetNavigatorDestinationBuilder(androidx.compose.material.navigation.BottomSheetNavigator, kotlin.reflect.KClass<? extends java.lang.Object!>, java.util.Map<kotlin.reflect.KType!,androidx.navigation.NavType<? extends java.lang.Object!>!>, kotlin.jvm.functions.Function4<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.navigation.NavBackStackEntry!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>);
    method protected androidx.compose.material.navigation.BottomSheetNavigator.Destination instantiateDestination();
  }

  public final class BottomSheetNavigatorKt {
    method @androidx.compose.runtime.Composable public static androidx.compose.material.navigation.BottomSheetNavigator rememberBottomSheetNavigator(optional androidx.compose.animation.core.AnimationSpec<java.lang.Float> animationSpec);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static androidx.compose.material.navigation.BottomSheetNavigator rememberBottomSheetNavigator(androidx.compose.animation.core.AnimationSpec<java.lang.Float!>?, androidx.compose.runtime.Composer?, int, int);
  }

  public final class BottomSheetNavigatorSheetState {
    ctor public BottomSheetNavigatorSheetState(androidx.compose.material.ModalBottomSheetState sheetState);
    method public androidx.compose.material.ModalBottomSheetValue getCurrentValue();
    method public androidx.compose.material.ModalBottomSheetValue getTargetValue();
    method public boolean isVisible();
    property public androidx.compose.material.ModalBottomSheetValue currentValue;
    property public boolean isVisible;
    property public androidx.compose.material.ModalBottomSheetValue targetValue;
  }

  public final class NavGraphBuilderKt {
    method public static void bottomSheet(androidx.navigation.NavGraphBuilder, String route, optional java.util.List<androidx.navigation.NamedNavArgument> arguments, optional java.util.List<androidx.navigation.NavDeepLink> deepLinks, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.layout.ColumnScope,? super androidx.navigation.NavBackStackEntry,kotlin.Unit> content);
    method @BytecodeOnly public static void bottomSheet(androidx.navigation.NavGraphBuilder, String, java.util.List<androidx.navigation.NamedNavArgument!>, java.util.List<androidx.navigation.NavDeepLink!>, kotlin.jvm.functions.Function4<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.navigation.NavBackStackEntry!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>);
    method @KotlinOnly public static inline <reified T> void bottomSheet(androidx.navigation.NavGraphBuilder, optional java.util.Map<kotlin.reflect.KType,androidx.navigation.NavType<? extends java.lang.Object?>> typeMap, optional java.util.List<androidx.navigation.NamedNavArgument> arguments, optional java.util.List<androidx.navigation.NavDeepLink> deepLinks, kotlin.jvm.functions.Function2<androidx.compose.foundation.layout.ColumnScope,androidx.navigation.NavBackStackEntry,kotlin.Unit> content);
  }

}

