// Baseline format: 1.0
AcronymName: androidx.compose.remote.core.CoreDocument#getHostExceptionID():
    Acronyms should not be capitalized in method names: was `getHostExceptionID`, should this be `getHostExceptionId`?
AcronymName: androidx.compose.remote.core.CoreDocument#setHostExceptionID(int):
    Acronyms should not be capitalized in method names: was `setHostExceptionID`, should this be `setHostExceptionId`?
AcronymName: androidx.compose.remote.core.WireBuffer#readUTF8():
    Acronyms should not be capitalized in method names: was `readUTF8`, should this be `readUtf8`?
AcronymName: androidx.compose.remote.core.WireBuffer#readUTF8(int):
    Acronyms should not be capitalized in method names: was `readUTF8`, should this be `readUtf8`?
AcronymName: androidx.compose.remote.core.WireBuffer#writeUTF8(String):
    Acronyms should not be capitalized in method names: was `writeUTF8`, should this be `writeUtf8`?
AcronymName: androidx.compose.remote.core.documentation.DocumentedOperation#isWIP():
    Acronyms should not be capitalized in method names: was `isWIP`, should this be `isWip`?
AcronymName: androidx.compose.remote.core.operations.Utils#toARGB(float, float, float, float):
    Acronyms should not be capitalized in method names: was `toARGB`, should this be `toArgb`?
AcronymName: androidx.compose.remote.core.operations.layout.animation.AnimationSpec.ANIMATION:
    Acronyms should not be capitalized in class names: was `ANIMATION`, should this be `Animation`?
AcronymName: androidx.compose.remote.core.operations.paint.TextPaint#setARGB(int, int, int, int):
    Acronyms should not be capitalized in method names: was `setARGB`, should this be `setArgb`?
AcronymName: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#evalDB(float[], float...):
    Acronyms should not be capitalized in method names: was `evalDB`, should this be `evalDb`?
AcronymName: androidx.compose.remote.core.operations.utilities.IntegerExpressionEvaluator#evalDB(int, int[], int...):
    Acronyms should not be capitalized in method names: was `evalDB`, should this be `evalDb`?


AllUpper: androidx.compose.remote.core.Platform#None:
    Constant field names must be named with only upper case characters: `androidx.compose.remote.core.Platform#None`, should be `NONE`?
AllUpper: androidx.compose.remote.core.operations.layout.managers.StateLayout#MAX_CACHE_ELEMENTS:
    Constant MAX_CACHE_ELEMENTS must be marked static final
AllUpper: androidx.compose.remote.core.operations.utilities.Matrix#sTmpMatrix1:
    Constant field names must be named with only upper case characters: `androidx.compose.remote.core.operations.utilities.Matrix#sTmpMatrix1`, should be `S_TMP_MATRIX1`?
AllUpper: androidx.compose.remote.core.operations.utilities.Matrix#sTmpMatrix2:
    Constant field names must be named with only upper case characters: `androidx.compose.remote.core.operations.utilities.Matrix#sTmpMatrix2`, should be `S_TMP_MATRIX2`?


ArrayReturn: androidx.compose.remote.core.RemoteComposeBuffer#addBitmapFont(int, androidx.compose.remote.core.operations.BitmapFontData.Glyph[]) parameter #1:
    Method parameter should be Collection<Glyph> (or subclass) instead of raw array; was `androidx.compose.remote.core.operations.BitmapFontData.Glyph[]`
ArrayReturn: androidx.compose.remote.core.RemoteComposeBuffer#addBitmapFont(int, androidx.compose.remote.core.operations.BitmapFontData.Glyph[], java.util.Map<java.lang.String,java.lang.Short>) parameter #1:
    Method parameter should be Collection<Glyph> (or subclass) instead of raw array; was `androidx.compose.remote.core.operations.BitmapFontData.Glyph[]`
ArrayReturn: androidx.compose.remote.core.RemoteComposeBuffer#addHeader(short[], Object[]) parameter #1:
    Method parameter should be Collection<Object> (or subclass) instead of raw array; was `java.lang.Object[]`
ArrayReturn: androidx.compose.remote.core.RemoteComposeBuffer#addParticles(int, int[], float[][], int) parameter #2:
    Method parameter should be Collection<> (or subclass) instead of raw array; was `float[][]`
ArrayReturn: androidx.compose.remote.core.RemoteComposeBuffer#addParticlesLoop(int, float[], float[][]) parameter #2:
    Method parameter should be Collection<> (or subclass) instead of raw array; was `float[][]`
ArrayReturn: androidx.compose.remote.core.operations.BitmapFontData#BitmapFontData(int, androidx.compose.remote.core.operations.BitmapFontData.Glyph[]) parameter #1:
    Method parameter should be Collection<Glyph> (or subclass) instead of raw array; was `androidx.compose.remote.core.operations.BitmapFontData.Glyph[]`
ArrayReturn: androidx.compose.remote.core.operations.BitmapFontData#BitmapFontData(int, androidx.compose.remote.core.operations.BitmapFontData.Glyph[], short, java.util.Map<java.lang.String,java.lang.Short>) parameter #1:
    Method parameter should be Collection<Glyph> (or subclass) instead of raw array; was `androidx.compose.remote.core.operations.BitmapFontData.Glyph[]`
ArrayReturn: androidx.compose.remote.core.operations.BitmapFontData#apply(androidx.compose.remote.core.WireBuffer, int, androidx.compose.remote.core.operations.BitmapFontData.Glyph[], java.util.Map<java.lang.String,java.lang.Short>) parameter #2:
    Method parameter should be Collection<Glyph> (or subclass) instead of raw array; was `androidx.compose.remote.core.operations.BitmapFontData.Glyph[]`
ArrayReturn: androidx.compose.remote.core.operations.Header#apply(androidx.compose.remote.core.WireBuffer, int, short[], Object[]) parameter #3:
    Method parameter should be Collection<Object> (or subclass) instead of raw array; was `java.lang.Object[]`
ArrayReturn: androidx.compose.remote.core.operations.ParticlesCreate#ParticlesCreate(int, int[], float[][], int) parameter #2:
    Method parameter should be Collection<> (or subclass) instead of raw array; was `float[][]`
ArrayReturn: androidx.compose.remote.core.operations.ParticlesCreate#apply(androidx.compose.remote.core.WireBuffer, int, int[], float[][], int) parameter #3:
    Method parameter should be Collection<> (or subclass) instead of raw array; was `float[][]`
ArrayReturn: androidx.compose.remote.core.operations.ParticlesCreate#getEquations():
    Method should return Collection<> (or subclass) instead of raw array; was `float[][]`
ArrayReturn: androidx.compose.remote.core.operations.ParticlesCreate#getParticles():
    Method should return Collection<> (or subclass) instead of raw array; was `float[][]`
ArrayReturn: androidx.compose.remote.core.operations.ParticlesLoop#ParticlesLoop(int, float[], float[][]) parameter #2:
    Method parameter should be Collection<> (or subclass) instead of raw array; was `float[][]`
ArrayReturn: androidx.compose.remote.core.operations.ParticlesLoop#apply(androidx.compose.remote.core.WireBuffer, int, float[], float[][]) parameter #3:
    Method parameter should be Collection<> (or subclass) instead of raw array; was `float[][]`
ArrayReturn: androidx.compose.remote.core.operations.utilities.easing.MonotonicCurveFit#MonotonicCurveFit(double[], double[][]) parameter #1:
    Method parameter should be Collection<> (or subclass) instead of raw array; was `double[][]`


AutoBoxing: androidx.compose.remote.core.operations.ClickArea#getContentDescriptionId():
    Must avoid boxed primitives (`java.lang.Integer`)
AutoBoxing: androidx.compose.remote.core.operations.DrawBitmapInt#getContentDescriptionId():
    Must avoid boxed primitives (`java.lang.Integer`)
AutoBoxing: androidx.compose.remote.core.operations.DrawBitmapScaled#getContentDescriptionId():
    Must avoid boxed primitives (`java.lang.Integer`)
AutoBoxing: androidx.compose.remote.core.operations.RootContentDescription#getContentDescriptionId():
    Must avoid boxed primitives (`java.lang.Integer`)
AutoBoxing: androidx.compose.remote.core.operations.layout.managers.TextLayout#getTextId():
    Must avoid boxed primitives (`java.lang.Integer`)
AutoBoxing: androidx.compose.remote.core.semantics.AccessibleComponent#getContentDescriptionId():
    Must avoid boxed primitives (`java.lang.Integer`)
AutoBoxing: androidx.compose.remote.core.semantics.AccessibleComponent#getTextId():
    Must avoid boxed primitives (`java.lang.Integer`)
AutoBoxing: androidx.compose.remote.core.semantics.CoreSemantics#getContentDescriptionId():
    Must avoid boxed primitives (`java.lang.Integer`)
AutoBoxing: androidx.compose.remote.core.semantics.CoreSemantics#getStateDescriptionId():
    Must avoid boxed primitives (`java.lang.Integer`)
AutoBoxing: androidx.compose.remote.core.semantics.CoreSemantics#getTextId():
    Must avoid boxed primitives (`java.lang.Integer`)
AutoBoxing: androidx.compose.remote.core.serialize.MapSerializer#add(String, Boolean) parameter #1:
    Must avoid boxed primitives (`java.lang.Boolean`)
AutoBoxing: androidx.compose.remote.core.serialize.MapSerializer#add(String, Byte) parameter #1:
    Must avoid boxed primitives (`java.lang.Byte`)
AutoBoxing: androidx.compose.remote.core.serialize.MapSerializer#add(String, Double) parameter #1:
    Must avoid boxed primitives (`java.lang.Double`)
AutoBoxing: androidx.compose.remote.core.serialize.MapSerializer#add(String, Float) parameter #1:
    Must avoid boxed primitives (`java.lang.Float`)
AutoBoxing: androidx.compose.remote.core.serialize.MapSerializer#add(String, Integer) parameter #1:
    Must avoid boxed primitives (`java.lang.Integer`)
AutoBoxing: androidx.compose.remote.core.serialize.MapSerializer#add(String, Long) parameter #1:
    Must avoid boxed primitives (`java.lang.Long`)
AutoBoxing: androidx.compose.remote.core.serialize.MapSerializer#add(String, Short) parameter #1:
    Must avoid boxed primitives (`java.lang.Short`)


BuilderSetStyle: androidx.compose.remote.core.documentation.DocumentationBuilder#operation(String, int, String):
    Builder methods names should use setFoo() / addFoo() / clearFoo() style: method androidx.compose.remote.core.documentation.DocumentationBuilder.operation(String,int,String)
BuilderSetStyle: androidx.compose.remote.core.documentation.DocumentationBuilder#wipOperation(String, int, String):
    Builder methods names should use setFoo() / addFoo() / clearFoo() style: method androidx.compose.remote.core.documentation.DocumentationBuilder.wipOperation(String,int,String)


CallbackMethodName: androidx.compose.remote.core.TouchListener#setComponent(androidx.compose.remote.core.operations.layout.Component):
    Listener method names must follow the on<Something> style: setComponent
CallbackMethodName: androidx.compose.remote.core.TouchListener#touchDown(androidx.compose.remote.core.RemoteContext, float, float):
    Listener method names must follow the on<Something> style: touchDown
CallbackMethodName: androidx.compose.remote.core.TouchListener#touchDrag(androidx.compose.remote.core.RemoteContext, float, float):
    Listener method names must follow the on<Something> style: touchDrag
CallbackMethodName: androidx.compose.remote.core.TouchListener#touchUp(androidx.compose.remote.core.RemoteContext, float, float, float, float):
    Listener method names must follow the on<Something> style: touchUp


CompileTimeConstant: androidx.compose.remote.core.RemoteContext#FLOAT_ACCELERATION_X:
    All constants must be defined at compile time: androidx.compose.remote.core.RemoteContext#FLOAT_ACCELERATION_X
CompileTimeConstant: androidx.compose.remote.core.RemoteContext#FLOAT_ACCELERATION_Y:
    All constants must be defined at compile time: androidx.compose.remote.core.RemoteContext#FLOAT_ACCELERATION_Y
CompileTimeConstant: androidx.compose.remote.core.RemoteContext#FLOAT_ACCELERATION_Z:
    All constants must be defined at compile time: androidx.compose.remote.core.RemoteContext#FLOAT_ACCELERATION_Z
CompileTimeConstant: androidx.compose.remote.core.RemoteContext#FLOAT_ANIMATION_DELTA_TIME:
    All constants must be defined at compile time: androidx.compose.remote.core.RemoteContext#FLOAT_ANIMATION_DELTA_TIME
CompileTimeConstant: androidx.compose.remote.core.RemoteContext#FLOAT_ANIMATION_TIME:
    All constants must be defined at compile time: androidx.compose.remote.core.RemoteContext#FLOAT_ANIMATION_TIME
CompileTimeConstant: androidx.compose.remote.core.RemoteContext#FLOAT_API_LEVEL:
    All constants must be defined at compile time: androidx.compose.remote.core.RemoteContext#FLOAT_API_LEVEL
CompileTimeConstant: androidx.compose.remote.core.RemoteContext#FLOAT_CALENDAR_MONTH:
    All constants must be defined at compile time: androidx.compose.remote.core.RemoteContext#FLOAT_CALENDAR_MONTH
CompileTimeConstant: androidx.compose.remote.core.RemoteContext#FLOAT_COMPONENT_HEIGHT:
    All constants must be defined at compile time: androidx.compose.remote.core.RemoteContext#FLOAT_COMPONENT_HEIGHT
CompileTimeConstant: androidx.compose.remote.core.RemoteContext#FLOAT_COMPONENT_WIDTH:
    All constants must be defined at compile time: androidx.compose.remote.core.RemoteContext#FLOAT_COMPONENT_WIDTH
CompileTimeConstant: androidx.compose.remote.core.RemoteContext#FLOAT_CONTINUOUS_SEC:
    All constants must be defined at compile time: androidx.compose.remote.core.RemoteContext#FLOAT_CONTINUOUS_SEC
CompileTimeConstant: androidx.compose.remote.core.RemoteContext#FLOAT_DAY_OF_MONTH:
    All constants must be defined at compile time: androidx.compose.remote.core.RemoteContext#FLOAT_DAY_OF_MONTH
CompileTimeConstant: androidx.compose.remote.core.RemoteContext#FLOAT_DAY_OF_YEAR:
    All constants must be defined at compile time: androidx.compose.remote.core.RemoteContext#FLOAT_DAY_OF_YEAR
CompileTimeConstant: androidx.compose.remote.core.RemoteContext#FLOAT_DENSITY:
    All constants must be defined at compile time: androidx.compose.remote.core.RemoteContext#FLOAT_DENSITY
CompileTimeConstant: androidx.compose.remote.core.RemoteContext#FLOAT_FONT_SIZE:
    All constants must be defined at compile time: androidx.compose.remote.core.RemoteContext#FLOAT_FONT_SIZE
CompileTimeConstant: androidx.compose.remote.core.RemoteContext#FLOAT_GYRO_ROT_X:
    All constants must be defined at compile time: androidx.compose.remote.core.RemoteContext#FLOAT_GYRO_ROT_X
CompileTimeConstant: androidx.compose.remote.core.RemoteContext#FLOAT_GYRO_ROT_Y:
    All constants must be defined at compile time: androidx.compose.remote.core.RemoteContext#FLOAT_GYRO_ROT_Y
CompileTimeConstant: androidx.compose.remote.core.RemoteContext#FLOAT_GYRO_ROT_Z:
    All constants must be defined at compile time: androidx.compose.remote.core.RemoteContext#FLOAT_GYRO_ROT_Z
CompileTimeConstant: androidx.compose.remote.core.RemoteContext#FLOAT_LIGHT:
    All constants must be defined at compile time: androidx.compose.remote.core.RemoteContext#FLOAT_LIGHT
CompileTimeConstant: androidx.compose.remote.core.RemoteContext#FLOAT_MAGNETIC_X:
    All constants must be defined at compile time: androidx.compose.remote.core.RemoteContext#FLOAT_MAGNETIC_X
CompileTimeConstant: androidx.compose.remote.core.RemoteContext#FLOAT_MAGNETIC_Y:
    All constants must be defined at compile time: androidx.compose.remote.core.RemoteContext#FLOAT_MAGNETIC_Y
CompileTimeConstant: androidx.compose.remote.core.RemoteContext#FLOAT_MAGNETIC_Z:
    All constants must be defined at compile time: androidx.compose.remote.core.RemoteContext#FLOAT_MAGNETIC_Z
CompileTimeConstant: androidx.compose.remote.core.RemoteContext#FLOAT_OFFSET_TO_UTC:
    All constants must be defined at compile time: androidx.compose.remote.core.RemoteContext#FLOAT_OFFSET_TO_UTC
CompileTimeConstant: androidx.compose.remote.core.RemoteContext#FLOAT_TIME_IN_HR:
    All constants must be defined at compile time: androidx.compose.remote.core.RemoteContext#FLOAT_TIME_IN_HR
CompileTimeConstant: androidx.compose.remote.core.RemoteContext#FLOAT_TIME_IN_MIN:
    All constants must be defined at compile time: androidx.compose.remote.core.RemoteContext#FLOAT_TIME_IN_MIN
CompileTimeConstant: androidx.compose.remote.core.RemoteContext#FLOAT_TIME_IN_SEC:
    All constants must be defined at compile time: androidx.compose.remote.core.RemoteContext#FLOAT_TIME_IN_SEC
CompileTimeConstant: androidx.compose.remote.core.RemoteContext#FLOAT_TOUCH_EVENT_TIME:
    All constants must be defined at compile time: androidx.compose.remote.core.RemoteContext#FLOAT_TOUCH_EVENT_TIME
CompileTimeConstant: androidx.compose.remote.core.RemoteContext#FLOAT_TOUCH_POS_X:
    All constants must be defined at compile time: androidx.compose.remote.core.RemoteContext#FLOAT_TOUCH_POS_X
CompileTimeConstant: androidx.compose.remote.core.RemoteContext#FLOAT_TOUCH_POS_Y:
    All constants must be defined at compile time: androidx.compose.remote.core.RemoteContext#FLOAT_TOUCH_POS_Y
CompileTimeConstant: androidx.compose.remote.core.RemoteContext#FLOAT_TOUCH_VEL_X:
    All constants must be defined at compile time: androidx.compose.remote.core.RemoteContext#FLOAT_TOUCH_VEL_X
CompileTimeConstant: androidx.compose.remote.core.RemoteContext#FLOAT_TOUCH_VEL_Y:
    All constants must be defined at compile time: androidx.compose.remote.core.RemoteContext#FLOAT_TOUCH_VEL_Y
CompileTimeConstant: androidx.compose.remote.core.RemoteContext#FLOAT_WEEK_DAY:
    All constants must be defined at compile time: androidx.compose.remote.core.RemoteContext#FLOAT_WEEK_DAY
CompileTimeConstant: androidx.compose.remote.core.RemoteContext#FLOAT_WINDOW_HEIGHT:
    All constants must be defined at compile time: androidx.compose.remote.core.RemoteContext#FLOAT_WINDOW_HEIGHT
CompileTimeConstant: androidx.compose.remote.core.RemoteContext#FLOAT_WINDOW_WIDTH:
    All constants must be defined at compile time: androidx.compose.remote.core.RemoteContext#FLOAT_WINDOW_WIDTH
CompileTimeConstant: androidx.compose.remote.core.RemoteContext#FLOAT_YEAR:
    All constants must be defined at compile time: androidx.compose.remote.core.RemoteContext#FLOAT_YEAR
CompileTimeConstant: androidx.compose.remote.core.operations.PathAppend#CLOSE_NAN:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.PathAppend#CLOSE_NAN
CompileTimeConstant: androidx.compose.remote.core.operations.PathAppend#CONIC_NAN:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.PathAppend#CONIC_NAN
CompileTimeConstant: androidx.compose.remote.core.operations.PathAppend#CUBIC_NAN:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.PathAppend#CUBIC_NAN
CompileTimeConstant: androidx.compose.remote.core.operations.PathAppend#DONE_NAN:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.PathAppend#DONE_NAN
CompileTimeConstant: androidx.compose.remote.core.operations.PathAppend#LINE_NAN:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.PathAppend#LINE_NAN
CompileTimeConstant: androidx.compose.remote.core.operations.PathAppend#MOVE_NAN:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.PathAppend#MOVE_NAN
CompileTimeConstant: androidx.compose.remote.core.operations.PathAppend#QUADRATIC_NAN:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.PathAppend#QUADRATIC_NAN
CompileTimeConstant: androidx.compose.remote.core.operations.PathAppend#RESET_NAN:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.PathAppend#RESET_NAN
CompileTimeConstant: androidx.compose.remote.core.operations.PathCreate#CLOSE_NAN:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.PathCreate#CLOSE_NAN
CompileTimeConstant: androidx.compose.remote.core.operations.PathCreate#CONIC_NAN:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.PathCreate#CONIC_NAN
CompileTimeConstant: androidx.compose.remote.core.operations.PathCreate#CUBIC_NAN:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.PathCreate#CUBIC_NAN
CompileTimeConstant: androidx.compose.remote.core.operations.PathCreate#DONE_NAN:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.PathCreate#DONE_NAN
CompileTimeConstant: androidx.compose.remote.core.operations.PathCreate#LINE_NAN:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.PathCreate#LINE_NAN
CompileTimeConstant: androidx.compose.remote.core.operations.PathCreate#MOVE_NAN:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.PathCreate#MOVE_NAN
CompileTimeConstant: androidx.compose.remote.core.operations.PathCreate#QUADRATIC_NAN:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.PathCreate#QUADRATIC_NAN
CompileTimeConstant: androidx.compose.remote.core.operations.PathData#CLOSE_NAN:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.PathData#CLOSE_NAN
CompileTimeConstant: androidx.compose.remote.core.operations.PathData#CONIC_NAN:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.PathData#CONIC_NAN
CompileTimeConstant: androidx.compose.remote.core.operations.PathData#CUBIC_NAN:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.PathData#CUBIC_NAN
CompileTimeConstant: androidx.compose.remote.core.operations.PathData#DONE_NAN:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.PathData#DONE_NAN
CompileTimeConstant: androidx.compose.remote.core.operations.PathData#LINE_NAN:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.PathData#LINE_NAN
CompileTimeConstant: androidx.compose.remote.core.operations.PathData#MOVE_NAN:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.PathData#MOVE_NAN
CompileTimeConstant: androidx.compose.remote.core.operations.PathData#QUADRATIC_NAN:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.PathData#QUADRATIC_NAN
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#ABS:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#ABS
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#ACOS:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#ACOS
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#ADD:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#ADD
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#ASIN:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#ASIN
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#ATAN:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#ATAN
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#ATAN2:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#ATAN2
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#A_AVG:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#A_AVG
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#A_DEREF:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#A_DEREF
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#A_LEN:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#A_LEN
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#A_MAX:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#A_MAX
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#A_MIN:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#A_MIN
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#A_SPLINE:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#A_SPLINE
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#A_SUM:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#A_SUM
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#CBRT:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#CBRT
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#CEIL:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#CEIL
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#CLAMP:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#CLAMP
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#COPY_SIGN:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#COPY_SIGN
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#COS:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#COS
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#DEG:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#DEG
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#DIV:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#DIV
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#DUP:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#DUP
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#EXP:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#EXP
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#FLOOR:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#FLOOR
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#FRACT:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#FRACT
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#HYPOT:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#HYPOT
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#IFELSE:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#IFELSE
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#INV:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#INV
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#LERP:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#LERP
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#LN:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#LN
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#LOG:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#LOG
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#LOG2:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#LOG2
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#MAD:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#MAD
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#MAX:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#MAX
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#MIN:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#MIN
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#MOD:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#MOD
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#MUL:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#MUL
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#NOISE_FROM:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#NOISE_FROM
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#PINGPONG:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#PINGPONG
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#POW:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#POW
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#RAD:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#RAD
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#RAND:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#RAND
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#RAND_IN_RANGE:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#RAND_IN_RANGE
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#RAND_SEED:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#RAND_SEED
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#ROUND:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#ROUND
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#SIGN:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#SIGN
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#SIN:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#SIN
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#SMOOTH_STEP:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#SMOOTH_STEP
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#SQRT:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#SQRT
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#SQUARE:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#SQUARE
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#SQUARE_SUM:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#SQUARE_SUM
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#STEP:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#STEP
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#SUB:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#SUB
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#SWAP:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#SWAP
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#TAN:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#TAN
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#VAR1:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#VAR1
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#VAR2:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#VAR2
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#VAR3:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.AnimatedFloatExpression#VAR3
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.MatrixOperations#IDENTITY:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.MatrixOperations#IDENTITY
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.MatrixOperations#MUL:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.MatrixOperations#MUL
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.MatrixOperations#PROJECTION:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.MatrixOperations#PROJECTION
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.MatrixOperations#ROT_AXIS:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.MatrixOperations#ROT_AXIS
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.MatrixOperations#ROT_PZ:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.MatrixOperations#ROT_PZ
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.MatrixOperations#ROT_X:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.MatrixOperations#ROT_X
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.MatrixOperations#ROT_Y:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.MatrixOperations#ROT_Y
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.MatrixOperations#ROT_Z:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.MatrixOperations#ROT_Z
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.MatrixOperations#SCALE2:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.MatrixOperations#SCALE2
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.MatrixOperations#SCALE3:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.MatrixOperations#SCALE3
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.MatrixOperations#SCALE_X:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.MatrixOperations#SCALE_X
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.MatrixOperations#SCALE_Y:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.MatrixOperations#SCALE_Y
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.MatrixOperations#SCALE_Z:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.MatrixOperations#SCALE_Z
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.MatrixOperations#TRANSLATE2:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.MatrixOperations#TRANSLATE2
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.MatrixOperations#TRANSLATE3:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.MatrixOperations#TRANSLATE3
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.MatrixOperations#TRANSLATE_X:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.MatrixOperations#TRANSLATE_X
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.MatrixOperations#TRANSLATE_Y:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.MatrixOperations#TRANSLATE_Y
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.MatrixOperations#TRANSLATE_Z:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.MatrixOperations#TRANSLATE_Z
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.NanMap#CLOSE_NAN:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.NanMap#CLOSE_NAN
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.NanMap#CONIC_NAN:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.NanMap#CONIC_NAN
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.NanMap#CUBIC_NAN:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.NanMap#CUBIC_NAN
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.NanMap#DONE_NAN:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.NanMap#DONE_NAN
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.NanMap#LINE_NAN:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.NanMap#LINE_NAN
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.NanMap#MOVE_NAN:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.NanMap#MOVE_NAN
CompileTimeConstant: androidx.compose.remote.core.operations.utilities.NanMap#QUADRATIC_NAN:
    All constants must be defined at compile time: androidx.compose.remote.core.operations.utilities.NanMap#QUADRATIC_NAN


ConcreteCollection: androidx.compose.remote.core.CoreDocument#getIdActionListeners():
    Return type is concrete collection (`java.util.HashSet`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.PaintContext#setGraphicsLayer(java.util.HashMap<java.lang.Integer,java.lang.Object>) parameter #0:
    Parameter type is concrete collection (`java.util.HashMap`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.RemoteComposeBuffer#addModifierGraphicsLayer(java.util.HashMap<java.lang.Integer,java.lang.Object>) parameter #0:
    Parameter type is concrete collection (`java.util.HashMap`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.RemoteComposeBuffer#inflateFromBuffer(java.util.ArrayList<androidx.compose.remote.core.Operation>) parameter #0:
    Parameter type is concrete collection (`java.util.ArrayList`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.RemoteComposeState#getListeners(int):
    Return type is concrete collection (`java.util.ArrayList`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.RemoteContext#getListeners(int):
    Return type is concrete collection (`java.util.ArrayList`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.documentation.DocumentedOperation#getExamples():
    Return type is concrete collection (`java.util.ArrayList`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.documentation.DocumentedOperation#getFields():
    Return type is concrete collection (`java.util.ArrayList`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.documentation.OperationField#getPossibleValues():
    Return type is concrete collection (`java.util.ArrayList`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.operations.ConditionalOperations#getList():
    Return type is concrete collection (`java.util.ArrayList`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.operations.ConditionalOperations#mList:
    Field type is concrete collection (`java.util.ArrayList`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.operations.FloatFunctionDefine#getList():
    Return type is concrete collection (`java.util.ArrayList`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.operations.ParticlesLoop#getList():
    Return type is concrete collection (`java.util.ArrayList`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.operations.ShaderData#ShaderData(int, int, java.util.HashMap<java.lang.String,float[]>, java.util.HashMap<java.lang.String,int[]>, java.util.HashMap<java.lang.String,java.lang.Integer>) parameter #2:
    Parameter type is concrete collection (`java.util.HashMap`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.operations.ShaderData#ShaderData(int, int, java.util.HashMap<java.lang.String,float[]>, java.util.HashMap<java.lang.String,int[]>, java.util.HashMap<java.lang.String,java.lang.Integer>) parameter #3:
    Parameter type is concrete collection (`java.util.HashMap`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.operations.ShaderData#ShaderData(int, int, java.util.HashMap<java.lang.String,float[]>, java.util.HashMap<java.lang.String,int[]>, java.util.HashMap<java.lang.String,java.lang.Integer>) parameter #4:
    Parameter type is concrete collection (`java.util.HashMap`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.operations.ShaderData#apply(androidx.compose.remote.core.WireBuffer, int, int, java.util.HashMap<java.lang.String,float[]>, java.util.HashMap<java.lang.String,int[]>, java.util.HashMap<java.lang.String,java.lang.Integer>) parameter #3:
    Parameter type is concrete collection (`java.util.HashMap`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.operations.ShaderData#apply(androidx.compose.remote.core.WireBuffer, int, int, java.util.HashMap<java.lang.String,float[]>, java.util.HashMap<java.lang.String,int[]>, java.util.HashMap<java.lang.String,java.lang.Integer>) parameter #4:
    Parameter type is concrete collection (`java.util.HashMap`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.operations.ShaderData#apply(androidx.compose.remote.core.WireBuffer, int, int, java.util.HashMap<java.lang.String,float[]>, java.util.HashMap<java.lang.String,int[]>, java.util.HashMap<java.lang.String,java.lang.Integer>) parameter #5:
    Parameter type is concrete collection (`java.util.HashMap`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.operations.layout.CanvasOperations#getList():
    Return type is concrete collection (`java.util.ArrayList`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.operations.layout.CanvasOperations#mList:
    Field type is concrete collection (`java.util.ArrayList`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.operations.layout.ClickModifierOperation#getList():
    Return type is concrete collection (`java.util.ArrayList`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.operations.layout.ClickModifierOperation#mList:
    Field type is concrete collection (`java.util.ArrayList`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.operations.layout.Component#getComponents(java.util.ArrayList<androidx.compose.remote.core.operations.layout.Component>) parameter #0:
    Parameter type is concrete collection (`java.util.ArrayList`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.operations.layout.Component#getData(java.util.ArrayList<androidx.compose.remote.core.Operation>) parameter #0:
    Parameter type is concrete collection (`java.util.ArrayList`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.operations.layout.Component#getList():
    Return type is concrete collection (`java.util.ArrayList`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.operations.layout.Component#mComponentValues:
    Field type is concrete collection (`java.util.HashSet`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.operations.layout.Component#mList:
    Field type is concrete collection (`java.util.ArrayList`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.operations.layout.ComponentStart#getList():
    Return type is concrete collection (`java.util.ArrayList`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.operations.layout.ComponentStart#mList:
    Field type is concrete collection (`java.util.ArrayList`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.operations.layout.Container#getList():
    Return type is concrete collection (`java.util.ArrayList`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.operations.layout.ImpulseOperation#getList():
    Return type is concrete collection (`java.util.ArrayList`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.operations.layout.ImpulseOperation#mList:
    Field type is concrete collection (`java.util.ArrayList`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.operations.layout.ImpulseProcess#getList():
    Return type is concrete collection (`java.util.ArrayList`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.operations.layout.ImpulseProcess#mList:
    Field type is concrete collection (`java.util.ArrayList`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.operations.layout.LayoutComponent#getChildrenComponents():
    Return type is concrete collection (`java.util.ArrayList`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.operations.layout.LayoutComponent#mCachedAttributes:
    Field type is concrete collection (`java.util.HashMap`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.operations.layout.LayoutComponent#mChildrenComponents:
    Field type is concrete collection (`java.util.ArrayList`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.operations.layout.ListActionsOperation#getList():
    Return type is concrete collection (`java.util.ArrayList`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.operations.layout.ListActionsOperation#mList:
    Field type is concrete collection (`java.util.ArrayList`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.operations.layout.LoopOperation#getList():
    Return type is concrete collection (`java.util.ArrayList`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.operations.layout.LoopOperation#mList:
    Field type is concrete collection (`java.util.ArrayList`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.operations.layout.modifiers.ComponentModifiers#addAll(java.util.ArrayList<androidx.compose.remote.core.operations.layout.modifiers.ModifierOperation>) parameter #0:
    Parameter type is concrete collection (`java.util.ArrayList`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.operations.layout.modifiers.ComponentModifiers#getList():
    Return type is concrete collection (`java.util.ArrayList`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.operations.layout.modifiers.GraphicsLayerModifierOperation#apply(androidx.compose.remote.core.WireBuffer, java.util.HashMap<java.lang.Integer,java.lang.Object>) parameter #1:
    Parameter type is concrete collection (`java.util.HashMap`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.operations.layout.modifiers.GraphicsLayerModifierOperation#fillInAttributes(java.util.HashMap<java.lang.Integer,java.lang.Object>) parameter #0:
    Parameter type is concrete collection (`java.util.HashMap`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.operations.layout.modifiers.RunActionOperation#getList():
    Return type is concrete collection (`java.util.ArrayList`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.operations.layout.modifiers.RunActionOperation#mList:
    Field type is concrete collection (`java.util.ArrayList`); must be higher-level interface
ConcreteCollection: androidx.compose.remote.core.operations.layout.utils.DebugLog.Node#list:
    Field type is concrete collection (`java.util.ArrayList`); must be higher-level interface


ExecutorRegistration: androidx.compose.remote.core.CoreDocument#addActionCallback(androidx.compose.remote.core.CoreDocument.ActionCallback):
    Registration methods should have overload that accepts delivery Executor: `addActionCallback`
ExecutorRegistration: androidx.compose.remote.core.CoreDocument#addIdActionListener(androidx.compose.remote.core.CoreDocument.IdActionCallback):
    Registration methods should have overload that accepts delivery Executor: `addIdActionListener`
ExecutorRegistration: androidx.compose.remote.core.CoreDocument#addTouchListener(androidx.compose.remote.core.TouchListener):
    Registration methods should have overload that accepts delivery Executor: `addTouchListener`
ExecutorRegistration: androidx.compose.remote.core.RemoteContext#addTouchListener(androidx.compose.remote.core.TouchListener):
    Registration methods should have overload that accepts delivery Executor: `addTouchListener`


GenericException: androidx.compose.remote.core.operations.layout.Component#getRoot():
    Methods must not throw generic exceptions (`java.lang.Exception`)
GenericException: androidx.compose.remote.core.operations.layout.measure.MeasurePass#add(androidx.compose.remote.core.operations.layout.measure.ComponentMeasure):
    Methods must not throw generic exceptions (`java.lang.Exception`)


GetterSetterNames: androidx.compose.remote.core.RemoteContext#getUseChoreographer():
    Symmetric method for `setUseChoreographer` must be named `isUseChoreographer`; was `getUseChoreographer`


GetterSetterNullability: androidx.compose.remote.core.RemoteContext#getDocument():
    Nullability of androidx.compose.remote.core.CoreDocument? in getter method androidx.compose.remote.core.RemoteContext.getDocument() does not match androidx.compose.remote.core.CoreDocument in corresponding setter method androidx.compose.remote.core.RemoteContext.setDocument(androidx.compose.remote.core.CoreDocument)
GetterSetterNullability: androidx.compose.remote.core.RemoteContext#getPaintContext():
    Nullability of androidx.compose.remote.core.PaintContext? in getter method androidx.compose.remote.core.RemoteContext.getPaintContext() does not match androidx.compose.remote.core.PaintContext in corresponding setter method androidx.compose.remote.core.RemoteContext.setPaintContext(androidx.compose.remote.core.PaintContext)
GetterSetterNullability: androidx.compose.remote.core.operations.layout.modifiers.HeightModifierOperation#getHeightIn():
    Nullability of androidx.compose.remote.core.operations.layout.modifiers.HeightInModifierOperation? in getter method androidx.compose.remote.core.operations.layout.modifiers.HeightModifierOperation.getHeightIn() does not match androidx.compose.remote.core.operations.layout.modifiers.HeightInModifierOperation in corresponding setter method androidx.compose.remote.core.operations.layout.modifiers.HeightModifierOperation.setHeightIn(androidx.compose.remote.core.operations.layout.modifiers.HeightInModifierOperation)
GetterSetterNullability: androidx.compose.remote.core.operations.layout.modifiers.WidthModifierOperation#getWidthIn():
    Nullability of androidx.compose.remote.core.operations.layout.modifiers.WidthInModifierOperation? in getter method androidx.compose.remote.core.operations.layout.modifiers.WidthModifierOperation.getWidthIn() does not match androidx.compose.remote.core.operations.layout.modifiers.WidthInModifierOperation in corresponding setter method androidx.compose.remote.core.operations.layout.modifiers.WidthModifierOperation.setWidthIn(androidx.compose.remote.core.operations.layout.modifiers.WidthInModifierOperation)


InternalField: androidx.compose.remote.core.CoreDocument#mTimeVariables:
    Internal field mTimeVariables must not be exposed
InternalField: androidx.compose.remote.core.PaintContext#mContext:
    Internal field mContext must not be exposed
InternalField: androidx.compose.remote.core.RemoteContext#mDensity:
    Internal field mDensity must not be exposed
InternalField: androidx.compose.remote.core.RemoteContext#mDocument:
    Internal field mDocument must not be exposed
InternalField: androidx.compose.remote.core.RemoteContext#mHeight:
    Internal field mHeight must not be exposed
InternalField: androidx.compose.remote.core.RemoteContext#mLastComponent:
    Internal field mLastComponent must not be exposed
InternalField: androidx.compose.remote.core.RemoteContext#mPaintContext:
    Internal field mPaintContext must not be exposed
InternalField: androidx.compose.remote.core.RemoteContext#mRemoteComposeState:
    Internal field mRemoteComposeState must not be exposed
InternalField: androidx.compose.remote.core.RemoteContext#mWidth:
    Internal field mWidth must not be exposed
InternalField: androidx.compose.remote.core.RemoteContext.FontInfo#mFontData:
    Internal field mFontData must not be exposed
InternalField: androidx.compose.remote.core.RemoteContext.FontInfo#mFontId:
    Internal field mFontId must not be exposed
InternalField: androidx.compose.remote.core.operations.BitmapData#mImageId:
    Internal field mImageId must not be exposed
InternalField: androidx.compose.remote.core.operations.BitmapFontData.Glyph#mBitmapHeight:
    Internal field mBitmapHeight must not be exposed
InternalField: androidx.compose.remote.core.operations.BitmapFontData.Glyph#mBitmapId:
    Internal field mBitmapId must not be exposed
InternalField: androidx.compose.remote.core.operations.BitmapFontData.Glyph#mBitmapWidth:
    Internal field mBitmapWidth must not be exposed
InternalField: androidx.compose.remote.core.operations.BitmapFontData.Glyph#mChars:
    Internal field mChars must not be exposed
InternalField: androidx.compose.remote.core.operations.BitmapFontData.Glyph#mMarginBottom:
    Internal field mMarginBottom must not be exposed
InternalField: androidx.compose.remote.core.operations.BitmapFontData.Glyph#mMarginLeft:
    Internal field mMarginLeft must not be exposed
InternalField: androidx.compose.remote.core.operations.BitmapFontData.Glyph#mMarginRight:
    Internal field mMarginRight must not be exposed
InternalField: androidx.compose.remote.core.operations.BitmapFontData.Glyph#mMarginTop:
    Internal field mMarginTop must not be exposed
InternalField: androidx.compose.remote.core.operations.BitmapTextMeasure#mId:
    Internal field mId must not be exposed
InternalField: androidx.compose.remote.core.operations.BitmapTextMeasure#mTextId:
    Internal field mTextId must not be exposed
InternalField: androidx.compose.remote.core.operations.BitmapTextMeasure#mType:
    Internal field mType must not be exposed
InternalField: androidx.compose.remote.core.operations.ColorAttribute#mColorId:
    Internal field mColorId must not be exposed
InternalField: androidx.compose.remote.core.operations.ColorAttribute#mId:
    Internal field mId must not be exposed
InternalField: androidx.compose.remote.core.operations.ColorAttribute#mType:
    Internal field mType must not be exposed
InternalField: androidx.compose.remote.core.operations.ColorConstant#mColor:
    Internal field mColor must not be exposed
InternalField: androidx.compose.remote.core.operations.ColorConstant#mColorId:
    Internal field mColorId must not be exposed
InternalField: androidx.compose.remote.core.operations.ColorExpression#mAlpha:
    Internal field mAlpha must not be exposed
InternalField: androidx.compose.remote.core.operations.ColorExpression#mColor1:
    Internal field mColor1 must not be exposed
InternalField: androidx.compose.remote.core.operations.ColorExpression#mColor2:
    Internal field mColor2 must not be exposed
InternalField: androidx.compose.remote.core.operations.ColorExpression#mHue:
    Internal field mHue must not be exposed
InternalField: androidx.compose.remote.core.operations.ColorExpression#mId:
    Internal field mId must not be exposed
InternalField: androidx.compose.remote.core.operations.ColorExpression#mOutColor1:
    Internal field mOutColor1 must not be exposed
InternalField: androidx.compose.remote.core.operations.ColorExpression#mOutColor2:
    Internal field mOutColor2 must not be exposed
InternalField: androidx.compose.remote.core.operations.ColorExpression#mOutHue:
    Internal field mOutHue must not be exposed
InternalField: androidx.compose.remote.core.operations.ColorExpression#mOutSat:
    Internal field mOutSat must not be exposed
InternalField: androidx.compose.remote.core.operations.ColorExpression#mOutTween:
    Internal field mOutTween must not be exposed
InternalField: androidx.compose.remote.core.operations.ColorExpression#mOutValue:
    Internal field mOutValue must not be exposed
InternalField: androidx.compose.remote.core.operations.ColorExpression#mSat:
    Internal field mSat must not be exposed
InternalField: androidx.compose.remote.core.operations.ColorExpression#mTween:
    Internal field mTween must not be exposed
InternalField: androidx.compose.remote.core.operations.ColorExpression#mValue:
    Internal field mValue must not be exposed
InternalField: androidx.compose.remote.core.operations.ConditionalOperations#mList:
    Internal field mList must not be exposed
InternalField: androidx.compose.remote.core.operations.DataListFloat#mId:
    Internal field mId must not be exposed
InternalField: androidx.compose.remote.core.operations.DataMapLookup#mDataMapId:
    Internal field mDataMapId must not be exposed
InternalField: androidx.compose.remote.core.operations.DataMapLookup#mId:
    Internal field mId must not be exposed
InternalField: androidx.compose.remote.core.operations.DataMapLookup#mStringId:
    Internal field mStringId must not be exposed
InternalField: androidx.compose.remote.core.operations.DrawBase2#mName:
    Internal field mName must not be exposed
InternalField: androidx.compose.remote.core.operations.DrawBase3#mName:
    Internal field mName must not be exposed
InternalField: androidx.compose.remote.core.operations.DrawBase4#mName:
    Internal field mName must not be exposed
InternalField: androidx.compose.remote.core.operations.DrawBase4#mX1:
    Internal field mX1 must not be exposed
InternalField: androidx.compose.remote.core.operations.DrawBase4#mX2:
    Internal field mX2 must not be exposed
InternalField: androidx.compose.remote.core.operations.DrawBase4#mY1:
    Internal field mY1 must not be exposed
InternalField: androidx.compose.remote.core.operations.DrawBase4#mY2:
    Internal field mY2 must not be exposed
InternalField: androidx.compose.remote.core.operations.DrawBase6#mName:
    Internal field mName must not be exposed
InternalField: androidx.compose.remote.core.operations.DrawTextOnPath#mTextId:
    Internal field mTextId must not be exposed
InternalField: androidx.compose.remote.core.operations.FloatConstant#mId:
    Internal field mId must not be exposed
InternalField: androidx.compose.remote.core.operations.FloatConstant#mValue:
    Internal field mValue must not be exposed
InternalField: androidx.compose.remote.core.operations.FloatExpression#mFloatAnimation:
    Internal field mFloatAnimation must not be exposed
InternalField: androidx.compose.remote.core.operations.FloatExpression#mId:
    Internal field mId must not be exposed
InternalField: androidx.compose.remote.core.operations.FloatExpression#mPreCalcValue:
    Internal field mPreCalcValue must not be exposed
InternalField: androidx.compose.remote.core.operations.FloatExpression#mSrcAnimation:
    Internal field mSrcAnimation must not be exposed
InternalField: androidx.compose.remote.core.operations.FloatExpression#mSrcValue:
    Internal field mSrcValue must not be exposed
InternalField: androidx.compose.remote.core.operations.FontData#mFontId:
    Internal field mFontId must not be exposed
InternalField: androidx.compose.remote.core.operations.IdLookup#mDataSetId:
    Internal field mDataSetId must not be exposed
InternalField: androidx.compose.remote.core.operations.IdLookup#mIndex:
    Internal field mIndex must not be exposed
InternalField: androidx.compose.remote.core.operations.IdLookup#mOutIndex:
    Internal field mOutIndex must not be exposed
InternalField: androidx.compose.remote.core.operations.IdLookup#mTextId:
    Internal field mTextId must not be exposed
InternalField: androidx.compose.remote.core.operations.ImageAttribute#mId:
    Internal field mId must not be exposed
InternalField: androidx.compose.remote.core.operations.IntegerExpression#mId:
    Internal field mId must not be exposed
InternalField: androidx.compose.remote.core.operations.IntegerExpression#mPreCalcValue:
    Internal field mPreCalcValue must not be exposed
InternalField: androidx.compose.remote.core.operations.IntegerExpression#mSrcValue:
    Internal field mSrcValue must not be exposed
InternalField: androidx.compose.remote.core.operations.NamedVariable#mVarId:
    Internal field mVarId must not be exposed
InternalField: androidx.compose.remote.core.operations.NamedVariable#mVarName:
    Internal field mVarName must not be exposed
InternalField: androidx.compose.remote.core.operations.NamedVariable#mVarType:
    Internal field mVarType must not be exposed
InternalField: androidx.compose.remote.core.operations.PaintData#mPaintData:
    Internal field mPaintData must not be exposed
InternalField: androidx.compose.remote.core.operations.PathCombine#mOutId:
    Internal field mOutId must not be exposed
InternalField: androidx.compose.remote.core.operations.PathCombine#mPathId1:
    Internal field mPathId1 must not be exposed
InternalField: androidx.compose.remote.core.operations.PathCombine#mPathId2:
    Internal field mPathId2 must not be exposed
InternalField: androidx.compose.remote.core.operations.PathTween#mOutId:
    Internal field mOutId must not be exposed
InternalField: androidx.compose.remote.core.operations.PathTween#mPathId1:
    Internal field mPathId1 must not be exposed
InternalField: androidx.compose.remote.core.operations.PathTween#mPathId2:
    Internal field mPathId2 must not be exposed
InternalField: androidx.compose.remote.core.operations.PathTween#mTween:
    Internal field mTween must not be exposed
InternalField: androidx.compose.remote.core.operations.PathTween#mTweenOut:
    Internal field mTweenOut must not be exposed
InternalField: androidx.compose.remote.core.operations.Rem#mText:
    Internal field mText must not be exposed
InternalField: androidx.compose.remote.core.operations.TextAttribute#mId:
    Internal field mId must not be exposed
InternalField: androidx.compose.remote.core.operations.TextAttribute#mTextId:
    Internal field mTextId must not be exposed
InternalField: androidx.compose.remote.core.operations.TextAttribute#mType:
    Internal field mType must not be exposed
InternalField: androidx.compose.remote.core.operations.TextData#mText:
    Internal field mText must not be exposed
InternalField: androidx.compose.remote.core.operations.TextData#mTextId:
    Internal field mTextId must not be exposed
InternalField: androidx.compose.remote.core.operations.TextFromFloat#mDigitsAfter:
    Internal field mDigitsAfter must not be exposed
InternalField: androidx.compose.remote.core.operations.TextFromFloat#mDigitsBefore:
    Internal field mDigitsBefore must not be exposed
InternalField: androidx.compose.remote.core.operations.TextFromFloat#mFlags:
    Internal field mFlags must not be exposed
InternalField: androidx.compose.remote.core.operations.TextFromFloat#mOutValue:
    Internal field mOutValue must not be exposed
InternalField: androidx.compose.remote.core.operations.TextFromFloat#mTextId:
    Internal field mTextId must not be exposed
InternalField: androidx.compose.remote.core.operations.TextFromFloat#mValue:
    Internal field mValue must not be exposed
InternalField: androidx.compose.remote.core.operations.TextLength#mLengthId:
    Internal field mLengthId must not be exposed
InternalField: androidx.compose.remote.core.operations.TextLength#mTextId:
    Internal field mTextId must not be exposed
InternalField: androidx.compose.remote.core.operations.TextLookup#mDataSetId:
    Internal field mDataSetId must not be exposed
InternalField: androidx.compose.remote.core.operations.TextLookup#mIndex:
    Internal field mIndex must not be exposed
InternalField: androidx.compose.remote.core.operations.TextLookup#mOutIndex:
    Internal field mOutIndex must not be exposed
InternalField: androidx.compose.remote.core.operations.TextLookup#mTextId:
    Internal field mTextId must not be exposed
InternalField: androidx.compose.remote.core.operations.TextLookupInt#mDataSetId:
    Internal field mDataSetId must not be exposed
InternalField: androidx.compose.remote.core.operations.TextLookupInt#mIndex:
    Internal field mIndex must not be exposed
InternalField: androidx.compose.remote.core.operations.TextLookupInt#mOutIndex:
    Internal field mOutIndex must not be exposed
InternalField: androidx.compose.remote.core.operations.TextLookupInt#mTextId:
    Internal field mTextId must not be exposed
InternalField: androidx.compose.remote.core.operations.TextMeasure#mId:
    Internal field mId must not be exposed
InternalField: androidx.compose.remote.core.operations.TextMeasure#mTextId:
    Internal field mTextId must not be exposed
InternalField: androidx.compose.remote.core.operations.TextMeasure#mType:
    Internal field mType must not be exposed
InternalField: androidx.compose.remote.core.operations.TextMerge#mSrcId1:
    Internal field mSrcId1 must not be exposed
InternalField: androidx.compose.remote.core.operations.TextMerge#mSrcId2:
    Internal field mSrcId2 must not be exposed
InternalField: androidx.compose.remote.core.operations.TextMerge#mTextId:
    Internal field mTextId must not be exposed
InternalField: androidx.compose.remote.core.operations.TimeAttribute#mId:
    Internal field mId must not be exposed
InternalField: androidx.compose.remote.core.operations.TimeAttribute#mTimeId:
    Internal field mTimeId must not be exposed
InternalField: androidx.compose.remote.core.operations.TimeAttribute#mType:
    Internal field mType must not be exposed
InternalField: androidx.compose.remote.core.operations.TouchExpression#mSrcExp:
    Internal field mSrcExp must not be exposed
InternalField: androidx.compose.remote.core.operations.layout.CanvasOperations#mList:
    Internal field mList must not be exposed
InternalField: androidx.compose.remote.core.operations.layout.ClickModifierOperation#mList:
    Internal field mList must not be exposed
InternalField: androidx.compose.remote.core.operations.layout.Component#mAnimateMeasure:
    Internal field mAnimateMeasure must not be exposed
InternalField: androidx.compose.remote.core.operations.layout.Component#mAnimationId:
    Internal field mAnimationId must not be exposed
InternalField: androidx.compose.remote.core.operations.layout.Component#mAnimationSpec:
    Internal field mAnimationSpec must not be exposed
InternalField: androidx.compose.remote.core.operations.layout.Component#mComponentId:
    Internal field mComponentId must not be exposed
InternalField: androidx.compose.remote.core.operations.layout.Component#mComponentValues:
    Internal field mComponentValues must not be exposed
InternalField: androidx.compose.remote.core.operations.layout.Component#mFirstLayout:
    Internal field mFirstLayout must not be exposed
InternalField: androidx.compose.remote.core.operations.layout.Component#mHeight:
    Internal field mHeight must not be exposed
InternalField: androidx.compose.remote.core.operations.layout.Component#mList:
    Internal field mList must not be exposed
InternalField: androidx.compose.remote.core.operations.layout.Component#mNeedsMeasure:
    Internal field mNeedsMeasure must not be exposed
InternalField: androidx.compose.remote.core.operations.layout.Component#mNeedsRepaint:
    Internal field mNeedsRepaint must not be exposed
InternalField: androidx.compose.remote.core.operations.layout.Component#mParent:
    Internal field mParent must not be exposed
InternalField: androidx.compose.remote.core.operations.layout.Component#mPreTranslate:
    Internal field mPreTranslate must not be exposed
InternalField: androidx.compose.remote.core.operations.layout.Component#mScheduledVisibility:
    Internal field mScheduledVisibility must not be exposed
InternalField: androidx.compose.remote.core.operations.layout.Component#mVisibility:
    Internal field mVisibility must not be exposed
InternalField: androidx.compose.remote.core.operations.layout.Component#mWidth:
    Internal field mWidth must not be exposed
InternalField: androidx.compose.remote.core.operations.layout.Component#mX:
    Internal field mX must not be exposed
InternalField: androidx.compose.remote.core.operations.layout.Component#mY:
    Internal field mY must not be exposed
InternalField: androidx.compose.remote.core.operations.layout.Component#mZIndex:
    Internal field mZIndex must not be exposed
InternalField: androidx.compose.remote.core.operations.layout.ComponentStart#mList:
    Internal field mList must not be exposed
InternalField: androidx.compose.remote.core.operations.layout.ImpulseOperation#mList:
    Internal field mList must not be exposed
InternalField: androidx.compose.remote.core.operations.layout.ImpulseProcess#mList:
    Internal field mList must not be exposed
InternalField: androidx.compose.remote.core.operations.layout.LayoutComponent#mCachedAttributes:
    Internal field mCachedAttributes must not be exposed
InternalField: androidx.compose.remote.core.operations.layout.LayoutComponent#mChildrenComponents:
    Internal field mChildrenComponents must not be exposed
InternalField: androidx.compose.remote.core.operations.layout.LayoutComponent#mChildrenHaveZIndex:
    Internal field mChildrenHaveZIndex must not be exposed
InternalField: androidx.compose.remote.core.operations.layout.LayoutComponent#mComponentModifiers:
    Internal field mComponentModifiers must not be exposed
InternalField: androidx.compose.remote.core.operations.layout.LayoutComponent#mContent:
    Internal field mContent must not be exposed
InternalField: androidx.compose.remote.core.operations.layout.LayoutComponent#mGraphicsLayerModifier:
    Internal field mGraphicsLayerModifier must not be exposed
InternalField: androidx.compose.remote.core.operations.layout.LayoutComponent#mHeightModifier:
    Internal field mHeightModifier must not be exposed
InternalField: androidx.compose.remote.core.operations.layout.LayoutComponent#mHorizontalScrollDelegate:
    Internal field mHorizontalScrollDelegate must not be exposed
InternalField: androidx.compose.remote.core.operations.layout.LayoutComponent#mPaddingBottom:
    Internal field mPaddingBottom must not be exposed
InternalField: androidx.compose.remote.core.operations.layout.LayoutComponent#mPaddingLeft:
    Internal field mPaddingLeft must not be exposed
InternalField: androidx.compose.remote.core.operations.layout.LayoutComponent#mPaddingRight:
    Internal field mPaddingRight must not be exposed
InternalField: androidx.compose.remote.core.operations.layout.LayoutComponent#mPaddingTop:
    Internal field mPaddingTop must not be exposed
InternalField: androidx.compose.remote.core.operations.layout.LayoutComponent#mVerticalScrollDelegate:
    Internal field mVerticalScrollDelegate must not be exposed
InternalField: androidx.compose.remote.core.operations.layout.LayoutComponent#mWidthModifier:
    Internal field mWidthModifier must not be exposed
InternalField: androidx.compose.remote.core.operations.layout.LayoutComponent#mZIndexModifier:
    Internal field mZIndexModifier must not be exposed
InternalField: androidx.compose.remote.core.operations.layout.ListActionsOperation#mHeight:
    Internal field mHeight must not be exposed
InternalField: androidx.compose.remote.core.operations.layout.ListActionsOperation#mList:
    Internal field mList must not be exposed
InternalField: androidx.compose.remote.core.operations.layout.ListActionsOperation#mWidth:
    Internal field mWidth must not be exposed
InternalField: androidx.compose.remote.core.operations.layout.LoopOperation#mList:
    Internal field mList must not be exposed
InternalField: androidx.compose.remote.core.operations.layout.managers.TextLayout#mPaint:
    Internal field mPaint must not be exposed
InternalField: androidx.compose.remote.core.operations.layout.modifiers.BackgroundModifierOperation#mPaint:
    Internal field mPaint must not be exposed
InternalField: androidx.compose.remote.core.operations.layout.modifiers.RunActionOperation#mList:
    Internal field mList must not be exposed
InternalField: androidx.compose.remote.core.operations.matrix.MatrixVectorMath#mMatrixId:
    Internal field mMatrixId must not be exposed
InternalField: androidx.compose.remote.core.operations.utilities.ColorUtils#sRC_COLOR:
    Internal field sRC_COLOR must not be exposed
InternalField: androidx.compose.remote.core.operations.utilities.DataMap#mIds:
    Internal field mIds must not be exposed
InternalField: androidx.compose.remote.core.operations.utilities.DataMap#mNames:
    Internal field mNames must not be exposed
InternalField: androidx.compose.remote.core.operations.utilities.DataMap#mTypes:
    Internal field mTypes must not be exposed
InternalField: androidx.compose.remote.core.operations.utilities.ImageScaling#mFinalDstBottom:
    Internal field mFinalDstBottom must not be exposed
InternalField: androidx.compose.remote.core.operations.utilities.ImageScaling#mFinalDstLeft:
    Internal field mFinalDstLeft must not be exposed
InternalField: androidx.compose.remote.core.operations.utilities.ImageScaling#mFinalDstRight:
    Internal field mFinalDstRight must not be exposed
InternalField: androidx.compose.remote.core.operations.utilities.ImageScaling#mFinalDstTop:
    Internal field mFinalDstTop must not be exposed
InternalField: androidx.compose.remote.core.operations.utilities.Matrix#sTempInVec:
    Internal field sTempInVec must not be exposed
InternalField: androidx.compose.remote.core.operations.utilities.Matrix#sTempOutVec:
    Internal field sTempOutVec must not be exposed
InternalField: androidx.compose.remote.core.operations.utilities.Matrix#sTmpMatrix1:
    Internal field sTmpMatrix1 must not be exposed
InternalField: androidx.compose.remote.core.operations.utilities.Matrix#sTmpMatrix2:
    Internal field sTmpMatrix2 must not be exposed
InternalField: androidx.compose.remote.core.semantics.CoreSemantics#mClickable:
    Internal field mClickable must not be exposed
InternalField: androidx.compose.remote.core.semantics.CoreSemantics#mContentDescriptionId:
    Internal field mContentDescriptionId must not be exposed
InternalField: androidx.compose.remote.core.semantics.CoreSemantics#mEnabled:
    Internal field mEnabled must not be exposed
InternalField: androidx.compose.remote.core.semantics.CoreSemantics#mMode:
    Internal field mMode must not be exposed
InternalField: androidx.compose.remote.core.semantics.CoreSemantics#mRole:
    Internal field mRole must not be exposed
InternalField: androidx.compose.remote.core.semantics.CoreSemantics#mStateDescriptionId:
    Internal field mStateDescriptionId must not be exposed
InternalField: androidx.compose.remote.core.semantics.CoreSemantics#mTextId:
    Internal field mTextId must not be exposed
InternalField: androidx.compose.remote.core.types.IntegerConstant#mId:
    Internal field mId must not be exposed
InternalField: androidx.compose.remote.core.types.LongConstant#mId:
    Internal field mId must not be exposed


InvalidNullabilityOverride: androidx.compose.remote.core.operations.layout.managers.CollapsibleColumnLayout#minIntrinsicWidth(androidx.compose.remote.core.RemoteContext) parameter #0:
    Invalid nullability on type androidx.compose.remote.core.RemoteContext in parameter `context` in method `minIntrinsicWidth`. Parameter in method override cannot use a non-null type when the corresponding type from the super method is nullable.
InvalidNullabilityOverride: androidx.compose.remote.core.operations.layout.managers.CollapsibleRowLayout#minIntrinsicHeight(androidx.compose.remote.core.RemoteContext) parameter #0:
    Invalid nullability on type androidx.compose.remote.core.RemoteContext in parameter `context` in method `minIntrinsicHeight`. Parameter in method override cannot use a non-null type when the corresponding type from the super method is nullable.
InvalidNullabilityOverride: androidx.compose.remote.core.operations.layout.managers.CollapsibleRowLayout#minIntrinsicWidth(androidx.compose.remote.core.RemoteContext) parameter #0:
    Invalid nullability on type androidx.compose.remote.core.RemoteContext in parameter `context` in method `minIntrinsicWidth`. Parameter in method override cannot use a non-null type when the corresponding type from the super method is nullable.
InvalidNullabilityOverride: androidx.compose.remote.core.operations.layout.managers.ColumnLayout#minIntrinsicHeight(androidx.compose.remote.core.RemoteContext) parameter #0:
    Invalid nullability on type androidx.compose.remote.core.RemoteContext in parameter `context` in method `minIntrinsicHeight`. Parameter in method override cannot use a non-null type when the corresponding type from the super method is nullable.


KotlinOperator: androidx.compose.remote.core.RemoteComposeBuffer#rem(String):
    Method can be invoked as a binary operator from Kotlin: `rem` (this is usually desirable; just make sure it makes sense for this type of object)
KotlinOperator: androidx.compose.remote.core.operations.Header#get(short):
    Method can be invoked with an indexing operator from Kotlin: `get` (this is usually desirable; just make sure it makes sense for this type of object)
KotlinOperator: androidx.compose.remote.core.operations.layout.measure.MeasurePass#contains(int):
    Method can be invoked as a "in" operator from Kotlin: `contains` (this is usually desirable; just make sure it makes sense for this type of object)
KotlinOperator: androidx.compose.remote.core.operations.layout.measure.MeasurePass#get(androidx.compose.remote.core.operations.layout.Component):
    Method can be invoked with an indexing operator from Kotlin: `get` (this is usually desirable; just make sure it makes sense for this type of object)
KotlinOperator: androidx.compose.remote.core.operations.layout.measure.MeasurePass#get(int):
    Method can be invoked with an indexing operator from Kotlin: `get` (this is usually desirable; just make sure it makes sense for this type of object)
KotlinOperator: androidx.compose.remote.core.operations.utilities.IntFloatMap#contains(int):
    Method can be invoked as a "in" operator from Kotlin: `contains` (this is usually desirable; just make sure it makes sense for this type of object)
KotlinOperator: androidx.compose.remote.core.operations.utilities.IntFloatMap#get(int):
    Method can be invoked with an indexing operator from Kotlin: `get` (this is usually desirable; just make sure it makes sense for this type of object)
KotlinOperator: androidx.compose.remote.core.operations.utilities.IntIntMap#contains(int):
    Method can be invoked as a "in" operator from Kotlin: `contains` (this is usually desirable; just make sure it makes sense for this type of object)
KotlinOperator: androidx.compose.remote.core.operations.utilities.IntIntMap#get(int):
    Method can be invoked with an indexing operator from Kotlin: `get` (this is usually desirable; just make sure it makes sense for this type of object)
KotlinOperator: androidx.compose.remote.core.operations.utilities.IntMap#get(int):
    Method can be invoked with an indexing operator from Kotlin: `get` (this is usually desirable; just make sure it makes sense for this type of object)
KotlinOperator: androidx.compose.remote.core.operations.utilities.Matrix#get(int, int):
    Method can be invoked with an indexing operator from Kotlin: `get` (this is usually desirable; just make sure it makes sense for this type of object)
KotlinOperator: androidx.compose.remote.core.operations.utilities.Matrix#set(int, int, float):
    Method can be invoked with an indexing operator from Kotlin: `set` (this is usually desirable; just make sure it makes sense for this type of object)
KotlinOperator: androidx.compose.remote.core.operations.utilities.easing.Easing#get(float):
    Method can be invoked with an indexing operator from Kotlin: `get` (this is usually desirable; just make sure it makes sense for this type of object)
KotlinOperator: androidx.compose.remote.core.operations.utilities.easing.SpringStopEngine#get(float):
    Method can be invoked with an indexing operator from Kotlin: `get` (this is usually desirable; just make sure it makes sense for this type of object)
KotlinOperator: androidx.compose.remote.core.operations.utilities.touch.VelocityEasing.Easing#get(double):
    Method can be invoked with an indexing operator from Kotlin: `get` (this is usually desirable; just make sure it makes sense for this type of object)


MethodNameUnits: androidx.compose.remote.core.WireBuffer#readByte():
    Expected method name units to be `Bytes`, was `Byte` in `readByte`


MinMaxConstant: androidx.compose.remote.core.operations.BitmapData#MAX_IMAGE_DIMENSION:
    If min/max could change in future, make them dynamic methods: androidx.compose.remote.core.operations.BitmapData#MAX_IMAGE_DIMENSION
MinMaxConstant: androidx.compose.remote.core.operations.FloatExpression#MAX_EXPRESSION_SIZE:
    If min/max could change in future, make them dynamic methods: androidx.compose.remote.core.operations.FloatExpression#MAX_EXPRESSION_SIZE
MinMaxConstant: androidx.compose.remote.core.operations.IntegerExpression#MAX_SIZE:
    If min/max could change in future, make them dynamic methods: androidx.compose.remote.core.operations.IntegerExpression#MAX_SIZE
MinMaxConstant: androidx.compose.remote.core.operations.NamedVariable#MAX_STRING_SIZE:
    If min/max could change in future, make them dynamic methods: androidx.compose.remote.core.operations.NamedVariable#MAX_STRING_SIZE
MinMaxConstant: androidx.compose.remote.core.operations.PaintData#MAX_STRING_SIZE:
    If min/max could change in future, make them dynamic methods: androidx.compose.remote.core.operations.PaintData#MAX_STRING_SIZE
MinMaxConstant: androidx.compose.remote.core.operations.Rem#MAX_STRING_SIZE:
    If min/max could change in future, make them dynamic methods: androidx.compose.remote.core.operations.Rem#MAX_STRING_SIZE
MinMaxConstant: androidx.compose.remote.core.operations.TextData#MAX_STRING_SIZE:
    If min/max could change in future, make them dynamic methods: androidx.compose.remote.core.operations.TextData#MAX_STRING_SIZE
MinMaxConstant: androidx.compose.remote.core.operations.TextFromFloat#MAX_STRING_SIZE:
    If min/max could change in future, make them dynamic methods: androidx.compose.remote.core.operations.TextFromFloat#MAX_STRING_SIZE
MinMaxConstant: androidx.compose.remote.core.operations.TextLookup#MAX_STRING_SIZE:
    If min/max could change in future, make them dynamic methods: androidx.compose.remote.core.operations.TextLookup#MAX_STRING_SIZE
MinMaxConstant: androidx.compose.remote.core.operations.TextLookupInt#MAX_STRING_SIZE:
    If min/max could change in future, make them dynamic methods: androidx.compose.remote.core.operations.TextLookupInt#MAX_STRING_SIZE
MinMaxConstant: androidx.compose.remote.core.operations.TouchExpression#MAX_EXPRESSION_SIZE:
    If min/max could change in future, make them dynamic methods: androidx.compose.remote.core.operations.TouchExpression#MAX_EXPRESSION_SIZE


MissingBuildMethod: androidx.compose.remote.core.documentation.DocumentationBuilder:
    androidx.compose.remote.core.documentation.DocumentationBuilder does not declare a `build()` method, but builder classes are expected to


MissingNullability: androidx.compose.remote.core.Platform#None:
    Missing nullability on field `None` in class `class androidx.compose.remote.core.Platform`
MissingNullability: androidx.compose.remote.core.RemoteContext.FontInfo#mFontData:
    Missing nullability on field `mFontData` in class `class androidx.compose.remote.core.RemoteContext.FontInfo`
MissingNullability: androidx.compose.remote.core.SystemClock#getZone():
    Missing nullability on method `getZone` return
MissingNullability: androidx.compose.remote.core.SystemClock#instant():
    Missing nullability on method `instant` return
MissingNullability: androidx.compose.remote.core.SystemClock#withZone(java.time.ZoneId):
    Missing nullability on method `withZone` return
MissingNullability: androidx.compose.remote.core.SystemClock#withZone(java.time.ZoneId) parameter #0:
    Missing nullability on parameter `zone` in method `withZone`
MissingNullability: androidx.compose.remote.core.operations.DrawBase2.Maker#create(float, float):
    Missing nullability on method `create` return
MissingNullability: androidx.compose.remote.core.operations.DrawBase4.Maker#create(float, float, float, float):
    Missing nullability on method `create` return
MissingNullability: androidx.compose.remote.core.operations.layout.LayoutComponent#mCachedAttributes:
    Missing nullability on field `mCachedAttributes` in class `class androidx.compose.remote.core.operations.layout.LayoutComponent`
MissingNullability: androidx.compose.remote.core.operations.layout.animation.AnimationSpec#DEFAULT:
    Missing nullability on field `DEFAULT` in class `class androidx.compose.remote.core.operations.layout.animation.AnimationSpec`
MissingNullability: androidx.compose.remote.core.operations.layout.animation.AnimationSpec#DISABLED:
    Missing nullability on field `DISABLED` in class `class androidx.compose.remote.core.operations.layout.animation.AnimationSpec`
MissingNullability: androidx.compose.remote.core.operations.utilities.touch.VelocityEasing.Easing#clone():
    Missing nullability on method `clone` return


MutableBareField: androidx.compose.remote.core.CoreDocument#mTimeVariables:
    Bare field mTimeVariables must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.PaintContext#mContext:
    Bare field mContext must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.RemoteContext#currentTime:
    Bare field currentTime must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.RemoteContext#mDensity:
    Bare field mDensity must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.RemoteContext#mDocument:
    Bare field mDocument must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.RemoteContext#mHeight:
    Bare field mHeight must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.RemoteContext#mLastComponent:
    Bare field mLastComponent must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.RemoteContext#mPaintContext:
    Bare field mPaintContext must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.RemoteContext#mRemoteComposeState:
    Bare field mRemoteComposeState must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.RemoteContext#mWidth:
    Bare field mWidth must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.RemoteContext.FontInfo#fontBuilder:
    Bare field fontBuilder must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.BitmapFontData.Glyph#mBitmapHeight:
    Bare field mBitmapHeight must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.BitmapFontData.Glyph#mBitmapId:
    Bare field mBitmapId must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.BitmapFontData.Glyph#mBitmapWidth:
    Bare field mBitmapWidth must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.BitmapFontData.Glyph#mChars:
    Bare field mChars must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.BitmapFontData.Glyph#mMarginBottom:
    Bare field mMarginBottom must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.BitmapFontData.Glyph#mMarginLeft:
    Bare field mMarginLeft must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.BitmapFontData.Glyph#mMarginRight:
    Bare field mMarginRight must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.BitmapFontData.Glyph#mMarginTop:
    Bare field mMarginTop must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.BitmapTextMeasure#mId:
    Bare field mId must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.BitmapTextMeasure#mTextId:
    Bare field mTextId must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.BitmapTextMeasure#mType:
    Bare field mType must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.ColorAttribute#mColorId:
    Bare field mColorId must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.ColorAttribute#mId:
    Bare field mId must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.ColorAttribute#mType:
    Bare field mType must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.ColorConstant#mColor:
    Bare field mColor must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.ColorConstant#mColorId:
    Bare field mColorId must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.ColorExpression#mAlpha:
    Bare field mAlpha must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.ColorExpression#mColor1:
    Bare field mColor1 must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.ColorExpression#mColor2:
    Bare field mColor2 must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.ColorExpression#mHue:
    Bare field mHue must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.ColorExpression#mId:
    Bare field mId must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.ColorExpression#mOutColor1:
    Bare field mOutColor1 must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.ColorExpression#mOutColor2:
    Bare field mOutColor2 must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.ColorExpression#mOutHue:
    Bare field mOutHue must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.ColorExpression#mOutSat:
    Bare field mOutSat must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.ColorExpression#mOutTween:
    Bare field mOutTween must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.ColorExpression#mOutValue:
    Bare field mOutValue must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.ColorExpression#mSat:
    Bare field mSat must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.ColorExpression#mTween:
    Bare field mTween must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.ColorExpression#mValue:
    Bare field mValue must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.ConditionalOperations#mList:
    Bare field mList must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.DataMapLookup#mDataMapId:
    Bare field mDataMapId must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.DataMapLookup#mId:
    Bare field mId must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.DataMapLookup#mStringId:
    Bare field mStringId must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.DrawBase2#mName:
    Bare field mName must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.DrawBase3#mName:
    Bare field mName must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.DrawBase4#mName:
    Bare field mName must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.DrawBase4#mX1:
    Bare field mX1 must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.DrawBase4#mX2:
    Bare field mX2 must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.DrawBase4#mY1:
    Bare field mY1 must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.DrawBase4#mY2:
    Bare field mY2 must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.DrawBase6#mName:
    Bare field mName must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.DrawTextOnPath#mTextId:
    Bare field mTextId must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.FloatConstant#mId:
    Bare field mId must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.FloatConstant#mValue:
    Bare field mValue must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.FloatExpression#mFloatAnimation:
    Bare field mFloatAnimation must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.FloatExpression#mId:
    Bare field mId must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.FloatExpression#mPreCalcValue:
    Bare field mPreCalcValue must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.FloatExpression#mSrcAnimation:
    Bare field mSrcAnimation must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.FloatExpression#mSrcValue:
    Bare field mSrcValue must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.IdLookup#mDataSetId:
    Bare field mDataSetId must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.IdLookup#mIndex:
    Bare field mIndex must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.IdLookup#mOutIndex:
    Bare field mOutIndex must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.IdLookup#mTextId:
    Bare field mTextId must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.ImageAttribute#mId:
    Bare field mId must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.IntegerExpression#mId:
    Bare field mId must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.IntegerExpression#mPreCalcValue:
    Bare field mPreCalcValue must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.PaintData#mPaintData:
    Bare field mPaintData must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.PathCombine#mOutId:
    Bare field mOutId must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.PathCombine#mPathId1:
    Bare field mPathId1 must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.PathCombine#mPathId2:
    Bare field mPathId2 must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.PathTween#mOutId:
    Bare field mOutId must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.PathTween#mPathId1:
    Bare field mPathId1 must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.PathTween#mPathId2:
    Bare field mPathId2 must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.PathTween#mTween:
    Bare field mTween must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.PathTween#mTweenOut:
    Bare field mTweenOut must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.Rem#mText:
    Bare field mText must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.TextAttribute#mId:
    Bare field mId must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.TextAttribute#mTextId:
    Bare field mTextId must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.TextAttribute#mType:
    Bare field mType must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.TextData#mText:
    Bare field mText must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.TextFromFloat#mDigitsAfter:
    Bare field mDigitsAfter must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.TextFromFloat#mDigitsBefore:
    Bare field mDigitsBefore must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.TextFromFloat#mFlags:
    Bare field mFlags must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.TextFromFloat#mOutValue:
    Bare field mOutValue must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.TextFromFloat#mTextId:
    Bare field mTextId must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.TextFromFloat#mValue:
    Bare field mValue must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.TextLength#mLengthId:
    Bare field mLengthId must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.TextLength#mTextId:
    Bare field mTextId must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.TextLookup#mDataSetId:
    Bare field mDataSetId must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.TextLookup#mIndex:
    Bare field mIndex must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.TextLookup#mOutIndex:
    Bare field mOutIndex must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.TextLookup#mTextId:
    Bare field mTextId must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.TextLookupInt#mDataSetId:
    Bare field mDataSetId must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.TextLookupInt#mIndex:
    Bare field mIndex must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.TextLookupInt#mOutIndex:
    Bare field mOutIndex must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.TextLookupInt#mTextId:
    Bare field mTextId must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.TextMeasure#mId:
    Bare field mId must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.TextMeasure#mTextId:
    Bare field mTextId must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.TextMeasure#mType:
    Bare field mType must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.TextMerge#mSrcId1:
    Bare field mSrcId1 must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.TextMerge#mSrcId2:
    Bare field mSrcId2 must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.TextMerge#mTextId:
    Bare field mTextId must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.TimeAttribute#mId:
    Bare field mId must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.TimeAttribute#mTimeId:
    Bare field mTimeId must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.TimeAttribute#mType:
    Bare field mType must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.TouchExpression#mSrcExp:
    Bare field mSrcExp must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.CanvasOperations#mList:
    Bare field mList must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.ClickModifierOperation#locationInWindow:
    Bare field locationInWindow must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.ClickModifierOperation#mList:
    Bare field mList must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.Component#locationInWindow:
    Bare field locationInWindow must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.Component#mAnimateMeasure:
    Bare field mAnimateMeasure must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.Component#mAnimationId:
    Bare field mAnimationId must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.Component#mAnimationSpec:
    Bare field mAnimationSpec must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.Component#mComponentId:
    Bare field mComponentId must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.Component#mComponentValues:
    Bare field mComponentValues must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.Component#mFirstLayout:
    Bare field mFirstLayout must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.Component#mHeight:
    Bare field mHeight must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.Component#mList:
    Bare field mList must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.Component#mNeedsMeasure:
    Bare field mNeedsMeasure must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.Component#mNeedsRepaint:
    Bare field mNeedsRepaint must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.Component#mParent:
    Bare field mParent must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.Component#mPreTranslate:
    Bare field mPreTranslate must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.Component#mScheduledVisibility:
    Bare field mScheduledVisibility must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.Component#mVisibility:
    Bare field mVisibility must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.Component#mWidth:
    Bare field mWidth must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.Component#mX:
    Bare field mX must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.Component#mY:
    Bare field mY must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.Component#mZIndex:
    Bare field mZIndex must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.ComponentStart#mList:
    Bare field mList must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.ImpulseOperation#mList:
    Bare field mList must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.ImpulseProcess#mList:
    Bare field mList must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.LayoutComponent#mChildrenComponents:
    Bare field mChildrenComponents must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.LayoutComponent#mChildrenHaveZIndex:
    Bare field mChildrenHaveZIndex must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.LayoutComponent#mComponentModifiers:
    Bare field mComponentModifiers must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.LayoutComponent#mContent:
    Bare field mContent must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.LayoutComponent#mGraphicsLayerModifier:
    Bare field mGraphicsLayerModifier must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.LayoutComponent#mHeightModifier:
    Bare field mHeightModifier must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.LayoutComponent#mHorizontalScrollDelegate:
    Bare field mHorizontalScrollDelegate must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.LayoutComponent#mPaddingBottom:
    Bare field mPaddingBottom must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.LayoutComponent#mPaddingLeft:
    Bare field mPaddingLeft must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.LayoutComponent#mPaddingRight:
    Bare field mPaddingRight must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.LayoutComponent#mPaddingTop:
    Bare field mPaddingTop must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.LayoutComponent#mVerticalScrollDelegate:
    Bare field mVerticalScrollDelegate must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.LayoutComponent#mWidthModifier:
    Bare field mWidthModifier must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.LayoutComponent#mZIndexModifier:
    Bare field mZIndexModifier must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.ListActionsOperation#mHeight:
    Bare field mHeight must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.ListActionsOperation#mList:
    Bare field mList must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.ListActionsOperation#mWidth:
    Bare field mWidth must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.LoopOperation#mList:
    Bare field mList must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.animation.AnimateMeasure#paint:
    Bare field paint must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.animation.Particle#b:
    Bare field b must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.animation.Particle#g:
    Bare field g must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.animation.Particle#r:
    Bare field r must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.animation.Particle#radius:
    Bare field radius must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.managers.StateLayout#MAX_CACHE_ELEMENTS:
    Bare field MAX_CACHE_ELEMENTS must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.managers.StateLayout#cacheListElementsId:
    Bare field cacheListElementsId must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.managers.StateLayout#currentLayoutIndex:
    Bare field currentLayoutIndex must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.managers.StateLayout#inTransition:
    Bare field inTransition must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.managers.StateLayout#measuredLayoutIndex:
    Bare field measuredLayoutIndex must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.managers.StateLayout#previousLayoutIndex:
    Bare field previousLayoutIndex must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.managers.StateLayout#statePaintedComponents:
    Bare field statePaintedComponents must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.managers.TextLayout#mPaint:
    Bare field mPaint must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.modifiers.BackgroundModifierOperation#mPaint:
    Bare field mPaint must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.modifiers.BorderModifierOperation#paint:
    Bare field paint must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.modifiers.RippleModifierOperation#locationInWindow:
    Bare field locationInWindow must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.modifiers.RunActionOperation#mList:
    Bare field mList must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.utils.DebugLog#currentNode:
    Bare field currentNode must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.utils.DebugLog#node:
    Bare field node must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.utils.DebugLog.Node#endString:
    Bare field endString must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.utils.DebugLog.Node#list:
    Bare field list must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.utils.DebugLog.Node#name:
    Bare field name must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.layout.utils.DebugLog.Node#parent:
    Bare field parent must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.matrix.MatrixVectorMath#mMatrixId:
    Bare field mMatrixId must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.utilities.ColorUtils#sRC_COLOR:
    Bare field sRC_COLOR must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.utilities.ImageScaling#mFinalDstBottom:
    Bare field mFinalDstBottom must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.utilities.ImageScaling#mFinalDstLeft:
    Bare field mFinalDstLeft must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.utilities.ImageScaling#mFinalDstRight:
    Bare field mFinalDstRight must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.utilities.ImageScaling#mFinalDstTop:
    Bare field mFinalDstTop must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.utilities.Matrix#sTempInVec:
    Bare field sTempInVec must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.operations.utilities.Matrix#sTempOutVec:
    Bare field sTempOutVec must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.semantics.CoreSemantics#mClickable:
    Bare field mClickable must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.semantics.CoreSemantics#mContentDescriptionId:
    Bare field mContentDescriptionId must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.semantics.CoreSemantics#mEnabled:
    Bare field mEnabled must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.semantics.CoreSemantics#mMode:
    Bare field mMode must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.semantics.CoreSemantics#mRole:
    Bare field mRole must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.semantics.CoreSemantics#mStateDescriptionId:
    Bare field mStateDescriptionId must be marked final, or moved behind accessors if mutable
MutableBareField: androidx.compose.remote.core.semantics.CoreSemantics#mTextId:
    Bare field mTextId must be marked final, or moved behind accessors if mutable


NoByteOrShort: androidx.compose.remote.core.CoreDocument#getProperty(short) parameter #0:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter key in androidx.compose.remote.core.CoreDocument.getProperty(short key)
NoByteOrShort: androidx.compose.remote.core.PaintContext#combinePath(int, int, int, byte) parameter #3:
    Should avoid odd sized primitives; use `int` instead of `byte` in parameter operation in androidx.compose.remote.core.PaintContext.combinePath(int out, int path1, int path2, byte operation)
NoByteOrShort: androidx.compose.remote.core.RemoteComposeBuffer#addColorExpression(int, int, short, float) parameter #2:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter color2 in androidx.compose.remote.core.RemoteComposeBuffer.addColorExpression(int id, int color1, short color2, float tween)
NoByteOrShort: androidx.compose.remote.core.RemoteComposeBuffer#addColorExpression(int, short, int, float) parameter #1:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter color1 in androidx.compose.remote.core.RemoteComposeBuffer.addColorExpression(int id, short color1, int color2, float tween)
NoByteOrShort: androidx.compose.remote.core.RemoteComposeBuffer#addColorExpression(int, short, short, float) parameter #1:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter color1 in androidx.compose.remote.core.RemoteComposeBuffer.addColorExpression(int id, short color1, short color2, float tween)
NoByteOrShort: androidx.compose.remote.core.RemoteComposeBuffer#addColorExpression(int, short, short, float) parameter #2:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter color2 in androidx.compose.remote.core.RemoteComposeBuffer.addColorExpression(int id, short color1, short color2, float tween)
NoByteOrShort: androidx.compose.remote.core.RemoteComposeBuffer#addConditionalOperations(byte, float, float) parameter #0:
    Should avoid odd sized primitives; use `int` instead of `byte` in parameter type in androidx.compose.remote.core.RemoteComposeBuffer.addConditionalOperations(byte type, float a, float b)
NoByteOrShort: androidx.compose.remote.core.RemoteComposeBuffer#addMatrixVectorMath(float, short, float[], int[]) parameter #1:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter type in androidx.compose.remote.core.RemoteComposeBuffer.addMatrixVectorMath(float matrixId, short type, float[] from, int[] outId)
NoByteOrShort: androidx.compose.remote.core.RemoteComposeBuffer#bitmapAttribute(int, int, short) parameter #2:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter attribute in androidx.compose.remote.core.RemoteComposeBuffer.bitmapAttribute(int id, int bitmapId, short attribute)
NoByteOrShort: androidx.compose.remote.core.RemoteComposeBuffer#createBitmap(int, short, short) parameter #1:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter imageWidth in androidx.compose.remote.core.RemoteComposeBuffer.createBitmap(int imageId, short imageWidth, short imageHeight)
NoByteOrShort: androidx.compose.remote.core.RemoteComposeBuffer#createBitmap(int, short, short) parameter #2:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter imageHeight in androidx.compose.remote.core.RemoteComposeBuffer.createBitmap(int imageId, short imageWidth, short imageHeight)
NoByteOrShort: androidx.compose.remote.core.RemoteComposeBuffer#createTextFromFloat(int, float, short, short, int) parameter #2:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter digitsBefore in androidx.compose.remote.core.RemoteComposeBuffer.createTextFromFloat(int id, float value, short digitsBefore, short digitsAfter, int flags)
NoByteOrShort: androidx.compose.remote.core.RemoteComposeBuffer#createTextFromFloat(int, float, short, short, int) parameter #3:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter digitsAfter in androidx.compose.remote.core.RemoteComposeBuffer.createTextFromFloat(int id, float value, short digitsBefore, short digitsAfter, int flags)
NoByteOrShort: androidx.compose.remote.core.RemoteComposeBuffer#getColorAttribute(int, int, short) parameter #2:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter type in androidx.compose.remote.core.RemoteComposeBuffer.getColorAttribute(int id, int baseColor, short type)
NoByteOrShort: androidx.compose.remote.core.RemoteComposeBuffer#pathCombine(int, int, int, byte) parameter #3:
    Should avoid odd sized primitives; use `int` instead of `byte` in parameter op in androidx.compose.remote.core.RemoteComposeBuffer.pathCombine(int id, int path1, int path2, byte op)
NoByteOrShort: androidx.compose.remote.core.RemoteComposeBuffer#textAttribute(int, int, short) parameter #2:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter attribute in androidx.compose.remote.core.RemoteComposeBuffer.textAttribute(int id, int textId, short attribute)
NoByteOrShort: androidx.compose.remote.core.RemoteComposeBuffer#timeAttribute(int, int, short, int...) parameter #2:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter attribute in androidx.compose.remote.core.RemoteComposeBuffer.timeAttribute(int id, int timeId, short attribute, int... args)
NoByteOrShort: androidx.compose.remote.core.RemoteContext#loadBitmap(int, short, short, int, int, byte[]) parameter #1:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter encoding in androidx.compose.remote.core.RemoteContext.loadBitmap(int imageId, short encoding, short type, int width, int height, byte[] bitmap)
NoByteOrShort: androidx.compose.remote.core.RemoteContext#loadBitmap(int, short, short, int, int, byte[]) parameter #2:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter type in androidx.compose.remote.core.RemoteContext.loadBitmap(int imageId, short encoding, short type, int width, int height, byte[] bitmap)
NoByteOrShort: androidx.compose.remote.core.operations.BitmapData#ENCODING_EMPTY:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.BitmapData.ENCODING_EMPTY
NoByteOrShort: androidx.compose.remote.core.operations.BitmapData#ENCODING_FILE:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.BitmapData.ENCODING_FILE
NoByteOrShort: androidx.compose.remote.core.operations.BitmapData#ENCODING_INLINE:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.BitmapData.ENCODING_INLINE
NoByteOrShort: androidx.compose.remote.core.operations.BitmapData#ENCODING_URL:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.BitmapData.ENCODING_URL
NoByteOrShort: androidx.compose.remote.core.operations.BitmapData#TYPE_PNG:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.BitmapData.TYPE_PNG
NoByteOrShort: androidx.compose.remote.core.operations.BitmapData#TYPE_PNG_8888:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.BitmapData.TYPE_PNG_8888
NoByteOrShort: androidx.compose.remote.core.operations.BitmapData#TYPE_PNG_ALPHA_8:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.BitmapData.TYPE_PNG_ALPHA_8
NoByteOrShort: androidx.compose.remote.core.operations.BitmapData#TYPE_RAW8:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.BitmapData.TYPE_RAW8
NoByteOrShort: androidx.compose.remote.core.operations.BitmapData#TYPE_RAW8888:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.BitmapData.TYPE_RAW8888
NoByteOrShort: androidx.compose.remote.core.operations.BitmapData#apply(androidx.compose.remote.core.WireBuffer, int, short, short, short, short, byte[]) parameter #2:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter type in androidx.compose.remote.core.operations.BitmapData.apply(androidx.compose.remote.core.WireBuffer buffer, int imageId, short type, short width, short encoding, short height, byte[] bitmap)
NoByteOrShort: androidx.compose.remote.core.operations.BitmapData#apply(androidx.compose.remote.core.WireBuffer, int, short, short, short, short, byte[]) parameter #3:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter width in androidx.compose.remote.core.operations.BitmapData.apply(androidx.compose.remote.core.WireBuffer buffer, int imageId, short type, short width, short encoding, short height, byte[] bitmap)
NoByteOrShort: androidx.compose.remote.core.operations.BitmapData#apply(androidx.compose.remote.core.WireBuffer, int, short, short, short, short, byte[]) parameter #4:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter encoding in androidx.compose.remote.core.operations.BitmapData.apply(androidx.compose.remote.core.WireBuffer buffer, int imageId, short type, short width, short encoding, short height, byte[] bitmap)
NoByteOrShort: androidx.compose.remote.core.operations.BitmapData#apply(androidx.compose.remote.core.WireBuffer, int, short, short, short, short, byte[]) parameter #5:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter height in androidx.compose.remote.core.operations.BitmapData.apply(androidx.compose.remote.core.WireBuffer buffer, int imageId, short type, short width, short encoding, short height, byte[] bitmap)
NoByteOrShort: androidx.compose.remote.core.operations.BitmapFontData#BitmapFontData(int, androidx.compose.remote.core.operations.BitmapFontData.Glyph[], short, java.util.Map<java.lang.String,java.lang.Short>) parameter #2:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter version in androidx.compose.remote.core.operations.BitmapFontData(int id, androidx.compose.remote.core.operations.BitmapFontData.Glyph[] fontGlyphs, short version, java.util.Map<java.lang.String,java.lang.Short> kerningTable)
NoByteOrShort: androidx.compose.remote.core.operations.BitmapFontData.Glyph#Glyph(String, int, short, short, short, short, short, short) parameter #2:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter marginLeft in androidx.compose.remote.core.operations.BitmapFontData.Glyph(String chars, int bitmapId, short marginLeft, short marginTop, short marginRight, short marginBottom, short width, short height)
NoByteOrShort: androidx.compose.remote.core.operations.BitmapFontData.Glyph#Glyph(String, int, short, short, short, short, short, short) parameter #3:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter marginTop in androidx.compose.remote.core.operations.BitmapFontData.Glyph(String chars, int bitmapId, short marginLeft, short marginTop, short marginRight, short marginBottom, short width, short height)
NoByteOrShort: androidx.compose.remote.core.operations.BitmapFontData.Glyph#Glyph(String, int, short, short, short, short, short, short) parameter #4:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter marginRight in androidx.compose.remote.core.operations.BitmapFontData.Glyph(String chars, int bitmapId, short marginLeft, short marginTop, short marginRight, short marginBottom, short width, short height)
NoByteOrShort: androidx.compose.remote.core.operations.BitmapFontData.Glyph#Glyph(String, int, short, short, short, short, short, short) parameter #5:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter marginBottom in androidx.compose.remote.core.operations.BitmapFontData.Glyph(String chars, int bitmapId, short marginLeft, short marginTop, short marginRight, short marginBottom, short width, short height)
NoByteOrShort: androidx.compose.remote.core.operations.BitmapFontData.Glyph#Glyph(String, int, short, short, short, short, short, short) parameter #6:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter width in androidx.compose.remote.core.operations.BitmapFontData.Glyph(String chars, int bitmapId, short marginLeft, short marginTop, short marginRight, short marginBottom, short width, short height)
NoByteOrShort: androidx.compose.remote.core.operations.BitmapFontData.Glyph#Glyph(String, int, short, short, short, short, short, short) parameter #7:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter height in androidx.compose.remote.core.operations.BitmapFontData.Glyph(String chars, int bitmapId, short marginLeft, short marginTop, short marginRight, short marginBottom, short width, short height)
NoByteOrShort: androidx.compose.remote.core.operations.BitmapFontData.Glyph#mBitmapHeight:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.BitmapFontData.Glyph.mBitmapHeight
NoByteOrShort: androidx.compose.remote.core.operations.BitmapFontData.Glyph#mBitmapWidth:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.BitmapFontData.Glyph.mBitmapWidth
NoByteOrShort: androidx.compose.remote.core.operations.BitmapFontData.Glyph#mMarginBottom:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.BitmapFontData.Glyph.mMarginBottom
NoByteOrShort: androidx.compose.remote.core.operations.BitmapFontData.Glyph#mMarginLeft:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.BitmapFontData.Glyph.mMarginLeft
NoByteOrShort: androidx.compose.remote.core.operations.BitmapFontData.Glyph#mMarginRight:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.BitmapFontData.Glyph.mMarginRight
NoByteOrShort: androidx.compose.remote.core.operations.BitmapFontData.Glyph#mMarginTop:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.BitmapFontData.Glyph.mMarginTop
NoByteOrShort: androidx.compose.remote.core.operations.ColorAttribute#COLOR_ALPHA:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.ColorAttribute.COLOR_ALPHA
NoByteOrShort: androidx.compose.remote.core.operations.ColorAttribute#COLOR_BLUE:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.ColorAttribute.COLOR_BLUE
NoByteOrShort: androidx.compose.remote.core.operations.ColorAttribute#COLOR_BRIGHTNESS:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.ColorAttribute.COLOR_BRIGHTNESS
NoByteOrShort: androidx.compose.remote.core.operations.ColorAttribute#COLOR_GREEN:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.ColorAttribute.COLOR_GREEN
NoByteOrShort: androidx.compose.remote.core.operations.ColorAttribute#COLOR_HUE:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.ColorAttribute.COLOR_HUE
NoByteOrShort: androidx.compose.remote.core.operations.ColorAttribute#COLOR_RED:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.ColorAttribute.COLOR_RED
NoByteOrShort: androidx.compose.remote.core.operations.ColorAttribute#COLOR_SATURATION:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.ColorAttribute.COLOR_SATURATION
NoByteOrShort: androidx.compose.remote.core.operations.ColorAttribute#ColorAttribute(int, int, short) parameter #2:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter type in androidx.compose.remote.core.operations.ColorAttribute(int id, int colorId, short type)
NoByteOrShort: androidx.compose.remote.core.operations.ColorAttribute#apply(androidx.compose.remote.core.WireBuffer, int, int, short) parameter #3:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter type in androidx.compose.remote.core.operations.ColorAttribute.apply(androidx.compose.remote.core.WireBuffer buffer, int id, int textId, short type)
NoByteOrShort: androidx.compose.remote.core.operations.ColorAttribute#mType:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.ColorAttribute.mType
NoByteOrShort: androidx.compose.remote.core.operations.ColorExpression#ARGB_MODE:
    Should avoid odd sized primitives; use `int` instead of `byte` in field androidx.compose.remote.core.operations.ColorExpression.ARGB_MODE
NoByteOrShort: androidx.compose.remote.core.operations.ColorExpression#COLOR_COLOR_INTERPOLATE:
    Should avoid odd sized primitives; use `int` instead of `byte` in field androidx.compose.remote.core.operations.ColorExpression.COLOR_COLOR_INTERPOLATE
NoByteOrShort: androidx.compose.remote.core.operations.ColorExpression#COLOR_ID_INTERPOLATE:
    Should avoid odd sized primitives; use `int` instead of `byte` in field androidx.compose.remote.core.operations.ColorExpression.COLOR_ID_INTERPOLATE
NoByteOrShort: androidx.compose.remote.core.operations.ColorExpression#ColorExpression(int, byte, float, float, float, float) parameter #1:
    Should avoid odd sized primitives; use `int` instead of `byte` in parameter mode in androidx.compose.remote.core.operations.ColorExpression(int id, byte mode, float alpha, float red, float green, float blue)
NoByteOrShort: androidx.compose.remote.core.operations.ColorExpression#ColorExpression(int, byte, int, float, float, float) parameter #1:
    Should avoid odd sized primitives; use `int` instead of `byte` in parameter mode in androidx.compose.remote.core.operations.ColorExpression(int id, byte mode, int alpha, float hue, float sat, float value)
NoByteOrShort: androidx.compose.remote.core.operations.ColorExpression#HSV_MODE:
    Should avoid odd sized primitives; use `int` instead of `byte` in field androidx.compose.remote.core.operations.ColorExpression.HSV_MODE
NoByteOrShort: androidx.compose.remote.core.operations.ColorExpression#IDARGB_MODE:
    Should avoid odd sized primitives; use `int` instead of `byte` in field androidx.compose.remote.core.operations.ColorExpression.IDARGB_MODE
NoByteOrShort: androidx.compose.remote.core.operations.ColorExpression#ID_COLOR_INTERPOLATE:
    Should avoid odd sized primitives; use `int` instead of `byte` in field androidx.compose.remote.core.operations.ColorExpression.ID_COLOR_INTERPOLATE
NoByteOrShort: androidx.compose.remote.core.operations.ColorExpression#ID_ID_INTERPOLATE:
    Should avoid odd sized primitives; use `int` instead of `byte` in field androidx.compose.remote.core.operations.ColorExpression.ID_ID_INTERPOLATE
NoByteOrShort: androidx.compose.remote.core.operations.ConditionalOperations#ConditionalOperations(byte, float, float) parameter #0:
    Should avoid odd sized primitives; use `int` instead of `byte` in parameter type in androidx.compose.remote.core.operations.ConditionalOperations(byte type, float a, float b)
NoByteOrShort: androidx.compose.remote.core.operations.ConditionalOperations#TYPE_EQ:
    Should avoid odd sized primitives; use `int` instead of `byte` in field androidx.compose.remote.core.operations.ConditionalOperations.TYPE_EQ
NoByteOrShort: androidx.compose.remote.core.operations.ConditionalOperations#TYPE_GT:
    Should avoid odd sized primitives; use `int` instead of `byte` in field androidx.compose.remote.core.operations.ConditionalOperations.TYPE_GT
NoByteOrShort: androidx.compose.remote.core.operations.ConditionalOperations#TYPE_GTE:
    Should avoid odd sized primitives; use `int` instead of `byte` in field androidx.compose.remote.core.operations.ConditionalOperations.TYPE_GTE
NoByteOrShort: androidx.compose.remote.core.operations.ConditionalOperations#TYPE_LT:
    Should avoid odd sized primitives; use `int` instead of `byte` in field androidx.compose.remote.core.operations.ConditionalOperations.TYPE_LT
NoByteOrShort: androidx.compose.remote.core.operations.ConditionalOperations#TYPE_LTE:
    Should avoid odd sized primitives; use `int` instead of `byte` in field androidx.compose.remote.core.operations.ConditionalOperations.TYPE_LTE
NoByteOrShort: androidx.compose.remote.core.operations.ConditionalOperations#TYPE_NEQ:
    Should avoid odd sized primitives; use `int` instead of `byte` in field androidx.compose.remote.core.operations.ConditionalOperations.TYPE_NEQ
NoByteOrShort: androidx.compose.remote.core.operations.ConditionalOperations#apply(androidx.compose.remote.core.WireBuffer, byte, float, float) parameter #1:
    Should avoid odd sized primitives; use `int` instead of `byte` in parameter type in androidx.compose.remote.core.operations.ConditionalOperations.apply(androidx.compose.remote.core.WireBuffer buffer, byte type, float a, float b)
NoByteOrShort: androidx.compose.remote.core.operations.DataMapIds#TYPE_BOOLEAN:
    Should avoid odd sized primitives; use `int` instead of `byte` in field androidx.compose.remote.core.operations.DataMapIds.TYPE_BOOLEAN
NoByteOrShort: androidx.compose.remote.core.operations.DataMapIds#TYPE_FLOAT:
    Should avoid odd sized primitives; use `int` instead of `byte` in field androidx.compose.remote.core.operations.DataMapIds.TYPE_FLOAT
NoByteOrShort: androidx.compose.remote.core.operations.DataMapIds#TYPE_INT:
    Should avoid odd sized primitives; use `int` instead of `byte` in field androidx.compose.remote.core.operations.DataMapIds.TYPE_INT
NoByteOrShort: androidx.compose.remote.core.operations.DataMapIds#TYPE_LONG:
    Should avoid odd sized primitives; use `int` instead of `byte` in field androidx.compose.remote.core.operations.DataMapIds.TYPE_LONG
NoByteOrShort: androidx.compose.remote.core.operations.DataMapIds#TYPE_STRING:
    Should avoid odd sized primitives; use `int` instead of `byte` in field androidx.compose.remote.core.operations.DataMapIds.TYPE_STRING
NoByteOrShort: androidx.compose.remote.core.operations.Header#DOC_CONTENT_DESCRIPTION:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.Header.DOC_CONTENT_DESCRIPTION
NoByteOrShort: androidx.compose.remote.core.operations.Header#DOC_DATA_UPDATE:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.Header.DOC_DATA_UPDATE
NoByteOrShort: androidx.compose.remote.core.operations.Header#DOC_DENSITY_AT_GENERATION:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.Header.DOC_DENSITY_AT_GENERATION
NoByteOrShort: androidx.compose.remote.core.operations.Header#DOC_DESIRED_FPS:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.Header.DOC_DESIRED_FPS
NoByteOrShort: androidx.compose.remote.core.operations.Header#DOC_HEIGHT:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.Header.DOC_HEIGHT
NoByteOrShort: androidx.compose.remote.core.operations.Header#DOC_PROFILES:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.Header.DOC_PROFILES
NoByteOrShort: androidx.compose.remote.core.operations.Header#DOC_SOURCE:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.Header.DOC_SOURCE
NoByteOrShort: androidx.compose.remote.core.operations.Header#DOC_WIDTH:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.Header.DOC_WIDTH
NoByteOrShort: androidx.compose.remote.core.operations.Header#HOST_EXCEPTION_HANDLER:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.Header.HOST_EXCEPTION_HANDLER
NoByteOrShort: androidx.compose.remote.core.operations.Header#get(short) parameter #0:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter property in androidx.compose.remote.core.operations.Header.get(short property)
NoByteOrShort: androidx.compose.remote.core.operations.ImageAttribute#IMAGE_HEIGHT:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.ImageAttribute.IMAGE_HEIGHT
NoByteOrShort: androidx.compose.remote.core.operations.ImageAttribute#IMAGE_WIDTH:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.ImageAttribute.IMAGE_WIDTH
NoByteOrShort: androidx.compose.remote.core.operations.ImageAttribute#ImageAttribute(int, int, short, int[]) parameter #2:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter type in androidx.compose.remote.core.operations.ImageAttribute(int id, int imageId, short type, int[] args)
NoByteOrShort: androidx.compose.remote.core.operations.ImageAttribute#apply(androidx.compose.remote.core.WireBuffer, int, int, short, int[]) parameter #3:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter type in androidx.compose.remote.core.operations.ImageAttribute.apply(androidx.compose.remote.core.WireBuffer buffer, int id, int imageId, short type, int[] args)
NoByteOrShort: androidx.compose.remote.core.operations.PathCombine#OP_DIFFERENCE:
    Should avoid odd sized primitives; use `int` instead of `byte` in field androidx.compose.remote.core.operations.PathCombine.OP_DIFFERENCE
NoByteOrShort: androidx.compose.remote.core.operations.PathCombine#OP_INTERSECT:
    Should avoid odd sized primitives; use `int` instead of `byte` in field androidx.compose.remote.core.operations.PathCombine.OP_INTERSECT
NoByteOrShort: androidx.compose.remote.core.operations.PathCombine#OP_REVERSE_DIFFERENCE:
    Should avoid odd sized primitives; use `int` instead of `byte` in field androidx.compose.remote.core.operations.PathCombine.OP_REVERSE_DIFFERENCE
NoByteOrShort: androidx.compose.remote.core.operations.PathCombine#OP_UNION:
    Should avoid odd sized primitives; use `int` instead of `byte` in field androidx.compose.remote.core.operations.PathCombine.OP_UNION
NoByteOrShort: androidx.compose.remote.core.operations.PathCombine#OP_XOR:
    Should avoid odd sized primitives; use `int` instead of `byte` in field androidx.compose.remote.core.operations.PathCombine.OP_XOR
NoByteOrShort: androidx.compose.remote.core.operations.PathCombine#PathCombine(int, int, int, byte) parameter #3:
    Should avoid odd sized primitives; use `int` instead of `byte` in parameter operation in androidx.compose.remote.core.operations.PathCombine(int outId, int pathId1, int pathId2, byte operation)
NoByteOrShort: androidx.compose.remote.core.operations.PathCombine#apply(androidx.compose.remote.core.WireBuffer, int, int, int, byte) parameter #4:
    Should avoid odd sized primitives; use `int` instead of `byte` in parameter op in androidx.compose.remote.core.operations.PathCombine.apply(androidx.compose.remote.core.WireBuffer buffer, int outId, int pathId1, int pathId2, byte op)
NoByteOrShort: androidx.compose.remote.core.operations.TextAttribute#MEASURE_BOTTOM:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.TextAttribute.MEASURE_BOTTOM
NoByteOrShort: androidx.compose.remote.core.operations.TextAttribute#MEASURE_HEIGHT:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.TextAttribute.MEASURE_HEIGHT
NoByteOrShort: androidx.compose.remote.core.operations.TextAttribute#MEASURE_LEFT:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.TextAttribute.MEASURE_LEFT
NoByteOrShort: androidx.compose.remote.core.operations.TextAttribute#MEASURE_RIGHT:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.TextAttribute.MEASURE_RIGHT
NoByteOrShort: androidx.compose.remote.core.operations.TextAttribute#MEASURE_TOP:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.TextAttribute.MEASURE_TOP
NoByteOrShort: androidx.compose.remote.core.operations.TextAttribute#MEASURE_WIDTH:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.TextAttribute.MEASURE_WIDTH
NoByteOrShort: androidx.compose.remote.core.operations.TextAttribute#TEXT_LENGTH:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.TextAttribute.TEXT_LENGTH
NoByteOrShort: androidx.compose.remote.core.operations.TextAttribute#TextAttribute(int, int, short) parameter #2:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter type in androidx.compose.remote.core.operations.TextAttribute(int id, int textId, short type)
NoByteOrShort: androidx.compose.remote.core.operations.TextAttribute#apply(androidx.compose.remote.core.WireBuffer, int, int, short) parameter #3:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter type in androidx.compose.remote.core.operations.TextAttribute.apply(androidx.compose.remote.core.WireBuffer buffer, int id, int textId, short type)
NoByteOrShort: androidx.compose.remote.core.operations.TextAttribute#mType:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.TextAttribute.mType
NoByteOrShort: androidx.compose.remote.core.operations.TextFromFloat#TextFromFloat(int, float, short, short, int) parameter #2:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter digitsBefore in androidx.compose.remote.core.operations.TextFromFloat(int textId, float value, short digitsBefore, short digitsAfter, int flags)
NoByteOrShort: androidx.compose.remote.core.operations.TextFromFloat#TextFromFloat(int, float, short, short, int) parameter #3:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter digitsAfter in androidx.compose.remote.core.operations.TextFromFloat(int textId, float value, short digitsBefore, short digitsAfter, int flags)
NoByteOrShort: androidx.compose.remote.core.operations.TextFromFloat#apply(androidx.compose.remote.core.WireBuffer, int, float, short, short, int) parameter #3:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter digitsBefore in androidx.compose.remote.core.operations.TextFromFloat.apply(androidx.compose.remote.core.WireBuffer buffer, int textId, float value, short digitsBefore, short digitsAfter, int flags)
NoByteOrShort: androidx.compose.remote.core.operations.TextFromFloat#apply(androidx.compose.remote.core.WireBuffer, int, float, short, short, int) parameter #4:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter digitsAfter in androidx.compose.remote.core.operations.TextFromFloat.apply(androidx.compose.remote.core.WireBuffer buffer, int textId, float value, short digitsBefore, short digitsAfter, int flags)
NoByteOrShort: androidx.compose.remote.core.operations.TextFromFloat#mDigitsAfter:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.TextFromFloat.mDigitsAfter
NoByteOrShort: androidx.compose.remote.core.operations.TextFromFloat#mDigitsBefore:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.TextFromFloat.mDigitsBefore
NoByteOrShort: androidx.compose.remote.core.operations.TimeAttribute#TIME_DAY_OF_MONTH:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.TimeAttribute.TIME_DAY_OF_MONTH
NoByteOrShort: androidx.compose.remote.core.operations.TimeAttribute#TIME_DAY_OF_WEEK:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.TimeAttribute.TIME_DAY_OF_WEEK
NoByteOrShort: androidx.compose.remote.core.operations.TimeAttribute#TIME_DAY_OF_YEAR:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.TimeAttribute.TIME_DAY_OF_YEAR
NoByteOrShort: androidx.compose.remote.core.operations.TimeAttribute#TIME_FROM_ARG_HR:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.TimeAttribute.TIME_FROM_ARG_HR
NoByteOrShort: androidx.compose.remote.core.operations.TimeAttribute#TIME_FROM_ARG_MIN:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.TimeAttribute.TIME_FROM_ARG_MIN
NoByteOrShort: androidx.compose.remote.core.operations.TimeAttribute#TIME_FROM_ARG_SEC:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.TimeAttribute.TIME_FROM_ARG_SEC
NoByteOrShort: androidx.compose.remote.core.operations.TimeAttribute#TIME_FROM_LOAD_SEC:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.TimeAttribute.TIME_FROM_LOAD_SEC
NoByteOrShort: androidx.compose.remote.core.operations.TimeAttribute#TIME_FROM_NOW_HR:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.TimeAttribute.TIME_FROM_NOW_HR
NoByteOrShort: androidx.compose.remote.core.operations.TimeAttribute#TIME_FROM_NOW_MIN:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.TimeAttribute.TIME_FROM_NOW_MIN
NoByteOrShort: androidx.compose.remote.core.operations.TimeAttribute#TIME_FROM_NOW_SEC:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.TimeAttribute.TIME_FROM_NOW_SEC
NoByteOrShort: androidx.compose.remote.core.operations.TimeAttribute#TIME_IN_HR:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.TimeAttribute.TIME_IN_HR
NoByteOrShort: androidx.compose.remote.core.operations.TimeAttribute#TIME_IN_MIN:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.TimeAttribute.TIME_IN_MIN
NoByteOrShort: androidx.compose.remote.core.operations.TimeAttribute#TIME_IN_SEC:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.TimeAttribute.TIME_IN_SEC
NoByteOrShort: androidx.compose.remote.core.operations.TimeAttribute#TIME_MONTH_VALUE:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.TimeAttribute.TIME_MONTH_VALUE
NoByteOrShort: androidx.compose.remote.core.operations.TimeAttribute#TIME_YEAR:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.TimeAttribute.TIME_YEAR
NoByteOrShort: androidx.compose.remote.core.operations.TimeAttribute#TimeAttribute(int, int, short, int[]) parameter #2:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter type in androidx.compose.remote.core.operations.TimeAttribute(int id, int longId, short type, int[] args)
NoByteOrShort: androidx.compose.remote.core.operations.TimeAttribute#apply(androidx.compose.remote.core.WireBuffer, int, int, short) parameter #3:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter type in androidx.compose.remote.core.operations.TimeAttribute.apply(androidx.compose.remote.core.WireBuffer buffer, int id, int textId, short type)
NoByteOrShort: androidx.compose.remote.core.operations.TimeAttribute#apply(androidx.compose.remote.core.WireBuffer, int, int, short, int[]) parameter #3:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter type in androidx.compose.remote.core.operations.TimeAttribute.apply(androidx.compose.remote.core.WireBuffer buffer, int id, int textId, short type, int[] args)
NoByteOrShort: androidx.compose.remote.core.operations.TimeAttribute#mType:
    Should avoid odd sized primitives; use `int` instead of `short` in field androidx.compose.remote.core.operations.TimeAttribute.mType
NoByteOrShort: androidx.compose.remote.core.operations.matrix.MatrixVectorMath#MatrixVectorMath(short, int[], int, float[]) parameter #0:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter type in androidx.compose.remote.core.operations.matrix.MatrixVectorMath(short type, int[] outputs, int matrixId, float[] inputs)
NoByteOrShort: androidx.compose.remote.core.operations.matrix.MatrixVectorMath#apply(androidx.compose.remote.core.WireBuffer, short, int[], int, float[]) parameter #1:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter type in androidx.compose.remote.core.operations.matrix.MatrixVectorMath.apply(androidx.compose.remote.core.WireBuffer buffer, short type, int[] outputs, int matrixId, float[] inputs)
NoByteOrShort: androidx.compose.remote.core.operations.paint.PaintBundle#setTextureShader(int, short, short, short, short) parameter #1:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter tileModeX in androidx.compose.remote.core.operations.paint.PaintBundle.setTextureShader(int texture, short tileModeX, short tileModeY, short filterMode, short maxAnisotropy)
NoByteOrShort: androidx.compose.remote.core.operations.paint.PaintBundle#setTextureShader(int, short, short, short, short) parameter #2:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter tileModeY in androidx.compose.remote.core.operations.paint.PaintBundle.setTextureShader(int texture, short tileModeX, short tileModeY, short filterMode, short maxAnisotropy)
NoByteOrShort: androidx.compose.remote.core.operations.paint.PaintBundle#setTextureShader(int, short, short, short, short) parameter #3:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter filterMode in androidx.compose.remote.core.operations.paint.PaintBundle.setTextureShader(int texture, short tileModeX, short tileModeY, short filterMode, short maxAnisotropy)
NoByteOrShort: androidx.compose.remote.core.operations.paint.PaintBundle#setTextureShader(int, short, short, short, short) parameter #4:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter maxAnisotropy in androidx.compose.remote.core.operations.paint.PaintBundle.setTextureShader(int texture, short tileModeX, short tileModeY, short filterMode, short maxAnisotropy)
NoByteOrShort: androidx.compose.remote.core.operations.paint.PaintChangeAdapter#setTextureShader(int, short, short, short, short) parameter #1:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter tileX in androidx.compose.remote.core.operations.paint.PaintChangeAdapter.setTextureShader(int bitmapId, short tileX, short tileY, short filterMode, short maxAnisotropy)
NoByteOrShort: androidx.compose.remote.core.operations.paint.PaintChangeAdapter#setTextureShader(int, short, short, short, short) parameter #2:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter tileY in androidx.compose.remote.core.operations.paint.PaintChangeAdapter.setTextureShader(int bitmapId, short tileX, short tileY, short filterMode, short maxAnisotropy)
NoByteOrShort: androidx.compose.remote.core.operations.paint.PaintChangeAdapter#setTextureShader(int, short, short, short, short) parameter #3:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter filterMode in androidx.compose.remote.core.operations.paint.PaintChangeAdapter.setTextureShader(int bitmapId, short tileX, short tileY, short filterMode, short maxAnisotropy)
NoByteOrShort: androidx.compose.remote.core.operations.paint.PaintChangeAdapter#setTextureShader(int, short, short, short, short) parameter #4:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter maxAnisotropy in androidx.compose.remote.core.operations.paint.PaintChangeAdapter.setTextureShader(int bitmapId, short tileX, short tileY, short filterMode, short maxAnisotropy)
NoByteOrShort: androidx.compose.remote.core.operations.paint.PaintChanges#setTextureShader(int, short, short, short, short) parameter #1:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter tileX in androidx.compose.remote.core.operations.paint.PaintChanges.setTextureShader(int bitmapId, short tileX, short tileY, short filterMode, short maxAnisotropy)
NoByteOrShort: androidx.compose.remote.core.operations.paint.PaintChanges#setTextureShader(int, short, short, short, short) parameter #2:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter tileY in androidx.compose.remote.core.operations.paint.PaintChanges.setTextureShader(int bitmapId, short tileX, short tileY, short filterMode, short maxAnisotropy)
NoByteOrShort: androidx.compose.remote.core.operations.paint.PaintChanges#setTextureShader(int, short, short, short, short) parameter #3:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter filterMode in androidx.compose.remote.core.operations.paint.PaintChanges.setTextureShader(int bitmapId, short tileX, short tileY, short filterMode, short maxAnisotropy)
NoByteOrShort: androidx.compose.remote.core.operations.paint.PaintChanges#setTextureShader(int, short, short, short, short) parameter #4:
    Should avoid odd sized primitives; use `int` instead of `short` in parameter maxAnisotropy in androidx.compose.remote.core.operations.paint.PaintChanges.setTextureShader(int bitmapId, short tileX, short tileY, short filterMode, short maxAnisotropy)
NoByteOrShort: androidx.compose.remote.core.operations.utilities.DataMap#getType(int):
    Should avoid odd sized primitives; use `int` instead of `byte` in method androidx.compose.remote.core.operations.utilities.DataMap.getType(int)


NoClone: androidx.compose.remote.core.operations.utilities.touch.VelocityEasing.Easing#clone():
    Provide an explicit copy constructor instead of implementing `clone()`


NullableCollection: androidx.compose.remote.core.CoreDocument#getNamedColors():
    Return type of method androidx.compose.remote.core.CoreDocument.getNamedColors() uses a nullable collection (`java.lang.String[]`); must be non-null
NullableCollection: androidx.compose.remote.core.RemoteComposeState#getListeners(int):
    Return type of method androidx.compose.remote.core.RemoteComposeState.getListeners(int) uses a nullable collection (`java.util.ArrayList`); must be non-null
NullableCollection: androidx.compose.remote.core.RemoteContext#getListeners(int):
    Return type of method androidx.compose.remote.core.RemoteContext.getListeners(int) uses a nullable collection (`java.util.ArrayList`); must be non-null


NullableCollectionElement: androidx.compose.remote.core.CoreDocument#getNamedColors():
    Collection java.lang.String[] should not have a nullable element type (java.lang.String) in method androidx.compose.remote.core.CoreDocument.getNamedColors()


PairedRegistration: androidx.compose.remote.core.CoreDocument#addActionCallback(androidx.compose.remote.core.CoreDocument.ActionCallback):
    Found addActionCallback but not removeActionCallback in androidx.compose.remote.core.CoreDocument
PairedRegistration: androidx.compose.remote.core.CoreDocument#addIdActionListener(androidx.compose.remote.core.CoreDocument.IdActionCallback):
    Found addIdActionListener but not removeIdActionListener in androidx.compose.remote.core.CoreDocument
PairedRegistration: androidx.compose.remote.core.CoreDocument#addTouchListener(androidx.compose.remote.core.TouchListener):
    Found addTouchListener but not removeTouchListener in androidx.compose.remote.core.CoreDocument
PairedRegistration: androidx.compose.remote.core.RemoteContext#addTouchListener(androidx.compose.remote.core.TouchListener):
    Found addTouchListener but not removeTouchListener in androidx.compose.remote.core.RemoteContext


SetterReturnsThis: androidx.compose.remote.core.documentation.DocumentationBuilder#add(String):
    Methods must return the builder object (return type androidx.compose.remote.core.documentation.DocumentationBuilder instead of void): method androidx.compose.remote.core.documentation.DocumentationBuilder.add(String)


StaticFinalBuilder: androidx.compose.remote.core.documentation.DocumentationBuilder:
    Builder must be final: androidx.compose.remote.core.documentation.DocumentationBuilder


StreamFiles: androidx.compose.remote.core.RemoteComposeBuffer#fromFile(java.io.File):
    Methods accepting `File` should also accept `FileDescriptor` or streams: method androidx.compose.remote.core.RemoteComposeBuffer.fromFile(java.io.File)
StreamFiles: androidx.compose.remote.core.RemoteComposeBuffer#write(androidx.compose.remote.core.RemoteComposeBuffer, java.io.File):
    Methods accepting `File` should also accept `FileDescriptor` or streams: method androidx.compose.remote.core.RemoteComposeBuffer.write(androidx.compose.remote.core.RemoteComposeBuffer,java.io.File)


TopLevelBuilder: androidx.compose.remote.core.documentation.DocumentationBuilder:
    Builder should be defined as inner class: androidx.compose.remote.core.documentation.DocumentationBuilder
