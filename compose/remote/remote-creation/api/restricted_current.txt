// Signature format: 4.0
package androidx.compose.remote.creation {

  public class FontUtils {
    method public static androidx.compose.remote.core.operations.BitmapFontData.Glyph![] createGlyphs(androidx.compose.remote.creation.RemoteComposeWriter, String, android.graphics.Paint);
    method public static java.util.HashMap<java.lang.String!,java.lang.Short!> extractKerningTable(androidx.compose.remote.core.operations.BitmapFontData.Glyph![], android.graphics.Paint);
    method @RequiresApi(api=android.os.Build.VERSION_CODES.O) public static void setFontOnPaint(android.app.Activity, android.graphics.Paint, int);
  }

  public class Painter {
    method public androidx.compose.remote.creation.Painter clearColorFilter();
    method public void commit();
    method public static int porterDuffInt(android.graphics.PorterDuff.Mode);
    method public androidx.compose.remote.creation.Painter setAlpha(float);
    method public androidx.compose.remote.creation.Painter setAntiAlias(boolean);
    method public androidx.compose.remote.creation.Painter setAxis(int[], float[]);
    method public androidx.compose.remote.creation.Painter setAxis(String![], float[]);
    method @RequiresApi(api=android.os.Build.VERSION_CODES.Q) public androidx.compose.remote.creation.Painter setBlendMode(android.graphics.BlendMode);
    method public androidx.compose.remote.creation.Painter setColor(int);
    method public androidx.compose.remote.creation.Painter setColorId(int);
    method public androidx.compose.remote.creation.Painter setFilterBitmap(boolean);
    method public androidx.compose.remote.creation.Painter setLinearGradient(float, float, float, float, int[], float[]?, android.graphics.Shader.TileMode);
    method public androidx.compose.remote.creation.Painter setLinearGradient(float, float, float, float, int[], int, float[], android.graphics.Shader.TileMode);
    method public androidx.compose.remote.creation.Painter setPorterDuffColorFilter(int, android.graphics.PorterDuff.Mode);
    method public androidx.compose.remote.creation.Painter setRadialGradient(float, float, float, int[], float[]?, android.graphics.Shader.TileMode);
    method public androidx.compose.remote.creation.Painter setRadialGradient(float, float, float, int[], int, float[]?, android.graphics.Shader.TileMode);
    method public androidx.compose.remote.creation.Painter setShader(int);
    method public androidx.compose.remote.creation.Painter setShaderMatrix(float);
    method public androidx.compose.remote.creation.Painter setStrokeCap(android.graphics.Paint.Cap);
    method public androidx.compose.remote.creation.Painter setStrokeJoin(android.graphics.Paint.Join);
    method public androidx.compose.remote.creation.Painter setStrokeMiter(float);
    method public androidx.compose.remote.creation.Painter setStrokeWidth(float);
    method public androidx.compose.remote.creation.Painter setStyle(android.graphics.Paint.Style);
    method public androidx.compose.remote.creation.Painter setSweepGradient(float, float, int[], float[]?);
    method public androidx.compose.remote.creation.Painter setSweepGradient(float, float, int[], int, float[]?);
    method public androidx.compose.remote.creation.Painter setTextSize(float);
    method public androidx.compose.remote.creation.Painter setTextureShader(int, short, short, short, short);
    method @RequiresApi(api=android.os.Build.VERSION_CODES.P) public androidx.compose.remote.creation.Painter setTypeface(android.graphics.Typeface?);
    method public androidx.compose.remote.creation.Painter setTypeface(int);
    method public androidx.compose.remote.creation.Painter setTypeface(int, int, boolean);
    method public androidx.compose.remote.creation.Painter setTypeface(String);
    field public static int FONT_TYPE_DEFAULT;
    field public static int FONT_TYPE_MONOSPACE;
    field public static int FONT_TYPE_SANS_SERIF;
    field public static int FONT_TYPE_SERIF;
  }

  public final class RFloatPathsKt {
    method public static androidx.compose.remote.creation.RemotePath createDynamicCircle(androidx.compose.remote.creation.RemoteComposeWriter writer, int n, float radius, float cx, float cy);
    method public static androidx.compose.remote.creation.RemotePath createSquirclePath(androidx.compose.remote.creation.RemoteComposeWriter rc, androidx.compose.remote.creation.RFloat cx, androidx.compose.remote.creation.RFloat cy, androidx.compose.remote.creation.RFloat radius, androidx.compose.remote.creation.RFloat cornerRadius);
    method public static androidx.compose.remote.creation.RemotePath createSquirclePath(androidx.compose.remote.creation.RemoteComposeWriter rc, float cx, float cy, float radius, float cornerRadius);
    method public static void cubicTo(androidx.compose.remote.creation.RemotePath, Number x1, Number y1, Number x2, Number y2, Number x3, Number y3);
    method public static void lineTo(androidx.compose.remote.creation.RemotePath, Number x, Number y);
    method public static void moveTo(androidx.compose.remote.creation.RemotePath, Number x, Number y);
  }

  public class RemoteComposeWriterAndroid extends androidx.compose.remote.creation.RemoteComposeWriter {
    ctor public RemoteComposeWriterAndroid(androidx.compose.remote.core.Platform, androidx.compose.remote.creation.RemoteComposeWriter.HTag!...);
    ctor public RemoteComposeWriterAndroid(androidx.compose.remote.core.Platform, int, androidx.compose.remote.creation.RemoteComposeWriter.HTag!...);
    ctor protected RemoteComposeWriterAndroid(androidx.compose.remote.creation.profile.Profile, androidx.compose.remote.core.RemoteComposeBuffer, androidx.compose.remote.creation.RemoteComposeWriter.HTag!...);
    ctor public RemoteComposeWriterAndroid(int, int, String, androidx.compose.remote.core.Platform);
    ctor public RemoteComposeWriterAndroid(int, int, String, int, int, androidx.compose.remote.core.Platform);
    method public float addMatrixConst(android.graphics.Matrix);
    method public void drawBitmap(android.graphics.Bitmap, String?);
    method public androidx.compose.remote.creation.Painter getPainter();
  }

  public class RemotePath {
    ctor public RemotePath();
    ctor public RemotePath(String);
    method public void addArc(android.graphics.RectF, float, float);
    method public void addArc(float, float, float, float, float, float);
    method public void addArc(float, float, float, float, float, float, boolean);
    method public void arcTo(android.graphics.RectF, float, float);
    method public void arcTo(android.graphics.RectF, float, float, boolean);
    method public void arcTo(float, float, float, float, float, float, boolean);
    method public void close();
    method public void conicTo(float, float, float, float, float);
    method public static androidx.compose.remote.creation.RemotePath createCirclePath(androidx.compose.remote.creation.RemoteComposeWriter, float, float, float);
    method public float[] createFloatArray();
    method public void cubicTo(float, float, float, float, float, float);
    method public float getCurrentX();
    method public float getCurrentY();
    method public android.graphics.Path getPath();
    method public void incReserve(int);
    method public boolean isEmpty();
    method public void lineTo(float, float);
    method public void moveTo(float, float);
    method public void quadTo(float, float, float, float);
    method public void rConicTo(float, float, float, float, float);
    method public void rCubicTo(float, float, float, float, float, float);
    method public void rLineTo(float, float);
    method public void rMoveTo(float, float);
    method public void rQuadTo(float, float, float, float);
    method public void reset();
    method public void rewind();
    method public void transform(android.graphics.Matrix);
    field public static final int CLOSE = 15; // 0xf
    field public static final float CLOSE_NAN;
    field public static final int CONIC = 13; // 0xd
    field public static final float CONIC_NAN;
    field public static final int CUBIC = 14; // 0xe
    field public static final float CUBIC_NAN;
    field public static final int DONE = 16; // 0x10
    field public static final float DONE_NAN;
    field public static final int LINE = 11; // 0xb
    field public static final float LINE_NAN;
    field public static final int MOVE = 10; // 0xa
    field public static final float MOVE_NAN;
    field public static final int QUADRATIC = 12; // 0xc
    field public static final float QUADRATIC_NAN;
  }

}

package androidx.compose.remote.creation.modifiers {

  public class BackgroundModifier implements androidx.compose.remote.creation.modifiers.RecordingModifier.Element {
    ctor public BackgroundModifier(android.graphics.Shader?, int);
    method public android.graphics.Shader? getShader();
    method public void write(androidx.compose.remote.creation.RemoteComposeWriter);
  }

}

package androidx.compose.remote.creation.platform {

  public class AndroidxPlatformServices implements androidx.compose.remote.core.Platform {
    ctor public AndroidxPlatformServices();
    ctor public AndroidxPlatformServices(optional androidx.compose.remote.creation.platform.RCLogger logger);
    method public int getImageHeight(Object image);
    method public int getImageWidth(Object image);
    method public byte[]? imageToByteArray(Object image);
    method public boolean isAlpha8Image(Object image);
    method public void log(androidx.compose.remote.core.Platform.LogCategory category, String message);
    method public Object parsePath(String pathData);
    method public float[]? pathToFloatArray(Object path);
  }

  public interface RCLogger {
    method public void log(androidx.compose.remote.core.Platform.LogCategory category, String message);
  }

  public static final class RCLogger.AndroidLog implements androidx.compose.remote.creation.platform.RCLogger {
    method public String getTag();
    method public void log(androidx.compose.remote.core.Platform.LogCategory category, String message);
    property public String Tag;
    field public static final androidx.compose.remote.creation.platform.RCLogger.AndroidLog INSTANCE;
  }

  public static final class RCLogger.None implements androidx.compose.remote.creation.platform.RCLogger {
    method public void log(androidx.compose.remote.core.Platform.LogCategory category, String message);
    field public static final androidx.compose.remote.creation.platform.RCLogger.None INSTANCE;
  }

}

package androidx.compose.remote.creation.profile {

  public class PlatformProfile {
    ctor public PlatformProfile();
    field public static final androidx.compose.remote.creation.profile.Profile ANDROIDX;
    field public static final androidx.compose.remote.creation.profile.Profile WIDGETS_V6;
  }

  public class WidgetsProfileWriterV6 extends androidx.compose.remote.creation.RemoteComposeWriterAndroid {
    ctor public WidgetsProfileWriterV6(int, int, String, androidx.compose.remote.creation.profile.Profile);
  }

}

