/*
 * Copyright (C) 2025 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import androidx.build.SoftwareType
import androidx.build.PlatformIdentifier
import org.jetbrains.kotlin.gradle.plugin.KotlinPlatformType

plugins {
    id("AndroidXPlugin")
}

androidx {
    name = "Remote Compose Creation"
    type = SoftwareType.SNAPSHOT_ONLY_LIBRARY
    inceptionYear = "2024"
    description = "Provides a procedural API to create RemoteCompose documents"
}

androidXMultiplatform {
    androidLibrary {
        withJava()
        namespace = "androidx.compose.remote.creation"
        compileSdk = 35
    }
    jvm()

    defaultPlatform(PlatformIdentifier.ANDROID)

    sourceSets {
        commonMain {
            dependencies {
                api(libs.jspecify)
            }
        }

        jvmMain {
            dependsOn(commonMain)
            dependencies {
                api(project(":compose:remote:remote-core"))
            }
        }

        androidMain {
            dependsOn(commonMain)
            dependencies {
                api(project(":compose:remote:remote-core"))
                api(project(":compose:remote:remote-creation-core"))
                implementation(project(":graphics:graphics-path"))
            }
        }

        commonTest {
            dependencies {
            }
        }

        androidInstrumentedTest {
            dependsOn(commonTest)
            dependencies {
                implementation(libs.testExtJunit)
                implementation(libs.testRules)
                implementation(libs.junit)
                implementation(libs.truth)
                implementation(libs.kotlinTest)
                implementation(libs.testRunner)
                implementation(libs.espressoCore)
                implementation(project(":compose:remote:test-utils"))
                implementation(project(":compose:remote:remote-player-view"))
                implementation(project(":compose:ui:ui-test-junit4"))
            }
        }
    }
}

