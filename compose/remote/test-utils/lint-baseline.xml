<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 8.13.0-alpha01" type="baseline" client="gradle" dependencies="false" name="AGP (8.13.0-alpha01)" variant="all" version="8.13.0-alpha01">

    <issue
        id="PrivateConstructorForUtilityClass"
        message="Utility class is missing private constructor"
        errorLine1="public class SerializeUtils {"
        errorLine2="             ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/remote/serialization/SerializeUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected Vector&lt;Serializer> mArray = new Vector&lt;>();"
        errorLine2="              ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/remote/serialization/AbstractArraySerializer.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected Map&lt;String, Serializer> mEntries = new LinkedHashMap&lt;>();"
        errorLine2="              ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/remote/serialization/AbstractMapSerializer.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected Set&lt;SerializeTags> mTags = new HashSet&lt;>();"
        errorLine2="              ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/remote/serialization/AbstractMapSerializer.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected Object mValue;"
        errorLine2="              ~~~~~~">
        <location
            file="src/main/java/androidx/compose/remote/serialization/AbstractSerializer.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    protected ValueType mValueType = ValueType.NULL;"
        errorLine2="              ~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/remote/serialization/AbstractSerializer.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public ValueType getValueType() {"
        errorLine2="           ~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/remote/serialization/AbstractSerializer.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public ArraySerializer serializeArray() {"
        errorLine2="           ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/remote/serialization/AbstractSerializer.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public &lt;T> ArraySerializer serializeArray(@Nullable List&lt;T> value) {"
        errorLine2="               ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/remote/serialization/AbstractSerializer.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public MapSerializer serializeMap() {"
        errorLine2="           ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/remote/serialization/AbstractSerializer.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public &lt;T> MapSerializer serializeMap(@Nullable Map&lt;String, T> map) {"
        errorLine2="               ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/remote/serialization/AbstractSerializer.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void serializeFloatExpressionSrc(float[] values) {"
        errorLine2="                                            ~~~~~~~">
        <location
            file="src/main/java/androidx/compose/remote/serialization/AbstractSerializer.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void serializeIntExpressionSrc(int[] value, int mask) {"
        errorLine2="                                          ~~~~~">
        <location
            file="src/main/java/androidx/compose/remote/serialization/AbstractSerializer.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public void serializePath(float[] path) {"
        errorLine2="                              ~~~~~~~">
        <location
            file="src/main/java/androidx/compose/remote/serialization/AbstractSerializer.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    void add(Serializable value);"
        errorLine2="             ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/remote/serialization/ArraySerializer.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public InstructionSerializable(String instruction) {"
        errorLine2="                                   ~~~~~~">
        <location
            file="src/main/java/androidx/compose/remote/serialization/InstructionSerializable.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public IntInstructionSerializable(String instruction) {"
        errorLine2="                                      ~~~~~~">
        <location
            file="src/main/java/androidx/compose/remote/serialization/IntInstructionSerializable.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    AbstractArraySerializer newArraySerializer();"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/remote/serialization/SerializeFactory.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    AbstractMapSerializer newMapSerializer();"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/remote/serialization/SerializeFactory.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    AbstractSerializer newSerializer();"
        errorLine2="    ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/remote/serialization/SerializeFactory.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static &lt;T> void serializeMap(Serializer serializer, @Nullable Map&lt;String, T> map) {"
        errorLine2="                                        ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/remote/serialization/SerializeUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static &lt;T> void serializeMap(MapSerializer serializer, Map&lt;String, T> map) {"
        errorLine2="                                        ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/remote/serialization/SerializeUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static &lt;T> void serializeMap(MapSerializer serializer, Map&lt;String, T> map) {"
        errorLine2="                                                                  ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/remote/serialization/SerializeUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static &lt;T> void serializeArray(Serializer serializer, @Nullable List&lt;T> value) {"
        errorLine2="                                          ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/remote/serialization/SerializeUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static &lt;T> void serializeArray(ArraySerializer serializer, List&lt;T> value) {"
        errorLine2="                                          ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/remote/serialization/SerializeUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public static &lt;T> void serializeArray(ArraySerializer serializer, List&lt;T> value) {"
        errorLine2="                                                                      ~~~~~~~">
        <location
            file="src/main/java/androidx/compose/remote/serialization/SerializeUtils.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    ValueType getValueType();"
        errorLine2="    ~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/remote/serialization/Serializer.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    ArraySerializer serializeArray();"
        errorLine2="    ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/remote/serialization/Serializer.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    &lt;T> ArraySerializer serializeArray(@Nullable List&lt;T> value);"
        errorLine2="        ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/remote/serialization/Serializer.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    MapSerializer serializeMap();"
        errorLine2="    ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/remote/serialization/Serializer.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    void serializeFloatExpressionSrc(float[] value);"
        errorLine2="                                     ~~~~~~~">
        <location
            file="src/main/java/androidx/compose/remote/serialization/Serializer.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    void serializeIntExpressionSrc(int[] value, int mask);"
        errorLine2="                                   ~~~~~">
        <location
            file="src/main/java/androidx/compose/remote/serialization/Serializer.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    void serializePath(float[] path);"
        errorLine2="                       ~~~~~~~">
        <location
            file="src/main/java/androidx/compose/remote/serialization/Serializer.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    &lt;T> MapSerializer serializeMap(@Nullable Map&lt;String, T> value);"
        errorLine2="        ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/remote/serialization/Serializer.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public AbstractArraySerializer newArraySerializer() {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/remote/serialization/yaml/YAMLArraySerializer.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public AbstractMapSerializer newMapSerializer() {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/remote/serialization/yaml/YAMLArraySerializer.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public AbstractSerializer newSerializer() {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/remote/serialization/yaml/YAMLArraySerializer.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public AbstractArraySerializer newArraySerializer() {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/remote/serialization/yaml/YAMLMapSerializer.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public AbstractMapSerializer newMapSerializer() {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/remote/serialization/yaml/YAMLMapSerializer.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public AbstractSerializer newSerializer() {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/remote/serialization/yaml/YAMLMapSerializer.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public AbstractArraySerializer newArraySerializer() {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/remote/serialization/yaml/YAMLSerializer.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public AbstractMapSerializer newMapSerializer() {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/remote/serialization/yaml/YAMLSerializer.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public AbstractSerializer newSerializer() {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/compose/remote/serialization/yaml/YAMLSerializer.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public String toSimpleString() {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/compose/remote/serialization/yaml/YAMLSerializer.java"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://developer.android.com/kotlin/interop#nullability_annotations"
        errorLine1="    public String toFlatString() {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/compose/remote/serialization/yaml/YAMLSerializer.java"/>
    </issue>

</issues>
