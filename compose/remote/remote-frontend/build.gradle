/*
 * Copyright (C) 2025 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import androidx.build.SoftwareType

plugins {
    id("AndroidXPlugin")
    id("com.android.library")
    id("org.jetbrains.kotlin.android")
    id("AndroidXComposePlugin")
}

androidx {
    name = "Remote Compose Frontend"
    type = SoftwareType.SNAPSHOT_ONLY_LIBRARY
    inceptionYear = "2024"
    description = "Provides a compose API to create RemoteCompose documents"
    enableRobolectric()
}

android {
    namespace = "androidx.compose.remote.frontend"
    compileSdk = 35
    defaultConfig {
       minSdk = 22
    }
}

dependencies {
    api(libs.jspecify)
    implementation(project(":compose:remote:remote-core"))
    implementation(project(":compose:remote:remote-creation"))
    implementation(project(":compose:remote:remote-player-view"))
    implementation(project(":graphics:graphics-path"))
    implementation("androidx.compose.ui:ui:1.8.3")
    implementation("androidx.compose.ui:ui-text:1.8.3")
    implementation("androidx.core:core-ktx:1.16.0")
    implementation("androidx.compose.foundation:foundation:1.8.3")
    implementation("androidx.compose.foundation:foundation-layout:1.8.3")
    implementation("androidx.compose.runtime:runtime:1.8.3")
    implementation("androidx.lifecycle:lifecycle-viewmodel:2.9.2")
    implementation("androidx.savedstate:savedstate:1.3.1")
    implementation("androidx.compose.material:material:1.8.3")
    implementation("androidx.appcompat:appcompat:1.7.1")
    testImplementation(libs.junit)
    testImplementation(libs.truth)
    testImplementation(libs.testRules)
    androidTestImplementation(libs.junit)
    androidTestImplementation(libs.truth)
}
