// Signature format: 4.0
package androidx.compose.material3 {

  public final class AlertDialogDefaults {
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getContainerColor(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getIconContentColor(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getShape(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getTextContentColor(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getTitleContentColor(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getTonalElevation-D9Ej5fM();
    property public androidx.compose.ui.unit.Dp TonalElevation;
    property public androidx.compose.ui.graphics.Color containerColor;
    property public androidx.compose.ui.graphics.Color iconContentColor;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape shape;
    property public androidx.compose.ui.graphics.Color textContentColor;
    property public androidx.compose.ui.graphics.Color titleContentColor;
    field public static final androidx.compose.material3.AlertDialogDefaults INSTANCE;
  }

  public final class AlertDialogKt {
    method @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void AlertDialog(kotlin.jvm.functions.Function0<kotlin.Unit> onDismissRequest, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.window.DialogProperties properties, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void AlertDialog(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, androidx.compose.ui.window.DialogProperties?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void BasicAlertDialog(kotlin.jvm.functions.Function0<kotlin.Unit> onDismissRequest, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.window.DialogProperties properties, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void BasicAlertDialog(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, androidx.compose.ui.window.DialogProperties?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.material3.BasicAlertDialogOverride> getLocalBasicAlertDialogOverride();
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.material3.BasicAlertDialogOverride> LocalBasicAlertDialogOverride;
  }

  public final class AndroidAlertDialog_androidKt {
    method @KotlinOnly @androidx.compose.runtime.Composable public static void AlertDialog(kotlin.jvm.functions.Function0<kotlin.Unit> onDismissRequest, kotlin.jvm.functions.Function0<kotlin.Unit> confirmButton, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? dismissButton, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? title, optional kotlin.jvm.functions.Function0<kotlin.Unit>? text, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color iconContentColor, optional androidx.compose.ui.graphics.Color titleContentColor, optional androidx.compose.ui.graphics.Color textContentColor, optional androidx.compose.ui.unit.Dp tonalElevation, optional androidx.compose.ui.window.DialogProperties properties);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void AlertDialog-Oix01E0(kotlin.jvm.functions.Function0<kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.ui.graphics.Shape?, long, long, long, long, float, androidx.compose.ui.window.DialogProperties?, androidx.compose.runtime.Composer?, int, int, int);
  }

  public final class AndroidMenu_androidKt {
    method @KotlinOnly @androidx.compose.runtime.Composable public static void DropdownMenu(boolean expanded, kotlin.jvm.functions.Function0<kotlin.Unit> onDismissRequest, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.unit.DpOffset offset, optional androidx.compose.foundation.ScrollState scrollState, optional androidx.compose.ui.window.PopupProperties properties, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.unit.Dp tonalElevation, optional androidx.compose.ui.unit.Dp shadowElevation, optional androidx.compose.foundation.BorderStroke? border, kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> content);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable public static void DropdownMenu-4kj-_NE(boolean, kotlin.jvm.functions.Function0!, androidx.compose.ui.Modifier!, long, androidx.compose.foundation.ScrollState!, androidx.compose.ui.window.PopupProperties!, kotlin.jvm.functions.Function3!, androidx.compose.runtime.Composer!, int, int);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable public static void DropdownMenu-ILWXrKs(boolean, kotlin.jvm.functions.Function0!, androidx.compose.ui.Modifier!, long, androidx.compose.ui.window.PopupProperties!, kotlin.jvm.functions.Function3!, androidx.compose.runtime.Composer!, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void DropdownMenu-IlH_yew(boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, long, androidx.compose.foundation.ScrollState?, androidx.compose.ui.window.PopupProperties?, androidx.compose.ui.graphics.Shape?, long, float, float, androidx.compose.foundation.BorderStroke?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @androidx.compose.runtime.Composable public static void DropdownMenuItem(kotlin.jvm.functions.Function0<kotlin.Unit> text, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? leadingIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? trailingIcon, optional boolean enabled, optional androidx.compose.material3.MenuItemColors colors, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void DropdownMenuItem(kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, boolean, androidx.compose.material3.MenuItemColors?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.runtime.Composer?, int, int);
  }

  public final class AppBarColumnKt {
    method @androidx.compose.runtime.Composable public static void AppBarColumn(kotlin.jvm.functions.Function1<? super androidx.compose.material3.AppBarMenuState,kotlin.Unit> overflowIndicator, optional androidx.compose.ui.Modifier modifier, optional int maxItemCount, kotlin.jvm.functions.Function1<? super androidx.compose.material3.AppBarColumnScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void AppBarColumn(kotlin.jvm.functions.Function3<? super androidx.compose.material3.AppBarMenuState!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, int, kotlin.jvm.functions.Function1<? super androidx.compose.material3.AppBarColumnScope!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
  }

  public interface AppBarColumnScope extends androidx.compose.material3.AppBarScope {
  }

  public final class AppBarKt {
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void BottomAppBar(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.unit.Dp tonalElevation, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.layout.WindowInsets windowInsets, optional androidx.compose.material3.BottomAppBarScrollBehavior? scrollBehavior, kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void BottomAppBar(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.unit.Dp tonalElevation, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.layout.WindowInsets windowInsets, kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void BottomAppBar(kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit> actions, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? floatingActionButton, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.unit.Dp tonalElevation, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.layout.WindowInsets windowInsets);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void BottomAppBar(kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit> actions, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? floatingActionButton, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.unit.Dp tonalElevation, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.layout.WindowInsets windowInsets, optional androidx.compose.material3.BottomAppBarScrollBehavior? scrollBehavior);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void BottomAppBar-1oL4kX8(androidx.compose.ui.Modifier?, long, long, float, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.layout.WindowInsets?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void BottomAppBar-Snr_uVM(kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, long, long, float, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.layout.WindowInsets?, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void BottomAppBar-e-3WI5M(androidx.compose.ui.Modifier?, long, long, float, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.layout.WindowInsets?, androidx.compose.material3.BottomAppBarScrollBehavior?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void BottomAppBar-qhFBPw4(kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, long, long, float, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.layout.WindowInsets?, androidx.compose.material3.BottomAppBarScrollBehavior?, androidx.compose.runtime.Composer?, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api public static androidx.compose.material3.BottomAppBarState BottomAppBarState(float initialHeightOffsetLimit, float initialHeightOffset, float initialContentOffset);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void CenterAlignedTopAppBar(kotlin.jvm.functions.Function0<kotlin.Unit> title, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit> navigationIcon, optional kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit> actions, optional androidx.compose.ui.unit.Dp expandedHeight, optional androidx.compose.foundation.layout.WindowInsets windowInsets, optional androidx.compose.material3.TopAppBarColors colors, optional androidx.compose.material3.TopAppBarScrollBehavior? scrollBehavior);
    method @BytecodeOnly @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void CenterAlignedTopAppBar(kotlin.jvm.functions.Function2!, androidx.compose.ui.Modifier!, kotlin.jvm.functions.Function2!, kotlin.jvm.functions.Function3!, androidx.compose.foundation.layout.WindowInsets!, androidx.compose.material3.TopAppBarColors!, androidx.compose.material3.TopAppBarScrollBehavior!, androidx.compose.runtime.Composer!, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void CenterAlignedTopAppBar-GHTll3U(kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, float, androidx.compose.foundation.layout.WindowInsets?, androidx.compose.material3.TopAppBarColors?, androidx.compose.material3.TopAppBarScrollBehavior?, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void FlexibleBottomAppBar(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.layout.Arrangement.Horizontal horizontalArrangement, optional androidx.compose.ui.unit.Dp expandedHeight, optional androidx.compose.foundation.layout.WindowInsets windowInsets, optional androidx.compose.material3.BottomAppBarScrollBehavior? scrollBehavior, kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void FlexibleBottomAppBar-wBhsO_E(androidx.compose.ui.Modifier?, long, long, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.layout.Arrangement.Horizontal?, float, androidx.compose.foundation.layout.WindowInsets?, androidx.compose.material3.BottomAppBarScrollBehavior?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void LargeFlexibleTopAppBar(kotlin.jvm.functions.Function0<kotlin.Unit> title, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? subtitle, optional kotlin.jvm.functions.Function0<kotlin.Unit> navigationIcon, optional kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit> actions, optional androidx.compose.ui.Alignment.Horizontal titleHorizontalAlignment, optional androidx.compose.ui.unit.Dp collapsedHeight, optional androidx.compose.ui.unit.Dp expandedHeight, optional androidx.compose.foundation.layout.WindowInsets windowInsets, optional androidx.compose.material3.TopAppBarColors colors, optional androidx.compose.material3.TopAppBarScrollBehavior? scrollBehavior);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void LargeFlexibleTopAppBar-eXZ4JBQ(kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.ui.Alignment.Horizontal?, float, float, androidx.compose.foundation.layout.WindowInsets?, androidx.compose.material3.TopAppBarColors?, androidx.compose.material3.TopAppBarScrollBehavior?, androidx.compose.runtime.Composer?, int, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void LargeTopAppBar(kotlin.jvm.functions.Function0<kotlin.Unit> title, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit> navigationIcon, optional kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit> actions, optional androidx.compose.ui.unit.Dp collapsedHeight, optional androidx.compose.ui.unit.Dp expandedHeight, optional androidx.compose.foundation.layout.WindowInsets windowInsets, optional androidx.compose.material3.TopAppBarColors colors, optional androidx.compose.material3.TopAppBarScrollBehavior? scrollBehavior);
    method @BytecodeOnly @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void LargeTopAppBar(kotlin.jvm.functions.Function2!, androidx.compose.ui.Modifier!, kotlin.jvm.functions.Function2!, kotlin.jvm.functions.Function3!, androidx.compose.foundation.layout.WindowInsets!, androidx.compose.material3.TopAppBarColors!, androidx.compose.material3.TopAppBarScrollBehavior!, androidx.compose.runtime.Composer!, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void LargeTopAppBar-oKE7A98(kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, float, float, androidx.compose.foundation.layout.WindowInsets?, androidx.compose.material3.TopAppBarColors?, androidx.compose.material3.TopAppBarScrollBehavior?, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void MediumFlexibleTopAppBar(kotlin.jvm.functions.Function0<kotlin.Unit> title, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? subtitle, optional kotlin.jvm.functions.Function0<kotlin.Unit> navigationIcon, optional kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit> actions, optional androidx.compose.ui.Alignment.Horizontal titleHorizontalAlignment, optional androidx.compose.ui.unit.Dp collapsedHeight, optional androidx.compose.ui.unit.Dp expandedHeight, optional androidx.compose.foundation.layout.WindowInsets windowInsets, optional androidx.compose.material3.TopAppBarColors colors, optional androidx.compose.material3.TopAppBarScrollBehavior? scrollBehavior);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void MediumFlexibleTopAppBar-eXZ4JBQ(kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.ui.Alignment.Horizontal?, float, float, androidx.compose.foundation.layout.WindowInsets?, androidx.compose.material3.TopAppBarColors?, androidx.compose.material3.TopAppBarScrollBehavior?, androidx.compose.runtime.Composer?, int, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void MediumTopAppBar(kotlin.jvm.functions.Function0<kotlin.Unit> title, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit> navigationIcon, optional kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit> actions, optional androidx.compose.ui.unit.Dp collapsedHeight, optional androidx.compose.ui.unit.Dp expandedHeight, optional androidx.compose.foundation.layout.WindowInsets windowInsets, optional androidx.compose.material3.TopAppBarColors colors, optional androidx.compose.material3.TopAppBarScrollBehavior? scrollBehavior);
    method @BytecodeOnly @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void MediumTopAppBar(kotlin.jvm.functions.Function2!, androidx.compose.ui.Modifier!, kotlin.jvm.functions.Function2!, kotlin.jvm.functions.Function3!, androidx.compose.foundation.layout.WindowInsets!, androidx.compose.material3.TopAppBarColors!, androidx.compose.material3.TopAppBarScrollBehavior!, androidx.compose.runtime.Composer!, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void MediumTopAppBar-oKE7A98(kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, float, float, androidx.compose.foundation.layout.WindowInsets?, androidx.compose.material3.TopAppBarColors?, androidx.compose.material3.TopAppBarScrollBehavior?, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void TopAppBar(kotlin.jvm.functions.Function0<kotlin.Unit> title, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit> navigationIcon, optional kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit> actions, optional androidx.compose.ui.unit.Dp expandedHeight, optional androidx.compose.foundation.layout.WindowInsets windowInsets, optional androidx.compose.material3.TopAppBarColors colors, optional androidx.compose.material3.TopAppBarScrollBehavior? scrollBehavior);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void TopAppBar(kotlin.jvm.functions.Function0<kotlin.Unit> title, kotlin.jvm.functions.Function0<kotlin.Unit> subtitle, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit> navigationIcon, optional kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit> actions, optional androidx.compose.ui.Alignment.Horizontal titleHorizontalAlignment, optional androidx.compose.ui.unit.Dp expandedHeight, optional androidx.compose.foundation.layout.WindowInsets windowInsets, optional androidx.compose.material3.TopAppBarColors colors, optional androidx.compose.material3.TopAppBarScrollBehavior? scrollBehavior);
    method @BytecodeOnly @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void TopAppBar(kotlin.jvm.functions.Function2!, androidx.compose.ui.Modifier!, kotlin.jvm.functions.Function2!, kotlin.jvm.functions.Function3!, androidx.compose.foundation.layout.WindowInsets!, androidx.compose.material3.TopAppBarColors!, androidx.compose.material3.TopAppBarScrollBehavior!, androidx.compose.runtime.Composer!, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void TopAppBar-GHTll3U(kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, float, androidx.compose.foundation.layout.WindowInsets?, androidx.compose.material3.TopAppBarColors?, androidx.compose.material3.TopAppBarScrollBehavior?, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void TopAppBar-cJHQLPU(kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.ui.Alignment.Horizontal?, float, androidx.compose.foundation.layout.WindowInsets?, androidx.compose.material3.TopAppBarColors?, androidx.compose.material3.TopAppBarScrollBehavior?, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void TwoRowsTopAppBar(kotlin.jvm.functions.Function1<java.lang.Boolean,kotlin.Unit> title, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function1<java.lang.Boolean,kotlin.Unit>? subtitle, optional kotlin.jvm.functions.Function0<kotlin.Unit> navigationIcon, optional kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit> actions, optional androidx.compose.ui.Alignment.Horizontal titleHorizontalAlignment, optional androidx.compose.ui.unit.Dp collapsedHeight, optional androidx.compose.ui.unit.Dp expandedHeight, optional androidx.compose.foundation.layout.WindowInsets windowInsets, optional androidx.compose.material3.TopAppBarColors colors, optional androidx.compose.material3.TopAppBarScrollBehavior? scrollBehavior);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void TwoRowsTopAppBar-eXZ4JBQ(kotlin.jvm.functions.Function3<? super java.lang.Boolean!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function3<? super java.lang.Boolean!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.ui.Alignment.Horizontal?, float, float, androidx.compose.foundation.layout.WindowInsets?, androidx.compose.material3.TopAppBarColors?, androidx.compose.material3.TopAppBarScrollBehavior?, androidx.compose.runtime.Composer?, int, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.material3.SingleRowTopAppBarOverride> getLocalSingleRowTopAppBarOverride();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.material3.TwoRowsTopAppBarOverride> getLocalTwoRowsTopAppBarOverride();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static androidx.compose.material3.BottomAppBarState rememberBottomAppBarState(optional float initialHeightOffsetLimit, optional float initialHeightOffset, optional float initialContentOffset);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static androidx.compose.material3.BottomAppBarState rememberBottomAppBarState(float, float, float, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static androidx.compose.material3.TopAppBarState rememberTopAppBarState(optional float initialHeightOffsetLimit, optional float initialHeightOffset, optional float initialContentOffset);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static androidx.compose.material3.TopAppBarState rememberTopAppBarState(float, float, float, androidx.compose.runtime.Composer?, int, int);
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.material3.SingleRowTopAppBarOverride> LocalSingleRowTopAppBarOverride;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.material3.TwoRowsTopAppBarOverride> LocalTwoRowsTopAppBarOverride;
  }

  public final class AppBarMenuState {
    ctor public AppBarMenuState();
    method public void dismiss();
    method public boolean isExpanded();
    method public void show();
    property public boolean isExpanded;
  }

  public final class AppBarRowKt {
    method @androidx.compose.runtime.Composable public static void AppBarRow(kotlin.jvm.functions.Function1<? super androidx.compose.material3.AppBarMenuState,kotlin.Unit> overflowIndicator, optional androidx.compose.ui.Modifier modifier, optional int maxItemCount, kotlin.jvm.functions.Function1<? super androidx.compose.material3.AppBarRowScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void AppBarRow(kotlin.jvm.functions.Function3<? super androidx.compose.material3.AppBarMenuState!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, int, kotlin.jvm.functions.Function1<? super androidx.compose.material3.AppBarRowScope!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
  }

  public interface AppBarRowScope extends androidx.compose.material3.AppBarScope {
  }

  public sealed interface AppBarScope {
    method public void clickableItem(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, kotlin.jvm.functions.Function0<kotlin.Unit> icon, String label, optional boolean enabled);
    method @BytecodeOnly public void clickableItem(kotlin.jvm.functions.Function0<kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, String, boolean);
    method public void customItem(kotlin.jvm.functions.Function0<kotlin.Unit> appbarContent, kotlin.jvm.functions.Function1<? super androidx.compose.material3.AppBarMenuState,kotlin.Unit> menuContent);
    method @BytecodeOnly public void customItem(kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, kotlin.jvm.functions.Function3<? super androidx.compose.material3.AppBarMenuState!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>);
    method public void toggleableItem(boolean checked, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onCheckedChange, kotlin.jvm.functions.Function0<kotlin.Unit> icon, String label, optional boolean enabled);
    method @BytecodeOnly public void toggleableItem(boolean, kotlin.jvm.functions.Function1<? super java.lang.Boolean!,kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, String, boolean);
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Immutable public final class AppBarWithSearchColors {
    ctor @KotlinOnly public AppBarWithSearchColors(androidx.compose.material3.SearchBarColors searchBarColors, androidx.compose.ui.graphics.Color appBarContainerColor, androidx.compose.ui.graphics.Color appBarNavigationIconColor, androidx.compose.ui.graphics.Color appBarActionIconColor);
    ctor @BytecodeOnly public AppBarWithSearchColors(androidx.compose.material3.SearchBarColors!, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @BytecodeOnly public long getAppBarActionIconColor-0d7_KjU();
    method @BytecodeOnly public long getAppBarContainerColor-0d7_KjU();
    method @BytecodeOnly public long getAppBarNavigationIconColor-0d7_KjU();
    method public androidx.compose.material3.SearchBarColors getSearchBarColors();
    property public androidx.compose.ui.graphics.Color appBarActionIconColor;
    property public androidx.compose.ui.graphics.Color appBarContainerColor;
    property public androidx.compose.ui.graphics.Color appBarNavigationIconColor;
    property public androidx.compose.material3.SearchBarColors searchBarColors;
  }

  public final class AssistChipDefaults {
    method @KotlinOnly @Deprecated @androidx.compose.runtime.Composable public androidx.compose.material3.ChipBorder assistChipBorder(optional androidx.compose.ui.graphics.Color borderColor, optional androidx.compose.ui.graphics.Color disabledBorderColor, optional androidx.compose.ui.unit.Dp borderWidth);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.BorderStroke assistChipBorder(boolean enabled, optional androidx.compose.ui.graphics.Color borderColor, optional androidx.compose.ui.graphics.Color disabledBorderColor, optional androidx.compose.ui.unit.Dp borderWidth);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable public androidx.compose.material3.ChipBorder assistChipBorder-d_3_b6Q(long, long, float, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.BorderStroke assistChipBorder-h1eT-Ww(boolean, long, long, float, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.compose.material3.ChipColors assistChipColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ChipColors assistChipColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ChipColors assistChipColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color labelColor, optional androidx.compose.ui.graphics.Color leadingIconContentColor, optional androidx.compose.ui.graphics.Color trailingIconContentColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledLabelColor, optional androidx.compose.ui.graphics.Color disabledLeadingIconContentColor, optional androidx.compose.ui.graphics.Color disabledTrailingIconContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ChipColors assistChipColors-oq7We08(long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ChipElevation assistChipElevation(optional androidx.compose.ui.unit.Dp elevation, optional androidx.compose.ui.unit.Dp pressedElevation, optional androidx.compose.ui.unit.Dp focusedElevation, optional androidx.compose.ui.unit.Dp hoveredElevation, optional androidx.compose.ui.unit.Dp draggedElevation, optional androidx.compose.ui.unit.Dp disabledElevation);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ChipElevation assistChipElevation-aqJV_2Y(float, float, float, float, float, float, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.compose.material3.ChipColors elevatedAssistChipColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ChipColors elevatedAssistChipColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ChipColors elevatedAssistChipColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color labelColor, optional androidx.compose.ui.graphics.Color leadingIconContentColor, optional androidx.compose.ui.graphics.Color trailingIconContentColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledLabelColor, optional androidx.compose.ui.graphics.Color disabledLeadingIconContentColor, optional androidx.compose.ui.graphics.Color disabledTrailingIconContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ChipColors elevatedAssistChipColors-oq7We08(long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ChipElevation elevatedAssistChipElevation(optional androidx.compose.ui.unit.Dp elevation, optional androidx.compose.ui.unit.Dp pressedElevation, optional androidx.compose.ui.unit.Dp focusedElevation, optional androidx.compose.ui.unit.Dp hoveredElevation, optional androidx.compose.ui.unit.Dp draggedElevation, optional androidx.compose.ui.unit.Dp disabledElevation);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ChipElevation elevatedAssistChipElevation-aqJV_2Y(float, float, float, float, float, float, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly public float getHeight-D9Ej5fM();
    method @BytecodeOnly public float getIconSize-D9Ej5fM();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getShape(androidx.compose.runtime.Composer?, int);
    property public androidx.compose.ui.unit.Dp Height;
    property public androidx.compose.ui.unit.Dp IconSize;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape shape;
    field public static final androidx.compose.material3.AssistChipDefaults INSTANCE;
  }

  public final class BadgeDefaults {
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getContainerColor(androidx.compose.runtime.Composer?, int);
    property public androidx.compose.ui.graphics.Color containerColor;
    field public static final androidx.compose.material3.BadgeDefaults INSTANCE;
  }

  public final class BadgeKt {
    method @KotlinOnly @androidx.compose.runtime.Composable public static void Badge(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit>? content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void Badge-eopBjH0(androidx.compose.ui.Modifier?, long, long, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void BadgedBox(kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> badge, optional androidx.compose.ui.Modifier modifier, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void BadgedBox(kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public interface BasicAlertDialogOverride {
    method @androidx.compose.runtime.Composable public void BasicAlertDialog(androidx.compose.material3.BasicAlertDialogOverrideScope);
    method @BytecodeOnly @androidx.compose.runtime.Composable public void BasicAlertDialog(androidx.compose.material3.BasicAlertDialogOverrideScope, androidx.compose.runtime.Composer?, int);
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public final class BasicAlertDialogOverrideScope {
    method public kotlin.jvm.functions.Function0<kotlin.Unit> getContent();
    method public androidx.compose.ui.Modifier getModifier();
    method public kotlin.jvm.functions.Function0<kotlin.Unit> getOnDismissRequest();
    method public androidx.compose.ui.window.DialogProperties getProperties();
    property public kotlin.jvm.functions.Function0<kotlin.Unit> content;
    property public androidx.compose.ui.Modifier modifier;
    property public kotlin.jvm.functions.Function0<kotlin.Unit> onDismissRequest;
    property public androidx.compose.ui.window.DialogProperties properties;
  }

  public final class BottomAppBarDefaults {
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public androidx.compose.material3.BottomAppBarScrollBehavior exitAlwaysScrollBehavior(optional androidx.compose.material3.BottomAppBarState state, optional kotlin.jvm.functions.Function0<java.lang.Boolean> canScroll, optional androidx.compose.animation.core.AnimationSpec<java.lang.Float>? snapAnimationSpec, optional androidx.compose.animation.core.DecayAnimationSpec<java.lang.Float>? flingAnimationSpec);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public androidx.compose.material3.BottomAppBarScrollBehavior exitAlwaysScrollBehavior(androidx.compose.material3.BottomAppBarState?, kotlin.jvm.functions.Function0<java.lang.Boolean!>?, androidx.compose.animation.core.AnimationSpec<java.lang.Float!>?, androidx.compose.animation.core.DecayAnimationSpec<java.lang.Float!>?, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getBottomAppBarFabColor(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getContainerColor(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getContainerElevation-D9Ej5fM();
    method public androidx.compose.foundation.layout.PaddingValues getContentPadding();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public float getFlexibleBottomAppBarHeight-D9Ej5fM();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.layout.PaddingValues getFlexibleContentPadding();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.layout.Arrangement.Horizontal getFlexibleFixedHorizontalArrangement();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.layout.Arrangement.Horizontal getFlexibleHorizontalArrangement();
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.WindowInsets getWindowInsets();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.WindowInsets getWindowInsets(androidx.compose.runtime.Composer?, int);
    property public androidx.compose.ui.unit.Dp ContainerElevation;
    property public androidx.compose.foundation.layout.PaddingValues ContentPadding;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.unit.Dp FlexibleBottomAppBarHeight;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.layout.PaddingValues FlexibleContentPadding;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.layout.Arrangement.Horizontal FlexibleFixedHorizontalArrangement;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.layout.Arrangement.Horizontal FlexibleHorizontalArrangement;
    property public androidx.compose.ui.graphics.Color bottomAppBarFabColor;
    property public androidx.compose.ui.graphics.Color containerColor;
    property @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.WindowInsets windowInsets;
    field public static final androidx.compose.material3.BottomAppBarDefaults INSTANCE;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Stable public interface BottomAppBarScrollBehavior {
    method public androidx.compose.animation.core.DecayAnimationSpec<java.lang.Float>? getFlingAnimationSpec();
    method public androidx.compose.ui.input.nestedscroll.NestedScrollConnection getNestedScrollConnection();
    method public androidx.compose.animation.core.AnimationSpec<java.lang.Float>? getSnapAnimationSpec();
    method public androidx.compose.material3.BottomAppBarState getState();
    method public boolean isPinned();
    property public abstract androidx.compose.animation.core.DecayAnimationSpec<java.lang.Float>? flingAnimationSpec;
    property public abstract boolean isPinned;
    property public abstract androidx.compose.ui.input.nestedscroll.NestedScrollConnection nestedScrollConnection;
    property public abstract androidx.compose.animation.core.AnimationSpec<java.lang.Float>? snapAnimationSpec;
    property public abstract androidx.compose.material3.BottomAppBarState state;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api public interface BottomAppBarState {
    method public float getCollapsedFraction();
    method public float getContentOffset();
    method public float getHeightOffset();
    method public float getHeightOffsetLimit();
    method public void setContentOffset(float);
    method public void setHeightOffset(float);
    method public void setHeightOffsetLimit(float);
    property public abstract float collapsedFraction;
    property public abstract float contentOffset;
    property public abstract float heightOffset;
    property public abstract float heightOffsetLimit;
    field public static final androidx.compose.material3.BottomAppBarState.Companion Companion;
  }

  public static final class BottomAppBarState.Companion {
    method public androidx.compose.runtime.saveable.Saver<androidx.compose.material3.BottomAppBarState,? extends java.lang.Object?> getSaver();
    property public androidx.compose.runtime.saveable.Saver<androidx.compose.material3.BottomAppBarState,? extends java.lang.Object?> Saver;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Stable public final class BottomSheetDefaults {
    method @KotlinOnly @androidx.compose.runtime.Composable public void DragHandle(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.unit.Dp width, optional androidx.compose.ui.unit.Dp height, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Color color);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void DragHandle-lgZ2HuY(androidx.compose.ui.Modifier?, float, float, androidx.compose.ui.graphics.Shape?, long, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getContainerColor(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getElevation-D9Ej5fM();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getExpandedShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getExpandedShape(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getHiddenShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getHiddenShape(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getScrimColor(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getSheetMaxWidth-D9Ej5fM();
    method @BytecodeOnly public float getSheetPeekHeight-D9Ej5fM();
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.WindowInsets getWindowInsets();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.WindowInsets getWindowInsets(androidx.compose.runtime.Composer?, int);
    property public androidx.compose.ui.graphics.Color ContainerColor;
    property public androidx.compose.ui.unit.Dp Elevation;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape ExpandedShape;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape HiddenShape;
    property public androidx.compose.ui.graphics.Color ScrimColor;
    property public androidx.compose.ui.unit.Dp SheetMaxWidth;
    property public androidx.compose.ui.unit.Dp SheetPeekHeight;
    property @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.WindowInsets windowInsets;
    field public static final androidx.compose.material3.BottomSheetDefaults INSTANCE;
  }

  public final class BottomSheetScaffoldKt {
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void BottomSheetScaffold(kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> sheetContent, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.material3.BottomSheetScaffoldState scaffoldState, optional androidx.compose.ui.unit.Dp sheetPeekHeight, optional androidx.compose.ui.unit.Dp sheetMaxWidth, optional androidx.compose.ui.graphics.Shape sheetShape, optional androidx.compose.ui.graphics.Color sheetContainerColor, optional androidx.compose.ui.graphics.Color sheetContentColor, optional androidx.compose.ui.unit.Dp sheetTonalElevation, optional androidx.compose.ui.unit.Dp sheetShadowElevation, optional kotlin.jvm.functions.Function0<kotlin.Unit>? sheetDragHandle, optional boolean sheetSwipeEnabled, optional kotlin.jvm.functions.Function0<kotlin.Unit>? topBar, optional kotlin.jvm.functions.Function1<androidx.compose.material3.SnackbarHostState,kotlin.Unit> snackbarHost, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.PaddingValues,kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void BottomSheetScaffold-sdMYb0k(kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, androidx.compose.material3.BottomSheetScaffoldState?, float, float, androidx.compose.ui.graphics.Shape?, long, long, float, float, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, boolean, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.material3.SnackbarHostState!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, long, long, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.PaddingValues!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static androidx.compose.material3.BottomSheetScaffoldState rememberBottomSheetScaffoldState(optional androidx.compose.material3.SheetState bottomSheetState, optional androidx.compose.material3.SnackbarHostState snackbarHostState);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static androidx.compose.material3.BottomSheetScaffoldState rememberBottomSheetScaffoldState(androidx.compose.material3.SheetState?, androidx.compose.material3.SnackbarHostState?, androidx.compose.runtime.Composer?, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static androidx.compose.material3.SheetState rememberStandardBottomSheetState(optional androidx.compose.material3.SheetValue initialValue, optional kotlin.jvm.functions.Function1<? super androidx.compose.material3.SheetValue,java.lang.Boolean> confirmValueChange, optional boolean skipHiddenState);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static androidx.compose.material3.SheetState rememberStandardBottomSheetState(androidx.compose.material3.SheetValue?, kotlin.jvm.functions.Function1<? super androidx.compose.material3.SheetValue!,java.lang.Boolean!>?, boolean, androidx.compose.runtime.Composer?, int, int);
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Stable public final class BottomSheetScaffoldState {
    ctor public BottomSheetScaffoldState(androidx.compose.material3.SheetState bottomSheetState, androidx.compose.material3.SnackbarHostState snackbarHostState);
    method public androidx.compose.material3.SheetState getBottomSheetState();
    method public androidx.compose.material3.SnackbarHostState getSnackbarHostState();
    property public androidx.compose.material3.SheetState bottomSheetState;
    property public androidx.compose.material3.SnackbarHostState snackbarHostState;
  }

  @androidx.compose.runtime.Immutable public final class ButtonColors {
    ctor @KotlinOnly public ButtonColors(androidx.compose.ui.graphics.Color containerColor, androidx.compose.ui.graphics.Color contentColor, androidx.compose.ui.graphics.Color disabledContainerColor, androidx.compose.ui.graphics.Color disabledContentColor);
    ctor @BytecodeOnly public ButtonColors(long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly public androidx.compose.material3.ButtonColors copy(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledContentColor);
    method @BytecodeOnly public androidx.compose.material3.ButtonColors copy-jRlVdoo(long, long, long, long);
    method @BytecodeOnly public long getContainerColor-0d7_KjU();
    method @BytecodeOnly public long getContentColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledContainerColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledContentColor-0d7_KjU();
    property public androidx.compose.ui.graphics.Color containerColor;
    property public androidx.compose.ui.graphics.Color contentColor;
    property public androidx.compose.ui.graphics.Color disabledContainerColor;
    property public androidx.compose.ui.graphics.Color disabledContentColor;
  }

  public final class ButtonDefaults {
    method @androidx.compose.runtime.Composable public androidx.compose.material3.ButtonColors buttonColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ButtonColors buttonColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ButtonColors buttonColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ButtonColors buttonColors-ro_MJ88(long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ButtonElevation buttonElevation(optional androidx.compose.ui.unit.Dp defaultElevation, optional androidx.compose.ui.unit.Dp pressedElevation, optional androidx.compose.ui.unit.Dp focusedElevation, optional androidx.compose.ui.unit.Dp hoveredElevation, optional androidx.compose.ui.unit.Dp disabledElevation);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ButtonElevation buttonElevation-R_JCAzs(float, float, float, float, float, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.layout.PaddingValues contentPaddingFor(androidx.compose.ui.unit.Dp buttonHeight);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.layout.PaddingValues contentPaddingFor-0680j_4(float);
    method @androidx.compose.runtime.Composable public androidx.compose.material3.ButtonColors elevatedButtonColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ButtonColors elevatedButtonColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ButtonColors elevatedButtonColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ButtonColors elevatedButtonColors-ro_MJ88(long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ButtonElevation elevatedButtonElevation(optional androidx.compose.ui.unit.Dp defaultElevation, optional androidx.compose.ui.unit.Dp pressedElevation, optional androidx.compose.ui.unit.Dp focusedElevation, optional androidx.compose.ui.unit.Dp hoveredElevation, optional androidx.compose.ui.unit.Dp disabledElevation);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ButtonElevation elevatedButtonElevation-R_JCAzs(float, float, float, float, float, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.compose.material3.ButtonColors filledTonalButtonColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ButtonColors filledTonalButtonColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ButtonColors filledTonalButtonColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ButtonColors filledTonalButtonColors-ro_MJ88(long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ButtonElevation filledTonalButtonElevation(optional androidx.compose.ui.unit.Dp defaultElevation, optional androidx.compose.ui.unit.Dp pressedElevation, optional androidx.compose.ui.unit.Dp focusedElevation, optional androidx.compose.ui.unit.Dp hoveredElevation, optional androidx.compose.ui.unit.Dp disabledElevation);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ButtonElevation filledTonalButtonElevation-R_JCAzs(float, float, float, float, float, androidx.compose.runtime.Composer?, int, int);
    method public androidx.compose.foundation.layout.PaddingValues getButtonWithIconContentPadding();
    method public androidx.compose.foundation.layout.PaddingValues getContentPadding();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getElevatedShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getElevatedShape(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public float getExtraLargeContainerHeight-D9Ej5fM();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.layout.PaddingValues getExtraLargeContentPadding();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public float getExtraLargeIconSize-D9Ej5fM();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public float getExtraLargeIconSpacing-D9Ej5fM();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getExtraLargePressedShape();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getExtraLargePressedShape(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public float getExtraSmallContainerHeight-D9Ej5fM();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.layout.PaddingValues getExtraSmallContentPadding();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public float getExtraSmallIconSize-D9Ej5fM();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public float getExtraSmallIconSpacing-D9Ej5fM();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getExtraSmallPressedShape();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getExtraSmallPressedShape(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getFilledTonalShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getFilledTonalShape(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getIconSize-D9Ej5fM();
    method @BytecodeOnly public float getIconSpacing-D9Ej5fM();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public float getLargeContainerHeight-D9Ej5fM();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.layout.PaddingValues getLargeContentPadding();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public float getLargeIconSize-D9Ej5fM();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public float getLargeIconSpacing-D9Ej5fM();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getLargePressedShape();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getLargePressedShape(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public float getMediumContainerHeight-D9Ej5fM();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.layout.PaddingValues getMediumContentPadding();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public float getMediumIconSize-D9Ej5fM();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public float getMediumIconSpacing-D9Ej5fM();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getMediumPressedShape();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getMediumPressedShape(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getMinHeight-D9Ej5fM();
    method @BytecodeOnly public float getMinWidth-D9Ej5fM();
    method @Deprecated @androidx.compose.runtime.Composable public androidx.compose.foundation.BorderStroke getOutlinedButtonBorder();
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable public androidx.compose.foundation.BorderStroke getOutlinedButtonBorder(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getOutlinedShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getOutlinedShape(androidx.compose.runtime.Composer?, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getPressedShape();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getPressedShape(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getShape(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.layout.PaddingValues! getSmallButtonContentPadding();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.layout.PaddingValues getSmallContentPadding();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public float getSmallIconSize-D9Ej5fM();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getSquareShape();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getSquareShape(androidx.compose.runtime.Composer?, int);
    method public androidx.compose.foundation.layout.PaddingValues getTextButtonContentPadding();
    method public androidx.compose.foundation.layout.PaddingValues getTextButtonWithIconContentPadding();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getTextShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getTextShape(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.unit.Dp iconSizeFor(androidx.compose.ui.unit.Dp buttonHeight);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public float iconSizeFor-5rwHm24(float);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.unit.Dp iconSpacingFor(androidx.compose.ui.unit.Dp buttonHeight);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public float iconSpacingFor-5rwHm24(float);
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.BorderStroke outlinedButtonBorder(optional boolean enabled);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.BorderStroke outlinedButtonBorder(boolean, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.compose.material3.ButtonColors outlinedButtonColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ButtonColors outlinedButtonColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ButtonColors outlinedButtonColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ButtonColors outlinedButtonColors-ro_MJ88(long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.material3.ButtonShapes shapes();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.material3.ButtonShapes shapes(androidx.compose.runtime.Composer?, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.material3.ButtonShapes shapes(optional androidx.compose.ui.graphics.Shape? shape, optional androidx.compose.ui.graphics.Shape? pressedShape);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.material3.ButtonShapes shapes(androidx.compose.ui.graphics.Shape?, androidx.compose.ui.graphics.Shape?, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.material3.ButtonShapes shapesFor(androidx.compose.ui.unit.Dp buttonHeight);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.material3.ButtonShapes shapesFor-8Feqmps(float, androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.material3.ButtonColors textButtonColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ButtonColors textButtonColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ButtonColors textButtonColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ButtonColors textButtonColors-ro_MJ88(long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.text.TextStyle textStyleFor(androidx.compose.ui.unit.Dp buttonHeight);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.text.TextStyle textStyleFor-8Feqmps(float, androidx.compose.runtime.Composer?, int);
    property public androidx.compose.foundation.layout.PaddingValues ButtonWithIconContentPadding;
    property public androidx.compose.foundation.layout.PaddingValues ContentPadding;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.unit.Dp ExtraLargeContainerHeight;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.layout.PaddingValues ExtraLargeContentPadding;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.unit.Dp ExtraLargeIconSize;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.unit.Dp ExtraLargeIconSpacing;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.unit.Dp ExtraSmallContainerHeight;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.layout.PaddingValues ExtraSmallContentPadding;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.unit.Dp ExtraSmallIconSize;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.unit.Dp ExtraSmallIconSpacing;
    property public androidx.compose.ui.unit.Dp IconSize;
    property public androidx.compose.ui.unit.Dp IconSpacing;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.unit.Dp LargeContainerHeight;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.layout.PaddingValues LargeContentPadding;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.unit.Dp LargeIconSize;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.unit.Dp LargeIconSpacing;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.unit.Dp MediumContainerHeight;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.layout.PaddingValues MediumContentPadding;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.unit.Dp MediumIconSize;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.unit.Dp MediumIconSpacing;
    property public androidx.compose.ui.unit.Dp MinHeight;
    property public androidx.compose.ui.unit.Dp MinWidth;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.layout.PaddingValues SmallContentPadding;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.unit.Dp SmallIconSize;
    property public androidx.compose.foundation.layout.PaddingValues TextButtonContentPadding;
    property public androidx.compose.foundation.layout.PaddingValues TextButtonWithIconContentPadding;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape elevatedShape;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape extraLargePressedShape;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape extraSmallPressedShape;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape filledTonalShape;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape largePressedShape;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape mediumPressedShape;
    property @Deprecated @androidx.compose.runtime.Composable public androidx.compose.foundation.BorderStroke outlinedButtonBorder;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape outlinedShape;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape pressedShape;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape shape;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape squareShape;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape textShape;
    field public static final androidx.compose.material3.ButtonDefaults INSTANCE;
  }

  @androidx.compose.runtime.Stable public final class ButtonElevation {
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public final class ButtonGroupDefaults {
    method @androidx.compose.runtime.Composable public androidx.compose.material3.ToggleButtonShapes connectedLeadingButtonShapes(optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Shape pressedShape, optional androidx.compose.ui.graphics.Shape checkedShape);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ToggleButtonShapes connectedLeadingButtonShapes(androidx.compose.ui.graphics.Shape?, androidx.compose.ui.graphics.Shape?, androidx.compose.ui.graphics.Shape?, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.compose.material3.ToggleButtonShapes connectedMiddleButtonShapes(optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Shape pressedShape, optional androidx.compose.ui.graphics.Shape checkedShape);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ToggleButtonShapes connectedMiddleButtonShapes(androidx.compose.ui.graphics.Shape?, androidx.compose.ui.graphics.Shape?, androidx.compose.ui.graphics.Shape?, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.compose.material3.ToggleButtonShapes connectedTrailingButtonShapes(optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Shape pressedShape, optional androidx.compose.ui.graphics.Shape checkedShape);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ToggleButtonShapes connectedTrailingButtonShapes(androidx.compose.ui.graphics.Shape?, androidx.compose.ui.graphics.Shape?, androidx.compose.ui.graphics.Shape?, androidx.compose.runtime.Composer?, int, int);
    method public androidx.compose.foundation.shape.RoundedCornerShape getConnectedButtonCheckedShape();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getConnectedLeadingButtonPressShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getConnectedLeadingButtonPressShape(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getConnectedLeadingButtonShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getConnectedLeadingButtonShape(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getConnectedMiddleButtonPressShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getConnectedMiddleButtonPressShape(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getConnectedSpaceBetween-D9Ej5fM();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getConnectedTrailingButtonPressShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getConnectedTrailingButtonPressShape(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getConnectedTrailingButtonShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getConnectedTrailingButtonShape(androidx.compose.runtime.Composer?, int);
    method public float getExpandedRatio();
    method public androidx.compose.foundation.layout.Arrangement.Horizontal getHorizontalArrangement();
    property public androidx.compose.ui.unit.Dp ConnectedSpaceBetween;
    property public float ExpandedRatio;
    property public androidx.compose.foundation.layout.Arrangement.Horizontal HorizontalArrangement;
    property public androidx.compose.foundation.shape.RoundedCornerShape connectedButtonCheckedShape;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape connectedLeadingButtonPressShape;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape connectedLeadingButtonShape;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape connectedMiddleButtonPressShape;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape connectedTrailingButtonPressShape;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape connectedTrailingButtonShape;
    field public static final androidx.compose.material3.ButtonGroupDefaults INSTANCE;
  }

  public final class ButtonGroupKt {
    method @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void ButtonGroup(optional androidx.compose.ui.Modifier modifier, optional @FloatRange(from=0.0) float expandedRatio, optional androidx.compose.foundation.layout.Arrangement.Horizontal horizontalArrangement, kotlin.jvm.functions.Function1<? super androidx.compose.material3.ButtonGroupScope,kotlin.Unit> content);
    method @BytecodeOnly @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void ButtonGroup(androidx.compose.ui.Modifier?, @FloatRange(from=0.0) float, androidx.compose.foundation.layout.Arrangement.Horizontal?, kotlin.jvm.functions.Function3<? super androidx.compose.material3.ButtonGroupScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void ButtonGroup(kotlin.jvm.functions.Function1<? super androidx.compose.material3.ButtonGroupMenuState,kotlin.Unit> overflowIndicator, optional androidx.compose.ui.Modifier modifier, optional @FloatRange(from=0.0) float expandedRatio, optional androidx.compose.foundation.layout.Arrangement.Horizontal horizontalArrangement, kotlin.jvm.functions.Function1<? super androidx.compose.material3.ButtonGroupScope,kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void ButtonGroup(kotlin.jvm.functions.Function3<? super androidx.compose.material3.ButtonGroupMenuState!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, @FloatRange(from=0.0) float, androidx.compose.foundation.layout.Arrangement.Horizontal?, kotlin.jvm.functions.Function1<? super androidx.compose.material3.ButtonGroupScope!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
  }

  public final class ButtonGroupMenuState {
    ctor public ButtonGroupMenuState();
    ctor public ButtonGroupMenuState(optional boolean initialIsExpanded);
    method public void dismiss();
    method public boolean isExpanded();
    method public void show();
    property public boolean isExpanded;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public interface ButtonGroupScope {
    method public androidx.compose.ui.Modifier animateWidth(androidx.compose.ui.Modifier, androidx.compose.foundation.interaction.InteractionSource interactionSource);
    method public void clickableItem(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, String label, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional float weight, optional boolean enabled);
    method @BytecodeOnly public void clickableItem(kotlin.jvm.functions.Function0<kotlin.Unit!>, String, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, float, boolean);
    method public void customItem(kotlin.jvm.functions.Function0<kotlin.Unit> buttonGroupContent, kotlin.jvm.functions.Function1<? super androidx.compose.material3.ButtonGroupMenuState,kotlin.Unit> menuContent);
    method @BytecodeOnly public void customItem(kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, kotlin.jvm.functions.Function3<? super androidx.compose.material3.ButtonGroupMenuState!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>);
    method public void toggleableItem(boolean checked, String label, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onCheckedChange, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional float weight, optional boolean enabled);
    method @BytecodeOnly public void toggleableItem(boolean, String, kotlin.jvm.functions.Function1<? super java.lang.Boolean!,kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, float, boolean);
    method public androidx.compose.ui.Modifier weight(androidx.compose.ui.Modifier, @FloatRange(from=0.0, fromInclusive=false) float weight);
    method @BytecodeOnly @Deprecated public androidx.compose.ui.Modifier! weight(androidx.compose.ui.Modifier!, @FloatRange(from=0.0, fromInclusive=false) float, boolean);
  }

  public final class ButtonKt {
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void Button(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, androidx.compose.material3.ButtonShapes shapes, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.material3.ButtonColors colors, optional androidx.compose.material3.ButtonElevation? elevation, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void Button(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.material3.ButtonShapes, androidx.compose.ui.Modifier?, boolean, androidx.compose.material3.ButtonColors?, androidx.compose.material3.ButtonElevation?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void Button(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.ButtonColors colors, optional androidx.compose.material3.ButtonElevation? elevation, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void Button(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.ButtonColors?, androidx.compose.material3.ButtonElevation?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void ElevatedButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, androidx.compose.material3.ButtonShapes shapes, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.material3.ButtonColors colors, optional androidx.compose.material3.ButtonElevation? elevation, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void ElevatedButton(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.material3.ButtonShapes, androidx.compose.ui.Modifier?, boolean, androidx.compose.material3.ButtonColors?, androidx.compose.material3.ButtonElevation?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void ElevatedButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.ButtonColors colors, optional androidx.compose.material3.ButtonElevation? elevation, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void ElevatedButton(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.ButtonColors?, androidx.compose.material3.ButtonElevation?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void FilledTonalButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, androidx.compose.material3.ButtonShapes shapes, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.material3.ButtonColors colors, optional androidx.compose.material3.ButtonElevation? elevation, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void FilledTonalButton(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.material3.ButtonShapes, androidx.compose.ui.Modifier?, boolean, androidx.compose.material3.ButtonColors?, androidx.compose.material3.ButtonElevation?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void FilledTonalButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.ButtonColors colors, optional androidx.compose.material3.ButtonElevation? elevation, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void FilledTonalButton(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.ButtonColors?, androidx.compose.material3.ButtonElevation?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void OutlinedButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, androidx.compose.material3.ButtonShapes shapes, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.material3.ButtonColors colors, optional androidx.compose.material3.ButtonElevation? elevation, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void OutlinedButton(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.material3.ButtonShapes, androidx.compose.ui.Modifier?, boolean, androidx.compose.material3.ButtonColors?, androidx.compose.material3.ButtonElevation?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void OutlinedButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.ButtonColors colors, optional androidx.compose.material3.ButtonElevation? elevation, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void OutlinedButton(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.ButtonColors?, androidx.compose.material3.ButtonElevation?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void TextButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, androidx.compose.material3.ButtonShapes shapes, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.material3.ButtonColors colors, optional androidx.compose.material3.ButtonElevation? elevation, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void TextButton(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.material3.ButtonShapes, androidx.compose.ui.Modifier?, boolean, androidx.compose.material3.ButtonColors?, androidx.compose.material3.ButtonElevation?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void TextButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.ButtonColors colors, optional androidx.compose.material3.ButtonElevation? elevation, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void TextButton(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.ButtonColors?, androidx.compose.material3.ButtonElevation?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Immutable public final class ButtonShapes {
    ctor public ButtonShapes(androidx.compose.ui.graphics.Shape shape, androidx.compose.ui.graphics.Shape pressedShape);
    method public androidx.compose.material3.ButtonShapes copy(optional androidx.compose.ui.graphics.Shape? shape, optional androidx.compose.ui.graphics.Shape? pressedShape);
    method public androidx.compose.ui.graphics.Shape getPressedShape();
    method public androidx.compose.ui.graphics.Shape getShape();
    property public androidx.compose.ui.graphics.Shape pressedShape;
    property public androidx.compose.ui.graphics.Shape shape;
  }

  @androidx.compose.runtime.Immutable public final class CardColors {
    ctor @KotlinOnly public CardColors(androidx.compose.ui.graphics.Color containerColor, androidx.compose.ui.graphics.Color contentColor, androidx.compose.ui.graphics.Color disabledContainerColor, androidx.compose.ui.graphics.Color disabledContentColor);
    ctor @BytecodeOnly public CardColors(long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly public androidx.compose.material3.CardColors copy(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledContentColor);
    method @BytecodeOnly public androidx.compose.material3.CardColors copy-jRlVdoo(long, long, long, long);
    method @BytecodeOnly public long getContainerColor-0d7_KjU();
    method @BytecodeOnly public long getContentColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledContainerColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledContentColor-0d7_KjU();
    property public androidx.compose.ui.graphics.Color containerColor;
    property public androidx.compose.ui.graphics.Color contentColor;
    property public androidx.compose.ui.graphics.Color disabledContainerColor;
    property public androidx.compose.ui.graphics.Color disabledContentColor;
  }

  public final class CardDefaults {
    method @androidx.compose.runtime.Composable public androidx.compose.material3.CardColors cardColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.CardColors cardColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.CardColors cardColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.CardColors cardColors-ro_MJ88(long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.CardElevation cardElevation(optional androidx.compose.ui.unit.Dp defaultElevation, optional androidx.compose.ui.unit.Dp pressedElevation, optional androidx.compose.ui.unit.Dp focusedElevation, optional androidx.compose.ui.unit.Dp hoveredElevation, optional androidx.compose.ui.unit.Dp draggedElevation, optional androidx.compose.ui.unit.Dp disabledElevation);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.CardElevation cardElevation-aqJV_2Y(float, float, float, float, float, float, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.compose.material3.CardColors elevatedCardColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.CardColors elevatedCardColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.CardColors elevatedCardColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.CardColors elevatedCardColors-ro_MJ88(long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.CardElevation elevatedCardElevation(optional androidx.compose.ui.unit.Dp defaultElevation, optional androidx.compose.ui.unit.Dp pressedElevation, optional androidx.compose.ui.unit.Dp focusedElevation, optional androidx.compose.ui.unit.Dp hoveredElevation, optional androidx.compose.ui.unit.Dp draggedElevation, optional androidx.compose.ui.unit.Dp disabledElevation);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.CardElevation elevatedCardElevation-aqJV_2Y(float, float, float, float, float, float, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getElevatedShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getElevatedShape(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getOutlinedShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getOutlinedShape(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getShape(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.BorderStroke outlinedCardBorder(optional boolean enabled);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.BorderStroke outlinedCardBorder(boolean, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.compose.material3.CardColors outlinedCardColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.CardColors outlinedCardColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.CardColors outlinedCardColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.CardColors outlinedCardColors-ro_MJ88(long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.CardElevation outlinedCardElevation(optional androidx.compose.ui.unit.Dp defaultElevation, optional androidx.compose.ui.unit.Dp pressedElevation, optional androidx.compose.ui.unit.Dp focusedElevation, optional androidx.compose.ui.unit.Dp hoveredElevation, optional androidx.compose.ui.unit.Dp draggedElevation, optional androidx.compose.ui.unit.Dp disabledElevation);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.CardElevation outlinedCardElevation-aqJV_2Y(float, float, float, float, float, float, androidx.compose.runtime.Composer?, int, int);
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape elevatedShape;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape outlinedShape;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape shape;
    field public static final androidx.compose.material3.CardDefaults INSTANCE;
  }

  @androidx.compose.runtime.Immutable public final class CardElevation {
  }

  public final class CardKt {
    method @androidx.compose.runtime.Composable public static void Card(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.CardColors colors, optional androidx.compose.material3.CardElevation elevation, optional androidx.compose.foundation.BorderStroke? border, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void Card(androidx.compose.ui.Modifier?, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.CardColors?, androidx.compose.material3.CardElevation?, androidx.compose.foundation.BorderStroke?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void Card(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.CardColors colors, optional androidx.compose.material3.CardElevation elevation, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void Card(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.CardColors?, androidx.compose.material3.CardElevation?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void ElevatedCard(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.CardColors colors, optional androidx.compose.material3.CardElevation elevation, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void ElevatedCard(androidx.compose.ui.Modifier?, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.CardColors?, androidx.compose.material3.CardElevation?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void ElevatedCard(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.CardColors colors, optional androidx.compose.material3.CardElevation elevation, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void ElevatedCard(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.CardColors?, androidx.compose.material3.CardElevation?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void OutlinedCard(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.CardColors colors, optional androidx.compose.material3.CardElevation elevation, optional androidx.compose.foundation.BorderStroke border, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void OutlinedCard(androidx.compose.ui.Modifier?, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.CardColors?, androidx.compose.material3.CardElevation?, androidx.compose.foundation.BorderStroke?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void OutlinedCard(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.CardColors colors, optional androidx.compose.material3.CardElevation elevation, optional androidx.compose.foundation.BorderStroke border, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void OutlinedCard(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.CardColors?, androidx.compose.material3.CardElevation?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
  }

  @androidx.compose.runtime.Immutable public final class CheckboxColors {
    ctor @KotlinOnly @Deprecated public CheckboxColors(androidx.compose.ui.graphics.Color checkedCheckmarkColor, androidx.compose.ui.graphics.Color uncheckedCheckmarkColor, androidx.compose.ui.graphics.Color checkedBoxColor, androidx.compose.ui.graphics.Color uncheckedBoxColor, androidx.compose.ui.graphics.Color disabledCheckedBoxColor, androidx.compose.ui.graphics.Color disabledUncheckedBoxColor, androidx.compose.ui.graphics.Color disabledIndeterminateBoxColor, androidx.compose.ui.graphics.Color checkedBorderColor, androidx.compose.ui.graphics.Color uncheckedBorderColor, androidx.compose.ui.graphics.Color disabledBorderColor, androidx.compose.ui.graphics.Color disabledUncheckedBorderColor, androidx.compose.ui.graphics.Color disabledIndeterminateBorderColor);
    ctor @KotlinOnly public CheckboxColors(androidx.compose.ui.graphics.Color checkedCheckmarkColor, androidx.compose.ui.graphics.Color uncheckedCheckmarkColor, androidx.compose.ui.graphics.Color disabledCheckmarkColor, androidx.compose.ui.graphics.Color checkedBoxColor, androidx.compose.ui.graphics.Color uncheckedBoxColor, androidx.compose.ui.graphics.Color disabledCheckedBoxColor, androidx.compose.ui.graphics.Color disabledUncheckedBoxColor, androidx.compose.ui.graphics.Color disabledIndeterminateBoxColor, androidx.compose.ui.graphics.Color checkedBorderColor, androidx.compose.ui.graphics.Color uncheckedBorderColor, androidx.compose.ui.graphics.Color disabledBorderColor, androidx.compose.ui.graphics.Color disabledUncheckedBorderColor, androidx.compose.ui.graphics.Color disabledIndeterminateBorderColor);
    ctor @BytecodeOnly @Deprecated public CheckboxColors(long, long, long, long, long, long, long, long, long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    ctor @BytecodeOnly public CheckboxColors(long, long, long, long, long, long, long, long, long, long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly public androidx.compose.material3.CheckboxColors copy(optional androidx.compose.ui.graphics.Color checkedCheckmarkColor, optional androidx.compose.ui.graphics.Color uncheckedCheckmarkColor, optional androidx.compose.ui.graphics.Color disabledCheckmarkColor, optional androidx.compose.ui.graphics.Color checkedBoxColor, optional androidx.compose.ui.graphics.Color uncheckedBoxColor, optional androidx.compose.ui.graphics.Color disabledCheckedBoxColor, optional androidx.compose.ui.graphics.Color disabledUncheckedBoxColor, optional androidx.compose.ui.graphics.Color disabledIndeterminateBoxColor, optional androidx.compose.ui.graphics.Color checkedBorderColor, optional androidx.compose.ui.graphics.Color uncheckedBorderColor, optional androidx.compose.ui.graphics.Color disabledBorderColor, optional androidx.compose.ui.graphics.Color disabledUncheckedBorderColor, optional androidx.compose.ui.graphics.Color disabledIndeterminateBorderColor);
    method @BytecodeOnly @Deprecated public androidx.compose.material3.CheckboxColors! copy-2qZNXz8(long, long, long, long, long, long, long, long, long, long, long, long);
    method @BytecodeOnly public androidx.compose.material3.CheckboxColors copy-daRQuJA(long, long, long, long, long, long, long, long, long, long, long, long, long);
    method @BytecodeOnly public long getCheckedBorderColor-0d7_KjU();
    method @BytecodeOnly public long getCheckedBoxColor-0d7_KjU();
    method @BytecodeOnly public long getCheckedCheckmarkColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledBorderColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledCheckedBoxColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledCheckmarkColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledIndeterminateBorderColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledIndeterminateBoxColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledUncheckedBorderColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledUncheckedBoxColor-0d7_KjU();
    method @BytecodeOnly public long getUncheckedBorderColor-0d7_KjU();
    method @BytecodeOnly public long getUncheckedBoxColor-0d7_KjU();
    method @BytecodeOnly public long getUncheckedCheckmarkColor-0d7_KjU();
    property public androidx.compose.ui.graphics.Color checkedBorderColor;
    property public androidx.compose.ui.graphics.Color checkedBoxColor;
    property public androidx.compose.ui.graphics.Color checkedCheckmarkColor;
    property public androidx.compose.ui.graphics.Color disabledBorderColor;
    property public androidx.compose.ui.graphics.Color disabledCheckedBoxColor;
    property public androidx.compose.ui.graphics.Color disabledCheckmarkColor;
    property public androidx.compose.ui.graphics.Color disabledIndeterminateBorderColor;
    property public androidx.compose.ui.graphics.Color disabledIndeterminateBoxColor;
    property public androidx.compose.ui.graphics.Color disabledUncheckedBorderColor;
    property public androidx.compose.ui.graphics.Color disabledUncheckedBoxColor;
    property public androidx.compose.ui.graphics.Color uncheckedBorderColor;
    property public androidx.compose.ui.graphics.Color uncheckedBoxColor;
    property public androidx.compose.ui.graphics.Color uncheckedCheckmarkColor;
  }

  public final class CheckboxDefaults {
    method @androidx.compose.runtime.Composable public androidx.compose.material3.CheckboxColors colors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.CheckboxColors colors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.CheckboxColors colors(optional androidx.compose.ui.graphics.Color checkedColor, optional androidx.compose.ui.graphics.Color uncheckedColor, optional androidx.compose.ui.graphics.Color checkmarkColor, optional androidx.compose.ui.graphics.Color disabledCheckedColor, optional androidx.compose.ui.graphics.Color disabledUncheckedColor, optional androidx.compose.ui.graphics.Color disabledIndeterminateColor);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.CheckboxColors colors(optional androidx.compose.ui.graphics.Color checkedCheckmarkColor, optional androidx.compose.ui.graphics.Color uncheckedCheckmarkColor, optional androidx.compose.ui.graphics.Color disabledCheckmarkColor, optional androidx.compose.ui.graphics.Color checkedBoxColor, optional androidx.compose.ui.graphics.Color uncheckedBoxColor, optional androidx.compose.ui.graphics.Color disabledCheckedBoxColor, optional androidx.compose.ui.graphics.Color disabledUncheckedBoxColor, optional androidx.compose.ui.graphics.Color disabledIndeterminateBoxColor, optional androidx.compose.ui.graphics.Color checkedBorderColor, optional androidx.compose.ui.graphics.Color uncheckedBorderColor, optional androidx.compose.ui.graphics.Color disabledBorderColor, optional androidx.compose.ui.graphics.Color disabledUncheckedBorderColor, optional androidx.compose.ui.graphics.Color disabledIndeterminateBorderColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.CheckboxColors colors-5tl4gsc(long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.CheckboxColors colors-kwJvTHA(long, long, long, long, long, long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int, int);
    method @BytecodeOnly public float getStrokeWidth-D9Ej5fM();
    property public androidx.compose.ui.unit.Dp StrokeWidth;
    field public static final androidx.compose.material3.CheckboxDefaults INSTANCE;
  }

  public final class CheckboxKt {
    method @androidx.compose.runtime.Composable public static void Checkbox(boolean checked, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit>? onCheckedChange, androidx.compose.ui.graphics.drawscope.Stroke checkmarkStroke, androidx.compose.ui.graphics.drawscope.Stroke outlineStroke, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.material3.CheckboxColors colors, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void Checkbox(boolean, kotlin.jvm.functions.Function1<? super java.lang.Boolean!,kotlin.Unit!>?, androidx.compose.ui.graphics.drawscope.Stroke, androidx.compose.ui.graphics.drawscope.Stroke, androidx.compose.ui.Modifier?, boolean, androidx.compose.material3.CheckboxColors?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void Checkbox(boolean checked, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit>? onCheckedChange, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.material3.CheckboxColors colors, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void Checkbox(boolean, kotlin.jvm.functions.Function1<? super java.lang.Boolean!,kotlin.Unit!>?, androidx.compose.ui.Modifier?, boolean, androidx.compose.material3.CheckboxColors?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void TriStateCheckbox(androidx.compose.ui.state.ToggleableState state, kotlin.jvm.functions.Function0<kotlin.Unit>? onClick, androidx.compose.ui.graphics.drawscope.Stroke checkmarkStroke, androidx.compose.ui.graphics.drawscope.Stroke outlineStroke, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.material3.CheckboxColors colors, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void TriStateCheckbox(androidx.compose.ui.state.ToggleableState, kotlin.jvm.functions.Function0<kotlin.Unit!>?, androidx.compose.ui.graphics.drawscope.Stroke, androidx.compose.ui.graphics.drawscope.Stroke, androidx.compose.ui.Modifier?, boolean, androidx.compose.material3.CheckboxColors?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void TriStateCheckbox(androidx.compose.ui.state.ToggleableState state, kotlin.jvm.functions.Function0<kotlin.Unit>? onClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.material3.CheckboxColors colors, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void TriStateCheckbox(androidx.compose.ui.state.ToggleableState, kotlin.jvm.functions.Function0<kotlin.Unit!>?, androidx.compose.ui.Modifier?, boolean, androidx.compose.material3.CheckboxColors?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.runtime.Composer?, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api public static boolean isCheckboxStylingFixEnabled();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api public static void setCheckboxStylingFixEnabled(boolean);
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api public static boolean isCheckboxStylingFixEnabled;
  }

  @Deprecated @androidx.compose.runtime.Immutable public final class ChipBorder {
  }

  @androidx.compose.runtime.Immutable public final class ChipColors {
    ctor @KotlinOnly public ChipColors(androidx.compose.ui.graphics.Color containerColor, androidx.compose.ui.graphics.Color labelColor, androidx.compose.ui.graphics.Color leadingIconContentColor, androidx.compose.ui.graphics.Color trailingIconContentColor, androidx.compose.ui.graphics.Color disabledContainerColor, androidx.compose.ui.graphics.Color disabledLabelColor, androidx.compose.ui.graphics.Color disabledLeadingIconContentColor, androidx.compose.ui.graphics.Color disabledTrailingIconContentColor);
    ctor @BytecodeOnly public ChipColors(long, long, long, long, long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly public androidx.compose.material3.ChipColors copy(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color labelColor, optional androidx.compose.ui.graphics.Color leadingIconContentColor, optional androidx.compose.ui.graphics.Color trailingIconContentColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledLabelColor, optional androidx.compose.ui.graphics.Color disabledLeadingIconContentColor, optional androidx.compose.ui.graphics.Color disabledTrailingIconContentColor);
    method @BytecodeOnly public androidx.compose.material3.ChipColors copy-FD3wquc(long, long, long, long, long, long, long, long);
    method @BytecodeOnly public long getContainerColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledContainerColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledLabelColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledLeadingIconContentColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledTrailingIconContentColor-0d7_KjU();
    method @BytecodeOnly public long getLabelColor-0d7_KjU();
    method @BytecodeOnly public long getLeadingIconContentColor-0d7_KjU();
    method @BytecodeOnly public long getTrailingIconContentColor-0d7_KjU();
    property public androidx.compose.ui.graphics.Color containerColor;
    property public androidx.compose.ui.graphics.Color disabledContainerColor;
    property public androidx.compose.ui.graphics.Color disabledLabelColor;
    property public androidx.compose.ui.graphics.Color disabledLeadingIconContentColor;
    property public androidx.compose.ui.graphics.Color disabledTrailingIconContentColor;
    property public androidx.compose.ui.graphics.Color labelColor;
    property public androidx.compose.ui.graphics.Color leadingIconContentColor;
    property public androidx.compose.ui.graphics.Color trailingIconContentColor;
  }

  @androidx.compose.runtime.Immutable public final class ChipElevation {
    ctor @KotlinOnly public ChipElevation(androidx.compose.ui.unit.Dp elevation, androidx.compose.ui.unit.Dp pressedElevation, androidx.compose.ui.unit.Dp focusedElevation, androidx.compose.ui.unit.Dp hoveredElevation, androidx.compose.ui.unit.Dp draggedElevation, androidx.compose.ui.unit.Dp disabledElevation);
    ctor @BytecodeOnly public ChipElevation(float, float, float, float, float, float, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @BytecodeOnly public float getDisabledElevation-D9Ej5fM();
    method @BytecodeOnly public float getDraggedElevation-D9Ej5fM();
    method @BytecodeOnly public float getElevation-D9Ej5fM();
    method @BytecodeOnly public float getFocusedElevation-D9Ej5fM();
    method @BytecodeOnly public float getHoveredElevation-D9Ej5fM();
    method @BytecodeOnly public float getPressedElevation-D9Ej5fM();
    property public androidx.compose.ui.unit.Dp disabledElevation;
    property public androidx.compose.ui.unit.Dp draggedElevation;
    property public androidx.compose.ui.unit.Dp elevation;
    property public androidx.compose.ui.unit.Dp focusedElevation;
    property public androidx.compose.ui.unit.Dp hoveredElevation;
    property public androidx.compose.ui.unit.Dp pressedElevation;
  }

  public final class ChipKt {
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable public static void AssistChip(kotlin.jvm.functions.Function0!, kotlin.jvm.functions.Function2!, androidx.compose.ui.Modifier!, boolean, kotlin.jvm.functions.Function2!, kotlin.jvm.functions.Function2!, androidx.compose.ui.graphics.Shape!, androidx.compose.material3.ChipColors!, androidx.compose.material3.ChipElevation!, androidx.compose.material3.ChipBorder!, androidx.compose.foundation.interaction.MutableInteractionSource!, androidx.compose.runtime.Composer!, int, int, int);
    method @androidx.compose.runtime.Composable public static void AssistChip(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, kotlin.jvm.functions.Function0<kotlin.Unit> label, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional kotlin.jvm.functions.Function0<kotlin.Unit>? leadingIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? trailingIcon, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.ChipColors colors, optional androidx.compose.material3.ChipElevation? elevation, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void AssistChip(kotlin.jvm.functions.Function0<kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.ChipColors?, androidx.compose.material3.ChipElevation?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.runtime.Composer?, int, int, int);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable public static void ElevatedAssistChip(kotlin.jvm.functions.Function0!, kotlin.jvm.functions.Function2!, androidx.compose.ui.Modifier!, boolean, kotlin.jvm.functions.Function2!, kotlin.jvm.functions.Function2!, androidx.compose.ui.graphics.Shape!, androidx.compose.material3.ChipColors!, androidx.compose.material3.ChipElevation!, androidx.compose.material3.ChipBorder!, androidx.compose.foundation.interaction.MutableInteractionSource!, androidx.compose.runtime.Composer!, int, int, int);
    method @androidx.compose.runtime.Composable public static void ElevatedAssistChip(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, kotlin.jvm.functions.Function0<kotlin.Unit> label, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional kotlin.jvm.functions.Function0<kotlin.Unit>? leadingIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? trailingIcon, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.ChipColors colors, optional androidx.compose.material3.ChipElevation? elevation, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void ElevatedAssistChip(kotlin.jvm.functions.Function0<kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.ChipColors?, androidx.compose.material3.ChipElevation?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.runtime.Composer?, int, int, int);
    method @androidx.compose.runtime.Composable public static void ElevatedFilterChip(boolean selected, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, kotlin.jvm.functions.Function0<kotlin.Unit> label, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional kotlin.jvm.functions.Function0<kotlin.Unit>? leadingIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? trailingIcon, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.SelectableChipColors colors, optional androidx.compose.material3.SelectableChipElevation? elevation, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void ElevatedFilterChip(boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.SelectableChipColors?, androidx.compose.material3.SelectableChipElevation?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.runtime.Composer?, int, int, int);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable public static void ElevatedSuggestionChip(kotlin.jvm.functions.Function0!, kotlin.jvm.functions.Function2!, androidx.compose.ui.Modifier!, boolean, kotlin.jvm.functions.Function2!, androidx.compose.ui.graphics.Shape!, androidx.compose.material3.ChipColors!, androidx.compose.material3.ChipElevation!, androidx.compose.material3.ChipBorder!, androidx.compose.foundation.interaction.MutableInteractionSource!, androidx.compose.runtime.Composer!, int, int);
    method @androidx.compose.runtime.Composable public static void ElevatedSuggestionChip(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, kotlin.jvm.functions.Function0<kotlin.Unit> label, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.ChipColors colors, optional androidx.compose.material3.ChipElevation? elevation, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void ElevatedSuggestionChip(kotlin.jvm.functions.Function0<kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.ChipColors?, androidx.compose.material3.ChipElevation?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void FilterChip(boolean selected, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, kotlin.jvm.functions.Function0<kotlin.Unit> label, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional kotlin.jvm.functions.Function0<kotlin.Unit>? leadingIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? trailingIcon, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.SelectableChipColors colors, optional androidx.compose.material3.SelectableChipElevation? elevation, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void FilterChip(boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.SelectableChipColors?, androidx.compose.material3.SelectableChipElevation?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.runtime.Composer?, int, int, int);
    method @androidx.compose.runtime.Composable public static void InputChip(boolean selected, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, kotlin.jvm.functions.Function0<kotlin.Unit> label, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional kotlin.jvm.functions.Function0<kotlin.Unit>? leadingIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? avatar, optional kotlin.jvm.functions.Function0<kotlin.Unit>? trailingIcon, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.SelectableChipColors colors, optional androidx.compose.material3.SelectableChipElevation? elevation, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void InputChip(boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.SelectableChipColors?, androidx.compose.material3.SelectableChipElevation?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.runtime.Composer?, int, int, int);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable public static void SuggestionChip(kotlin.jvm.functions.Function0!, kotlin.jvm.functions.Function2!, androidx.compose.ui.Modifier!, boolean, kotlin.jvm.functions.Function2!, androidx.compose.ui.graphics.Shape!, androidx.compose.material3.ChipColors!, androidx.compose.material3.ChipElevation!, androidx.compose.material3.ChipBorder!, androidx.compose.foundation.interaction.MutableInteractionSource!, androidx.compose.runtime.Composer!, int, int);
    method @androidx.compose.runtime.Composable public static void SuggestionChip(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, kotlin.jvm.functions.Function0<kotlin.Unit> label, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.ChipColors colors, optional androidx.compose.material3.ChipElevation? elevation, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void SuggestionChip(kotlin.jvm.functions.Function0<kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.ChipColors?, androidx.compose.material3.ChipElevation?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.runtime.Composer?, int, int);
  }

  @androidx.compose.runtime.Immutable public final class ColorScheme {
    ctor @KotlinOnly @Deprecated public ColorScheme(androidx.compose.ui.graphics.Color primary, androidx.compose.ui.graphics.Color onPrimary, androidx.compose.ui.graphics.Color primaryContainer, androidx.compose.ui.graphics.Color onPrimaryContainer, androidx.compose.ui.graphics.Color inversePrimary, androidx.compose.ui.graphics.Color secondary, androidx.compose.ui.graphics.Color onSecondary, androidx.compose.ui.graphics.Color secondaryContainer, androidx.compose.ui.graphics.Color onSecondaryContainer, androidx.compose.ui.graphics.Color tertiary, androidx.compose.ui.graphics.Color onTertiary, androidx.compose.ui.graphics.Color tertiaryContainer, androidx.compose.ui.graphics.Color onTertiaryContainer, androidx.compose.ui.graphics.Color background, androidx.compose.ui.graphics.Color onBackground, androidx.compose.ui.graphics.Color surface, androidx.compose.ui.graphics.Color onSurface, androidx.compose.ui.graphics.Color surfaceVariant, androidx.compose.ui.graphics.Color onSurfaceVariant, androidx.compose.ui.graphics.Color surfaceTint, androidx.compose.ui.graphics.Color inverseSurface, androidx.compose.ui.graphics.Color inverseOnSurface, androidx.compose.ui.graphics.Color error, androidx.compose.ui.graphics.Color onError, androidx.compose.ui.graphics.Color errorContainer, androidx.compose.ui.graphics.Color onErrorContainer, androidx.compose.ui.graphics.Color outline, androidx.compose.ui.graphics.Color outlineVariant, androidx.compose.ui.graphics.Color scrim);
    ctor @KotlinOnly @Deprecated public ColorScheme(androidx.compose.ui.graphics.Color primary, androidx.compose.ui.graphics.Color onPrimary, androidx.compose.ui.graphics.Color primaryContainer, androidx.compose.ui.graphics.Color onPrimaryContainer, androidx.compose.ui.graphics.Color inversePrimary, androidx.compose.ui.graphics.Color secondary, androidx.compose.ui.graphics.Color onSecondary, androidx.compose.ui.graphics.Color secondaryContainer, androidx.compose.ui.graphics.Color onSecondaryContainer, androidx.compose.ui.graphics.Color tertiary, androidx.compose.ui.graphics.Color onTertiary, androidx.compose.ui.graphics.Color tertiaryContainer, androidx.compose.ui.graphics.Color onTertiaryContainer, androidx.compose.ui.graphics.Color background, androidx.compose.ui.graphics.Color onBackground, androidx.compose.ui.graphics.Color surface, androidx.compose.ui.graphics.Color onSurface, androidx.compose.ui.graphics.Color surfaceVariant, androidx.compose.ui.graphics.Color onSurfaceVariant, androidx.compose.ui.graphics.Color surfaceTint, androidx.compose.ui.graphics.Color inverseSurface, androidx.compose.ui.graphics.Color inverseOnSurface, androidx.compose.ui.graphics.Color error, androidx.compose.ui.graphics.Color onError, androidx.compose.ui.graphics.Color errorContainer, androidx.compose.ui.graphics.Color onErrorContainer, androidx.compose.ui.graphics.Color outline, androidx.compose.ui.graphics.Color outlineVariant, androidx.compose.ui.graphics.Color scrim, androidx.compose.ui.graphics.Color surfaceBright, androidx.compose.ui.graphics.Color surfaceDim, androidx.compose.ui.graphics.Color surfaceContainer, androidx.compose.ui.graphics.Color surfaceContainerHigh, androidx.compose.ui.graphics.Color surfaceContainerHighest, androidx.compose.ui.graphics.Color surfaceContainerLow, androidx.compose.ui.graphics.Color surfaceContainerLowest);
    ctor @KotlinOnly public ColorScheme(androidx.compose.ui.graphics.Color primary, androidx.compose.ui.graphics.Color onPrimary, androidx.compose.ui.graphics.Color primaryContainer, androidx.compose.ui.graphics.Color onPrimaryContainer, androidx.compose.ui.graphics.Color inversePrimary, androidx.compose.ui.graphics.Color secondary, androidx.compose.ui.graphics.Color onSecondary, androidx.compose.ui.graphics.Color secondaryContainer, androidx.compose.ui.graphics.Color onSecondaryContainer, androidx.compose.ui.graphics.Color tertiary, androidx.compose.ui.graphics.Color onTertiary, androidx.compose.ui.graphics.Color tertiaryContainer, androidx.compose.ui.graphics.Color onTertiaryContainer, androidx.compose.ui.graphics.Color background, androidx.compose.ui.graphics.Color onBackground, androidx.compose.ui.graphics.Color surface, androidx.compose.ui.graphics.Color onSurface, androidx.compose.ui.graphics.Color surfaceVariant, androidx.compose.ui.graphics.Color onSurfaceVariant, androidx.compose.ui.graphics.Color surfaceTint, androidx.compose.ui.graphics.Color inverseSurface, androidx.compose.ui.graphics.Color inverseOnSurface, androidx.compose.ui.graphics.Color error, androidx.compose.ui.graphics.Color onError, androidx.compose.ui.graphics.Color errorContainer, androidx.compose.ui.graphics.Color onErrorContainer, androidx.compose.ui.graphics.Color outline, androidx.compose.ui.graphics.Color outlineVariant, androidx.compose.ui.graphics.Color scrim, androidx.compose.ui.graphics.Color surfaceBright, androidx.compose.ui.graphics.Color surfaceDim, androidx.compose.ui.graphics.Color surfaceContainer, androidx.compose.ui.graphics.Color surfaceContainerHigh, androidx.compose.ui.graphics.Color surfaceContainerHighest, androidx.compose.ui.graphics.Color surfaceContainerLow, androidx.compose.ui.graphics.Color surfaceContainerLowest, androidx.compose.ui.graphics.Color primaryFixed, androidx.compose.ui.graphics.Color primaryFixedDim, androidx.compose.ui.graphics.Color onPrimaryFixed, androidx.compose.ui.graphics.Color onPrimaryFixedVariant, androidx.compose.ui.graphics.Color secondaryFixed, androidx.compose.ui.graphics.Color secondaryFixedDim, androidx.compose.ui.graphics.Color onSecondaryFixed, androidx.compose.ui.graphics.Color onSecondaryFixedVariant, androidx.compose.ui.graphics.Color tertiaryFixed, androidx.compose.ui.graphics.Color tertiaryFixedDim, androidx.compose.ui.graphics.Color onTertiaryFixed, androidx.compose.ui.graphics.Color onTertiaryFixedVariant);
    ctor @BytecodeOnly @Deprecated public ColorScheme(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    ctor @BytecodeOnly @Deprecated public ColorScheme(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    ctor @BytecodeOnly public ColorScheme(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly public androidx.compose.material3.ColorScheme copy(optional androidx.compose.ui.graphics.Color primary, optional androidx.compose.ui.graphics.Color onPrimary, optional androidx.compose.ui.graphics.Color primaryContainer, optional androidx.compose.ui.graphics.Color onPrimaryContainer, optional androidx.compose.ui.graphics.Color inversePrimary, optional androidx.compose.ui.graphics.Color secondary, optional androidx.compose.ui.graphics.Color onSecondary, optional androidx.compose.ui.graphics.Color secondaryContainer, optional androidx.compose.ui.graphics.Color onSecondaryContainer, optional androidx.compose.ui.graphics.Color tertiary, optional androidx.compose.ui.graphics.Color onTertiary, optional androidx.compose.ui.graphics.Color tertiaryContainer, optional androidx.compose.ui.graphics.Color onTertiaryContainer, optional androidx.compose.ui.graphics.Color background, optional androidx.compose.ui.graphics.Color onBackground, optional androidx.compose.ui.graphics.Color surface, optional androidx.compose.ui.graphics.Color onSurface, optional androidx.compose.ui.graphics.Color surfaceVariant, optional androidx.compose.ui.graphics.Color onSurfaceVariant, optional androidx.compose.ui.graphics.Color surfaceTint, optional androidx.compose.ui.graphics.Color inverseSurface, optional androidx.compose.ui.graphics.Color inverseOnSurface, optional androidx.compose.ui.graphics.Color error, optional androidx.compose.ui.graphics.Color onError, optional androidx.compose.ui.graphics.Color errorContainer, optional androidx.compose.ui.graphics.Color onErrorContainer, optional androidx.compose.ui.graphics.Color outline, optional androidx.compose.ui.graphics.Color outlineVariant, optional androidx.compose.ui.graphics.Color scrim, optional androidx.compose.ui.graphics.Color surfaceBright, optional androidx.compose.ui.graphics.Color surfaceDim, optional androidx.compose.ui.graphics.Color surfaceContainer, optional androidx.compose.ui.graphics.Color surfaceContainerHigh, optional androidx.compose.ui.graphics.Color surfaceContainerHighest, optional androidx.compose.ui.graphics.Color surfaceContainerLow, optional androidx.compose.ui.graphics.Color surfaceContainerLowest, optional androidx.compose.ui.graphics.Color primaryFixed, optional androidx.compose.ui.graphics.Color primaryFixedDim, optional androidx.compose.ui.graphics.Color onPrimaryFixed, optional androidx.compose.ui.graphics.Color onPrimaryFixedVariant, optional androidx.compose.ui.graphics.Color secondaryFixed, optional androidx.compose.ui.graphics.Color secondaryFixedDim, optional androidx.compose.ui.graphics.Color onSecondaryFixed, optional androidx.compose.ui.graphics.Color onSecondaryFixedVariant, optional androidx.compose.ui.graphics.Color tertiaryFixed, optional androidx.compose.ui.graphics.Color tertiaryFixedDim, optional androidx.compose.ui.graphics.Color onTertiaryFixed, optional androidx.compose.ui.graphics.Color onTertiaryFixedVariant);
    method @BytecodeOnly @Deprecated public androidx.compose.material3.ColorScheme! copy-C-Xl9yA(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long);
    method @BytecodeOnly @Deprecated public androidx.compose.material3.ColorScheme! copy-G1PFc-w(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long);
    method @BytecodeOnly public androidx.compose.material3.ColorScheme copy-_VG5OTI(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long);
    method @BytecodeOnly public long getBackground-0d7_KjU();
    method @BytecodeOnly public long getError-0d7_KjU();
    method @BytecodeOnly public long getErrorContainer-0d7_KjU();
    method @BytecodeOnly public long getInverseOnSurface-0d7_KjU();
    method @BytecodeOnly public long getInversePrimary-0d7_KjU();
    method @BytecodeOnly public long getInverseSurface-0d7_KjU();
    method @BytecodeOnly public long getOnBackground-0d7_KjU();
    method @BytecodeOnly public long getOnError-0d7_KjU();
    method @BytecodeOnly public long getOnErrorContainer-0d7_KjU();
    method @BytecodeOnly public long getOnPrimary-0d7_KjU();
    method @BytecodeOnly public long getOnPrimaryContainer-0d7_KjU();
    method @BytecodeOnly public long getOnPrimaryFixed-0d7_KjU();
    method @BytecodeOnly public long getOnPrimaryFixedVariant-0d7_KjU();
    method @BytecodeOnly public long getOnSecondary-0d7_KjU();
    method @BytecodeOnly public long getOnSecondaryContainer-0d7_KjU();
    method @BytecodeOnly public long getOnSecondaryFixed-0d7_KjU();
    method @BytecodeOnly public long getOnSecondaryFixedVariant-0d7_KjU();
    method @BytecodeOnly public long getOnSurface-0d7_KjU();
    method @BytecodeOnly public long getOnSurfaceVariant-0d7_KjU();
    method @BytecodeOnly public long getOnTertiary-0d7_KjU();
    method @BytecodeOnly public long getOnTertiaryContainer-0d7_KjU();
    method @BytecodeOnly public long getOnTertiaryFixed-0d7_KjU();
    method @BytecodeOnly public long getOnTertiaryFixedVariant-0d7_KjU();
    method @BytecodeOnly public long getOutline-0d7_KjU();
    method @BytecodeOnly public long getOutlineVariant-0d7_KjU();
    method @BytecodeOnly public long getPrimary-0d7_KjU();
    method @BytecodeOnly public long getPrimaryContainer-0d7_KjU();
    method @BytecodeOnly public long getPrimaryFixed-0d7_KjU();
    method @BytecodeOnly public long getPrimaryFixedDim-0d7_KjU();
    method @BytecodeOnly public long getScrim-0d7_KjU();
    method @BytecodeOnly public long getSecondary-0d7_KjU();
    method @BytecodeOnly public long getSecondaryContainer-0d7_KjU();
    method @BytecodeOnly public long getSecondaryFixed-0d7_KjU();
    method @BytecodeOnly public long getSecondaryFixedDim-0d7_KjU();
    method @BytecodeOnly public long getSurface-0d7_KjU();
    method @BytecodeOnly public long getSurfaceBright-0d7_KjU();
    method @BytecodeOnly public long getSurfaceContainer-0d7_KjU();
    method @BytecodeOnly public long getSurfaceContainerHigh-0d7_KjU();
    method @BytecodeOnly public long getSurfaceContainerHighest-0d7_KjU();
    method @BytecodeOnly public long getSurfaceContainerLow-0d7_KjU();
    method @BytecodeOnly public long getSurfaceContainerLowest-0d7_KjU();
    method @BytecodeOnly public long getSurfaceDim-0d7_KjU();
    method @BytecodeOnly public long getSurfaceTint-0d7_KjU();
    method @BytecodeOnly public long getSurfaceVariant-0d7_KjU();
    method @BytecodeOnly public long getTertiary-0d7_KjU();
    method @BytecodeOnly public long getTertiaryContainer-0d7_KjU();
    method @BytecodeOnly public long getTertiaryFixed-0d7_KjU();
    method @BytecodeOnly public long getTertiaryFixedDim-0d7_KjU();
    property public androidx.compose.ui.graphics.Color background;
    property public androidx.compose.ui.graphics.Color error;
    property public androidx.compose.ui.graphics.Color errorContainer;
    property public androidx.compose.ui.graphics.Color inverseOnSurface;
    property public androidx.compose.ui.graphics.Color inversePrimary;
    property public androidx.compose.ui.graphics.Color inverseSurface;
    property public androidx.compose.ui.graphics.Color onBackground;
    property public androidx.compose.ui.graphics.Color onError;
    property public androidx.compose.ui.graphics.Color onErrorContainer;
    property public androidx.compose.ui.graphics.Color onPrimary;
    property public androidx.compose.ui.graphics.Color onPrimaryContainer;
    property public androidx.compose.ui.graphics.Color onPrimaryFixed;
    property public androidx.compose.ui.graphics.Color onPrimaryFixedVariant;
    property public androidx.compose.ui.graphics.Color onSecondary;
    property public androidx.compose.ui.graphics.Color onSecondaryContainer;
    property public androidx.compose.ui.graphics.Color onSecondaryFixed;
    property public androidx.compose.ui.graphics.Color onSecondaryFixedVariant;
    property public androidx.compose.ui.graphics.Color onSurface;
    property public androidx.compose.ui.graphics.Color onSurfaceVariant;
    property public androidx.compose.ui.graphics.Color onTertiary;
    property public androidx.compose.ui.graphics.Color onTertiaryContainer;
    property public androidx.compose.ui.graphics.Color onTertiaryFixed;
    property public androidx.compose.ui.graphics.Color onTertiaryFixedVariant;
    property public androidx.compose.ui.graphics.Color outline;
    property public androidx.compose.ui.graphics.Color outlineVariant;
    property public androidx.compose.ui.graphics.Color primary;
    property public androidx.compose.ui.graphics.Color primaryContainer;
    property public androidx.compose.ui.graphics.Color primaryFixed;
    property public androidx.compose.ui.graphics.Color primaryFixedDim;
    property public androidx.compose.ui.graphics.Color scrim;
    property public androidx.compose.ui.graphics.Color secondary;
    property public androidx.compose.ui.graphics.Color secondaryContainer;
    property public androidx.compose.ui.graphics.Color secondaryFixed;
    property public androidx.compose.ui.graphics.Color secondaryFixedDim;
    property public androidx.compose.ui.graphics.Color surface;
    property public androidx.compose.ui.graphics.Color surfaceBright;
    property public androidx.compose.ui.graphics.Color surfaceContainer;
    property public androidx.compose.ui.graphics.Color surfaceContainerHigh;
    property public androidx.compose.ui.graphics.Color surfaceContainerHighest;
    property public androidx.compose.ui.graphics.Color surfaceContainerLow;
    property public androidx.compose.ui.graphics.Color surfaceContainerLowest;
    property public androidx.compose.ui.graphics.Color surfaceDim;
    property public androidx.compose.ui.graphics.Color surfaceTint;
    property public androidx.compose.ui.graphics.Color surfaceVariant;
    property public androidx.compose.ui.graphics.Color tertiary;
    property public androidx.compose.ui.graphics.Color tertiaryContainer;
    property public androidx.compose.ui.graphics.Color tertiaryFixed;
    property public androidx.compose.ui.graphics.Color tertiaryFixedDim;
  }

  public final class ColorSchemeKt {
    method @KotlinOnly @androidx.compose.runtime.Stable public static androidx.compose.ui.graphics.Color contentColorFor(androidx.compose.material3.ColorScheme, androidx.compose.ui.graphics.Color backgroundColor);
    method @KotlinOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static androidx.compose.ui.graphics.Color contentColorFor(androidx.compose.ui.graphics.Color backgroundColor);
    method @BytecodeOnly @androidx.compose.runtime.Stable public static long contentColorFor-4WTKRHQ(androidx.compose.material3.ColorScheme, long);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static long contentColorFor-ek8zF_U(long, androidx.compose.runtime.Composer?, int);
    method @KotlinOnly public static androidx.compose.material3.ColorScheme darkColorScheme(optional androidx.compose.ui.graphics.Color primary, optional androidx.compose.ui.graphics.Color onPrimary, optional androidx.compose.ui.graphics.Color primaryContainer, optional androidx.compose.ui.graphics.Color onPrimaryContainer, optional androidx.compose.ui.graphics.Color inversePrimary, optional androidx.compose.ui.graphics.Color secondary, optional androidx.compose.ui.graphics.Color onSecondary, optional androidx.compose.ui.graphics.Color secondaryContainer, optional androidx.compose.ui.graphics.Color onSecondaryContainer, optional androidx.compose.ui.graphics.Color tertiary, optional androidx.compose.ui.graphics.Color onTertiary, optional androidx.compose.ui.graphics.Color tertiaryContainer, optional androidx.compose.ui.graphics.Color onTertiaryContainer, optional androidx.compose.ui.graphics.Color background, optional androidx.compose.ui.graphics.Color onBackground, optional androidx.compose.ui.graphics.Color surface, optional androidx.compose.ui.graphics.Color onSurface, optional androidx.compose.ui.graphics.Color surfaceVariant, optional androidx.compose.ui.graphics.Color onSurfaceVariant, optional androidx.compose.ui.graphics.Color surfaceTint, optional androidx.compose.ui.graphics.Color inverseSurface, optional androidx.compose.ui.graphics.Color inverseOnSurface, optional androidx.compose.ui.graphics.Color error, optional androidx.compose.ui.graphics.Color onError, optional androidx.compose.ui.graphics.Color errorContainer, optional androidx.compose.ui.graphics.Color onErrorContainer, optional androidx.compose.ui.graphics.Color outline, optional androidx.compose.ui.graphics.Color outlineVariant, optional androidx.compose.ui.graphics.Color scrim, optional androidx.compose.ui.graphics.Color surfaceBright, optional androidx.compose.ui.graphics.Color surfaceContainer, optional androidx.compose.ui.graphics.Color surfaceContainerHigh, optional androidx.compose.ui.graphics.Color surfaceContainerHighest, optional androidx.compose.ui.graphics.Color surfaceContainerLow, optional androidx.compose.ui.graphics.Color surfaceContainerLowest, optional androidx.compose.ui.graphics.Color surfaceDim, optional androidx.compose.ui.graphics.Color primaryFixed, optional androidx.compose.ui.graphics.Color primaryFixedDim, optional androidx.compose.ui.graphics.Color onPrimaryFixed, optional androidx.compose.ui.graphics.Color onPrimaryFixedVariant, optional androidx.compose.ui.graphics.Color secondaryFixed, optional androidx.compose.ui.graphics.Color secondaryFixedDim, optional androidx.compose.ui.graphics.Color onSecondaryFixed, optional androidx.compose.ui.graphics.Color onSecondaryFixedVariant, optional androidx.compose.ui.graphics.Color tertiaryFixed, optional androidx.compose.ui.graphics.Color tertiaryFixedDim, optional androidx.compose.ui.graphics.Color onTertiaryFixed, optional androidx.compose.ui.graphics.Color onTertiaryFixedVariant);
    method @BytecodeOnly @Deprecated public static androidx.compose.material3.ColorScheme! darkColorScheme-C-Xl9yA(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long);
    method @BytecodeOnly @Deprecated public static androidx.compose.material3.ColorScheme! darkColorScheme-G1PFc-w(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long);
    method @BytecodeOnly public static androidx.compose.material3.ColorScheme darkColorScheme-_VG5OTI(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public static androidx.compose.material3.ColorScheme expressiveLightColorScheme();
    method public static androidx.compose.runtime.ProvidableCompositionLocal<java.lang.Boolean> getLocalTonalElevationEnabled();
    method @KotlinOnly public static androidx.compose.material3.ColorScheme lightColorScheme(optional androidx.compose.ui.graphics.Color primary, optional androidx.compose.ui.graphics.Color onPrimary, optional androidx.compose.ui.graphics.Color primaryContainer, optional androidx.compose.ui.graphics.Color onPrimaryContainer, optional androidx.compose.ui.graphics.Color inversePrimary, optional androidx.compose.ui.graphics.Color secondary, optional androidx.compose.ui.graphics.Color onSecondary, optional androidx.compose.ui.graphics.Color secondaryContainer, optional androidx.compose.ui.graphics.Color onSecondaryContainer, optional androidx.compose.ui.graphics.Color tertiary, optional androidx.compose.ui.graphics.Color onTertiary, optional androidx.compose.ui.graphics.Color tertiaryContainer, optional androidx.compose.ui.graphics.Color onTertiaryContainer, optional androidx.compose.ui.graphics.Color background, optional androidx.compose.ui.graphics.Color onBackground, optional androidx.compose.ui.graphics.Color surface, optional androidx.compose.ui.graphics.Color onSurface, optional androidx.compose.ui.graphics.Color surfaceVariant, optional androidx.compose.ui.graphics.Color onSurfaceVariant, optional androidx.compose.ui.graphics.Color surfaceTint, optional androidx.compose.ui.graphics.Color inverseSurface, optional androidx.compose.ui.graphics.Color inverseOnSurface, optional androidx.compose.ui.graphics.Color error, optional androidx.compose.ui.graphics.Color onError, optional androidx.compose.ui.graphics.Color errorContainer, optional androidx.compose.ui.graphics.Color onErrorContainer, optional androidx.compose.ui.graphics.Color outline, optional androidx.compose.ui.graphics.Color outlineVariant, optional androidx.compose.ui.graphics.Color scrim, optional androidx.compose.ui.graphics.Color surfaceBright, optional androidx.compose.ui.graphics.Color surfaceContainer, optional androidx.compose.ui.graphics.Color surfaceContainerHigh, optional androidx.compose.ui.graphics.Color surfaceContainerHighest, optional androidx.compose.ui.graphics.Color surfaceContainerLow, optional androidx.compose.ui.graphics.Color surfaceContainerLowest, optional androidx.compose.ui.graphics.Color surfaceDim, optional androidx.compose.ui.graphics.Color primaryFixed, optional androidx.compose.ui.graphics.Color primaryFixedDim, optional androidx.compose.ui.graphics.Color onPrimaryFixed, optional androidx.compose.ui.graphics.Color onPrimaryFixedVariant, optional androidx.compose.ui.graphics.Color secondaryFixed, optional androidx.compose.ui.graphics.Color secondaryFixedDim, optional androidx.compose.ui.graphics.Color onSecondaryFixed, optional androidx.compose.ui.graphics.Color onSecondaryFixedVariant, optional androidx.compose.ui.graphics.Color tertiaryFixed, optional androidx.compose.ui.graphics.Color tertiaryFixedDim, optional androidx.compose.ui.graphics.Color onTertiaryFixed, optional androidx.compose.ui.graphics.Color onTertiaryFixedVariant);
    method @BytecodeOnly @Deprecated public static androidx.compose.material3.ColorScheme! lightColorScheme-C-Xl9yA(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long);
    method @BytecodeOnly @Deprecated public static androidx.compose.material3.ColorScheme! lightColorScheme-G1PFc-w(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long);
    method @BytecodeOnly public static androidx.compose.material3.ColorScheme lightColorScheme-_VG5OTI(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long);
    method @KotlinOnly @androidx.compose.runtime.Stable public static androidx.compose.ui.graphics.Color surfaceColorAtElevation(androidx.compose.material3.ColorScheme, androidx.compose.ui.unit.Dp elevation);
    method @BytecodeOnly @androidx.compose.runtime.Stable public static long surfaceColorAtElevation-3ABfNKs(androidx.compose.material3.ColorScheme, float);
    property public static androidx.compose.runtime.ProvidableCompositionLocal<java.lang.Boolean> LocalTonalElevationEnabled;
  }

  public final class ContentColorKt {
    method public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.ui.graphics.Color> getLocalContentColor();
    property public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.ui.graphics.Color> LocalContentColor;
  }

  @androidx.compose.runtime.Immutable public final class DatePickerColors {
    ctor @KotlinOnly public DatePickerColors(androidx.compose.ui.graphics.Color containerColor, androidx.compose.ui.graphics.Color titleContentColor, androidx.compose.ui.graphics.Color headlineContentColor, androidx.compose.ui.graphics.Color weekdayContentColor, androidx.compose.ui.graphics.Color subheadContentColor, androidx.compose.ui.graphics.Color navigationContentColor, androidx.compose.ui.graphics.Color yearContentColor, androidx.compose.ui.graphics.Color disabledYearContentColor, androidx.compose.ui.graphics.Color currentYearContentColor, androidx.compose.ui.graphics.Color selectedYearContentColor, androidx.compose.ui.graphics.Color disabledSelectedYearContentColor, androidx.compose.ui.graphics.Color selectedYearContainerColor, androidx.compose.ui.graphics.Color disabledSelectedYearContainerColor, androidx.compose.ui.graphics.Color dayContentColor, androidx.compose.ui.graphics.Color disabledDayContentColor, androidx.compose.ui.graphics.Color selectedDayContentColor, androidx.compose.ui.graphics.Color disabledSelectedDayContentColor, androidx.compose.ui.graphics.Color selectedDayContainerColor, androidx.compose.ui.graphics.Color disabledSelectedDayContainerColor, androidx.compose.ui.graphics.Color todayContentColor, androidx.compose.ui.graphics.Color todayDateBorderColor, androidx.compose.ui.graphics.Color dayInSelectionRangeContainerColor, androidx.compose.ui.graphics.Color dayInSelectionRangeContentColor, androidx.compose.ui.graphics.Color dividerColor, androidx.compose.material3.TextFieldColors dateTextFieldColors);
    ctor @BytecodeOnly public DatePickerColors(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, androidx.compose.material3.TextFieldColors!, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly public androidx.compose.material3.DatePickerColors copy(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color titleContentColor, optional androidx.compose.ui.graphics.Color headlineContentColor, optional androidx.compose.ui.graphics.Color weekdayContentColor, optional androidx.compose.ui.graphics.Color subheadContentColor, optional androidx.compose.ui.graphics.Color navigationContentColor, optional androidx.compose.ui.graphics.Color yearContentColor, optional androidx.compose.ui.graphics.Color disabledYearContentColor, optional androidx.compose.ui.graphics.Color currentYearContentColor, optional androidx.compose.ui.graphics.Color selectedYearContentColor, optional androidx.compose.ui.graphics.Color disabledSelectedYearContentColor, optional androidx.compose.ui.graphics.Color selectedYearContainerColor, optional androidx.compose.ui.graphics.Color disabledSelectedYearContainerColor, optional androidx.compose.ui.graphics.Color dayContentColor, optional androidx.compose.ui.graphics.Color disabledDayContentColor, optional androidx.compose.ui.graphics.Color selectedDayContentColor, optional androidx.compose.ui.graphics.Color disabledSelectedDayContentColor, optional androidx.compose.ui.graphics.Color selectedDayContainerColor, optional androidx.compose.ui.graphics.Color disabledSelectedDayContainerColor, optional androidx.compose.ui.graphics.Color todayContentColor, optional androidx.compose.ui.graphics.Color todayDateBorderColor, optional androidx.compose.ui.graphics.Color dayInSelectionRangeContainerColor, optional androidx.compose.ui.graphics.Color dayInSelectionRangeContentColor, optional androidx.compose.ui.graphics.Color dividerColor, optional androidx.compose.material3.TextFieldColors? dateTextFieldColors);
    method @BytecodeOnly public androidx.compose.material3.DatePickerColors copy-tNwlRmA(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, androidx.compose.material3.TextFieldColors?);
    method @BytecodeOnly public long getContainerColor-0d7_KjU();
    method @BytecodeOnly public long getCurrentYearContentColor-0d7_KjU();
    method public androidx.compose.material3.TextFieldColors getDateTextFieldColors();
    method @BytecodeOnly public long getDayContentColor-0d7_KjU();
    method @BytecodeOnly public long getDayInSelectionRangeContainerColor-0d7_KjU();
    method @BytecodeOnly public long getDayInSelectionRangeContentColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledDayContentColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledSelectedDayContainerColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledSelectedDayContentColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledSelectedYearContainerColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledSelectedYearContentColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledYearContentColor-0d7_KjU();
    method @BytecodeOnly public long getDividerColor-0d7_KjU();
    method @BytecodeOnly public long getHeadlineContentColor-0d7_KjU();
    method @BytecodeOnly public long getNavigationContentColor-0d7_KjU();
    method @BytecodeOnly public long getSelectedDayContainerColor-0d7_KjU();
    method @BytecodeOnly public long getSelectedDayContentColor-0d7_KjU();
    method @BytecodeOnly public long getSelectedYearContainerColor-0d7_KjU();
    method @BytecodeOnly public long getSelectedYearContentColor-0d7_KjU();
    method @BytecodeOnly public long getSubheadContentColor-0d7_KjU();
    method @BytecodeOnly public long getTitleContentColor-0d7_KjU();
    method @BytecodeOnly public long getTodayContentColor-0d7_KjU();
    method @BytecodeOnly public long getTodayDateBorderColor-0d7_KjU();
    method @BytecodeOnly public long getWeekdayContentColor-0d7_KjU();
    method @BytecodeOnly public long getYearContentColor-0d7_KjU();
    property public androidx.compose.ui.graphics.Color containerColor;
    property public androidx.compose.ui.graphics.Color currentYearContentColor;
    property public androidx.compose.material3.TextFieldColors dateTextFieldColors;
    property public androidx.compose.ui.graphics.Color dayContentColor;
    property public androidx.compose.ui.graphics.Color dayInSelectionRangeContainerColor;
    property public androidx.compose.ui.graphics.Color dayInSelectionRangeContentColor;
    property public androidx.compose.ui.graphics.Color disabledDayContentColor;
    property public androidx.compose.ui.graphics.Color disabledSelectedDayContainerColor;
    property public androidx.compose.ui.graphics.Color disabledSelectedDayContentColor;
    property public androidx.compose.ui.graphics.Color disabledSelectedYearContainerColor;
    property public androidx.compose.ui.graphics.Color disabledSelectedYearContentColor;
    property public androidx.compose.ui.graphics.Color disabledYearContentColor;
    property public androidx.compose.ui.graphics.Color dividerColor;
    property public androidx.compose.ui.graphics.Color headlineContentColor;
    property public androidx.compose.ui.graphics.Color navigationContentColor;
    property public androidx.compose.ui.graphics.Color selectedDayContainerColor;
    property public androidx.compose.ui.graphics.Color selectedDayContentColor;
    property public androidx.compose.ui.graphics.Color selectedYearContainerColor;
    property public androidx.compose.ui.graphics.Color selectedYearContentColor;
    property public androidx.compose.ui.graphics.Color subheadContentColor;
    property public androidx.compose.ui.graphics.Color titleContentColor;
    property public androidx.compose.ui.graphics.Color todayContentColor;
    property public androidx.compose.ui.graphics.Color todayDateBorderColor;
    property public androidx.compose.ui.graphics.Color weekdayContentColor;
    property public androidx.compose.ui.graphics.Color yearContentColor;
  }

  @androidx.compose.runtime.Stable public final class DatePickerDefaults {
    method @KotlinOnly @androidx.compose.runtime.Composable public void DatePickerHeadline(Long? selectedDateMillis, androidx.compose.material3.DisplayMode displayMode, androidx.compose.material3.DatePickerFormatter dateFormatter, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color contentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void DatePickerHeadline-ISIPfiY(Long?, int, androidx.compose.material3.DatePickerFormatter, androidx.compose.ui.Modifier?, long, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public void DatePickerTitle(androidx.compose.material3.DisplayMode displayMode, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color contentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void DatePickerTitle-FNtVw6o(int, androidx.compose.ui.Modifier?, long, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.compose.material3.DatePickerColors colors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.DatePickerColors colors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.DatePickerColors colors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color titleContentColor, optional androidx.compose.ui.graphics.Color headlineContentColor, optional androidx.compose.ui.graphics.Color weekdayContentColor, optional androidx.compose.ui.graphics.Color subheadContentColor, optional androidx.compose.ui.graphics.Color navigationContentColor, optional androidx.compose.ui.graphics.Color yearContentColor, optional androidx.compose.ui.graphics.Color disabledYearContentColor, optional androidx.compose.ui.graphics.Color currentYearContentColor, optional androidx.compose.ui.graphics.Color selectedYearContentColor, optional androidx.compose.ui.graphics.Color disabledSelectedYearContentColor, optional androidx.compose.ui.graphics.Color selectedYearContainerColor, optional androidx.compose.ui.graphics.Color disabledSelectedYearContainerColor, optional androidx.compose.ui.graphics.Color dayContentColor, optional androidx.compose.ui.graphics.Color disabledDayContentColor, optional androidx.compose.ui.graphics.Color selectedDayContentColor, optional androidx.compose.ui.graphics.Color disabledSelectedDayContentColor, optional androidx.compose.ui.graphics.Color selectedDayContainerColor, optional androidx.compose.ui.graphics.Color disabledSelectedDayContainerColor, optional androidx.compose.ui.graphics.Color todayContentColor, optional androidx.compose.ui.graphics.Color todayDateBorderColor, optional androidx.compose.ui.graphics.Color dayInSelectionRangeContentColor, optional androidx.compose.ui.graphics.Color dayInSelectionRangeContainerColor, optional androidx.compose.ui.graphics.Color dividerColor, optional androidx.compose.material3.TextFieldColors? dateTextFieldColors);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.DatePickerColors colors-bSRYm20(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, androidx.compose.material3.TextFieldColors?, androidx.compose.runtime.Composer?, int, int, int, int);
    method public androidx.compose.material3.DatePickerFormatter dateFormatter(optional String yearSelectionSkeleton, optional String selectedDateSkeleton, optional String selectedDateDescriptionSkeleton);
    method public androidx.compose.material3.SelectableDates getAllDates();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getShape(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getTonalElevation-D9Ej5fM();
    method public kotlin.ranges.IntRange getYearRange();
    property public androidx.compose.material3.SelectableDates AllDates;
    property public androidx.compose.ui.unit.Dp TonalElevation;
    property public static String YearAbbrMonthDaySkeleton;
    property public static String YearMonthSkeleton;
    property public static String YearMonthWeekdayDaySkeleton;
    property public kotlin.ranges.IntRange YearRange;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape shape;
    field public static final androidx.compose.material3.DatePickerDefaults INSTANCE;
    field public static final String YearAbbrMonthDaySkeleton = "yMMMd";
    field public static final String YearMonthSkeleton = "yMMMM";
    field public static final String YearMonthWeekdayDaySkeleton = "yMMMMEEEEd";
  }

  public final class DatePickerDialog_androidKt {
    method @KotlinOnly @androidx.compose.runtime.Composable public static void DatePickerDialog(kotlin.jvm.functions.Function0<kotlin.Unit> onDismissRequest, kotlin.jvm.functions.Function0<kotlin.Unit> confirmButton, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? dismissButton, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.unit.Dp tonalElevation, optional androidx.compose.material3.DatePickerColors colors, optional androidx.compose.ui.window.DialogProperties properties, kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void DatePickerDialog-GmEhDVc(kotlin.jvm.functions.Function0<kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.ui.graphics.Shape?, float, androidx.compose.material3.DatePickerColors?, androidx.compose.ui.window.DialogProperties?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
  }

  public interface DatePickerFormatter {
    method public String? formatDate(Long? dateMillis, java.util.Locale locale, optional boolean forContentDescription);
    method public String? formatMonthYear(Long? monthMillis, java.util.Locale locale);
  }

  public final class DatePickerKt {
    method @androidx.compose.runtime.Composable public static void DatePicker(androidx.compose.material3.DatePickerState state, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.material3.DatePickerFormatter dateFormatter, optional androidx.compose.material3.DatePickerColors colors, optional kotlin.jvm.functions.Function0<kotlin.Unit>? title, optional kotlin.jvm.functions.Function0<kotlin.Unit>? headline, optional boolean showModeToggle, optional androidx.compose.ui.focus.FocusRequester? focusRequester);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void DatePicker(androidx.compose.material3.DatePickerState, androidx.compose.ui.Modifier?, androidx.compose.material3.DatePickerFormatter?, androidx.compose.material3.DatePickerColors?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, boolean, androidx.compose.ui.focus.FocusRequester?, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly public static androidx.compose.material3.DatePickerState DatePickerState(java.util.Locale locale, optional Long? initialSelectedDateMillis, optional Long? initialDisplayedMonthMillis, optional kotlin.ranges.IntRange yearRange, optional androidx.compose.material3.DisplayMode initialDisplayMode, optional androidx.compose.material3.SelectableDates selectableDates);
    method @BytecodeOnly public static androidx.compose.material3.DatePickerState DatePickerState-sHin3Bw(java.util.Locale, Long?, Long?, kotlin.ranges.IntRange, int, androidx.compose.material3.SelectableDates);
    method @KotlinOnly @androidx.compose.runtime.Composable public static androidx.compose.material3.DatePickerState rememberDatePickerState(optional Long? initialSelectedDateMillis, optional Long? initialDisplayedMonthMillis, optional kotlin.ranges.IntRange yearRange, optional androidx.compose.material3.DisplayMode initialDisplayMode, optional androidx.compose.material3.SelectableDates selectableDates);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static androidx.compose.material3.DatePickerState rememberDatePickerState-EU0dCGE(Long?, Long?, kotlin.ranges.IntRange?, int, androidx.compose.material3.SelectableDates?, androidx.compose.runtime.Composer?, int, int);
  }

  @androidx.compose.runtime.Stable public interface DatePickerState {
    method @BytecodeOnly public int getDisplayMode-jFl-4v0();
    method public long getDisplayedMonthMillis();
    method public java.util.Locale getLocale();
    method public androidx.compose.material3.SelectableDates getSelectableDates();
    method public Long? getSelectedDateMillis();
    method public kotlin.ranges.IntRange getYearRange();
    method @BytecodeOnly public void setDisplayMode-vCnGnXg(int);
    method public void setDisplayedMonthMillis(long);
    method public void setSelectedDateMillis(Long?);
    property public abstract androidx.compose.material3.DisplayMode displayMode;
    property public abstract long displayedMonthMillis;
    property public abstract java.util.Locale locale;
    property public abstract androidx.compose.material3.SelectableDates selectableDates;
    property public abstract Long? selectedDateMillis;
    property public abstract kotlin.ranges.IntRange yearRange;
  }

  public final class DatePicker_jvmKt {
    method @KotlinOnly @SuppressCompatibility @RequiresApi(26) @androidx.compose.material3.ExperimentalMaterial3Api public static androidx.compose.material3.DatePickerState DatePickerState(java.util.Locale locale, java.time.LocalDate? initialSelectedDate, optional java.time.YearMonth? initialDisplayedMonth, optional kotlin.ranges.IntRange yearRange, optional androidx.compose.material3.DisplayMode initialDisplayMode, optional androidx.compose.material3.SelectableDates selectableDates);
    method @BytecodeOnly @SuppressCompatibility @RequiresApi(26) @androidx.compose.material3.ExperimentalMaterial3Api public static androidx.compose.material3.DatePickerState DatePickerState-sHin3Bw(java.util.Locale, java.time.LocalDate?, java.time.YearMonth?, kotlin.ranges.IntRange, int, androidx.compose.material3.SelectableDates);
    method @KotlinOnly @SuppressCompatibility @RequiresApi(26) @androidx.compose.material3.ExperimentalMaterial3Api public static androidx.compose.material3.DateRangePickerState DateRangePickerState(java.util.Locale locale, java.time.LocalDate? initialSelectedStartDate, java.time.LocalDate? initialSelectedEndDate, optional java.time.YearMonth? initialDisplayedMonth, optional kotlin.ranges.IntRange yearRange, optional androidx.compose.material3.DisplayMode initialDisplayMode, optional androidx.compose.material3.SelectableDates selectableDates);
    method @BytecodeOnly @SuppressCompatibility @RequiresApi(26) @androidx.compose.material3.ExperimentalMaterial3Api public static androidx.compose.material3.DateRangePickerState DateRangePickerState-HVP43zI(java.util.Locale, java.time.LocalDate?, java.time.LocalDate?, java.time.YearMonth?, kotlin.ranges.IntRange, int, androidx.compose.material3.SelectableDates);
    method @SuppressCompatibility @RequiresApi(26) @androidx.compose.material3.ExperimentalMaterial3Api public static java.time.YearMonth getDisplayedMonth(androidx.compose.material3.DatePickerState);
    method @SuppressCompatibility @RequiresApi(26) @androidx.compose.material3.ExperimentalMaterial3Api public static java.time.YearMonth getDisplayedMonth(androidx.compose.material3.DateRangePickerState);
    method @SuppressCompatibility @RequiresApi(26) @androidx.compose.material3.ExperimentalMaterial3Api public static java.time.LocalDate? getSelectedDate(androidx.compose.material3.DatePickerState);
    method @SuppressCompatibility @RequiresApi(26) @androidx.compose.material3.ExperimentalMaterial3Api public static java.time.LocalDate? getSelectedEndDate(androidx.compose.material3.DateRangePickerState);
    method @SuppressCompatibility @RequiresApi(26) @androidx.compose.material3.ExperimentalMaterial3Api public static java.time.LocalDate? getSelectedStartDate(androidx.compose.material3.DateRangePickerState);
    method @KotlinOnly @SuppressCompatibility @RequiresApi(26) @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static androidx.compose.material3.DatePickerState rememberDatePickerState(java.time.LocalDate? initialSelectedDate, optional java.time.YearMonth? initialDisplayedMonth, optional kotlin.ranges.IntRange yearRange, optional androidx.compose.material3.DisplayMode initialDisplayMode, optional androidx.compose.material3.SelectableDates selectableDates);
    method @BytecodeOnly @SuppressCompatibility @RequiresApi(26) @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static androidx.compose.material3.DatePickerState rememberDatePickerState-EU0dCGE(java.time.LocalDate?, java.time.YearMonth?, kotlin.ranges.IntRange?, int, androidx.compose.material3.SelectableDates?, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @SuppressCompatibility @RequiresApi(26) @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static androidx.compose.material3.DateRangePickerState rememberDateRangePickerState(java.time.LocalDate? initialSelectedStartDate, java.time.LocalDate? initialSelectedEndDate, optional java.time.YearMonth? initialDisplayedMonth, optional kotlin.ranges.IntRange yearRange, optional androidx.compose.material3.DisplayMode initialDisplayMode, optional androidx.compose.material3.SelectableDates selectableDates);
    method @BytecodeOnly @SuppressCompatibility @RequiresApi(26) @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static androidx.compose.material3.DateRangePickerState rememberDateRangePickerState-IlFM19s(java.time.LocalDate?, java.time.LocalDate?, java.time.YearMonth?, kotlin.ranges.IntRange?, int, androidx.compose.material3.SelectableDates?, androidx.compose.runtime.Composer?, int, int);
    method @SuppressCompatibility @RequiresApi(26) @androidx.compose.material3.ExperimentalMaterial3Api public static void setDisplayedMonth(androidx.compose.material3.DatePickerState, java.time.YearMonth yearMonth);
    method @SuppressCompatibility @RequiresApi(26) @androidx.compose.material3.ExperimentalMaterial3Api public static void setDisplayedMonth(androidx.compose.material3.DateRangePickerState, java.time.YearMonth yearMonth);
    method @SuppressCompatibility @RequiresApi(26) @androidx.compose.material3.ExperimentalMaterial3Api public static void setSelectedDate(androidx.compose.material3.DatePickerState, java.time.LocalDate? date);
    method @SuppressCompatibility @RequiresApi(26) @androidx.compose.material3.ExperimentalMaterial3Api public static void setSelection(androidx.compose.material3.DateRangePickerState, java.time.LocalDate? startDate, java.time.LocalDate? endDate);
  }

  @androidx.compose.runtime.Stable public final class DateRangePickerDefaults {
    method @KotlinOnly @androidx.compose.runtime.Composable public void DateRangePickerHeadline(Long? selectedStartDateMillis, Long? selectedEndDateMillis, androidx.compose.material3.DisplayMode displayMode, androidx.compose.material3.DatePickerFormatter dateFormatter, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color contentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void DateRangePickerHeadline-qS89cEg(Long?, Long?, int, androidx.compose.material3.DatePickerFormatter, androidx.compose.ui.Modifier?, long, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public void DateRangePickerTitle(androidx.compose.material3.DisplayMode displayMode, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color contentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void DateRangePickerTitle-FNtVw6o(int, androidx.compose.ui.Modifier?, long, androidx.compose.runtime.Composer?, int, int);
    field public static final androidx.compose.material3.DateRangePickerDefaults INSTANCE;
  }

  public final class DateRangePickerKt {
    method @androidx.compose.runtime.Composable public static void DateRangePicker(androidx.compose.material3.DateRangePickerState state, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.material3.DatePickerFormatter dateFormatter, optional androidx.compose.material3.DatePickerColors colors, optional kotlin.jvm.functions.Function0<kotlin.Unit>? title, optional kotlin.jvm.functions.Function0<kotlin.Unit>? headline, optional boolean showModeToggle, optional androidx.compose.ui.focus.FocusRequester? focusRequester);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void DateRangePicker(androidx.compose.material3.DateRangePickerState, androidx.compose.ui.Modifier?, androidx.compose.material3.DatePickerFormatter?, androidx.compose.material3.DatePickerColors?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, boolean, androidx.compose.ui.focus.FocusRequester?, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly public static androidx.compose.material3.DateRangePickerState DateRangePickerState(java.util.Locale locale, optional Long? initialSelectedStartDateMillis, optional Long? initialSelectedEndDateMillis, optional Long? initialDisplayedMonthMillis, optional kotlin.ranges.IntRange yearRange, optional androidx.compose.material3.DisplayMode initialDisplayMode, optional androidx.compose.material3.SelectableDates selectableDates);
    method @BytecodeOnly public static androidx.compose.material3.DateRangePickerState DateRangePickerState-HVP43zI(java.util.Locale, Long?, Long?, Long?, kotlin.ranges.IntRange, int, androidx.compose.material3.SelectableDates);
    method @KotlinOnly @androidx.compose.runtime.Composable public static androidx.compose.material3.DateRangePickerState rememberDateRangePickerState(optional Long? initialSelectedStartDateMillis, optional Long? initialSelectedEndDateMillis, optional Long? initialDisplayedMonthMillis, optional kotlin.ranges.IntRange yearRange, optional androidx.compose.material3.DisplayMode initialDisplayMode, optional androidx.compose.material3.SelectableDates selectableDates);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static androidx.compose.material3.DateRangePickerState rememberDateRangePickerState-IlFM19s(Long?, Long?, Long?, kotlin.ranges.IntRange?, int, androidx.compose.material3.SelectableDates?, androidx.compose.runtime.Composer?, int, int);
  }

  @androidx.compose.runtime.Stable public interface DateRangePickerState {
    method @BytecodeOnly public int getDisplayMode-jFl-4v0();
    method public long getDisplayedMonthMillis();
    method public java.util.Locale getLocale();
    method public androidx.compose.material3.SelectableDates getSelectableDates();
    method public Long? getSelectedEndDateMillis();
    method public Long? getSelectedStartDateMillis();
    method public kotlin.ranges.IntRange getYearRange();
    method @BytecodeOnly public void setDisplayMode-vCnGnXg(int);
    method public void setDisplayedMonthMillis(long);
    method public void setSelection(Long? startDateMillis, Long? endDateMillis);
    property public abstract androidx.compose.material3.DisplayMode displayMode;
    property public abstract long displayedMonthMillis;
    property public abstract java.util.Locale locale;
    property public abstract androidx.compose.material3.SelectableDates selectableDates;
    property public abstract Long? selectedEndDateMillis;
    property public abstract Long? selectedStartDateMillis;
    property public abstract kotlin.ranges.IntRange yearRange;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public final class DefaultBasicAlertDialogOverride implements androidx.compose.material3.BasicAlertDialogOverride {
    method @androidx.compose.runtime.Composable public void BasicAlertDialog(androidx.compose.material3.BasicAlertDialogOverrideScope);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void BasicAlertDialog(androidx.compose.material3.BasicAlertDialogOverrideScope, androidx.compose.runtime.Composer?, int);
    field public static final androidx.compose.material3.DefaultBasicAlertDialogOverride INSTANCE;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public final class DefaultHorizontalFloatingToolbarOverride implements androidx.compose.material3.HorizontalFloatingToolbarOverride {
    method @androidx.compose.runtime.Composable public void HorizontalFloatingToolbar(androidx.compose.material3.HorizontalFloatingToolbarOverrideScope);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void HorizontalFloatingToolbar(androidx.compose.material3.HorizontalFloatingToolbarOverrideScope, androidx.compose.runtime.Composer?, int);
    field public static final androidx.compose.material3.DefaultHorizontalFloatingToolbarOverride INSTANCE;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public final class DefaultHorizontalFloatingToolbarWithFabOverride implements androidx.compose.material3.HorizontalFloatingToolbarWithFabOverride {
    method @androidx.compose.runtime.Composable public void HorizontalFloatingToolbarWithFab(androidx.compose.material3.HorizontalFloatingToolbarWithFabOverrideScope);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void HorizontalFloatingToolbarWithFab(androidx.compose.material3.HorizontalFloatingToolbarWithFabOverrideScope, androidx.compose.runtime.Composer?, int);
    field public static final androidx.compose.material3.DefaultHorizontalFloatingToolbarWithFabOverride INSTANCE;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public final class DefaultModalWideNavigationRailOverride implements androidx.compose.material3.ModalWideNavigationRailOverride {
    method @androidx.compose.runtime.Composable public void ModalWideNavigationRail(androidx.compose.material3.ModalWideNavigationRailOverrideScope);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void ModalWideNavigationRail(androidx.compose.material3.ModalWideNavigationRailOverrideScope, androidx.compose.runtime.Composer?, int);
    field public static final androidx.compose.material3.DefaultModalWideNavigationRailOverride INSTANCE;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public final class DefaultNavigationBarOverride implements androidx.compose.material3.NavigationBarOverride {
    method @androidx.compose.runtime.Composable public void NavigationBar(androidx.compose.material3.NavigationBarOverrideScope);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void NavigationBar(androidx.compose.material3.NavigationBarOverrideScope, androidx.compose.runtime.Composer?, int);
    field public static final androidx.compose.material3.DefaultNavigationBarOverride INSTANCE;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public final class DefaultNavigationRailOverride implements androidx.compose.material3.NavigationRailOverride {
    method @androidx.compose.runtime.Composable public void NavigationRail(androidx.compose.material3.NavigationRailOverrideScope);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void NavigationRail(androidx.compose.material3.NavigationRailOverrideScope, androidx.compose.runtime.Composer?, int);
    field public static final androidx.compose.material3.DefaultNavigationRailOverride INSTANCE;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public final class DefaultShortNavigationBarOverride implements androidx.compose.material3.ShortNavigationBarOverride {
    method @androidx.compose.runtime.Composable public void ShortNavigationBar(androidx.compose.material3.ShortNavigationBarOverrideScope);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void ShortNavigationBar(androidx.compose.material3.ShortNavigationBarOverrideScope, androidx.compose.runtime.Composer?, int);
    field public static final androidx.compose.material3.DefaultShortNavigationBarOverride INSTANCE;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public final class DefaultSingleRowTopAppBarOverride implements androidx.compose.material3.SingleRowTopAppBarOverride {
    method @androidx.compose.runtime.Composable public void SingleRowTopAppBar(androidx.compose.material3.SingleRowTopAppBarOverrideScope);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void SingleRowTopAppBar(androidx.compose.material3.SingleRowTopAppBarOverrideScope, androidx.compose.runtime.Composer?, int);
    field public static final androidx.compose.material3.DefaultSingleRowTopAppBarOverride INSTANCE;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api public final class DefaultTooltipCaretShape implements androidx.compose.ui.graphics.Shape {
    ctor public DefaultTooltipCaretShape();
    ctor @KotlinOnly public DefaultTooltipCaretShape(optional androidx.compose.ui.unit.DpSize caretSize);
    ctor @BytecodeOnly public DefaultTooltipCaretShape(long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly public androidx.compose.ui.graphics.Outline createOutline(androidx.compose.ui.geometry.Size size, androidx.compose.ui.unit.LayoutDirection layoutDirection, androidx.compose.ui.unit.Density density);
    method @BytecodeOnly public androidx.compose.ui.graphics.Outline createOutline-Pq9zytI(long, androidx.compose.ui.unit.LayoutDirection, androidx.compose.ui.unit.Density);
    method @BytecodeOnly public long getCaretSize-MYxV2XQ();
    property public androidx.compose.ui.unit.DpSize caretSize;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public final class DefaultTwoRowsTopAppBarOverride implements androidx.compose.material3.TwoRowsTopAppBarOverride {
    method @androidx.compose.runtime.Composable public void TwoRowsTopAppBar(androidx.compose.material3.TwoRowsTopAppBarOverrideScope);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void TwoRowsTopAppBar(androidx.compose.material3.TwoRowsTopAppBarOverrideScope, androidx.compose.runtime.Composer?, int);
    field public static final androidx.compose.material3.DefaultTwoRowsTopAppBarOverride INSTANCE;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public final class DefaultVerticalFloatingToolbarOverride implements androidx.compose.material3.VerticalFloatingToolbarOverride {
    method @androidx.compose.runtime.Composable public void VerticalFloatingToolbar(androidx.compose.material3.VerticalFloatingToolbarOverrideScope);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void VerticalFloatingToolbar(androidx.compose.material3.VerticalFloatingToolbarOverrideScope, androidx.compose.runtime.Composer?, int);
    field public static final androidx.compose.material3.DefaultVerticalFloatingToolbarOverride INSTANCE;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public final class DefaultVerticalFloatingToolbarWithFabOverride implements androidx.compose.material3.VerticalFloatingToolbarWithFabOverride {
    method @androidx.compose.runtime.Composable public void VerticalFloatingToolbarWithFab(androidx.compose.material3.VerticalFloatingToolbarWithFabOverrideScope);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void VerticalFloatingToolbarWithFab(androidx.compose.material3.VerticalFloatingToolbarWithFabOverrideScope, androidx.compose.runtime.Composer?, int);
    field public static final androidx.compose.material3.DefaultVerticalFloatingToolbarWithFabOverride INSTANCE;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public final class DefaultWideNavigationRailOverride implements androidx.compose.material3.WideNavigationRailOverride {
    method @androidx.compose.runtime.Composable public void WideNavigationRail(androidx.compose.material3.WideNavigationRailOverrideScope);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void WideNavigationRail(androidx.compose.material3.WideNavigationRailOverrideScope, androidx.compose.runtime.Composer?, int);
    field public static final androidx.compose.material3.DefaultWideNavigationRailOverride INSTANCE;
  }

  @androidx.compose.runtime.Immutable @kotlin.jvm.JvmInline public final value class DisplayMode {
    method @BytecodeOnly public static androidx.compose.material3.DisplayMode! box-impl(int);
    method @BytecodeOnly public int unbox-impl();
    field public static final androidx.compose.material3.DisplayMode.Companion Companion;
  }

  public static final class DisplayMode.Companion {
    method @BytecodeOnly public int getInput-jFl-4v0();
    method @BytecodeOnly public int getPicker-jFl-4v0();
    property public androidx.compose.material3.DisplayMode Input;
    property public androidx.compose.material3.DisplayMode Picker;
  }

  public final class DividerDefaults {
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getColor(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getThickness-D9Ej5fM();
    property public androidx.compose.ui.unit.Dp Thickness;
    property public androidx.compose.ui.graphics.Color color;
    field public static final androidx.compose.material3.DividerDefaults INSTANCE;
  }

  public final class DividerKt {
    method @KotlinOnly @Deprecated @androidx.compose.runtime.Composable public static void Divider(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.unit.Dp thickness, optional androidx.compose.ui.graphics.Color color);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void Divider-9IZ8Weo(androidx.compose.ui.Modifier?, float, long, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void HorizontalDivider(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.unit.Dp thickness, optional androidx.compose.ui.graphics.Color color);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void HorizontalDivider-9IZ8Weo(androidx.compose.ui.Modifier?, float, long, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void VerticalDivider(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.unit.Dp thickness, optional androidx.compose.ui.graphics.Color color);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void VerticalDivider-9IZ8Weo(androidx.compose.ui.Modifier?, float, long, androidx.compose.runtime.Composer?, int, int);
  }

  @androidx.compose.runtime.Immutable public final class DragHandleColors {
    ctor @KotlinOnly public DragHandleColors(androidx.compose.ui.graphics.Color color, androidx.compose.ui.graphics.Color pressedColor, androidx.compose.ui.graphics.Color draggedColor);
    ctor @BytecodeOnly public DragHandleColors(long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @BytecodeOnly public long getColor-0d7_KjU();
    method @BytecodeOnly public long getDraggedColor-0d7_KjU();
    method @BytecodeOnly public long getPressedColor-0d7_KjU();
    property public androidx.compose.ui.graphics.Color color;
    property public androidx.compose.ui.graphics.Color draggedColor;
    property public androidx.compose.ui.graphics.Color pressedColor;
  }

  public final class DragHandleKt {
    method @androidx.compose.runtime.Composable public static void VerticalDragHandle(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.material3.DragHandleSizes sizes, optional androidx.compose.material3.DragHandleColors colors, optional androidx.compose.material3.DragHandleShapes shapes, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void VerticalDragHandle(androidx.compose.ui.Modifier?, androidx.compose.material3.DragHandleSizes?, androidx.compose.material3.DragHandleColors?, androidx.compose.material3.DragHandleShapes?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.runtime.Composer?, int, int);
  }

  @androidx.compose.runtime.Immutable public final class DragHandleShapes {
    ctor public DragHandleShapes(androidx.compose.ui.graphics.Shape shape, androidx.compose.ui.graphics.Shape pressedShape, androidx.compose.ui.graphics.Shape draggedShape);
    method public androidx.compose.ui.graphics.Shape getDraggedShape();
    method public androidx.compose.ui.graphics.Shape getPressedShape();
    method public androidx.compose.ui.graphics.Shape getShape();
    property public androidx.compose.ui.graphics.Shape draggedShape;
    property public androidx.compose.ui.graphics.Shape pressedShape;
    property public androidx.compose.ui.graphics.Shape shape;
  }

  @androidx.compose.runtime.Immutable public final class DragHandleSizes {
    ctor @KotlinOnly public DragHandleSizes(androidx.compose.ui.unit.DpSize size, androidx.compose.ui.unit.DpSize pressedSize, androidx.compose.ui.unit.DpSize draggedSize);
    ctor @BytecodeOnly public DragHandleSizes(long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @BytecodeOnly public long getDraggedSize-MYxV2XQ();
    method @BytecodeOnly public long getPressedSize-MYxV2XQ();
    method @BytecodeOnly public long getSize-MYxV2XQ();
    property public androidx.compose.ui.unit.DpSize draggedSize;
    property public androidx.compose.ui.unit.DpSize pressedSize;
    property public androidx.compose.ui.unit.DpSize size;
  }

  public final class DrawerDefaults {
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable public long getContainerColor(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getDismissibleDrawerElevation-D9Ej5fM();
    method @BytecodeOnly public float getMaximumDrawerWidth-D9Ej5fM();
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getModalContainerColor(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getModalDrawerElevation-D9Ej5fM();
    method @BytecodeOnly public float getPermanentDrawerElevation-D9Ej5fM();
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getScrimColor(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getShape(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getStandardContainerColor(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.WindowInsets getWindowInsets();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.WindowInsets getWindowInsets(androidx.compose.runtime.Composer?, int);
    property public androidx.compose.ui.unit.Dp DismissibleDrawerElevation;
    property public androidx.compose.ui.unit.Dp MaximumDrawerWidth;
    property public androidx.compose.ui.unit.Dp ModalDrawerElevation;
    property public androidx.compose.ui.unit.Dp PermanentDrawerElevation;
    property @Deprecated public androidx.compose.ui.graphics.Color containerColor;
    property public androidx.compose.ui.graphics.Color modalContainerColor;
    property public androidx.compose.ui.graphics.Color scrimColor;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape shape;
    property public androidx.compose.ui.graphics.Color standardContainerColor;
    property @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.WindowInsets windowInsets;
    field public static final androidx.compose.material3.DrawerDefaults INSTANCE;
  }

  @androidx.compose.runtime.Stable public final class DrawerState {
    ctor public DrawerState(androidx.compose.material3.DrawerValue initialValue, optional kotlin.jvm.functions.Function1<? super androidx.compose.material3.DrawerValue,java.lang.Boolean> confirmStateChange);
    method @Deprecated public suspend Object? animateTo(androidx.compose.material3.DrawerValue targetValue, androidx.compose.animation.core.AnimationSpec<java.lang.Float> anim, kotlin.coroutines.Continuation<? super kotlin.Unit>);
    method public suspend Object? close(kotlin.coroutines.Continuation<? super kotlin.Unit>);
    method public float getCurrentOffset();
    method public androidx.compose.material3.DrawerValue getCurrentValue();
    method @Deprecated public androidx.compose.runtime.State<java.lang.Float> getOffset();
    method public androidx.compose.material3.DrawerValue getTargetValue();
    method public boolean isAnimationRunning();
    method public boolean isClosed();
    method public boolean isOpen();
    method public suspend Object? open(kotlin.coroutines.Continuation<? super kotlin.Unit>);
    method public suspend Object? snapTo(androidx.compose.material3.DrawerValue targetValue, kotlin.coroutines.Continuation<? super kotlin.Unit>);
    property public float currentOffset;
    property public androidx.compose.material3.DrawerValue currentValue;
    property public boolean isAnimationRunning;
    property public boolean isClosed;
    property public boolean isOpen;
    property @Deprecated public androidx.compose.runtime.State<java.lang.Float> offset;
    property public androidx.compose.material3.DrawerValue targetValue;
    field public static final androidx.compose.material3.DrawerState.Companion Companion;
  }

  public static final class DrawerState.Companion {
    method public androidx.compose.runtime.saveable.Saver<androidx.compose.material3.DrawerState,androidx.compose.material3.DrawerValue> Saver(kotlin.jvm.functions.Function1<? super androidx.compose.material3.DrawerValue,java.lang.Boolean> confirmStateChange);
  }

  public enum DrawerValue {
    enum_constant public static final androidx.compose.material3.DrawerValue Closed;
    enum_constant public static final androidx.compose.material3.DrawerValue Open;
  }

  public final class DynamicTonalPaletteKt {
    method @RequiresApi(android.os.Build.VERSION_CODES.S) public static androidx.compose.material3.ColorScheme dynamicDarkColorScheme(android.content.Context context);
    method @RequiresApi(android.os.Build.VERSION_CODES.S) public static androidx.compose.material3.ColorScheme dynamicLightColorScheme(android.content.Context context);
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public final class ExitAlwaysFloatingToolbarScrollBehavior implements androidx.compose.material3.FloatingToolbarScrollBehavior {
    ctor @KotlinOnly public ExitAlwaysFloatingToolbarScrollBehavior(androidx.compose.material3.FloatingToolbarExitDirection exitDirection, androidx.compose.material3.FloatingToolbarState state, androidx.compose.animation.core.AnimationSpec<java.lang.Float> snapAnimationSpec, androidx.compose.animation.core.DecayAnimationSpec<java.lang.Float> flingAnimationSpec);
    ctor @BytecodeOnly public ExitAlwaysFloatingToolbarScrollBehavior(int, androidx.compose.material3.FloatingToolbarState!, androidx.compose.animation.core.AnimationSpec!, androidx.compose.animation.core.DecayAnimationSpec!, kotlin.jvm.internal.DefaultConstructorMarker!);
    method public androidx.compose.ui.Modifier floatingScrollBehavior(androidx.compose.ui.Modifier);
    method @BytecodeOnly public int getExitDirection-8LIK8-E();
    method public androidx.compose.animation.core.DecayAnimationSpec<java.lang.Float> getFlingAnimationSpec();
    method public androidx.compose.animation.core.AnimationSpec<java.lang.Float> getSnapAnimationSpec();
    method public androidx.compose.material3.FloatingToolbarState getState();
    method @KotlinOnly public suspend Object? onPostFling(androidx.compose.ui.unit.Velocity consumed, androidx.compose.ui.unit.Velocity available, kotlin.coroutines.Continuation<? super androidx.compose.ui.unit.Velocity>);
    method @KotlinOnly public androidx.compose.ui.geometry.Offset onPostScroll(androidx.compose.ui.geometry.Offset consumed, androidx.compose.ui.geometry.Offset available, androidx.compose.ui.input.nestedscroll.NestedScrollSource source);
    property public androidx.compose.material3.FloatingToolbarExitDirection exitDirection;
    property public androidx.compose.animation.core.DecayAnimationSpec<java.lang.Float> flingAnimationSpec;
    property public androidx.compose.animation.core.AnimationSpec<java.lang.Float> snapAnimationSpec;
    property public androidx.compose.material3.FloatingToolbarState state;
  }

  @SuppressCompatibility @kotlin.RequiresOptIn(message="This material API is experimental and is likely to change or to be removed in the future.") @kotlin.annotation.Retention(kotlin.annotation.AnnotationRetention.BINARY) public @interface ExperimentalMaterial3Api {
  }

  @SuppressCompatibility @kotlin.RequiresOptIn(message="This material3 API is experimental and is likely to change or to be removed in the future.") @kotlin.annotation.Retention(kotlin.annotation.AnnotationRetention.BINARY) public @interface ExperimentalMaterial3ComponentOverrideApi {
  }

  @SuppressCompatibility @kotlin.RequiresOptIn(message="This material3 API is experimental and is likely to change or to be removed in the future.") @kotlin.annotation.Retention(kotlin.annotation.AnnotationRetention.BINARY) public @interface ExperimentalMaterial3ExpressiveApi {
  }

  @kotlin.jvm.JvmInline public final value class ExposedDropdownMenuAnchorType {
    method @BytecodeOnly public static androidx.compose.material3.ExposedDropdownMenuAnchorType! box-impl(String!);
    method @BytecodeOnly public String! unbox-impl();
    field public static final androidx.compose.material3.ExposedDropdownMenuAnchorType.Companion Companion;
  }

  public static final class ExposedDropdownMenuAnchorType.Companion {
    method @BytecodeOnly public String getPrimaryEditable-oYjWRB4();
    method @BytecodeOnly public String getPrimaryNotEditable-oYjWRB4();
    method @BytecodeOnly public String getSecondaryEditable-oYjWRB4();
    property public androidx.compose.material3.ExposedDropdownMenuAnchorType PrimaryEditable;
    property public androidx.compose.material3.ExposedDropdownMenuAnchorType PrimaryNotEditable;
    property public androidx.compose.material3.ExposedDropdownMenuAnchorType SecondaryEditable;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api public abstract sealed class ExposedDropdownMenuBoxScope {
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable public final void ExposedDropdownMenu(boolean, kotlin.jvm.functions.Function0!, androidx.compose.ui.Modifier!, androidx.compose.foundation.ScrollState!, kotlin.jvm.functions.Function3!, androidx.compose.runtime.Composer!, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public final void ExposedDropdownMenu(boolean expanded, kotlin.jvm.functions.Function0<kotlin.Unit> onDismissRequest, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.foundation.ScrollState scrollState, optional boolean matchAnchorWidth, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.unit.Dp tonalElevation, optional androidx.compose.ui.unit.Dp shadowElevation, optional androidx.compose.foundation.BorderStroke? border, kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> content);
    method @KotlinOnly @Deprecated @androidx.compose.runtime.Composable public final void ExposedDropdownMenu(boolean expanded, kotlin.jvm.functions.Function0<kotlin.Unit> onDismissRequest, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.foundation.ScrollState scrollState, optional boolean focusable, optional boolean matchTextFieldWidth, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.unit.Dp tonalElevation, optional androidx.compose.ui.unit.Dp shadowElevation, optional androidx.compose.foundation.BorderStroke? border, kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> content);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable public final void ExposedDropdownMenu-kbRbctU(boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, androidx.compose.foundation.ScrollState?, boolean, boolean, androidx.compose.ui.graphics.Shape?, long, float, float, androidx.compose.foundation.BorderStroke?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public final void ExposedDropdownMenu-vNxi1II(boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, androidx.compose.foundation.ScrollState?, boolean, androidx.compose.ui.graphics.Shape?, long, float, float, androidx.compose.foundation.BorderStroke?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method public abstract androidx.compose.ui.Modifier exposedDropdownSize(androidx.compose.ui.Modifier, optional boolean matchAnchorWidth);
    method @Deprecated public final androidx.compose.ui.Modifier menuAnchor(androidx.compose.ui.Modifier);
    method @KotlinOnly public abstract androidx.compose.ui.Modifier menuAnchor(androidx.compose.ui.Modifier, androidx.compose.material3.ExposedDropdownMenuAnchorType type, optional boolean enabled);
    method @BytecodeOnly public abstract androidx.compose.ui.Modifier menuAnchor-2Hz36ac(androidx.compose.ui.Modifier, String, boolean);
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api public final class ExposedDropdownMenuDefaults {
    method @BytecodeOnly @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void TrailingIcon(boolean, androidx.compose.runtime.Composer!, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public void TrailingIcon(boolean expanded, optional androidx.compose.ui.Modifier modifier);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void TrailingIcon(boolean, androidx.compose.ui.Modifier?, androidx.compose.runtime.Composer?, int, int);
    method public androidx.compose.foundation.layout.PaddingValues getItemContentPadding();
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.TextFieldColors outlinedTextFieldColors(optional androidx.compose.ui.graphics.Color focusedTextColor, optional androidx.compose.ui.graphics.Color unfocusedTextColor, optional androidx.compose.ui.graphics.Color disabledTextColor, optional androidx.compose.ui.graphics.Color errorTextColor, optional androidx.compose.ui.graphics.Color focusedContainerColor, optional androidx.compose.ui.graphics.Color unfocusedContainerColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color errorContainerColor, optional androidx.compose.ui.graphics.Color cursorColor, optional androidx.compose.ui.graphics.Color errorCursorColor, optional androidx.compose.foundation.text.selection.TextSelectionColors selectionColors, optional androidx.compose.ui.graphics.Color focusedBorderColor, optional androidx.compose.ui.graphics.Color unfocusedBorderColor, optional androidx.compose.ui.graphics.Color disabledBorderColor, optional androidx.compose.ui.graphics.Color errorBorderColor, optional androidx.compose.ui.graphics.Color focusedLeadingIconColor, optional androidx.compose.ui.graphics.Color unfocusedLeadingIconColor, optional androidx.compose.ui.graphics.Color disabledLeadingIconColor, optional androidx.compose.ui.graphics.Color errorLeadingIconColor, optional androidx.compose.ui.graphics.Color focusedTrailingIconColor, optional androidx.compose.ui.graphics.Color unfocusedTrailingIconColor, optional androidx.compose.ui.graphics.Color disabledTrailingIconColor, optional androidx.compose.ui.graphics.Color errorTrailingIconColor, optional androidx.compose.ui.graphics.Color focusedLabelColor, optional androidx.compose.ui.graphics.Color unfocusedLabelColor, optional androidx.compose.ui.graphics.Color disabledLabelColor, optional androidx.compose.ui.graphics.Color errorLabelColor, optional androidx.compose.ui.graphics.Color focusedPlaceholderColor, optional androidx.compose.ui.graphics.Color unfocusedPlaceholderColor, optional androidx.compose.ui.graphics.Color disabledPlaceholderColor, optional androidx.compose.ui.graphics.Color errorPlaceholderColor, optional androidx.compose.ui.graphics.Color focusedPrefixColor, optional androidx.compose.ui.graphics.Color unfocusedPrefixColor, optional androidx.compose.ui.graphics.Color disabledPrefixColor, optional androidx.compose.ui.graphics.Color errorPrefixColor, optional androidx.compose.ui.graphics.Color focusedSuffixColor, optional androidx.compose.ui.graphics.Color unfocusedSuffixColor, optional androidx.compose.ui.graphics.Color disabledSuffixColor, optional androidx.compose.ui.graphics.Color errorSuffixColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.TextFieldColors outlinedTextFieldColors-FD9MK7s(long, long, long, long, long, long, long, long, long, long, androidx.compose.foundation.text.selection.TextSelectionColors?, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int, int, int, int, int);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable public androidx.compose.material3.TextFieldColors! outlinedTextFieldColors-St-qZLY(long, long, long, long, long, androidx.compose.foundation.text.selection.TextSelectionColors!, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer!, int, int, int, int);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable public androidx.compose.material3.TextFieldColors! outlinedTextFieldColors-tN0la-I(long, long, long, long, long, long, long, long, androidx.compose.foundation.text.selection.TextSelectionColors!, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer!, int, int, int, int, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.TextFieldColors textFieldColors(optional androidx.compose.ui.graphics.Color focusedTextColor, optional androidx.compose.ui.graphics.Color unfocusedTextColor, optional androidx.compose.ui.graphics.Color disabledTextColor, optional androidx.compose.ui.graphics.Color errorTextColor, optional androidx.compose.ui.graphics.Color focusedContainerColor, optional androidx.compose.ui.graphics.Color unfocusedContainerColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color errorContainerColor, optional androidx.compose.ui.graphics.Color cursorColor, optional androidx.compose.ui.graphics.Color errorCursorColor, optional androidx.compose.foundation.text.selection.TextSelectionColors selectionColors, optional androidx.compose.ui.graphics.Color focusedIndicatorColor, optional androidx.compose.ui.graphics.Color unfocusedIndicatorColor, optional androidx.compose.ui.graphics.Color disabledIndicatorColor, optional androidx.compose.ui.graphics.Color errorIndicatorColor, optional androidx.compose.ui.graphics.Color focusedLeadingIconColor, optional androidx.compose.ui.graphics.Color unfocusedLeadingIconColor, optional androidx.compose.ui.graphics.Color disabledLeadingIconColor, optional androidx.compose.ui.graphics.Color errorLeadingIconColor, optional androidx.compose.ui.graphics.Color focusedTrailingIconColor, optional androidx.compose.ui.graphics.Color unfocusedTrailingIconColor, optional androidx.compose.ui.graphics.Color disabledTrailingIconColor, optional androidx.compose.ui.graphics.Color errorTrailingIconColor, optional androidx.compose.ui.graphics.Color focusedLabelColor, optional androidx.compose.ui.graphics.Color unfocusedLabelColor, optional androidx.compose.ui.graphics.Color disabledLabelColor, optional androidx.compose.ui.graphics.Color errorLabelColor, optional androidx.compose.ui.graphics.Color focusedPlaceholderColor, optional androidx.compose.ui.graphics.Color unfocusedPlaceholderColor, optional androidx.compose.ui.graphics.Color disabledPlaceholderColor, optional androidx.compose.ui.graphics.Color errorPlaceholderColor, optional androidx.compose.ui.graphics.Color focusedPrefixColor, optional androidx.compose.ui.graphics.Color unfocusedPrefixColor, optional androidx.compose.ui.graphics.Color disabledPrefixColor, optional androidx.compose.ui.graphics.Color errorPrefixColor, optional androidx.compose.ui.graphics.Color focusedSuffixColor, optional androidx.compose.ui.graphics.Color unfocusedSuffixColor, optional androidx.compose.ui.graphics.Color disabledSuffixColor, optional androidx.compose.ui.graphics.Color errorSuffixColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.TextFieldColors textFieldColors-FD9MK7s(long, long, long, long, long, long, long, long, long, long, androidx.compose.foundation.text.selection.TextSelectionColors?, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int, int, int, int, int);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable public androidx.compose.material3.TextFieldColors! textFieldColors-St-qZLY(long, long, long, long, long, androidx.compose.foundation.text.selection.TextSelectionColors!, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer!, int, int, int, int);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable public androidx.compose.material3.TextFieldColors! textFieldColors-tN0la-I(long, long, long, long, long, long, long, long, androidx.compose.foundation.text.selection.TextSelectionColors!, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer!, int, int, int, int, int, int);
    property public androidx.compose.foundation.layout.PaddingValues ItemContentPadding;
    field public static final androidx.compose.material3.ExposedDropdownMenuDefaults INSTANCE;
  }

  public final class ExposedDropdownMenuKt {
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void ExposedDropdownMenuBox(boolean expanded, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onExpandedChange, optional androidx.compose.ui.Modifier modifier, kotlin.jvm.functions.Function1<? super androidx.compose.material3.ExposedDropdownMenuBoxScope,kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void ExposedDropdownMenuBox(boolean, kotlin.jvm.functions.Function1<? super java.lang.Boolean!,kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function3<? super androidx.compose.material3.ExposedDropdownMenuBoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
  }

  @kotlin.jvm.JvmInline public final value class FabPosition {
    method @BytecodeOnly public static androidx.compose.material3.FabPosition! box-impl(int);
    method @BytecodeOnly public int unbox-impl();
    field public static final androidx.compose.material3.FabPosition.Companion Companion;
  }

  public static final class FabPosition.Companion {
    method @BytecodeOnly public int getCenter-ERTFSPs();
    method @BytecodeOnly public int getEnd-ERTFSPs();
    method @BytecodeOnly public int getEndOverlay-ERTFSPs();
    method @BytecodeOnly public int getStart-ERTFSPs();
    property public androidx.compose.material3.FabPosition Center;
    property public androidx.compose.material3.FabPosition End;
    property public androidx.compose.material3.FabPosition EndOverlay;
    property public androidx.compose.material3.FabPosition Start;
  }

  public final class FilterChipDefaults {
    method @androidx.compose.runtime.Composable public androidx.compose.material3.SelectableChipColors elevatedFilterChipColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.SelectableChipColors elevatedFilterChipColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.SelectableChipColors elevatedFilterChipColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color labelColor, optional androidx.compose.ui.graphics.Color iconColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledLabelColor, optional androidx.compose.ui.graphics.Color disabledLeadingIconColor, optional androidx.compose.ui.graphics.Color disabledTrailingIconColor, optional androidx.compose.ui.graphics.Color selectedContainerColor, optional androidx.compose.ui.graphics.Color disabledSelectedContainerColor, optional androidx.compose.ui.graphics.Color selectedLabelColor, optional androidx.compose.ui.graphics.Color selectedLeadingIconColor, optional androidx.compose.ui.graphics.Color selectedTrailingIconColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.SelectableChipColors elevatedFilterChipColors-XqyqHi0(long, long, long, long, long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.SelectableChipElevation elevatedFilterChipElevation(optional androidx.compose.ui.unit.Dp elevation, optional androidx.compose.ui.unit.Dp pressedElevation, optional androidx.compose.ui.unit.Dp focusedElevation, optional androidx.compose.ui.unit.Dp hoveredElevation, optional androidx.compose.ui.unit.Dp draggedElevation, optional androidx.compose.ui.unit.Dp disabledElevation);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.SelectableChipElevation elevatedFilterChipElevation-aqJV_2Y(float, float, float, float, float, float, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.BorderStroke filterChipBorder(boolean enabled, boolean selected, optional androidx.compose.ui.graphics.Color borderColor, optional androidx.compose.ui.graphics.Color selectedBorderColor, optional androidx.compose.ui.graphics.Color disabledBorderColor, optional androidx.compose.ui.graphics.Color disabledSelectedBorderColor, optional androidx.compose.ui.unit.Dp borderWidth, optional androidx.compose.ui.unit.Dp selectedBorderWidth);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.BorderStroke filterChipBorder-_7El2pE(boolean, boolean, long, long, long, long, float, float, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.compose.material3.SelectableChipColors filterChipColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.SelectableChipColors filterChipColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.SelectableChipColors filterChipColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color labelColor, optional androidx.compose.ui.graphics.Color iconColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledLabelColor, optional androidx.compose.ui.graphics.Color disabledLeadingIconColor, optional androidx.compose.ui.graphics.Color disabledTrailingIconColor, optional androidx.compose.ui.graphics.Color selectedContainerColor, optional androidx.compose.ui.graphics.Color disabledSelectedContainerColor, optional androidx.compose.ui.graphics.Color selectedLabelColor, optional androidx.compose.ui.graphics.Color selectedLeadingIconColor, optional androidx.compose.ui.graphics.Color selectedTrailingIconColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.SelectableChipColors filterChipColors-XqyqHi0(long, long, long, long, long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.SelectableChipElevation filterChipElevation(optional androidx.compose.ui.unit.Dp elevation, optional androidx.compose.ui.unit.Dp pressedElevation, optional androidx.compose.ui.unit.Dp focusedElevation, optional androidx.compose.ui.unit.Dp hoveredElevation, optional androidx.compose.ui.unit.Dp draggedElevation, optional androidx.compose.ui.unit.Dp disabledElevation);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.SelectableChipElevation filterChipElevation-aqJV_2Y(float, float, float, float, float, float, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly public float getHeight-D9Ej5fM();
    method @BytecodeOnly public float getIconSize-D9Ej5fM();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getShape(androidx.compose.runtime.Composer?, int);
    property public androidx.compose.ui.unit.Dp Height;
    property public androidx.compose.ui.unit.Dp IconSize;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape shape;
    field public static final androidx.compose.material3.FilterChipDefaults INSTANCE;
  }

  public final class FloatingActionButtonDefaults {
    method @KotlinOnly public androidx.compose.material3.FloatingActionButtonElevation bottomAppBarFabElevation(optional androidx.compose.ui.unit.Dp defaultElevation, optional androidx.compose.ui.unit.Dp pressedElevation, optional androidx.compose.ui.unit.Dp focusedElevation, optional androidx.compose.ui.unit.Dp hoveredElevation);
    method @BytecodeOnly public androidx.compose.material3.FloatingActionButtonElevation bottomAppBarFabElevation-a9UjIt4(float, float, float, float);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.FloatingActionButtonElevation elevation(optional androidx.compose.ui.unit.Dp defaultElevation, optional androidx.compose.ui.unit.Dp pressedElevation, optional androidx.compose.ui.unit.Dp focusedElevation, optional androidx.compose.ui.unit.Dp hoveredElevation);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.FloatingActionButtonElevation elevation-xZ9-QkE(float, float, float, float, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getContainerColor(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getExtendedFabShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getExtendedFabShape(androidx.compose.runtime.Composer?, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getLargeExtendedFabShape();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getLargeExtendedFabShape(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getLargeIconSize-D9Ej5fM();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getLargeShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getLargeShape(androidx.compose.runtime.Composer?, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getMediumExtendedFabShape();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getMediumExtendedFabShape(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public float getMediumIconSize-D9Ej5fM();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getMediumShape();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getMediumShape(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getShape(androidx.compose.runtime.Composer?, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getSmallExtendedFabShape();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getSmallExtendedFabShape(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getSmallShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getSmallShape(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.FloatingActionButtonElevation loweredElevation(optional androidx.compose.ui.unit.Dp defaultElevation, optional androidx.compose.ui.unit.Dp pressedElevation, optional androidx.compose.ui.unit.Dp focusedElevation, optional androidx.compose.ui.unit.Dp hoveredElevation);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.FloatingActionButtonElevation loweredElevation-xZ9-QkE(float, float, float, float, androidx.compose.runtime.Composer?, int, int);
    property public androidx.compose.ui.unit.Dp LargeIconSize;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.unit.Dp MediumIconSize;
    property public androidx.compose.ui.graphics.Color containerColor;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape extendedFabShape;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape largeExtendedFabShape;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape largeShape;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape mediumExtendedFabShape;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape mediumShape;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape shape;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape smallExtendedFabShape;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape smallShape;
    field public static final androidx.compose.material3.FloatingActionButtonDefaults INSTANCE;
  }

  @androidx.compose.runtime.Stable public class FloatingActionButtonElevation {
  }

  public final class FloatingActionButtonKt {
    method @KotlinOnly @androidx.compose.runtime.Composable public static void ExtendedFloatingActionButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.material3.FloatingActionButtonElevation elevation, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void ExtendedFloatingActionButton(kotlin.jvm.functions.Function0<kotlin.Unit> text, kotlin.jvm.functions.Function0<kotlin.Unit> icon, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional boolean expanded, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.material3.FloatingActionButtonElevation elevation, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void ExtendedFloatingActionButton-ElI5-7k(kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, androidx.compose.ui.graphics.Shape?, long, long, androidx.compose.material3.FloatingActionButtonElevation?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void ExtendedFloatingActionButton-X-z6DiA(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, androidx.compose.ui.graphics.Shape?, long, long, androidx.compose.material3.FloatingActionButtonElevation?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void FloatingActionButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.material3.FloatingActionButtonElevation elevation, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void FloatingActionButton-X-z6DiA(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, androidx.compose.ui.graphics.Shape?, long, long, androidx.compose.material3.FloatingActionButtonElevation?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void LargeExtendedFloatingActionButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.material3.FloatingActionButtonElevation elevation, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void LargeExtendedFloatingActionButton(kotlin.jvm.functions.Function0<kotlin.Unit> text, kotlin.jvm.functions.Function0<kotlin.Unit> icon, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional boolean expanded, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.material3.FloatingActionButtonElevation elevation, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void LargeExtendedFloatingActionButton-ElI5-7k(kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, androidx.compose.ui.graphics.Shape?, long, long, androidx.compose.material3.FloatingActionButtonElevation?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void LargeExtendedFloatingActionButton-X-z6DiA(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, androidx.compose.ui.graphics.Shape?, long, long, androidx.compose.material3.FloatingActionButtonElevation?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void LargeFloatingActionButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.material3.FloatingActionButtonElevation elevation, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void LargeFloatingActionButton-X-z6DiA(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, androidx.compose.ui.graphics.Shape?, long, long, androidx.compose.material3.FloatingActionButtonElevation?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void MediumExtendedFloatingActionButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.material3.FloatingActionButtonElevation elevation, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void MediumExtendedFloatingActionButton(kotlin.jvm.functions.Function0<kotlin.Unit> text, kotlin.jvm.functions.Function0<kotlin.Unit> icon, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional boolean expanded, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.material3.FloatingActionButtonElevation elevation, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void MediumExtendedFloatingActionButton-ElI5-7k(kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, androidx.compose.ui.graphics.Shape?, long, long, androidx.compose.material3.FloatingActionButtonElevation?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void MediumExtendedFloatingActionButton-X-z6DiA(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, androidx.compose.ui.graphics.Shape?, long, long, androidx.compose.material3.FloatingActionButtonElevation?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void MediumFloatingActionButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.material3.FloatingActionButtonElevation elevation, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void MediumFloatingActionButton-X-z6DiA(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, androidx.compose.ui.graphics.Shape?, long, long, androidx.compose.material3.FloatingActionButtonElevation?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void SmallExtendedFloatingActionButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.material3.FloatingActionButtonElevation elevation, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void SmallExtendedFloatingActionButton(kotlin.jvm.functions.Function0<kotlin.Unit> text, kotlin.jvm.functions.Function0<kotlin.Unit> icon, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional boolean expanded, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.material3.FloatingActionButtonElevation elevation, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void SmallExtendedFloatingActionButton-ElI5-7k(kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, androidx.compose.ui.graphics.Shape?, long, long, androidx.compose.material3.FloatingActionButtonElevation?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void SmallExtendedFloatingActionButton-X-z6DiA(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, androidx.compose.ui.graphics.Shape?, long, long, androidx.compose.material3.FloatingActionButtonElevation?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void SmallFloatingActionButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.material3.FloatingActionButtonElevation elevation, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void SmallFloatingActionButton-X-z6DiA(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, androidx.compose.ui.graphics.Shape?, long, long, androidx.compose.material3.FloatingActionButtonElevation?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public static androidx.compose.ui.Modifier animateFloatingActionButton(androidx.compose.ui.Modifier, boolean visible, androidx.compose.ui.Alignment alignment, optional float targetScale, optional androidx.compose.animation.core.AnimationSpec<java.lang.Float>? scaleAnimationSpec, optional androidx.compose.animation.core.AnimationSpec<java.lang.Float>? alphaAnimationSpec);
  }

  public final class FloatingActionButtonMenuKt {
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void FloatingActionButtonMenu(boolean expanded, kotlin.jvm.functions.Function0<kotlin.Unit> button, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Alignment.Horizontal horizontalAlignment, kotlin.jvm.functions.Function1<? super androidx.compose.material3.FloatingActionButtonMenuScope,kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void FloatingActionButtonMenu(boolean, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, androidx.compose.ui.Alignment.Horizontal?, kotlin.jvm.functions.Function3<? super androidx.compose.material3.FloatingActionButtonMenuScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void FloatingActionButtonMenuItem(androidx.compose.material3.FloatingActionButtonMenuScope, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, kotlin.jvm.functions.Function0<kotlin.Unit> text, kotlin.jvm.functions.Function0<kotlin.Unit> icon, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void FloatingActionButtonMenuItem-WMdw5o4(androidx.compose.material3.FloatingActionButtonMenuScope, kotlin.jvm.functions.Function0<kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, long, long, androidx.compose.runtime.Composer?, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void ToggleFloatingActionButton(boolean checked, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onCheckedChange, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function1<? super java.lang.Float,androidx.compose.ui.graphics.Color> containerColor, optional androidx.compose.ui.Alignment contentAlignment, optional kotlin.jvm.functions.Function1<? super java.lang.Float,androidx.compose.ui.unit.Dp> containerSize, optional kotlin.jvm.functions.Function1<? super java.lang.Float,androidx.compose.ui.unit.Dp> containerCornerRadius, kotlin.jvm.functions.Function1<? super androidx.compose.material3.ToggleFloatingActionButtonScope,kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void ToggleFloatingActionButton(boolean, kotlin.jvm.functions.Function1<? super java.lang.Boolean!,kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function1<? super java.lang.Float!,androidx.compose.ui.graphics.Color!>?, androidx.compose.ui.Alignment?, kotlin.jvm.functions.Function1<? super java.lang.Float!,androidx.compose.ui.unit.Dp!>?, kotlin.jvm.functions.Function1<? super java.lang.Float!,androidx.compose.ui.unit.Dp!>?, kotlin.jvm.functions.Function3<? super androidx.compose.material3.ToggleFloatingActionButtonScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public interface FloatingActionButtonMenuScope {
    method public androidx.compose.ui.Alignment.Horizontal getHorizontalAlignment();
    property public abstract androidx.compose.ui.Alignment.Horizontal horizontalAlignment;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Immutable public final class FloatingToolbarColors {
    ctor @KotlinOnly public FloatingToolbarColors(androidx.compose.ui.graphics.Color toolbarContainerColor, androidx.compose.ui.graphics.Color toolbarContentColor, androidx.compose.ui.graphics.Color fabContainerColor, androidx.compose.ui.graphics.Color fabContentColor);
    ctor @BytecodeOnly public FloatingToolbarColors(long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly public androidx.compose.material3.FloatingToolbarColors copy(optional androidx.compose.ui.graphics.Color toolbarContainerColor, optional androidx.compose.ui.graphics.Color toolbarContentColor, optional androidx.compose.ui.graphics.Color fabContainerColor, optional androidx.compose.ui.graphics.Color fabContentColor);
    method @BytecodeOnly public androidx.compose.material3.FloatingToolbarColors copy-jRlVdoo(long, long, long, long);
    method @BytecodeOnly public long getFabContainerColor-0d7_KjU();
    method @BytecodeOnly public long getFabContentColor-0d7_KjU();
    method @BytecodeOnly public long getToolbarContainerColor-0d7_KjU();
    method @BytecodeOnly public long getToolbarContentColor-0d7_KjU();
    property public androidx.compose.ui.graphics.Color fabContainerColor;
    property public androidx.compose.ui.graphics.Color fabContentColor;
    property public androidx.compose.ui.graphics.Color toolbarContainerColor;
    property public androidx.compose.ui.graphics.Color toolbarContentColor;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public final class FloatingToolbarDefaults {
    method @KotlinOnly @androidx.compose.runtime.Composable public void StandardFloatingActionButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public void StandardFloatingActionButton-vRFhKjU(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, androidx.compose.ui.graphics.Shape?, long, long, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public void VibrantFloatingActionButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public void VibrantFloatingActionButton-vRFhKjU(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, androidx.compose.ui.graphics.Shape?, long, long, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public <T> androidx.compose.animation.core.FiniteAnimationSpec<T> animationSpec();
    method @BytecodeOnly @androidx.compose.runtime.Composable public <T> androidx.compose.animation.core.FiniteAnimationSpec<T!> animationSpec(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.material3.FloatingToolbarScrollBehavior exitAlwaysScrollBehavior(androidx.compose.material3.FloatingToolbarExitDirection exitDirection, optional androidx.compose.material3.FloatingToolbarState state, optional androidx.compose.animation.core.AnimationSpec<java.lang.Float> snapAnimationSpec, optional androidx.compose.animation.core.DecayAnimationSpec<java.lang.Float> flingAnimationSpec);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.material3.FloatingToolbarScrollBehavior exitAlwaysScrollBehavior-YyGo6vs(int, androidx.compose.material3.FloatingToolbarState?, androidx.compose.animation.core.AnimationSpec<java.lang.Float!>?, androidx.compose.animation.core.DecayAnimationSpec<java.lang.Float!>?, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly public androidx.compose.ui.Modifier floatingToolbarVerticalNestedScroll(androidx.compose.ui.Modifier, boolean expanded, kotlin.jvm.functions.Function0<kotlin.Unit> onExpand, kotlin.jvm.functions.Function0<kotlin.Unit> onCollapse, optional androidx.compose.ui.unit.Dp expandScrollDistanceThreshold, optional androidx.compose.ui.unit.Dp collapseScrollDistanceThreshold, optional boolean reverseLayout);
    method @BytecodeOnly public androidx.compose.ui.Modifier floatingToolbarVerticalNestedScroll-gKdo67w(androidx.compose.ui.Modifier, boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>, kotlin.jvm.functions.Function0<kotlin.Unit!>, float, float, boolean);
    method @BytecodeOnly public float getContainerCollapsedElevation-D9Ej5fM();
    method @BytecodeOnly public float getContainerCollapsedElevationWithFab-D9Ej5fM();
    method @BytecodeOnly public float getContainerExpandedElevation-D9Ej5fM();
    method @BytecodeOnly public float getContainerExpandedElevationWithFab-D9Ej5fM();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getContainerShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getContainerShape(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getContainerSize-D9Ej5fM();
    method public androidx.compose.foundation.layout.PaddingValues getContentPadding();
    method @BytecodeOnly public float getScreenOffset-D9Ej5fM();
    method @BytecodeOnly public float getScrollDistanceThreshold-D9Ej5fM();
    method @androidx.compose.runtime.Composable public androidx.compose.animation.EnterTransition horizontalEnterTransition(androidx.compose.ui.Alignment.Horizontal expandFrom);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.animation.EnterTransition horizontalEnterTransition(androidx.compose.ui.Alignment.Horizontal, androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.animation.ExitTransition horizontalExitTransition(androidx.compose.ui.Alignment.Horizontal shrinkTowards);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.animation.ExitTransition horizontalExitTransition(androidx.compose.ui.Alignment.Horizontal, androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.material3.FloatingToolbarColors standardFloatingToolbarColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.FloatingToolbarColors standardFloatingToolbarColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.FloatingToolbarColors standardFloatingToolbarColors(optional androidx.compose.ui.graphics.Color toolbarContainerColor, optional androidx.compose.ui.graphics.Color toolbarContentColor, optional androidx.compose.ui.graphics.Color fabContainerColor, optional androidx.compose.ui.graphics.Color fabContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.FloatingToolbarColors standardFloatingToolbarColors-ro_MJ88(long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.compose.animation.EnterTransition verticalEnterTransition(androidx.compose.ui.Alignment.Vertical expandFrom);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.animation.EnterTransition verticalEnterTransition(androidx.compose.ui.Alignment.Vertical, androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.animation.ExitTransition verticalExitTransition(androidx.compose.ui.Alignment.Vertical shrinkTowards);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.animation.ExitTransition verticalExitTransition(androidx.compose.ui.Alignment.Vertical, androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.material3.FloatingToolbarColors vibrantFloatingToolbarColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.FloatingToolbarColors vibrantFloatingToolbarColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.FloatingToolbarColors vibrantFloatingToolbarColors(optional androidx.compose.ui.graphics.Color toolbarContainerColor, optional androidx.compose.ui.graphics.Color toolbarContentColor, optional androidx.compose.ui.graphics.Color fabContainerColor, optional androidx.compose.ui.graphics.Color fabContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.FloatingToolbarColors vibrantFloatingToolbarColors-ro_MJ88(long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    property public androidx.compose.ui.unit.Dp ContainerCollapsedElevation;
    property public androidx.compose.ui.unit.Dp ContainerCollapsedElevationWithFab;
    property public androidx.compose.ui.unit.Dp ContainerExpandedElevation;
    property public androidx.compose.ui.unit.Dp ContainerExpandedElevationWithFab;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape ContainerShape;
    property public androidx.compose.ui.unit.Dp ContainerSize;
    property public androidx.compose.foundation.layout.PaddingValues ContentPadding;
    property public androidx.compose.ui.unit.Dp ScreenOffset;
    property public androidx.compose.ui.unit.Dp ScrollDistanceThreshold;
    field public static final androidx.compose.material3.FloatingToolbarDefaults INSTANCE;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @kotlin.jvm.JvmInline public final value class FloatingToolbarExitDirection {
    method @BytecodeOnly public static androidx.compose.material3.FloatingToolbarExitDirection! box-impl(int);
    method @BytecodeOnly public int unbox-impl();
    field public static final androidx.compose.material3.FloatingToolbarExitDirection.Companion Companion;
  }

  public static final class FloatingToolbarExitDirection.Companion {
    method @BytecodeOnly public int getBottom-8LIK8-E();
    method @BytecodeOnly public int getEnd-8LIK8-E();
    method @BytecodeOnly public int getStart-8LIK8-E();
    method @BytecodeOnly public int getTop-8LIK8-E();
    property public androidx.compose.material3.FloatingToolbarExitDirection Bottom;
    property public androidx.compose.material3.FloatingToolbarExitDirection End;
    property public androidx.compose.material3.FloatingToolbarExitDirection Start;
    property public androidx.compose.material3.FloatingToolbarExitDirection Top;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @kotlin.jvm.JvmInline public final value class FloatingToolbarHorizontalFabPosition {
    method @BytecodeOnly public static androidx.compose.material3.FloatingToolbarHorizontalFabPosition! box-impl(int);
    method @BytecodeOnly public int unbox-impl();
    field public static final androidx.compose.material3.FloatingToolbarHorizontalFabPosition.Companion Companion;
  }

  public static final class FloatingToolbarHorizontalFabPosition.Companion {
    method @BytecodeOnly public int getEnd-EdPuMIg();
    method @BytecodeOnly public int getStart-EdPuMIg();
    property public androidx.compose.material3.FloatingToolbarHorizontalFabPosition End;
    property public androidx.compose.material3.FloatingToolbarHorizontalFabPosition Start;
  }

  public final class FloatingToolbarKt {
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public static androidx.compose.material3.FloatingToolbarState FloatingToolbarState(float initialOffsetLimit, float initialOffset, float initialContentOffset);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void HorizontalFloatingToolbar(boolean expanded, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.material3.FloatingToolbarColors colors, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.material3.FloatingToolbarScrollBehavior? scrollBehavior, optional androidx.compose.ui.graphics.Shape shape, optional kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit>? leadingContent, optional kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit>? trailingContent, optional androidx.compose.ui.unit.Dp expandedShadowElevation, optional androidx.compose.ui.unit.Dp collapsedShadowElevation, kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void HorizontalFloatingToolbar(boolean expanded, kotlin.jvm.functions.Function0<kotlin.Unit> floatingActionButton, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.material3.FloatingToolbarColors colors, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.material3.FloatingToolbarScrollBehavior? scrollBehavior, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.FloatingToolbarHorizontalFabPosition floatingActionButtonPosition, optional androidx.compose.animation.core.FiniteAnimationSpec<java.lang.Float> animationSpec, optional androidx.compose.ui.unit.Dp expandedShadowElevation, optional androidx.compose.ui.unit.Dp collapsedShadowElevation, kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void HorizontalFloatingToolbar-LJWHXA8(boolean, androidx.compose.ui.Modifier?, androidx.compose.material3.FloatingToolbarColors?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.material3.FloatingToolbarScrollBehavior?, androidx.compose.ui.graphics.Shape?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, float, float, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void HorizontalFloatingToolbar-ekznXB8(boolean, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, androidx.compose.material3.FloatingToolbarColors?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.material3.FloatingToolbarScrollBehavior?, androidx.compose.ui.graphics.Shape?, int, androidx.compose.animation.core.FiniteAnimationSpec<java.lang.Float!>?, float, float, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void VerticalFloatingToolbar(boolean expanded, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.material3.FloatingToolbarColors colors, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.material3.FloatingToolbarScrollBehavior? scrollBehavior, optional androidx.compose.ui.graphics.Shape shape, optional kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.ColumnScope,kotlin.Unit>? leadingContent, optional kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.ColumnScope,kotlin.Unit>? trailingContent, optional androidx.compose.ui.unit.Dp expandedShadowElevation, optional androidx.compose.ui.unit.Dp collapsedShadowElevation, kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> content);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void VerticalFloatingToolbar(boolean expanded, kotlin.jvm.functions.Function0<kotlin.Unit> floatingActionButton, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.material3.FloatingToolbarColors colors, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.material3.FloatingToolbarScrollBehavior? scrollBehavior, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.FloatingToolbarVerticalFabPosition floatingActionButtonPosition, optional androidx.compose.animation.core.FiniteAnimationSpec<java.lang.Float> animationSpec, optional androidx.compose.ui.unit.Dp expandedShadowElevation, optional androidx.compose.ui.unit.Dp collapsedShadowElevation, kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void VerticalFloatingToolbar-LJWHXA8(boolean, androidx.compose.ui.Modifier?, androidx.compose.material3.FloatingToolbarColors?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.material3.FloatingToolbarScrollBehavior?, androidx.compose.ui.graphics.Shape?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, float, float, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void VerticalFloatingToolbar-NTTHHFE(boolean, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, androidx.compose.material3.FloatingToolbarColors?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.material3.FloatingToolbarScrollBehavior?, androidx.compose.ui.graphics.Shape?, int, androidx.compose.animation.core.FiniteAnimationSpec<java.lang.Float!>?, float, float, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.material3.HorizontalFloatingToolbarOverride> getLocalHorizontalFloatingToolbarOverride();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.material3.HorizontalFloatingToolbarWithFabOverride> getLocalHorizontalFloatingToolbarWithFabOverride();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.material3.VerticalFloatingToolbarOverride> getLocalVerticalToolbarOverride();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.material3.VerticalFloatingToolbarWithFabOverride> getLocalVerticalToolbarWithFabOverride();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static androidx.compose.material3.FloatingToolbarState rememberFloatingToolbarState(optional float initialOffsetLimit, optional float initialOffset, optional float initialContentOffset);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static androidx.compose.material3.FloatingToolbarState rememberFloatingToolbarState(float, float, float, androidx.compose.runtime.Composer?, int, int);
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.material3.HorizontalFloatingToolbarOverride> LocalHorizontalFloatingToolbarOverride;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.material3.HorizontalFloatingToolbarWithFabOverride> LocalHorizontalFloatingToolbarWithFabOverride;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.material3.VerticalFloatingToolbarOverride> LocalVerticalToolbarOverride;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.material3.VerticalFloatingToolbarWithFabOverride> LocalVerticalToolbarWithFabOverride;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Stable public sealed interface FloatingToolbarScrollBehavior extends androidx.compose.ui.input.nestedscroll.NestedScrollConnection {
    method public androidx.compose.ui.Modifier floatingScrollBehavior(androidx.compose.ui.Modifier);
    method @BytecodeOnly public int getExitDirection-8LIK8-E();
    method public androidx.compose.animation.core.DecayAnimationSpec<java.lang.Float> getFlingAnimationSpec();
    method public androidx.compose.animation.core.AnimationSpec<java.lang.Float> getSnapAnimationSpec();
    method public androidx.compose.material3.FloatingToolbarState getState();
    property public abstract androidx.compose.material3.FloatingToolbarExitDirection exitDirection;
    property public abstract androidx.compose.animation.core.DecayAnimationSpec<java.lang.Float> flingAnimationSpec;
    property public abstract androidx.compose.animation.core.AnimationSpec<java.lang.Float> snapAnimationSpec;
    property public abstract androidx.compose.material3.FloatingToolbarState state;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public interface FloatingToolbarState {
    method public float getContentOffset();
    method public float getOffset();
    method public float getOffsetLimit();
    method public void setContentOffset(float);
    method public void setOffset(float);
    method public void setOffsetLimit(float);
    property public abstract float contentOffset;
    property public abstract float offset;
    property public abstract float offsetLimit;
    field public static final androidx.compose.material3.FloatingToolbarState.Companion Companion;
  }

  public static final class FloatingToolbarState.Companion {
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @kotlin.jvm.JvmInline public final value class FloatingToolbarVerticalFabPosition {
    method @BytecodeOnly public static androidx.compose.material3.FloatingToolbarVerticalFabPosition! box-impl(int);
    method @BytecodeOnly public int unbox-impl();
    field public static final androidx.compose.material3.FloatingToolbarVerticalFabPosition.Companion Companion;
  }

  public static final class FloatingToolbarVerticalFabPosition.Companion {
    method @BytecodeOnly public int getBottom-dDJPGzU();
    method @BytecodeOnly public int getTop-dDJPGzU();
    property public androidx.compose.material3.FloatingToolbarVerticalFabPosition Bottom;
    property public androidx.compose.material3.FloatingToolbarVerticalFabPosition Top;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public interface HorizontalFloatingToolbarOverride {
    method @androidx.compose.runtime.Composable public void HorizontalFloatingToolbar(androidx.compose.material3.HorizontalFloatingToolbarOverrideScope);
    method @BytecodeOnly @androidx.compose.runtime.Composable public void HorizontalFloatingToolbar(androidx.compose.material3.HorizontalFloatingToolbarOverrideScope, androidx.compose.runtime.Composer?, int);
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public final class HorizontalFloatingToolbarOverrideScope {
    method @BytecodeOnly public float getCollapsedShadowElevation-D9Ej5fM();
    method public androidx.compose.material3.FloatingToolbarColors getColors();
    method public kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit> getContent();
    method public androidx.compose.foundation.layout.PaddingValues getContentPadding();
    method @BytecodeOnly public float getExpandedShadowElevation-D9Ej5fM();
    method public kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit>? getLeadingContent();
    method public androidx.compose.ui.Modifier getModifier();
    method public androidx.compose.material3.FloatingToolbarScrollBehavior? getScrollBehavior();
    method public androidx.compose.ui.graphics.Shape getShape();
    method public kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit>? getTrailingContent();
    method public boolean isExpanded();
    property public androidx.compose.ui.unit.Dp collapsedShadowElevation;
    property public androidx.compose.material3.FloatingToolbarColors colors;
    property public kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit> content;
    property public androidx.compose.foundation.layout.PaddingValues contentPadding;
    property public androidx.compose.ui.unit.Dp expandedShadowElevation;
    property public boolean isExpanded;
    property public kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit>? leadingContent;
    property public androidx.compose.ui.Modifier modifier;
    property public androidx.compose.material3.FloatingToolbarScrollBehavior? scrollBehavior;
    property public androidx.compose.ui.graphics.Shape shape;
    property public kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit>? trailingContent;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public interface HorizontalFloatingToolbarWithFabOverride {
    method @androidx.compose.runtime.Composable public void HorizontalFloatingToolbarWithFab(androidx.compose.material3.HorizontalFloatingToolbarWithFabOverrideScope);
    method @BytecodeOnly @androidx.compose.runtime.Composable public void HorizontalFloatingToolbarWithFab(androidx.compose.material3.HorizontalFloatingToolbarWithFabOverrideScope, androidx.compose.runtime.Composer?, int);
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public final class HorizontalFloatingToolbarWithFabOverrideScope {
    method public androidx.compose.animation.core.FiniteAnimationSpec<java.lang.Float> getAnimationSpec();
    method @BytecodeOnly public float getCollapsedShadowElevation-D9Ej5fM();
    method public androidx.compose.material3.FloatingToolbarColors getColors();
    method public kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit> getContent();
    method public androidx.compose.foundation.layout.PaddingValues getContentPadding();
    method @BytecodeOnly public float getExpandedShadowElevation-D9Ej5fM();
    method public kotlin.jvm.functions.Function0<kotlin.Unit> getFloatingActionButton();
    method @BytecodeOnly public int getFloatingActionButtonPosition-EdPuMIg();
    method public androidx.compose.ui.Modifier getModifier();
    method public androidx.compose.material3.FloatingToolbarScrollBehavior? getScrollBehavior();
    method public androidx.compose.ui.graphics.Shape getShape();
    method public boolean isExpanded();
    property public androidx.compose.animation.core.FiniteAnimationSpec<java.lang.Float> animationSpec;
    property public androidx.compose.ui.unit.Dp collapsedShadowElevation;
    property public androidx.compose.material3.FloatingToolbarColors colors;
    property public kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit> content;
    property public androidx.compose.foundation.layout.PaddingValues contentPadding;
    property public androidx.compose.ui.unit.Dp expandedShadowElevation;
    property public kotlin.jvm.functions.Function0<kotlin.Unit> floatingActionButton;
    property public androidx.compose.material3.FloatingToolbarHorizontalFabPosition floatingActionButtonPosition;
    property public boolean isExpanded;
    property public androidx.compose.ui.Modifier modifier;
    property public androidx.compose.material3.FloatingToolbarScrollBehavior? scrollBehavior;
    property public androidx.compose.ui.graphics.Shape shape;
  }

  @androidx.compose.runtime.Immutable public final class IconButtonColors {
    ctor @KotlinOnly public IconButtonColors(androidx.compose.ui.graphics.Color containerColor, androidx.compose.ui.graphics.Color contentColor, androidx.compose.ui.graphics.Color disabledContainerColor, androidx.compose.ui.graphics.Color disabledContentColor);
    ctor @BytecodeOnly public IconButtonColors(long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly public androidx.compose.material3.IconButtonColors copy(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledContentColor);
    method @BytecodeOnly public androidx.compose.material3.IconButtonColors copy-jRlVdoo(long, long, long, long);
    method @BytecodeOnly public long getContainerColor-0d7_KjU();
    method @BytecodeOnly public long getContentColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledContainerColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledContentColor-0d7_KjU();
    property public androidx.compose.ui.graphics.Color containerColor;
    property public androidx.compose.ui.graphics.Color contentColor;
    property public androidx.compose.ui.graphics.Color disabledContainerColor;
    property public androidx.compose.ui.graphics.Color disabledContentColor;
  }

  public final class IconButtonDefaults {
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.unit.DpSize extraLargeContainerSize(optional androidx.compose.material3.IconButtonDefaults.IconButtonWidthOption widthOption);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public long extraLargeContainerSize-N-wlBFI(int);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.unit.DpSize extraSmallContainerSize(optional androidx.compose.material3.IconButtonDefaults.IconButtonWidthOption widthOption);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public long extraSmallContainerSize-N-wlBFI(int);
    method @androidx.compose.runtime.Composable public androidx.compose.material3.IconButtonColors filledIconButtonColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.IconButtonColors filledIconButtonColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.IconButtonColors filledIconButtonColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.IconButtonColors filledIconButtonColors-ro_MJ88(long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.compose.material3.IconToggleButtonColors filledIconToggleButtonColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.IconToggleButtonColors filledIconToggleButtonColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.IconToggleButtonColors filledIconToggleButtonColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledContentColor, optional androidx.compose.ui.graphics.Color checkedContainerColor, optional androidx.compose.ui.graphics.Color checkedContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.IconToggleButtonColors filledIconToggleButtonColors-5tl4gsc(long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.compose.material3.IconButtonColors filledTonalIconButtonColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.IconButtonColors filledTonalIconButtonColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.IconButtonColors filledTonalIconButtonColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.IconButtonColors filledTonalIconButtonColors-ro_MJ88(long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.compose.material3.IconToggleButtonColors filledTonalIconToggleButtonColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.IconToggleButtonColors filledTonalIconToggleButtonColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.IconToggleButtonColors filledTonalIconToggleButtonColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledContentColor, optional androidx.compose.ui.graphics.Color checkedContainerColor, optional androidx.compose.ui.graphics.Color checkedContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.IconToggleButtonColors filledTonalIconToggleButtonColors-5tl4gsc(long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public float getExtraLargeIconSize-D9Ej5fM();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getExtraLargePressedShape();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getExtraLargePressedShape(androidx.compose.runtime.Composer?, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getExtraLargeRoundShape();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getExtraLargeRoundShape(androidx.compose.runtime.Composer?, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getExtraLargeSelectedRoundShape();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getExtraLargeSelectedRoundShape(androidx.compose.runtime.Composer?, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getExtraLargeSelectedSquareShape();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getExtraLargeSelectedSquareShape(androidx.compose.runtime.Composer?, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getExtraLargeSquareShape();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getExtraLargeSquareShape(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public float getExtraSmallIconSize-D9Ej5fM();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getExtraSmallPressedShape();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getExtraSmallPressedShape(androidx.compose.runtime.Composer?, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getExtraSmallRoundShape();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getExtraSmallRoundShape(androidx.compose.runtime.Composer?, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getExtraSmallSelectedRoundShape();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getExtraSmallSelectedRoundShape(androidx.compose.runtime.Composer?, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getExtraSmallSelectedSquareShape();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getExtraSmallSelectedSquareShape(androidx.compose.runtime.Composer?, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getExtraSmallSquareShape();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getExtraSmallSquareShape(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getFilledShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getFilledShape(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public float getLargeIconSize-D9Ej5fM();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getLargePressedShape();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getLargePressedShape(androidx.compose.runtime.Composer?, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getLargeRoundShape();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getLargeRoundShape(androidx.compose.runtime.Composer?, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getLargeSelectedRoundShape();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getLargeSelectedRoundShape(androidx.compose.runtime.Composer?, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getLargeSelectedSquareShape();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getLargeSelectedSquareShape(androidx.compose.runtime.Composer?, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getLargeSquareShape();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getLargeSquareShape(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public float getMediumIconSize-D9Ej5fM();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getMediumPressedShape();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getMediumPressedShape(androidx.compose.runtime.Composer?, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getMediumRoundShape();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getMediumRoundShape(androidx.compose.runtime.Composer?, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getMediumSelectedRoundShape();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getMediumSelectedRoundShape(androidx.compose.runtime.Composer?, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getMediumSelectedSquareShape();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getMediumSelectedSquareShape(androidx.compose.runtime.Composer?, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getMediumSquareShape();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getMediumSquareShape(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getOutlinedShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getOutlinedShape(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public float getSmallIconSize-D9Ej5fM();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getSmallPressedShape();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getSmallPressedShape(androidx.compose.runtime.Composer?, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getSmallRoundShape();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getSmallRoundShape(androidx.compose.runtime.Composer?, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getSmallSelectedRoundShape();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getSmallSelectedRoundShape(androidx.compose.runtime.Composer?, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getSmallSelectedSquareShape();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getSmallSelectedSquareShape(androidx.compose.runtime.Composer?, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getSmallSquareShape();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getSmallSquareShape(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getStandardShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getStandardShape(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.material3.IconButtonColors iconButtonColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.IconButtonColors iconButtonColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.IconButtonColors iconButtonColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.IconButtonColors iconButtonColors-ro_MJ88(long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.compose.material3.IconButtonColors iconButtonVibrantColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.IconButtonColors iconButtonVibrantColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.IconButtonColors iconButtonVibrantColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.IconButtonColors iconButtonVibrantColors-ro_MJ88(long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.compose.material3.IconToggleButtonColors iconToggleButtonColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.IconToggleButtonColors iconToggleButtonColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.IconToggleButtonColors iconToggleButtonColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledContentColor, optional androidx.compose.ui.graphics.Color checkedContainerColor, optional androidx.compose.ui.graphics.Color checkedContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.IconToggleButtonColors iconToggleButtonColors-5tl4gsc(long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.compose.material3.IconToggleButtonColors iconToggleButtonVibrantColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.IconToggleButtonColors iconToggleButtonVibrantColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.IconToggleButtonColors iconToggleButtonVibrantColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledContentColor, optional androidx.compose.ui.graphics.Color checkedContainerColor, optional androidx.compose.ui.graphics.Color checkedContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.IconToggleButtonColors iconToggleButtonVibrantColors-5tl4gsc(long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.unit.DpSize largeContainerSize(optional androidx.compose.material3.IconButtonDefaults.IconButtonWidthOption widthOption);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public long largeContainerSize-N-wlBFI(int);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.unit.DpSize mediumContainerSize(optional androidx.compose.material3.IconButtonDefaults.IconButtonWidthOption widthOption);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public long mediumContainerSize-N-wlBFI(int);
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.BorderStroke outlinedIconButtonBorder(boolean enabled);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.BorderStroke outlinedIconButtonBorder(boolean, androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.material3.IconButtonColors outlinedIconButtonColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.IconButtonColors outlinedIconButtonColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.IconButtonColors outlinedIconButtonColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.IconButtonColors outlinedIconButtonColors-ro_MJ88(long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.BorderStroke outlinedIconButtonVibrantBorder(boolean enabled);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.BorderStroke outlinedIconButtonVibrantBorder(boolean, androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.material3.IconButtonColors outlinedIconButtonVibrantColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.IconButtonColors outlinedIconButtonVibrantColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.IconButtonColors outlinedIconButtonVibrantColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.IconButtonColors outlinedIconButtonVibrantColors-ro_MJ88(long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.BorderStroke? outlinedIconToggleButtonBorder(boolean enabled, boolean checked);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.BorderStroke? outlinedIconToggleButtonBorder(boolean, boolean, androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.material3.IconToggleButtonColors outlinedIconToggleButtonColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.IconToggleButtonColors outlinedIconToggleButtonColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.IconToggleButtonColors outlinedIconToggleButtonColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledContentColor, optional androidx.compose.ui.graphics.Color checkedContainerColor, optional androidx.compose.ui.graphics.Color checkedContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.IconToggleButtonColors outlinedIconToggleButtonColors-5tl4gsc(long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.BorderStroke? outlinedIconToggleButtonVibrantBorder(boolean enabled, boolean checked);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.BorderStroke? outlinedIconToggleButtonVibrantBorder(boolean, boolean, androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.material3.IconToggleButtonColors outlinedIconToggleButtonVibrantColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.IconToggleButtonColors outlinedIconToggleButtonVibrantColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.IconToggleButtonColors outlinedIconToggleButtonVibrantColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledContentColor, optional androidx.compose.ui.graphics.Color checkedContainerColor, optional androidx.compose.ui.graphics.Color checkedContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.IconToggleButtonColors outlinedIconToggleButtonVibrantColors-5tl4gsc(long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.material3.IconButtonShapes shapes();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.material3.IconButtonShapes shapes(androidx.compose.runtime.Composer?, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.material3.IconButtonShapes shapes(optional androidx.compose.ui.graphics.Shape? shape, optional androidx.compose.ui.graphics.Shape? pressedShape);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.material3.IconButtonShapes shapes(androidx.compose.ui.graphics.Shape?, androidx.compose.ui.graphics.Shape?, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.unit.DpSize smallContainerSize(optional androidx.compose.material3.IconButtonDefaults.IconButtonWidthOption widthOption);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public long smallContainerSize-N-wlBFI(int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.material3.IconToggleButtonShapes toggleableShapes();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.material3.IconToggleButtonShapes toggleableShapes(androidx.compose.runtime.Composer?, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.material3.IconToggleButtonShapes toggleableShapes(optional androidx.compose.ui.graphics.Shape? shape, optional androidx.compose.ui.graphics.Shape? pressedShape, optional androidx.compose.ui.graphics.Shape? checkedShape);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.material3.IconToggleButtonShapes toggleableShapes(androidx.compose.ui.graphics.Shape?, androidx.compose.ui.graphics.Shape?, androidx.compose.ui.graphics.Shape?, androidx.compose.runtime.Composer?, int, int);
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape SmallSelectedSquareShape;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.unit.Dp extraLargeIconSize;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape extraLargePressedShape;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape extraLargeRoundShape;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape extraLargeSelectedRoundShape;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape extraLargeSelectedSquareShape;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape extraLargeSquareShape;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.unit.Dp extraSmallIconSize;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape extraSmallPressedShape;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape extraSmallRoundShape;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape extraSmallSelectedRoundShape;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape extraSmallSelectedSquareShape;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape extraSmallSquareShape;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape filledShape;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.unit.Dp largeIconSize;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape largePressedShape;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape largeRoundShape;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape largeSelectedRoundShape;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape largeSelectedSquareShape;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape largeSquareShape;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.unit.Dp mediumIconSize;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape mediumPressedShape;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape mediumRoundShape;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape mediumSelectedRoundShape;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape mediumSelectedSquareShape;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape mediumSquareShape;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape outlinedShape;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.unit.Dp smallIconSize;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape smallPressedShape;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape smallRoundShape;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape smallSelectedRoundShape;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape smallSquareShape;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape standardShape;
    field public static final androidx.compose.material3.IconButtonDefaults INSTANCE;
  }

  @kotlin.jvm.JvmInline public static final value class IconButtonDefaults.IconButtonWidthOption {
    method @BytecodeOnly public static androidx.compose.material3.IconButtonDefaults.IconButtonWidthOption! box-impl(int);
    method @BytecodeOnly public int unbox-impl();
    field public static final androidx.compose.material3.IconButtonDefaults.IconButtonWidthOption.Companion Companion;
  }

  public static final class IconButtonDefaults.IconButtonWidthOption.Companion {
    method @BytecodeOnly public int getNarrow-rc6NtMs();
    method @BytecodeOnly public int getUniform-rc6NtMs();
    method @BytecodeOnly public int getWide-rc6NtMs();
    property public androidx.compose.material3.IconButtonDefaults.IconButtonWidthOption Narrow;
    property public androidx.compose.material3.IconButtonDefaults.IconButtonWidthOption Uniform;
    property public androidx.compose.material3.IconButtonDefaults.IconButtonWidthOption Wide;
  }

  public final class IconButtonKt {
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void FilledIconButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, androidx.compose.material3.IconButtonShapes shapes, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.material3.IconButtonColors colors, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void FilledIconButton(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.material3.IconButtonShapes, androidx.compose.ui.Modifier?, boolean, androidx.compose.material3.IconButtonColors?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void FilledIconButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.IconButtonColors colors, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void FilledIconButton(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.IconButtonColors?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void FilledIconToggleButton(boolean checked, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onCheckedChange, androidx.compose.material3.IconToggleButtonShapes shapes, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.material3.IconToggleButtonColors colors, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void FilledIconToggleButton(boolean, kotlin.jvm.functions.Function1<? super java.lang.Boolean!,kotlin.Unit!>, androidx.compose.material3.IconToggleButtonShapes, androidx.compose.ui.Modifier?, boolean, androidx.compose.material3.IconToggleButtonColors?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void FilledIconToggleButton(boolean checked, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onCheckedChange, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.IconToggleButtonColors colors, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void FilledIconToggleButton(boolean, kotlin.jvm.functions.Function1<? super java.lang.Boolean!,kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.IconToggleButtonColors?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void FilledTonalIconButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, androidx.compose.material3.IconButtonShapes shapes, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.material3.IconButtonColors colors, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void FilledTonalIconButton(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.material3.IconButtonShapes, androidx.compose.ui.Modifier?, boolean, androidx.compose.material3.IconButtonColors?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void FilledTonalIconButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.IconButtonColors colors, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void FilledTonalIconButton(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.IconButtonColors?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void FilledTonalIconToggleButton(boolean checked, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onCheckedChange, androidx.compose.material3.IconToggleButtonShapes shapes, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.material3.IconToggleButtonColors colors, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void FilledTonalIconToggleButton(boolean, kotlin.jvm.functions.Function1<? super java.lang.Boolean!,kotlin.Unit!>, androidx.compose.material3.IconToggleButtonShapes, androidx.compose.ui.Modifier?, boolean, androidx.compose.material3.IconToggleButtonColors?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void FilledTonalIconToggleButton(boolean checked, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onCheckedChange, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.IconToggleButtonColors colors, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void FilledTonalIconToggleButton(boolean, kotlin.jvm.functions.Function1<? super java.lang.Boolean!,kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.IconToggleButtonColors?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable public static void IconButton(kotlin.jvm.functions.Function0!, androidx.compose.ui.Modifier!, boolean, androidx.compose.material3.IconButtonColors!, androidx.compose.foundation.interaction.MutableInteractionSource!, kotlin.jvm.functions.Function2!, androidx.compose.runtime.Composer!, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void IconButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, androidx.compose.material3.IconButtonShapes shapes, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.material3.IconButtonColors colors, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void IconButton(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.material3.IconButtonShapes, androidx.compose.ui.Modifier?, boolean, androidx.compose.material3.IconButtonColors?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void IconButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.material3.IconButtonColors colors, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, optional androidx.compose.ui.graphics.Shape shape, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void IconButton(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, androidx.compose.material3.IconButtonColors?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.ui.graphics.Shape?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable public static void IconToggleButton(boolean, kotlin.jvm.functions.Function1!, androidx.compose.ui.Modifier!, boolean, androidx.compose.material3.IconToggleButtonColors!, androidx.compose.foundation.interaction.MutableInteractionSource!, kotlin.jvm.functions.Function2!, androidx.compose.runtime.Composer!, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void IconToggleButton(boolean checked, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onCheckedChange, androidx.compose.material3.IconToggleButtonShapes shapes, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.material3.IconToggleButtonColors colors, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void IconToggleButton(boolean, kotlin.jvm.functions.Function1<? super java.lang.Boolean!,kotlin.Unit!>, androidx.compose.material3.IconToggleButtonShapes, androidx.compose.ui.Modifier?, boolean, androidx.compose.material3.IconToggleButtonColors?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void IconToggleButton(boolean checked, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onCheckedChange, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.material3.IconToggleButtonColors colors, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, optional androidx.compose.ui.graphics.Shape shape, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void IconToggleButton(boolean, kotlin.jvm.functions.Function1<? super java.lang.Boolean!,kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, androidx.compose.material3.IconToggleButtonColors?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.ui.graphics.Shape?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void OutlinedIconButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, androidx.compose.material3.IconButtonShapes shapes, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.material3.IconButtonColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void OutlinedIconButton(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.material3.IconButtonShapes, androidx.compose.ui.Modifier?, boolean, androidx.compose.material3.IconButtonColors?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void OutlinedIconButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.IconButtonColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void OutlinedIconButton(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.IconButtonColors?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void OutlinedIconToggleButton(boolean checked, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onCheckedChange, androidx.compose.material3.IconToggleButtonShapes shapes, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.material3.IconToggleButtonColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void OutlinedIconToggleButton(boolean, kotlin.jvm.functions.Function1<? super java.lang.Boolean!,kotlin.Unit!>, androidx.compose.material3.IconToggleButtonShapes, androidx.compose.ui.Modifier?, boolean, androidx.compose.material3.IconToggleButtonColors?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void OutlinedIconToggleButton(boolean checked, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onCheckedChange, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.IconToggleButtonColors colors, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void OutlinedIconToggleButton(boolean, kotlin.jvm.functions.Function1<? super java.lang.Boolean!,kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.IconToggleButtonColors?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public final class IconButtonShapes {
    ctor public IconButtonShapes(androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Shape pressedShape);
    method public androidx.compose.material3.IconButtonShapes copy(optional androidx.compose.ui.graphics.Shape? shape, optional androidx.compose.ui.graphics.Shape? pressedShape);
    method public androidx.compose.ui.graphics.Shape getPressedShape();
    method public androidx.compose.ui.graphics.Shape getShape();
    property public androidx.compose.ui.graphics.Shape pressedShape;
    property public androidx.compose.ui.graphics.Shape shape;
  }

  public final class IconKt {
    method @KotlinOnly @androidx.compose.runtime.Composable public static void Icon(androidx.compose.ui.graphics.ImageBitmap bitmap, String? contentDescription, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color tint);
    method @androidx.compose.runtime.Composable public static void Icon(androidx.compose.ui.graphics.painter.Painter painter, androidx.compose.ui.graphics.ColorProducer? tint, String? contentDescription, optional androidx.compose.ui.Modifier modifier);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void Icon(androidx.compose.ui.graphics.painter.Painter, androidx.compose.ui.graphics.ColorProducer?, String?, androidx.compose.ui.Modifier?, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void Icon(androidx.compose.ui.graphics.painter.Painter painter, String? contentDescription, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color tint);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void Icon(androidx.compose.ui.graphics.vector.ImageVector imageVector, String? contentDescription, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color tint);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void Icon-ww6aTOc(androidx.compose.ui.graphics.ImageBitmap, String?, androidx.compose.ui.Modifier?, long, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void Icon-ww6aTOc(androidx.compose.ui.graphics.painter.Painter, String?, androidx.compose.ui.Modifier?, long, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void Icon-ww6aTOc(androidx.compose.ui.graphics.vector.ImageVector, String?, androidx.compose.ui.Modifier?, long, androidx.compose.runtime.Composer?, int, int);
  }

  @androidx.compose.runtime.Immutable public final class IconToggleButtonColors {
    ctor @KotlinOnly public IconToggleButtonColors(androidx.compose.ui.graphics.Color containerColor, androidx.compose.ui.graphics.Color contentColor, androidx.compose.ui.graphics.Color disabledContainerColor, androidx.compose.ui.graphics.Color disabledContentColor, androidx.compose.ui.graphics.Color checkedContainerColor, androidx.compose.ui.graphics.Color checkedContentColor);
    ctor @BytecodeOnly public IconToggleButtonColors(long, long, long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly public androidx.compose.material3.IconToggleButtonColors copy(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledContentColor, optional androidx.compose.ui.graphics.Color checkedContainerColor, optional androidx.compose.ui.graphics.Color checkedContentColor);
    method @BytecodeOnly public androidx.compose.material3.IconToggleButtonColors copy-tNS2XkQ(long, long, long, long, long, long);
    method @BytecodeOnly public long getCheckedContainerColor-0d7_KjU();
    method @BytecodeOnly public long getCheckedContentColor-0d7_KjU();
    method @BytecodeOnly public long getContainerColor-0d7_KjU();
    method @BytecodeOnly public long getContentColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledContainerColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledContentColor-0d7_KjU();
    property public androidx.compose.ui.graphics.Color checkedContainerColor;
    property public androidx.compose.ui.graphics.Color checkedContentColor;
    property public androidx.compose.ui.graphics.Color containerColor;
    property public androidx.compose.ui.graphics.Color contentColor;
    property public androidx.compose.ui.graphics.Color disabledContainerColor;
    property public androidx.compose.ui.graphics.Color disabledContentColor;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public final class IconToggleButtonShapes {
    ctor public IconToggleButtonShapes(androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Shape pressedShape, optional androidx.compose.ui.graphics.Shape checkedShape);
    method public androidx.compose.material3.IconToggleButtonShapes copy(optional androidx.compose.ui.graphics.Shape? shape, optional androidx.compose.ui.graphics.Shape? pressedShape, optional androidx.compose.ui.graphics.Shape? checkedShape);
    method public androidx.compose.ui.graphics.Shape getCheckedShape();
    method public androidx.compose.ui.graphics.Shape getPressedShape();
    method public androidx.compose.ui.graphics.Shape getShape();
    property public androidx.compose.ui.graphics.Shape checkedShape;
    property public androidx.compose.ui.graphics.Shape pressedShape;
    property public androidx.compose.ui.graphics.Shape shape;
  }

  public final class InputChipDefaults {
    method @BytecodeOnly public float getAvatarSize-D9Ej5fM();
    method @BytecodeOnly public float getHeight-D9Ej5fM();
    method @BytecodeOnly public float getIconSize-D9Ej5fM();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getShape(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.BorderStroke inputChipBorder(boolean enabled, boolean selected, optional androidx.compose.ui.graphics.Color borderColor, optional androidx.compose.ui.graphics.Color selectedBorderColor, optional androidx.compose.ui.graphics.Color disabledBorderColor, optional androidx.compose.ui.graphics.Color disabledSelectedBorderColor, optional androidx.compose.ui.unit.Dp borderWidth, optional androidx.compose.ui.unit.Dp selectedBorderWidth);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.BorderStroke inputChipBorder-_7El2pE(boolean, boolean, long, long, long, long, float, float, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.compose.material3.SelectableChipColors inputChipColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.SelectableChipColors inputChipColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.SelectableChipColors inputChipColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color labelColor, optional androidx.compose.ui.graphics.Color leadingIconColor, optional androidx.compose.ui.graphics.Color trailingIconColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledLabelColor, optional androidx.compose.ui.graphics.Color disabledLeadingIconColor, optional androidx.compose.ui.graphics.Color disabledTrailingIconColor, optional androidx.compose.ui.graphics.Color selectedContainerColor, optional androidx.compose.ui.graphics.Color disabledSelectedContainerColor, optional androidx.compose.ui.graphics.Color selectedLabelColor, optional androidx.compose.ui.graphics.Color selectedLeadingIconColor, optional androidx.compose.ui.graphics.Color selectedTrailingIconColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.SelectableChipColors inputChipColors-kwJvTHA(long, long, long, long, long, long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.SelectableChipElevation inputChipElevation(optional androidx.compose.ui.unit.Dp elevation, optional androidx.compose.ui.unit.Dp pressedElevation, optional androidx.compose.ui.unit.Dp focusedElevation, optional androidx.compose.ui.unit.Dp hoveredElevation, optional androidx.compose.ui.unit.Dp draggedElevation, optional androidx.compose.ui.unit.Dp disabledElevation);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.SelectableChipElevation inputChipElevation-aqJV_2Y(float, float, float, float, float, float, androidx.compose.runtime.Composer?, int, int);
    property public androidx.compose.ui.unit.Dp AvatarSize;
    property public androidx.compose.ui.unit.Dp Height;
    property public androidx.compose.ui.unit.Dp IconSize;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape shape;
    field public static final androidx.compose.material3.InputChipDefaults INSTANCE;
  }

  public final class InteractiveComponentSizeKt {
    method @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api public static androidx.compose.runtime.ProvidableCompositionLocal<java.lang.Boolean> getLocalMinimumInteractiveComponentEnforcement();
    method public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.ui.unit.Dp> getLocalMinimumInteractiveComponentSize();
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier minimumInteractiveComponentSize(androidx.compose.ui.Modifier);
    property @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api public static androidx.compose.runtime.ProvidableCompositionLocal<java.lang.Boolean> LocalMinimumInteractiveComponentEnforcement;
    property public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.ui.unit.Dp> LocalMinimumInteractiveComponentSize;
  }

  public final class LabelKt {
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void Label(kotlin.jvm.functions.Function1<? super androidx.compose.material3.TooltipScope,kotlin.Unit> label, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, optional boolean isPersistent, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void Label(kotlin.jvm.functions.Function3<? super androidx.compose.material3.TooltipScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, androidx.compose.foundation.interaction.MutableInteractionSource?, boolean, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
  }

  @androidx.compose.runtime.Immutable public final class ListItemColors {
    ctor @KotlinOnly public ListItemColors(androidx.compose.ui.graphics.Color containerColor, androidx.compose.ui.graphics.Color headlineColor, androidx.compose.ui.graphics.Color leadingIconColor, androidx.compose.ui.graphics.Color overlineColor, androidx.compose.ui.graphics.Color supportingTextColor, androidx.compose.ui.graphics.Color trailingIconColor, androidx.compose.ui.graphics.Color disabledHeadlineColor, androidx.compose.ui.graphics.Color disabledLeadingIconColor, androidx.compose.ui.graphics.Color disabledTrailingIconColor);
    ctor @BytecodeOnly public ListItemColors(long, long, long, long, long, long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly public androidx.compose.material3.ListItemColors copy(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color headlineColor, optional androidx.compose.ui.graphics.Color leadingIconColor, optional androidx.compose.ui.graphics.Color overlineColor, optional androidx.compose.ui.graphics.Color supportingTextColor, optional androidx.compose.ui.graphics.Color trailingIconColor, optional androidx.compose.ui.graphics.Color disabledHeadlineColor, optional androidx.compose.ui.graphics.Color disabledLeadingIconColor, optional androidx.compose.ui.graphics.Color disabledTrailingIconColor);
    method @BytecodeOnly public androidx.compose.material3.ListItemColors copy-5r9EGqc(long, long, long, long, long, long, long, long, long);
    method @BytecodeOnly public long getContainerColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledHeadlineColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledLeadingIconColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledTrailingIconColor-0d7_KjU();
    method @BytecodeOnly public long getHeadlineColor-0d7_KjU();
    method @BytecodeOnly public long getLeadingIconColor-0d7_KjU();
    method @BytecodeOnly public long getOverlineColor-0d7_KjU();
    method @BytecodeOnly public long getSupportingTextColor-0d7_KjU();
    method @BytecodeOnly public long getTrailingIconColor-0d7_KjU();
    property public androidx.compose.ui.graphics.Color containerColor;
    property public androidx.compose.ui.graphics.Color disabledHeadlineColor;
    property public androidx.compose.ui.graphics.Color disabledLeadingIconColor;
    property public androidx.compose.ui.graphics.Color disabledTrailingIconColor;
    property public androidx.compose.ui.graphics.Color headlineColor;
    property public androidx.compose.ui.graphics.Color leadingIconColor;
    property public androidx.compose.ui.graphics.Color overlineColor;
    property public androidx.compose.ui.graphics.Color supportingTextColor;
    property public androidx.compose.ui.graphics.Color trailingIconColor;
  }

  public final class ListItemDefaults {
    method @androidx.compose.runtime.Composable public androidx.compose.material3.ListItemColors colors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ListItemColors colors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ListItemColors colors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color headlineColor, optional androidx.compose.ui.graphics.Color leadingIconColor, optional androidx.compose.ui.graphics.Color overlineColor, optional androidx.compose.ui.graphics.Color supportingColor, optional androidx.compose.ui.graphics.Color trailingIconColor, optional androidx.compose.ui.graphics.Color disabledHeadlineColor, optional androidx.compose.ui.graphics.Color disabledLeadingIconColor, optional androidx.compose.ui.graphics.Color disabledTrailingIconColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ListItemColors colors-J08w3-E(long, long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public long getContainerColor(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public long getContentColor(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getElevation-D9Ej5fM();
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.ui.graphics.Shape getShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.ui.graphics.Shape getShape(androidx.compose.runtime.Composer?, int);
    property public androidx.compose.ui.unit.Dp Elevation;
    property public androidx.compose.ui.graphics.Color containerColor;
    property public androidx.compose.ui.graphics.Color contentColor;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.ui.graphics.Shape shape;
    field public static final androidx.compose.material3.ListItemDefaults INSTANCE;
  }

  public final class ListItemKt {
    method @KotlinOnly @androidx.compose.runtime.Composable public static void ListItem(kotlin.jvm.functions.Function0<kotlin.Unit> headlineContent, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? overlineContent, optional kotlin.jvm.functions.Function0<kotlin.Unit>? supportingContent, optional kotlin.jvm.functions.Function0<kotlin.Unit>? leadingContent, optional kotlin.jvm.functions.Function0<kotlin.Unit>? trailingContent, optional androidx.compose.material3.ListItemColors colors, optional androidx.compose.ui.unit.Dp tonalElevation, optional androidx.compose.ui.unit.Dp shadowElevation);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void ListItem-HXNGIdc(kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.material3.ListItemColors?, float, float, androidx.compose.runtime.Composer?, int, int);
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public final class LoadingIndicatorDefaults {
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getContainedContainerColor(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getContainedIndicatorColor(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getContainerHeight-D9Ej5fM();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getContainerShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getContainerShape(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getContainerWidth-D9Ej5fM();
    method public java.util.List<androidx.graphics.shapes.RoundedPolygon> getDeterminateIndicatorPolygons();
    method public java.util.List<androidx.graphics.shapes.RoundedPolygon> getIndeterminateIndicatorPolygons();
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getIndicatorColor(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getIndicatorSize-D9Ej5fM();
    property public androidx.compose.ui.unit.Dp ContainerHeight;
    property public androidx.compose.ui.unit.Dp ContainerWidth;
    property public java.util.List<androidx.graphics.shapes.RoundedPolygon> DeterminateIndicatorPolygons;
    property public java.util.List<androidx.graphics.shapes.RoundedPolygon> IndeterminateIndicatorPolygons;
    property public androidx.compose.ui.unit.Dp IndicatorSize;
    property public androidx.compose.ui.graphics.Color containedContainerColor;
    property public androidx.compose.ui.graphics.Color containedIndicatorColor;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape containerShape;
    property public androidx.compose.ui.graphics.Color indicatorColor;
    field public static final androidx.compose.material3.LoadingIndicatorDefaults INSTANCE;
  }

  public final class LoadingIndicatorKt {
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void ContainedLoadingIndicator(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color indicatorColor, optional androidx.compose.ui.graphics.Shape containerShape, optional java.util.List<androidx.graphics.shapes.RoundedPolygon> polygons);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void ContainedLoadingIndicator(kotlin.jvm.functions.Function0<java.lang.Float> progress, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color indicatorColor, optional androidx.compose.ui.graphics.Shape containerShape, optional java.util.List<androidx.graphics.shapes.RoundedPolygon> polygons);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void ContainedLoadingIndicator-DTcfvLk(androidx.compose.ui.Modifier?, long, long, androidx.compose.ui.graphics.Shape?, java.util.List<androidx.graphics.shapes.RoundedPolygon!>?, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void ContainedLoadingIndicator-Y0xEhic(kotlin.jvm.functions.Function0<java.lang.Float!>, androidx.compose.ui.Modifier?, long, long, androidx.compose.ui.graphics.Shape?, java.util.List<androidx.graphics.shapes.RoundedPolygon!>?, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void LoadingIndicator(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color color, optional java.util.List<androidx.graphics.shapes.RoundedPolygon> polygons);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void LoadingIndicator(kotlin.jvm.functions.Function0<java.lang.Float> progress, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color color, optional java.util.List<androidx.graphics.shapes.RoundedPolygon> polygons);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void LoadingIndicator-3IgeMak(androidx.compose.ui.Modifier?, long, java.util.List<androidx.graphics.shapes.RoundedPolygon!>?, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void LoadingIndicator-cf5BqRc(kotlin.jvm.functions.Function0<java.lang.Float!>, androidx.compose.ui.Modifier?, long, java.util.List<androidx.graphics.shapes.RoundedPolygon!>?, androidx.compose.runtime.Composer?, int, int);
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public abstract sealed class MaterialShapes {
    field public static final androidx.compose.material3.MaterialShapes.Companion Companion;
  }

  public static final class MaterialShapes.Companion {
    method public androidx.graphics.shapes.RoundedPolygon getArch();
    method public androidx.graphics.shapes.RoundedPolygon getArrow();
    method public androidx.graphics.shapes.RoundedPolygon getBoom();
    method public androidx.graphics.shapes.RoundedPolygon getBun();
    method public androidx.graphics.shapes.RoundedPolygon getBurst();
    method public androidx.graphics.shapes.RoundedPolygon getCircle();
    method public androidx.graphics.shapes.RoundedPolygon getClamShell();
    method public androidx.graphics.shapes.RoundedPolygon getClover4Leaf();
    method public androidx.graphics.shapes.RoundedPolygon getClover8Leaf();
    method public androidx.graphics.shapes.RoundedPolygon getCookie12Sided();
    method public androidx.graphics.shapes.RoundedPolygon getCookie4Sided();
    method public androidx.graphics.shapes.RoundedPolygon getCookie6Sided();
    method public androidx.graphics.shapes.RoundedPolygon getCookie7Sided();
    method public androidx.graphics.shapes.RoundedPolygon getCookie9Sided();
    method public androidx.graphics.shapes.RoundedPolygon getDiamond();
    method public androidx.graphics.shapes.RoundedPolygon getFan();
    method public androidx.graphics.shapes.RoundedPolygon getFlower();
    method public androidx.graphics.shapes.RoundedPolygon getGem();
    method public androidx.graphics.shapes.RoundedPolygon getGhostish();
    method public androidx.graphics.shapes.RoundedPolygon getHeart();
    method public androidx.graphics.shapes.RoundedPolygon getOval();
    method public androidx.graphics.shapes.RoundedPolygon getPentagon();
    method public androidx.graphics.shapes.RoundedPolygon getPill();
    method public androidx.graphics.shapes.RoundedPolygon getPixelCircle();
    method public androidx.graphics.shapes.RoundedPolygon getPixelTriangle();
    method public androidx.graphics.shapes.RoundedPolygon getPuffy();
    method public androidx.graphics.shapes.RoundedPolygon getPuffyDiamond();
    method public androidx.graphics.shapes.RoundedPolygon getSemiCircle();
    method public androidx.graphics.shapes.RoundedPolygon getSlanted();
    method public androidx.graphics.shapes.RoundedPolygon getSoftBoom();
    method public androidx.graphics.shapes.RoundedPolygon getSoftBurst();
    method public androidx.graphics.shapes.RoundedPolygon getSquare();
    method public androidx.graphics.shapes.RoundedPolygon getSunny();
    method public androidx.graphics.shapes.RoundedPolygon getTriangle();
    method public androidx.graphics.shapes.RoundedPolygon getVerySunny();
    property public androidx.graphics.shapes.RoundedPolygon Arch;
    property public androidx.graphics.shapes.RoundedPolygon Arrow;
    property public androidx.graphics.shapes.RoundedPolygon Boom;
    property public androidx.graphics.shapes.RoundedPolygon Bun;
    property public androidx.graphics.shapes.RoundedPolygon Burst;
    property public androidx.graphics.shapes.RoundedPolygon Circle;
    property public androidx.graphics.shapes.RoundedPolygon ClamShell;
    property public androidx.graphics.shapes.RoundedPolygon Clover4Leaf;
    property public androidx.graphics.shapes.RoundedPolygon Clover8Leaf;
    property public androidx.graphics.shapes.RoundedPolygon Cookie12Sided;
    property public androidx.graphics.shapes.RoundedPolygon Cookie4Sided;
    property public androidx.graphics.shapes.RoundedPolygon Cookie6Sided;
    property public androidx.graphics.shapes.RoundedPolygon Cookie7Sided;
    property public androidx.graphics.shapes.RoundedPolygon Cookie9Sided;
    property public androidx.graphics.shapes.RoundedPolygon Diamond;
    property public androidx.graphics.shapes.RoundedPolygon Fan;
    property public androidx.graphics.shapes.RoundedPolygon Flower;
    property public androidx.graphics.shapes.RoundedPolygon Gem;
    property public androidx.graphics.shapes.RoundedPolygon Ghostish;
    property public androidx.graphics.shapes.RoundedPolygon Heart;
    property public androidx.graphics.shapes.RoundedPolygon Oval;
    property public androidx.graphics.shapes.RoundedPolygon Pentagon;
    property public androidx.graphics.shapes.RoundedPolygon Pill;
    property public androidx.graphics.shapes.RoundedPolygon PixelCircle;
    property public androidx.graphics.shapes.RoundedPolygon PixelTriangle;
    property public androidx.graphics.shapes.RoundedPolygon Puffy;
    property public androidx.graphics.shapes.RoundedPolygon PuffyDiamond;
    property public androidx.graphics.shapes.RoundedPolygon SemiCircle;
    property public androidx.graphics.shapes.RoundedPolygon Slanted;
    property public androidx.graphics.shapes.RoundedPolygon SoftBoom;
    property public androidx.graphics.shapes.RoundedPolygon SoftBurst;
    property public androidx.graphics.shapes.RoundedPolygon Square;
    property public androidx.graphics.shapes.RoundedPolygon Sunny;
    property public androidx.graphics.shapes.RoundedPolygon Triangle;
    property public androidx.graphics.shapes.RoundedPolygon VerySunny;
  }

  public final class MaterialShapesKt {
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public static androidx.compose.ui.graphics.Path toPath(androidx.graphics.shapes.Morph, float progress, optional androidx.compose.ui.graphics.Path path, optional int startAngle);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static androidx.compose.ui.graphics.Path toPath(androidx.graphics.shapes.RoundedPolygon, optional int startAngle);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static androidx.compose.ui.graphics.Path toPath(androidx.graphics.shapes.RoundedPolygon, int, androidx.compose.runtime.Composer?, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static androidx.compose.ui.graphics.Shape toShape(androidx.graphics.shapes.RoundedPolygon, optional int startAngle);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static androidx.compose.ui.graphics.Shape toShape(androidx.graphics.shapes.RoundedPolygon, int, androidx.compose.runtime.Composer?, int, int);
  }

  public final class MaterialTheme {
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.material3.ColorScheme getColorScheme();
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.material3.ColorScheme getColorScheme(androidx.compose.runtime.Composer?, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.runtime.CompositionLocal<androidx.compose.material3.MotionScheme> getLocalMotionScheme();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.material3.MotionScheme getMotionScheme();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.material3.MotionScheme getMotionScheme(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.material3.Shapes getShapes();
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.material3.Shapes getShapes(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.material3.Typography getTypography();
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.material3.Typography getTypography(androidx.compose.runtime.Composer?, int);
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.runtime.CompositionLocal<androidx.compose.material3.MotionScheme> LocalMotionScheme;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.material3.ColorScheme colorScheme;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.material3.MotionScheme motionScheme;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.material3.Shapes shapes;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.material3.Typography typography;
    field public static final androidx.compose.material3.MaterialTheme INSTANCE;
  }

  public final class MaterialThemeKt {
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void MaterialExpressiveTheme(optional androidx.compose.material3.ColorScheme? colorScheme, optional androidx.compose.material3.MotionScheme? motionScheme, optional androidx.compose.material3.Shapes? shapes, optional androidx.compose.material3.Typography? typography, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void MaterialExpressiveTheme(androidx.compose.material3.ColorScheme?, androidx.compose.material3.MotionScheme?, androidx.compose.material3.Shapes?, androidx.compose.material3.Typography?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void MaterialTheme(optional androidx.compose.material3.ColorScheme colorScheme, optional androidx.compose.material3.MotionScheme motionScheme, optional androidx.compose.material3.Shapes shapes, optional androidx.compose.material3.Typography typography, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void MaterialTheme(androidx.compose.material3.ColorScheme?, androidx.compose.material3.MotionScheme?, androidx.compose.material3.Shapes?, androidx.compose.material3.Typography?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void MaterialTheme(optional androidx.compose.material3.ColorScheme colorScheme, optional androidx.compose.material3.Shapes shapes, optional androidx.compose.material3.Typography typography, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void MaterialTheme(androidx.compose.material3.ColorScheme?, androidx.compose.material3.Shapes?, androidx.compose.material3.Typography?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
  }

  public final class MenuDefaults {
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getContainerColor(androidx.compose.runtime.Composer?, int);
    method public androidx.compose.foundation.layout.PaddingValues getDropdownMenuItemContentPadding();
    method @BytecodeOnly public float getShadowElevation-D9Ej5fM();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getShape(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getTonalElevation-D9Ej5fM();
    method @androidx.compose.runtime.Composable public androidx.compose.material3.MenuItemColors itemColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.MenuItemColors itemColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.MenuItemColors itemColors(optional androidx.compose.ui.graphics.Color textColor, optional androidx.compose.ui.graphics.Color leadingIconColor, optional androidx.compose.ui.graphics.Color trailingIconColor, optional androidx.compose.ui.graphics.Color disabledTextColor, optional androidx.compose.ui.graphics.Color disabledLeadingIconColor, optional androidx.compose.ui.graphics.Color disabledTrailingIconColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.MenuItemColors itemColors-5tl4gsc(long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    property public androidx.compose.foundation.layout.PaddingValues DropdownMenuItemContentPadding;
    property public androidx.compose.ui.unit.Dp ShadowElevation;
    property public androidx.compose.ui.unit.Dp TonalElevation;
    property public androidx.compose.ui.graphics.Color containerColor;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape shape;
    field public static final androidx.compose.material3.MenuDefaults INSTANCE;
  }

  @androidx.compose.runtime.Immutable public final class MenuItemColors {
    ctor @KotlinOnly public MenuItemColors(androidx.compose.ui.graphics.Color textColor, androidx.compose.ui.graphics.Color leadingIconColor, androidx.compose.ui.graphics.Color trailingIconColor, androidx.compose.ui.graphics.Color disabledTextColor, androidx.compose.ui.graphics.Color disabledLeadingIconColor, androidx.compose.ui.graphics.Color disabledTrailingIconColor);
    ctor @BytecodeOnly public MenuItemColors(long, long, long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly public androidx.compose.material3.MenuItemColors copy(optional androidx.compose.ui.graphics.Color textColor, optional androidx.compose.ui.graphics.Color leadingIconColor, optional androidx.compose.ui.graphics.Color trailingIconColor, optional androidx.compose.ui.graphics.Color disabledTextColor, optional androidx.compose.ui.graphics.Color disabledLeadingIconColor, optional androidx.compose.ui.graphics.Color disabledTrailingIconColor);
    method @BytecodeOnly public androidx.compose.material3.MenuItemColors copy-tNS2XkQ(long, long, long, long, long, long);
    method @BytecodeOnly public long getDisabledLeadingIconColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledTextColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledTrailingIconColor-0d7_KjU();
    method @BytecodeOnly public long getLeadingIconColor-0d7_KjU();
    method @BytecodeOnly public long getTextColor-0d7_KjU();
    method @BytecodeOnly public long getTrailingIconColor-0d7_KjU();
    property public androidx.compose.ui.graphics.Color disabledLeadingIconColor;
    property public androidx.compose.ui.graphics.Color disabledTextColor;
    property public androidx.compose.ui.graphics.Color disabledTrailingIconColor;
    property public androidx.compose.ui.graphics.Color leadingIconColor;
    property public androidx.compose.ui.graphics.Color textColor;
    property public androidx.compose.ui.graphics.Color trailingIconColor;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Immutable public final class ModalBottomSheetDefaults {
    method public androidx.compose.material3.ModalBottomSheetProperties getProperties();
    method @Deprecated public androidx.compose.material3.ModalBottomSheetProperties properties(optional androidx.compose.ui.window.SecureFlagPolicy securePolicy, optional boolean isFocusable, optional boolean shouldDismissOnBackPress);
    property public androidx.compose.material3.ModalBottomSheetProperties properties;
    field public static final androidx.compose.material3.ModalBottomSheetDefaults INSTANCE;
  }

  public final class ModalBottomSheetKt {
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void ModalBottomSheet(kotlin.jvm.functions.Function0<kotlin.Unit> onDismissRequest, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.material3.SheetState sheetState, optional androidx.compose.ui.unit.Dp sheetMaxWidth, optional boolean sheetGesturesEnabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.unit.Dp tonalElevation, optional androidx.compose.ui.graphics.Color scrimColor, optional kotlin.jvm.functions.Function0<kotlin.Unit>? dragHandle, optional kotlin.jvm.functions.Function0<androidx.compose.foundation.layout.WindowInsets> contentWindowInsets, optional androidx.compose.material3.ModalBottomSheetProperties properties, kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void ModalBottomSheet-YbuCTN8(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, androidx.compose.material3.SheetState?, float, boolean, androidx.compose.ui.graphics.Shape?, long, long, float, long, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,? extends androidx.compose.foundation.layout.WindowInsets!>?, androidx.compose.material3.ModalBottomSheetProperties?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @BytecodeOnly @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void ModalBottomSheet-dYc4hso(kotlin.jvm.functions.Function0!, androidx.compose.ui.Modifier!, androidx.compose.material3.SheetState!, float, androidx.compose.ui.graphics.Shape!, long, long, float, long, kotlin.jvm.functions.Function2!, kotlin.jvm.functions.Function2!, androidx.compose.material3.ModalBottomSheetProperties!, kotlin.jvm.functions.Function3!, androidx.compose.runtime.Composer!, int, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static androidx.compose.material3.SheetState rememberModalBottomSheetState(optional boolean skipPartiallyExpanded, optional kotlin.jvm.functions.Function1<? super androidx.compose.material3.SheetValue,java.lang.Boolean> confirmValueChange);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static androidx.compose.material3.SheetState rememberModalBottomSheetState(boolean, kotlin.jvm.functions.Function1<? super androidx.compose.material3.SheetValue!,java.lang.Boolean!>?, androidx.compose.runtime.Composer?, int, int);
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Immutable public final class ModalBottomSheetProperties {
    ctor public ModalBottomSheetProperties();
    ctor @BytecodeOnly @Deprecated public ModalBottomSheetProperties(androidx.compose.ui.window.SecureFlagPolicy!, boolean);
    ctor public ModalBottomSheetProperties(optional androidx.compose.ui.window.SecureFlagPolicy securePolicy, optional boolean shouldDismissOnBackPress, optional boolean shouldDismissOnClickOutside);
    ctor @BytecodeOnly @Deprecated public ModalBottomSheetProperties(boolean);
    ctor public ModalBottomSheetProperties(optional boolean shouldDismissOnBackPress, optional boolean shouldDismissOnClickOutside);
    ctor @BytecodeOnly @Deprecated public ModalBottomSheetProperties(boolean, boolean, androidx.compose.ui.window.SecureFlagPolicy!, boolean);
    ctor public ModalBottomSheetProperties(boolean isAppearanceLightStatusBars, boolean isAppearanceLightNavigationBars, optional androidx.compose.ui.window.SecureFlagPolicy securePolicy, optional boolean shouldDismissOnBackPress, optional boolean shouldDismissOnClickOutside);
    method public androidx.compose.ui.window.SecureFlagPolicy getSecurePolicy();
    method public boolean getShouldDismissOnBackPress();
    method public boolean shouldDismissOnClickOutside();
    property public androidx.compose.ui.window.SecureFlagPolicy securePolicy;
    property public boolean shouldDismissOnBackPress;
    property public boolean shouldDismissOnClickOutside;
  }

  public final class ModalBottomSheet_androidKt {
    method @BytecodeOnly @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void ModalBottomSheet-dYc4hso(kotlin.jvm.functions.Function0!, androidx.compose.ui.Modifier!, androidx.compose.material3.SheetState!, float, androidx.compose.ui.graphics.Shape!, long, long, float, long, kotlin.jvm.functions.Function2!, androidx.compose.foundation.layout.WindowInsets!, androidx.compose.material3.ModalBottomSheetProperties!, kotlin.jvm.functions.Function3!, androidx.compose.runtime.Composer!, int, int, int);
  }

  @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Immutable public final class ModalWideNavigationRailDefaults {
    method @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.material3.ModalWideNavigationRailProperties getProperties();
    property @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.material3.ModalWideNavigationRailProperties Properties;
    field @Deprecated public static final androidx.compose.material3.ModalWideNavigationRailDefaults INSTANCE;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public interface ModalWideNavigationRailOverride {
    method @androidx.compose.runtime.Composable public void ModalWideNavigationRail(androidx.compose.material3.ModalWideNavigationRailOverrideScope);
    method @BytecodeOnly @androidx.compose.runtime.Composable public void ModalWideNavigationRail(androidx.compose.material3.ModalWideNavigationRailOverrideScope, androidx.compose.runtime.Composer?, int);
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public final class ModalWideNavigationRailOverrideScope {
    method public androidx.compose.foundation.layout.Arrangement.Vertical getArrangement();
    method public androidx.compose.ui.graphics.Shape getCollapsedShape();
    method public androidx.compose.material3.WideNavigationRailColors getColors();
    method public kotlin.jvm.functions.Function0<kotlin.Unit> getContent();
    method @BytecodeOnly public float getExpandedHeaderTopPadding-D9Ej5fM();
    method public androidx.compose.material3.ModalWideNavigationRailProperties getExpandedProperties();
    method public androidx.compose.ui.graphics.Shape getExpandedShape();
    method public kotlin.jvm.functions.Function0<kotlin.Unit>? getHeader();
    method public androidx.compose.ui.Modifier getModifier();
    method public boolean getShouldHideOnCollapse();
    method public androidx.compose.material3.WideNavigationRailState getState();
    method public androidx.compose.foundation.layout.WindowInsets getWindowInsets();
    property public androidx.compose.foundation.layout.Arrangement.Vertical arrangement;
    property public androidx.compose.ui.graphics.Shape collapsedShape;
    property public androidx.compose.material3.WideNavigationRailColors colors;
    property public kotlin.jvm.functions.Function0<kotlin.Unit> content;
    property public androidx.compose.ui.unit.Dp expandedHeaderTopPadding;
    property public androidx.compose.material3.ModalWideNavigationRailProperties expandedProperties;
    property public androidx.compose.ui.graphics.Shape expandedShape;
    property public kotlin.jvm.functions.Function0<kotlin.Unit>? header;
    property public androidx.compose.ui.Modifier modifier;
    property public boolean shouldHideOnCollapse;
    property public androidx.compose.material3.WideNavigationRailState state;
    property public androidx.compose.foundation.layout.WindowInsets windowInsets;
  }

  @androidx.compose.runtime.Immutable public final class ModalWideNavigationRailProperties {
    ctor public ModalWideNavigationRailProperties();
    ctor public ModalWideNavigationRailProperties(optional androidx.compose.ui.window.SecureFlagPolicy securePolicy, optional boolean shouldDismissOnBackPress);
    ctor public ModalWideNavigationRailProperties(optional boolean shouldDismissOnBackPress);
    method public androidx.compose.ui.window.SecureFlagPolicy getSecurePolicy();
    method public boolean getShouldDismissOnBackPress();
    property public androidx.compose.ui.window.SecureFlagPolicy securePolicy;
    property public boolean shouldDismissOnBackPress;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Immutable public interface MotionScheme {
    method public <T> androidx.compose.animation.core.FiniteAnimationSpec<T> defaultEffectsSpec();
    method public <T> androidx.compose.animation.core.FiniteAnimationSpec<T> defaultSpatialSpec();
    method public <T> androidx.compose.animation.core.FiniteAnimationSpec<T> fastEffectsSpec();
    method public <T> androidx.compose.animation.core.FiniteAnimationSpec<T> fastSpatialSpec();
    method public <T> androidx.compose.animation.core.FiniteAnimationSpec<T> slowEffectsSpec();
    method public <T> androidx.compose.animation.core.FiniteAnimationSpec<T> slowSpatialSpec();
    field public static final androidx.compose.material3.MotionScheme.Companion Companion;
  }

  public static final class MotionScheme.Companion {
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.material3.MotionScheme expressive();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.material3.MotionScheme standard();
  }

  public interface MultiChoiceSegmentedButtonRowScope extends androidx.compose.foundation.layout.RowScope {
  }

  public final class NavigationBarDefaults {
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getContainerColor(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getElevation-D9Ej5fM();
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.WindowInsets getWindowInsets();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.WindowInsets getWindowInsets(androidx.compose.runtime.Composer?, int);
    property public androidx.compose.ui.unit.Dp Elevation;
    property public androidx.compose.ui.graphics.Color containerColor;
    property @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.WindowInsets windowInsets;
    field public static final androidx.compose.material3.NavigationBarDefaults INSTANCE;
  }

  @androidx.compose.runtime.Immutable public final class NavigationBarItemColors {
    ctor @KotlinOnly public NavigationBarItemColors(androidx.compose.ui.graphics.Color selectedIconColor, androidx.compose.ui.graphics.Color selectedTextColor, androidx.compose.ui.graphics.Color selectedIndicatorColor, androidx.compose.ui.graphics.Color unselectedIconColor, androidx.compose.ui.graphics.Color unselectedTextColor, androidx.compose.ui.graphics.Color disabledIconColor, androidx.compose.ui.graphics.Color disabledTextColor);
    ctor @BytecodeOnly public NavigationBarItemColors(long, long, long, long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly public androidx.compose.material3.NavigationBarItemColors copy(optional androidx.compose.ui.graphics.Color selectedIconColor, optional androidx.compose.ui.graphics.Color selectedTextColor, optional androidx.compose.ui.graphics.Color selectedIndicatorColor, optional androidx.compose.ui.graphics.Color unselectedIconColor, optional androidx.compose.ui.graphics.Color unselectedTextColor, optional androidx.compose.ui.graphics.Color disabledIconColor, optional androidx.compose.ui.graphics.Color disabledTextColor);
    method @BytecodeOnly public androidx.compose.material3.NavigationBarItemColors copy-4JmcsL4(long, long, long, long, long, long, long);
    method @BytecodeOnly public long getDisabledIconColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledTextColor-0d7_KjU();
    method @BytecodeOnly public long getSelectedIconColor-0d7_KjU();
    method @BytecodeOnly public long getSelectedIndicatorColor-0d7_KjU();
    method @BytecodeOnly public long getSelectedTextColor-0d7_KjU();
    method @BytecodeOnly public long getUnselectedIconColor-0d7_KjU();
    method @BytecodeOnly public long getUnselectedTextColor-0d7_KjU();
    property public androidx.compose.ui.graphics.Color disabledIconColor;
    property public androidx.compose.ui.graphics.Color disabledTextColor;
    property public androidx.compose.ui.graphics.Color selectedIconColor;
    property public androidx.compose.ui.graphics.Color selectedIndicatorColor;
    property public androidx.compose.ui.graphics.Color selectedTextColor;
    property public androidx.compose.ui.graphics.Color unselectedIconColor;
    property public androidx.compose.ui.graphics.Color unselectedTextColor;
  }

  public final class NavigationBarItemDefaults {
    method @androidx.compose.runtime.Composable public androidx.compose.material3.NavigationBarItemColors colors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.NavigationBarItemColors colors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.NavigationBarItemColors colors(optional androidx.compose.ui.graphics.Color selectedIconColor, optional androidx.compose.ui.graphics.Color selectedTextColor, optional androidx.compose.ui.graphics.Color indicatorColor, optional androidx.compose.ui.graphics.Color unselectedIconColor, optional androidx.compose.ui.graphics.Color unselectedTextColor, optional androidx.compose.ui.graphics.Color disabledIconColor, optional androidx.compose.ui.graphics.Color disabledTextColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.NavigationBarItemColors colors-69fazGs(long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable public androidx.compose.material3.NavigationBarItemColors! colors-zjMxDiM(long, long, long, long, long, androidx.compose.runtime.Composer!, int, int);
    field public static final androidx.compose.material3.NavigationBarItemDefaults INSTANCE;
  }

  public final class NavigationBarKt {
    method @KotlinOnly @androidx.compose.runtime.Composable public static void NavigationBar(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.unit.Dp tonalElevation, optional androidx.compose.foundation.layout.WindowInsets windowInsets, kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void NavigationBar-HsRjFd4(androidx.compose.ui.Modifier?, long, long, float, androidx.compose.foundation.layout.WindowInsets?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void NavigationBarItem(androidx.compose.foundation.layout.RowScope, boolean selected, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, kotlin.jvm.functions.Function0<kotlin.Unit> icon, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional kotlin.jvm.functions.Function0<kotlin.Unit>? label, optional boolean alwaysShowLabel, optional androidx.compose.material3.NavigationBarItemColors colors, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void NavigationBarItem(androidx.compose.foundation.layout.RowScope, boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, boolean, androidx.compose.material3.NavigationBarItemColors?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.runtime.Composer?, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.material3.NavigationBarOverride> getLocalNavigationBarOverride();
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.material3.NavigationBarOverride> LocalNavigationBarOverride;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public interface NavigationBarOverride {
    method @androidx.compose.runtime.Composable public void NavigationBar(androidx.compose.material3.NavigationBarOverrideScope);
    method @BytecodeOnly @androidx.compose.runtime.Composable public void NavigationBar(androidx.compose.material3.NavigationBarOverrideScope, androidx.compose.runtime.Composer?, int);
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public final class NavigationBarOverrideScope {
    method @BytecodeOnly public long getContainerColor-0d7_KjU();
    method public kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit> getContent();
    method @BytecodeOnly public long getContentColor-0d7_KjU();
    method public androidx.compose.ui.Modifier getModifier();
    method @BytecodeOnly public float getTonalElevation-D9Ej5fM();
    method public androidx.compose.foundation.layout.WindowInsets getWindowInsets();
    property public androidx.compose.ui.graphics.Color containerColor;
    property public kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit> content;
    property public androidx.compose.ui.graphics.Color contentColor;
    property public androidx.compose.ui.Modifier modifier;
    property public androidx.compose.ui.unit.Dp tonalElevation;
    property public androidx.compose.foundation.layout.WindowInsets windowInsets;
  }

  @androidx.compose.runtime.Stable public interface NavigationDrawerItemColors {
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> badgeColor(boolean selected);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.Color!> badgeColor(boolean, androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> containerColor(boolean selected);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.Color!> containerColor(boolean, androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> iconColor(boolean selected);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.Color!> iconColor(boolean, androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.Color> textColor(boolean selected);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.runtime.State<androidx.compose.ui.graphics.Color!> textColor(boolean, androidx.compose.runtime.Composer?, int);
  }

  public final class NavigationDrawerItemDefaults {
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.NavigationDrawerItemColors colors(optional androidx.compose.ui.graphics.Color selectedContainerColor, optional androidx.compose.ui.graphics.Color unselectedContainerColor, optional androidx.compose.ui.graphics.Color selectedIconColor, optional androidx.compose.ui.graphics.Color unselectedIconColor, optional androidx.compose.ui.graphics.Color selectedTextColor, optional androidx.compose.ui.graphics.Color unselectedTextColor, optional androidx.compose.ui.graphics.Color selectedBadgeColor, optional androidx.compose.ui.graphics.Color unselectedBadgeColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.NavigationDrawerItemColors colors-oq7We08(long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method public androidx.compose.foundation.layout.PaddingValues getItemPadding();
    property public androidx.compose.foundation.layout.PaddingValues ItemPadding;
    field public static final androidx.compose.material3.NavigationDrawerItemDefaults INSTANCE;
  }

  public final class NavigationDrawerKt {
    method @KotlinOnly @androidx.compose.runtime.Composable public static void DismissibleDrawerSheet(androidx.compose.material3.DrawerState drawerState, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Shape drawerShape, optional androidx.compose.ui.graphics.Color drawerContainerColor, optional androidx.compose.ui.graphics.Color drawerContentColor, optional androidx.compose.ui.unit.Dp drawerTonalElevation, optional androidx.compose.foundation.layout.WindowInsets windowInsets, kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> content);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void DismissibleDrawerSheet(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Shape drawerShape, optional androidx.compose.ui.graphics.Color drawerContainerColor, optional androidx.compose.ui.graphics.Color drawerContentColor, optional androidx.compose.ui.unit.Dp drawerTonalElevation, optional androidx.compose.foundation.layout.WindowInsets windowInsets, kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void DismissibleDrawerSheet-Snr_uVM(androidx.compose.material3.DrawerState, androidx.compose.ui.Modifier?, androidx.compose.ui.graphics.Shape?, long, long, float, androidx.compose.foundation.layout.WindowInsets?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void DismissibleDrawerSheet-afqeVBk(androidx.compose.ui.Modifier?, androidx.compose.ui.graphics.Shape?, long, long, float, androidx.compose.foundation.layout.WindowInsets?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void DismissibleNavigationDrawer(kotlin.jvm.functions.Function0<kotlin.Unit> drawerContent, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.material3.DrawerState drawerState, optional boolean gesturesEnabled, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void DismissibleNavigationDrawer(kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, androidx.compose.material3.DrawerState?, boolean, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void ModalDrawerSheet(androidx.compose.material3.DrawerState drawerState, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Shape drawerShape, optional androidx.compose.ui.graphics.Color drawerContainerColor, optional androidx.compose.ui.graphics.Color drawerContentColor, optional androidx.compose.ui.unit.Dp drawerTonalElevation, optional androidx.compose.foundation.layout.WindowInsets windowInsets, kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> content);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void ModalDrawerSheet(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Shape drawerShape, optional androidx.compose.ui.graphics.Color drawerContainerColor, optional androidx.compose.ui.graphics.Color drawerContentColor, optional androidx.compose.ui.unit.Dp drawerTonalElevation, optional androidx.compose.foundation.layout.WindowInsets windowInsets, kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void ModalDrawerSheet-Snr_uVM(androidx.compose.material3.DrawerState, androidx.compose.ui.Modifier?, androidx.compose.ui.graphics.Shape?, long, long, float, androidx.compose.foundation.layout.WindowInsets?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void ModalDrawerSheet-afqeVBk(androidx.compose.ui.Modifier?, androidx.compose.ui.graphics.Shape?, long, long, float, androidx.compose.foundation.layout.WindowInsets?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void ModalNavigationDrawer(kotlin.jvm.functions.Function0<kotlin.Unit> drawerContent, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.material3.DrawerState drawerState, optional boolean gesturesEnabled, optional androidx.compose.ui.graphics.Color scrimColor, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void ModalNavigationDrawer-FHprtrg(kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, androidx.compose.material3.DrawerState?, boolean, long, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void NavigationDrawerItem(kotlin.jvm.functions.Function0<kotlin.Unit> label, boolean selected, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? badge, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.NavigationDrawerItemColors colors, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void NavigationDrawerItem(kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.NavigationDrawerItemColors?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void PermanentDrawerSheet(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Shape drawerShape, optional androidx.compose.ui.graphics.Color drawerContainerColor, optional androidx.compose.ui.graphics.Color drawerContentColor, optional androidx.compose.ui.unit.Dp drawerTonalElevation, optional androidx.compose.foundation.layout.WindowInsets windowInsets, kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void PermanentDrawerSheet-afqeVBk(androidx.compose.ui.Modifier?, androidx.compose.ui.graphics.Shape?, long, long, float, androidx.compose.foundation.layout.WindowInsets?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void PermanentNavigationDrawer(kotlin.jvm.functions.Function0<kotlin.Unit> drawerContent, optional androidx.compose.ui.Modifier modifier, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void PermanentNavigationDrawer(kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static androidx.compose.material3.DrawerState rememberDrawerState(androidx.compose.material3.DrawerValue initialValue, optional kotlin.jvm.functions.Function1<? super androidx.compose.material3.DrawerValue,java.lang.Boolean> confirmStateChange);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static androidx.compose.material3.DrawerState rememberDrawerState(androidx.compose.material3.DrawerValue, kotlin.jvm.functions.Function1<? super androidx.compose.material3.DrawerValue!,java.lang.Boolean!>?, androidx.compose.runtime.Composer?, int, int);
  }

  @androidx.compose.runtime.Immutable public final class NavigationItemColors {
    ctor @KotlinOnly public NavigationItemColors(androidx.compose.ui.graphics.Color selectedIconColor, androidx.compose.ui.graphics.Color selectedTextColor, androidx.compose.ui.graphics.Color selectedIndicatorColor, androidx.compose.ui.graphics.Color unselectedIconColor, androidx.compose.ui.graphics.Color unselectedTextColor, androidx.compose.ui.graphics.Color disabledIconColor, androidx.compose.ui.graphics.Color disabledTextColor);
    ctor @BytecodeOnly public NavigationItemColors(long, long, long, long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly public androidx.compose.material3.NavigationItemColors copy(optional androidx.compose.ui.graphics.Color selectedIconColor, optional androidx.compose.ui.graphics.Color selectedTextColor, optional androidx.compose.ui.graphics.Color selectedIndicatorColor, optional androidx.compose.ui.graphics.Color unselectedIconColor, optional androidx.compose.ui.graphics.Color unselectedTextColor, optional androidx.compose.ui.graphics.Color disabledIconColor, optional androidx.compose.ui.graphics.Color disabledTextColor);
    method @BytecodeOnly public androidx.compose.material3.NavigationItemColors copy-4JmcsL4(long, long, long, long, long, long, long);
    method @BytecodeOnly public long getDisabledIconColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledTextColor-0d7_KjU();
    method @BytecodeOnly public long getSelectedIconColor-0d7_KjU();
    method @BytecodeOnly public long getSelectedIndicatorColor-0d7_KjU();
    method @BytecodeOnly public long getSelectedTextColor-0d7_KjU();
    method @BytecodeOnly public long getUnselectedIconColor-0d7_KjU();
    method @BytecodeOnly public long getUnselectedTextColor-0d7_KjU();
    method @KotlinOnly @androidx.compose.runtime.Stable public androidx.compose.ui.graphics.Color iconColor(boolean selected, boolean enabled);
    method @BytecodeOnly @androidx.compose.runtime.Stable public long iconColor-WaAFU9c(boolean, boolean);
    method @KotlinOnly @androidx.compose.runtime.Stable public androidx.compose.ui.graphics.Color textColor(boolean selected, boolean enabled);
    method @BytecodeOnly @androidx.compose.runtime.Stable public long textColor-WaAFU9c(boolean, boolean);
    property public androidx.compose.ui.graphics.Color disabledIconColor;
    property public androidx.compose.ui.graphics.Color disabledTextColor;
    property public androidx.compose.ui.graphics.Color selectedIconColor;
    property public androidx.compose.ui.graphics.Color selectedIndicatorColor;
    property public androidx.compose.ui.graphics.Color selectedTextColor;
    property public androidx.compose.ui.graphics.Color unselectedIconColor;
    property public androidx.compose.ui.graphics.Color unselectedTextColor;
  }

  @kotlin.jvm.JvmInline public final value class NavigationItemIconPosition {
    method @BytecodeOnly public static androidx.compose.material3.NavigationItemIconPosition! box-impl(int);
    method @BytecodeOnly public int unbox-impl();
    field public static final androidx.compose.material3.NavigationItemIconPosition.Companion Companion;
  }

  public static final class NavigationItemIconPosition.Companion {
    method @BytecodeOnly public int getStart--xw1Ddg();
    method @BytecodeOnly public int getTop--xw1Ddg();
    property public androidx.compose.material3.NavigationItemIconPosition Start;
    property public androidx.compose.material3.NavigationItemIconPosition Top;
  }

  public final class NavigationRailDefaults {
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getContainerColor(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.WindowInsets getWindowInsets();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.WindowInsets getWindowInsets(androidx.compose.runtime.Composer?, int);
    property public androidx.compose.ui.graphics.Color ContainerColor;
    property @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.WindowInsets windowInsets;
    field public static final androidx.compose.material3.NavigationRailDefaults INSTANCE;
  }

  @androidx.compose.runtime.Immutable public final class NavigationRailItemColors {
    ctor @KotlinOnly public NavigationRailItemColors(androidx.compose.ui.graphics.Color selectedIconColor, androidx.compose.ui.graphics.Color selectedTextColor, androidx.compose.ui.graphics.Color selectedIndicatorColor, androidx.compose.ui.graphics.Color unselectedIconColor, androidx.compose.ui.graphics.Color unselectedTextColor, androidx.compose.ui.graphics.Color disabledIconColor, androidx.compose.ui.graphics.Color disabledTextColor);
    ctor @BytecodeOnly public NavigationRailItemColors(long, long, long, long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly public androidx.compose.material3.NavigationRailItemColors copy(optional androidx.compose.ui.graphics.Color selectedIconColor, optional androidx.compose.ui.graphics.Color selectedTextColor, optional androidx.compose.ui.graphics.Color selectedIndicatorColor, optional androidx.compose.ui.graphics.Color unselectedIconColor, optional androidx.compose.ui.graphics.Color unselectedTextColor, optional androidx.compose.ui.graphics.Color disabledIconColor, optional androidx.compose.ui.graphics.Color disabledTextColor);
    method @BytecodeOnly public androidx.compose.material3.NavigationRailItemColors copy-4JmcsL4(long, long, long, long, long, long, long);
    method @BytecodeOnly public long getDisabledIconColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledTextColor-0d7_KjU();
    method @BytecodeOnly public long getSelectedIconColor-0d7_KjU();
    method @BytecodeOnly public long getSelectedIndicatorColor-0d7_KjU();
    method @BytecodeOnly public long getSelectedTextColor-0d7_KjU();
    method @BytecodeOnly public long getUnselectedIconColor-0d7_KjU();
    method @BytecodeOnly public long getUnselectedTextColor-0d7_KjU();
    property public androidx.compose.ui.graphics.Color disabledIconColor;
    property public androidx.compose.ui.graphics.Color disabledTextColor;
    property public androidx.compose.ui.graphics.Color selectedIconColor;
    property public androidx.compose.ui.graphics.Color selectedIndicatorColor;
    property public androidx.compose.ui.graphics.Color selectedTextColor;
    property public androidx.compose.ui.graphics.Color unselectedIconColor;
    property public androidx.compose.ui.graphics.Color unselectedTextColor;
  }

  public final class NavigationRailItemDefaults {
    method @androidx.compose.runtime.Composable public androidx.compose.material3.NavigationRailItemColors colors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.NavigationRailItemColors colors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.NavigationRailItemColors colors(optional androidx.compose.ui.graphics.Color selectedIconColor, optional androidx.compose.ui.graphics.Color selectedTextColor, optional androidx.compose.ui.graphics.Color indicatorColor, optional androidx.compose.ui.graphics.Color unselectedIconColor, optional androidx.compose.ui.graphics.Color unselectedTextColor, optional androidx.compose.ui.graphics.Color disabledIconColor, optional androidx.compose.ui.graphics.Color disabledTextColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.NavigationRailItemColors colors-69fazGs(long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable public androidx.compose.material3.NavigationRailItemColors! colors-zjMxDiM(long, long, long, long, long, androidx.compose.runtime.Composer!, int, int);
    field public static final androidx.compose.material3.NavigationRailItemDefaults INSTANCE;
  }

  public final class NavigationRailKt {
    method @KotlinOnly @androidx.compose.runtime.Composable public static void NavigationRail(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.ColumnScope,kotlin.Unit>? header, optional androidx.compose.foundation.layout.WindowInsets windowInsets, kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void NavigationRail-qi6gXK8(androidx.compose.ui.Modifier?, long, long, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.foundation.layout.WindowInsets?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void NavigationRailItem(boolean selected, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, kotlin.jvm.functions.Function0<kotlin.Unit> icon, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional kotlin.jvm.functions.Function0<kotlin.Unit>? label, optional boolean alwaysShowLabel, optional androidx.compose.material3.NavigationRailItemColors colors, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void NavigationRailItem(boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, boolean, androidx.compose.material3.NavigationRailItemColors?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.runtime.Composer?, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.material3.NavigationRailOverride> getLocalNavigationRailOverride();
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.material3.NavigationRailOverride> LocalNavigationRailOverride;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public interface NavigationRailOverride {
    method @androidx.compose.runtime.Composable public void NavigationRail(androidx.compose.material3.NavigationRailOverrideScope);
    method @BytecodeOnly @androidx.compose.runtime.Composable public void NavigationRail(androidx.compose.material3.NavigationRailOverrideScope, androidx.compose.runtime.Composer?, int);
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public final class NavigationRailOverrideScope {
    method @BytecodeOnly public long getContainerColor-0d7_KjU();
    method public kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> getContent();
    method @BytecodeOnly public long getContentColor-0d7_KjU();
    method public kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.ColumnScope,kotlin.Unit>? getHeader();
    method public androidx.compose.ui.Modifier getModifier();
    method public androidx.compose.foundation.layout.WindowInsets getWindowInsets();
    property public androidx.compose.ui.graphics.Color containerColor;
    property public kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> content;
    property public androidx.compose.ui.graphics.Color contentColor;
    property public kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.ColumnScope,kotlin.Unit>? header;
    property public androidx.compose.ui.Modifier modifier;
    property public androidx.compose.foundation.layout.WindowInsets windowInsets;
  }

  @androidx.compose.runtime.Immutable public final class OutlinedTextFieldDefaults {
    method @KotlinOnly @androidx.compose.runtime.Composable public void Container(boolean enabled, boolean isError, androidx.compose.foundation.interaction.InteractionSource interactionSource, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.material3.TextFieldColors colors, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.unit.Dp focusedBorderThickness, optional androidx.compose.ui.unit.Dp unfocusedBorderThickness);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void Container-4EFweAY(boolean, boolean, androidx.compose.foundation.interaction.InteractionSource, androidx.compose.ui.Modifier?, androidx.compose.material3.TextFieldColors?, androidx.compose.ui.graphics.Shape?, float, float, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public void ContainerBox(boolean enabled, boolean isError, androidx.compose.foundation.interaction.InteractionSource interactionSource, optional androidx.compose.material3.TextFieldColors colors, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.unit.Dp focusedBorderThickness, optional androidx.compose.ui.unit.Dp unfocusedBorderThickness);
    method @BytecodeOnly @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void ContainerBox-nbWgWpA(boolean, boolean, androidx.compose.foundation.interaction.InteractionSource, androidx.compose.material3.TextFieldColors?, androidx.compose.ui.graphics.Shape?, float, float, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public void DecorationBox(String value, kotlin.jvm.functions.Function0<kotlin.Unit> innerTextField, boolean enabled, boolean singleLine, androidx.compose.ui.text.input.VisualTransformation visualTransformation, androidx.compose.foundation.interaction.InteractionSource interactionSource, optional boolean isError, optional kotlin.jvm.functions.Function0<kotlin.Unit>? label, optional kotlin.jvm.functions.Function0<kotlin.Unit>? placeholder, optional kotlin.jvm.functions.Function0<kotlin.Unit>? leadingIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? trailingIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? prefix, optional kotlin.jvm.functions.Function0<kotlin.Unit>? suffix, optional kotlin.jvm.functions.Function0<kotlin.Unit>? supportingText, optional androidx.compose.material3.TextFieldColors colors, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional kotlin.jvm.functions.Function0<kotlin.Unit> container);
    method @BytecodeOnly @androidx.compose.runtime.Composable public void DecorationBox(String, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, boolean, boolean, androidx.compose.ui.text.input.VisualTransformation, androidx.compose.foundation.interaction.InteractionSource, boolean, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.material3.TextFieldColors?, androidx.compose.foundation.layout.PaddingValues?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.runtime.Composer?, int, int, int);
    method @androidx.compose.runtime.Composable public androidx.compose.material3.TextFieldColors colors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.TextFieldColors colors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.TextFieldColors colors(optional androidx.compose.ui.graphics.Color focusedTextColor, optional androidx.compose.ui.graphics.Color unfocusedTextColor, optional androidx.compose.ui.graphics.Color disabledTextColor, optional androidx.compose.ui.graphics.Color errorTextColor, optional androidx.compose.ui.graphics.Color focusedContainerColor, optional androidx.compose.ui.graphics.Color unfocusedContainerColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color errorContainerColor, optional androidx.compose.ui.graphics.Color cursorColor, optional androidx.compose.ui.graphics.Color errorCursorColor, optional androidx.compose.foundation.text.selection.TextSelectionColors? selectionColors, optional androidx.compose.ui.graphics.Color focusedBorderColor, optional androidx.compose.ui.graphics.Color unfocusedBorderColor, optional androidx.compose.ui.graphics.Color disabledBorderColor, optional androidx.compose.ui.graphics.Color errorBorderColor, optional androidx.compose.ui.graphics.Color focusedLeadingIconColor, optional androidx.compose.ui.graphics.Color unfocusedLeadingIconColor, optional androidx.compose.ui.graphics.Color disabledLeadingIconColor, optional androidx.compose.ui.graphics.Color errorLeadingIconColor, optional androidx.compose.ui.graphics.Color focusedTrailingIconColor, optional androidx.compose.ui.graphics.Color unfocusedTrailingIconColor, optional androidx.compose.ui.graphics.Color disabledTrailingIconColor, optional androidx.compose.ui.graphics.Color errorTrailingIconColor, optional androidx.compose.ui.graphics.Color focusedLabelColor, optional androidx.compose.ui.graphics.Color unfocusedLabelColor, optional androidx.compose.ui.graphics.Color disabledLabelColor, optional androidx.compose.ui.graphics.Color errorLabelColor, optional androidx.compose.ui.graphics.Color focusedPlaceholderColor, optional androidx.compose.ui.graphics.Color unfocusedPlaceholderColor, optional androidx.compose.ui.graphics.Color disabledPlaceholderColor, optional androidx.compose.ui.graphics.Color errorPlaceholderColor, optional androidx.compose.ui.graphics.Color focusedSupportingTextColor, optional androidx.compose.ui.graphics.Color unfocusedSupportingTextColor, optional androidx.compose.ui.graphics.Color disabledSupportingTextColor, optional androidx.compose.ui.graphics.Color errorSupportingTextColor, optional androidx.compose.ui.graphics.Color focusedPrefixColor, optional androidx.compose.ui.graphics.Color unfocusedPrefixColor, optional androidx.compose.ui.graphics.Color disabledPrefixColor, optional androidx.compose.ui.graphics.Color errorPrefixColor, optional androidx.compose.ui.graphics.Color focusedSuffixColor, optional androidx.compose.ui.graphics.Color unfocusedSuffixColor, optional androidx.compose.ui.graphics.Color disabledSuffixColor, optional androidx.compose.ui.graphics.Color errorSuffixColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.TextFieldColors colors-0hiis_0(long, long, long, long, long, long, long, long, long, long, androidx.compose.foundation.text.selection.TextSelectionColors?, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int, int, int, int, int, int);
    method @KotlinOnly public androidx.compose.foundation.layout.PaddingValues contentPadding(optional androidx.compose.ui.unit.Dp start, optional androidx.compose.ui.unit.Dp top, optional androidx.compose.ui.unit.Dp end, optional androidx.compose.ui.unit.Dp bottom);
    method @BytecodeOnly public androidx.compose.foundation.layout.PaddingValues contentPadding-a9UjIt4(float, float, float, float);
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.text.input.TextFieldDecorator decorator(androidx.compose.foundation.text.input.TextFieldState state, boolean enabled, androidx.compose.foundation.text.input.TextFieldLineLimits lineLimits, androidx.compose.foundation.text.input.OutputTransformation? outputTransformation, androidx.compose.foundation.interaction.InteractionSource interactionSource, optional androidx.compose.material3.TextFieldLabelPosition labelPosition, optional kotlin.jvm.functions.Function1<? super androidx.compose.material3.TextFieldLabelScope,kotlin.Unit>? label, optional kotlin.jvm.functions.Function0<kotlin.Unit>? placeholder, optional kotlin.jvm.functions.Function0<kotlin.Unit>? leadingIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? trailingIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? prefix, optional kotlin.jvm.functions.Function0<kotlin.Unit>? suffix, optional kotlin.jvm.functions.Function0<kotlin.Unit>? supportingText, optional boolean isError, optional androidx.compose.material3.TextFieldColors colors, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional kotlin.jvm.functions.Function0<kotlin.Unit> container);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.text.input.TextFieldDecorator decorator(androidx.compose.foundation.text.input.TextFieldState, boolean, androidx.compose.foundation.text.input.TextFieldLineLimits, androidx.compose.foundation.text.input.OutputTransformation?, androidx.compose.foundation.interaction.InteractionSource, androidx.compose.material3.TextFieldLabelPosition?, kotlin.jvm.functions.Function3<? super androidx.compose.material3.TextFieldLabelScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, boolean, androidx.compose.material3.TextFieldColors?, androidx.compose.foundation.layout.PaddingValues?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.runtime.Composer?, int, int, int);
    method @BytecodeOnly public float getFocusedBorderThickness-D9Ej5fM();
    method @BytecodeOnly public float getMinHeight-D9Ej5fM();
    method @BytecodeOnly public float getMinWidth-D9Ej5fM();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getShape(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getUnfocusedBorderThickness-D9Ej5fM();
    property public androidx.compose.ui.unit.Dp FocusedBorderThickness;
    property public androidx.compose.ui.unit.Dp MinHeight;
    property public androidx.compose.ui.unit.Dp MinWidth;
    property public androidx.compose.ui.unit.Dp UnfocusedBorderThickness;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape shape;
    field public static final androidx.compose.material3.OutlinedTextFieldDefaults INSTANCE;
  }

  public final class OutlinedTextFieldKt {
    method @androidx.compose.runtime.Composable public static void OutlinedTextField(androidx.compose.foundation.text.input.TextFieldState state, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional boolean readOnly, optional androidx.compose.ui.text.TextStyle textStyle, optional androidx.compose.material3.TextFieldLabelPosition labelPosition, optional kotlin.jvm.functions.Function1<? super androidx.compose.material3.TextFieldLabelScope,kotlin.Unit>? label, optional kotlin.jvm.functions.Function0<kotlin.Unit>? placeholder, optional kotlin.jvm.functions.Function0<kotlin.Unit>? leadingIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? trailingIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? prefix, optional kotlin.jvm.functions.Function0<kotlin.Unit>? suffix, optional kotlin.jvm.functions.Function0<kotlin.Unit>? supportingText, optional boolean isError, optional androidx.compose.foundation.text.input.InputTransformation? inputTransformation, optional androidx.compose.foundation.text.input.OutputTransformation? outputTransformation, optional androidx.compose.foundation.text.KeyboardOptions keyboardOptions, optional androidx.compose.foundation.text.input.KeyboardActionHandler? onKeyboardAction, optional androidx.compose.foundation.text.input.TextFieldLineLimits lineLimits, optional kotlin.jvm.functions.Function2<? super androidx.compose.ui.unit.Density,? super kotlin.jvm.functions.Function0<androidx.compose.ui.text.TextLayoutResult?>,kotlin.Unit>? onTextLayout, optional androidx.compose.foundation.ScrollState scrollState, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.TextFieldColors colors, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void OutlinedTextField(androidx.compose.foundation.text.input.TextFieldState, androidx.compose.ui.Modifier?, boolean, boolean, androidx.compose.ui.text.TextStyle?, androidx.compose.material3.TextFieldLabelPosition?, kotlin.jvm.functions.Function3<? super androidx.compose.material3.TextFieldLabelScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, boolean, androidx.compose.foundation.text.input.InputTransformation?, androidx.compose.foundation.text.input.OutputTransformation?, androidx.compose.foundation.text.KeyboardOptions?, androidx.compose.foundation.text.input.KeyboardActionHandler?, androidx.compose.foundation.text.input.TextFieldLineLimits?, kotlin.jvm.functions.Function2<? super androidx.compose.ui.unit.Density!,? super kotlin.jvm.functions.Function0<androidx.compose.ui.text.TextLayoutResult!>!,kotlin.Unit!>?, androidx.compose.foundation.ScrollState?, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.TextFieldColors?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.runtime.Composer?, int, int, int, int);
    method @androidx.compose.runtime.Composable public static void OutlinedTextField(androidx.compose.ui.text.input.TextFieldValue value, kotlin.jvm.functions.Function1<? super androidx.compose.ui.text.input.TextFieldValue,kotlin.Unit> onValueChange, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional boolean readOnly, optional androidx.compose.ui.text.TextStyle textStyle, optional kotlin.jvm.functions.Function0<kotlin.Unit>? label, optional kotlin.jvm.functions.Function0<kotlin.Unit>? placeholder, optional kotlin.jvm.functions.Function0<kotlin.Unit>? leadingIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? trailingIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? prefix, optional kotlin.jvm.functions.Function0<kotlin.Unit>? suffix, optional kotlin.jvm.functions.Function0<kotlin.Unit>? supportingText, optional boolean isError, optional androidx.compose.ui.text.input.VisualTransformation visualTransformation, optional androidx.compose.foundation.text.KeyboardOptions keyboardOptions, optional androidx.compose.foundation.text.KeyboardActions keyboardActions, optional boolean singleLine, optional int maxLines, optional int minLines, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.TextFieldColors colors);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void OutlinedTextField(androidx.compose.ui.text.input.TextFieldValue, kotlin.jvm.functions.Function1<? super androidx.compose.ui.text.input.TextFieldValue!,kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, boolean, androidx.compose.ui.text.TextStyle?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, boolean, androidx.compose.ui.text.input.VisualTransformation?, androidx.compose.foundation.text.KeyboardOptions?, androidx.compose.foundation.text.KeyboardActions?, boolean, int, int, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.TextFieldColors?, androidx.compose.runtime.Composer?, int, int, int, int);
    method @androidx.compose.runtime.Composable public static void OutlinedTextField(String value, kotlin.jvm.functions.Function1<? super java.lang.String,kotlin.Unit> onValueChange, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional boolean readOnly, optional androidx.compose.ui.text.TextStyle textStyle, optional kotlin.jvm.functions.Function0<kotlin.Unit>? label, optional kotlin.jvm.functions.Function0<kotlin.Unit>? placeholder, optional kotlin.jvm.functions.Function0<kotlin.Unit>? leadingIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? trailingIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? prefix, optional kotlin.jvm.functions.Function0<kotlin.Unit>? suffix, optional kotlin.jvm.functions.Function0<kotlin.Unit>? supportingText, optional boolean isError, optional androidx.compose.ui.text.input.VisualTransformation visualTransformation, optional androidx.compose.foundation.text.KeyboardOptions keyboardOptions, optional androidx.compose.foundation.text.KeyboardActions keyboardActions, optional boolean singleLine, optional int maxLines, optional int minLines, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.TextFieldColors colors);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void OutlinedTextField(String, kotlin.jvm.functions.Function1<? super java.lang.String!,kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, boolean, androidx.compose.ui.text.TextStyle?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, boolean, androidx.compose.ui.text.input.VisualTransformation?, androidx.compose.foundation.text.KeyboardOptions?, androidx.compose.foundation.text.KeyboardActions?, boolean, int, int, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.TextFieldColors?, androidx.compose.runtime.Composer?, int, int, int, int);
  }

  public final class ProgressIndicatorDefaults {
    method @KotlinOnly public void drawStopIndicator(androidx.compose.ui.graphics.drawscope.DrawScope drawScope, androidx.compose.ui.unit.Dp stopSize, androidx.compose.ui.graphics.Color color, androidx.compose.ui.graphics.StrokeCap strokeCap);
    method @BytecodeOnly public void drawStopIndicator-EgI2THU(androidx.compose.ui.graphics.drawscope.DrawScope, float, long, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getCircularColor(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public int getCircularDeterminateStrokeCap-KaPHkGw();
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getCircularDeterminateTrackColor(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public int getCircularIndeterminateStrokeCap-KaPHkGw();
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getCircularIndeterminateTrackColor(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api public float getCircularIndicatorTrackGapSize-D9Ej5fM();
    method @BytecodeOnly public float getCircularStrokeWidth-D9Ej5fM();
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable public long getCircularTrackColor(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getLinearColor(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api public float getLinearIndicatorTrackGapSize-D9Ej5fM();
    method @BytecodeOnly public int getLinearStrokeCap-KaPHkGw();
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getLinearTrackColor(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api public float getLinearTrackStopIndicatorSize-D9Ej5fM();
    method public androidx.compose.animation.core.SpringSpec<java.lang.Float> getProgressAnimationSpec();
    property public androidx.compose.ui.graphics.StrokeCap CircularDeterminateStrokeCap;
    property public androidx.compose.ui.graphics.StrokeCap CircularIndeterminateStrokeCap;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api public androidx.compose.ui.unit.Dp CircularIndicatorTrackGapSize;
    property public androidx.compose.ui.unit.Dp CircularStrokeWidth;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api public androidx.compose.ui.unit.Dp LinearIndicatorTrackGapSize;
    property public androidx.compose.ui.graphics.StrokeCap LinearStrokeCap;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api public androidx.compose.ui.unit.Dp LinearTrackStopIndicatorSize;
    property public androidx.compose.animation.core.SpringSpec<java.lang.Float> ProgressAnimationSpec;
    property public androidx.compose.ui.graphics.Color circularColor;
    property public androidx.compose.ui.graphics.Color circularDeterminateTrackColor;
    property public androidx.compose.ui.graphics.Color circularIndeterminateTrackColor;
    property @Deprecated public androidx.compose.ui.graphics.Color circularTrackColor;
    property public androidx.compose.ui.graphics.Color linearColor;
    property public androidx.compose.ui.graphics.Color linearTrackColor;
    field public static final androidx.compose.material3.ProgressIndicatorDefaults INSTANCE;
  }

  public final class ProgressIndicatorKt {
    method @KotlinOnly @androidx.compose.runtime.Composable public static void CircularProgressIndicator(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color color, optional androidx.compose.ui.unit.Dp strokeWidth, optional androidx.compose.ui.graphics.Color trackColor, optional androidx.compose.ui.graphics.StrokeCap strokeCap, optional androidx.compose.ui.unit.Dp gapSize);
    method @KotlinOnly @Deprecated @androidx.compose.runtime.Composable public static void CircularProgressIndicator(float progress, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color color, optional androidx.compose.ui.unit.Dp strokeWidth, optional androidx.compose.ui.graphics.Color trackColor, optional androidx.compose.ui.graphics.StrokeCap strokeCap);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void CircularProgressIndicator(kotlin.jvm.functions.Function0<java.lang.Float> progress, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color color, optional androidx.compose.ui.unit.Dp strokeWidth, optional androidx.compose.ui.graphics.Color trackColor, optional androidx.compose.ui.graphics.StrokeCap strokeCap, optional androidx.compose.ui.unit.Dp gapSize);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void CircularProgressIndicator-4lLiAd8(androidx.compose.ui.Modifier?, long, float, long, int, float, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void CircularProgressIndicator-DUhRLBM(float, androidx.compose.ui.Modifier?, long, float, long, int, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void CircularProgressIndicator-DUhRLBM(kotlin.jvm.functions.Function0!, androidx.compose.ui.Modifier!, long, float, long, int, androidx.compose.runtime.Composer!, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void CircularProgressIndicator-IyT6zlY(kotlin.jvm.functions.Function0<java.lang.Float!>, androidx.compose.ui.Modifier?, long, float, long, int, float, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void CircularProgressIndicator-LxG7B9w(androidx.compose.ui.Modifier!, long, float, long, int, androidx.compose.runtime.Composer!, int, int);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void CircularProgressIndicator-MBs18nI(float, androidx.compose.ui.Modifier!, long, float, androidx.compose.runtime.Composer!, int, int);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void CircularProgressIndicator-aM-cp0Q(androidx.compose.ui.Modifier!, long, float, androidx.compose.runtime.Composer!, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void LinearProgressIndicator(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color color, optional androidx.compose.ui.graphics.Color trackColor, optional androidx.compose.ui.graphics.StrokeCap strokeCap, optional androidx.compose.ui.unit.Dp gapSize);
    method @KotlinOnly @Deprecated @androidx.compose.runtime.Composable public static void LinearProgressIndicator(float progress, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color color, optional androidx.compose.ui.graphics.Color trackColor, optional androidx.compose.ui.graphics.StrokeCap strokeCap);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void LinearProgressIndicator(kotlin.jvm.functions.Function0<java.lang.Float> progress, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color color, optional androidx.compose.ui.graphics.Color trackColor, optional androidx.compose.ui.graphics.StrokeCap strokeCap, optional androidx.compose.ui.unit.Dp gapSize, optional kotlin.jvm.functions.Function1<androidx.compose.ui.graphics.drawscope.DrawScope,kotlin.Unit> drawStopIndicator);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void LinearProgressIndicator-2cYBFYY(androidx.compose.ui.Modifier!, long, long, int, androidx.compose.runtime.Composer!, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void LinearProgressIndicator-GJbTh5U(kotlin.jvm.functions.Function0<java.lang.Float!>, androidx.compose.ui.Modifier?, long, long, int, float, kotlin.jvm.functions.Function1<? super androidx.compose.ui.graphics.drawscope.DrawScope!,kotlin.Unit!>?, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void LinearProgressIndicator-RIQooxk(androidx.compose.ui.Modifier!, long, long, androidx.compose.runtime.Composer!, int, int);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void LinearProgressIndicator-_5eSR-E(float, androidx.compose.ui.Modifier?, long, long, int, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void LinearProgressIndicator-_5eSR-E(kotlin.jvm.functions.Function0!, androidx.compose.ui.Modifier!, long, long, int, androidx.compose.runtime.Composer!, int, int);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void LinearProgressIndicator-eaDK9VM(float, androidx.compose.ui.Modifier!, long, long, androidx.compose.runtime.Composer!, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void LinearProgressIndicator-rIrjwxo(androidx.compose.ui.Modifier?, long, long, int, float, androidx.compose.runtime.Composer?, int, int);
  }

  @androidx.compose.runtime.Immutable public final class RadioButtonColors {
    ctor @KotlinOnly public RadioButtonColors(androidx.compose.ui.graphics.Color selectedColor, androidx.compose.ui.graphics.Color unselectedColor, androidx.compose.ui.graphics.Color disabledSelectedColor, androidx.compose.ui.graphics.Color disabledUnselectedColor);
    ctor @BytecodeOnly public RadioButtonColors(long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly public androidx.compose.material3.RadioButtonColors copy(optional androidx.compose.ui.graphics.Color selectedColor, optional androidx.compose.ui.graphics.Color unselectedColor, optional androidx.compose.ui.graphics.Color disabledSelectedColor, optional androidx.compose.ui.graphics.Color disabledUnselectedColor);
    method @BytecodeOnly public androidx.compose.material3.RadioButtonColors copy-jRlVdoo(long, long, long, long);
    method @BytecodeOnly public long getDisabledSelectedColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledUnselectedColor-0d7_KjU();
    method @BytecodeOnly public long getSelectedColor-0d7_KjU();
    method @BytecodeOnly public long getUnselectedColor-0d7_KjU();
    property public androidx.compose.ui.graphics.Color disabledSelectedColor;
    property public androidx.compose.ui.graphics.Color disabledUnselectedColor;
    property public androidx.compose.ui.graphics.Color selectedColor;
    property public androidx.compose.ui.graphics.Color unselectedColor;
  }

  public final class RadioButtonDefaults {
    method @androidx.compose.runtime.Composable public androidx.compose.material3.RadioButtonColors colors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.RadioButtonColors colors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.RadioButtonColors colors(optional androidx.compose.ui.graphics.Color selectedColor, optional androidx.compose.ui.graphics.Color unselectedColor, optional androidx.compose.ui.graphics.Color disabledSelectedColor, optional androidx.compose.ui.graphics.Color disabledUnselectedColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.RadioButtonColors colors-ro_MJ88(long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    field public static final androidx.compose.material3.RadioButtonDefaults INSTANCE;
  }

  public final class RadioButtonKt {
    method @androidx.compose.runtime.Composable public static void RadioButton(boolean selected, kotlin.jvm.functions.Function0<kotlin.Unit>? onClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.material3.RadioButtonColors colors, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void RadioButton(boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>?, androidx.compose.ui.Modifier?, boolean, androidx.compose.material3.RadioButtonColors?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.runtime.Composer?, int, int);
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api public final class RangeSliderState {
    ctor public RangeSliderState();
    ctor public RangeSliderState(optional float activeRangeStart, optional float activeRangeEnd, optional @IntRange(from=0L) int steps, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onValueChangeFinished, optional kotlin.ranges.ClosedFloatingPointRange<java.lang.Float> valueRange);
    method public float getActiveRangeEnd();
    method public float getActiveRangeStart();
    method public kotlin.jvm.functions.Function0<kotlin.Unit>? getOnValueChangeFinished();
    method public int getSteps();
    method public kotlin.ranges.ClosedFloatingPointRange<java.lang.Float> getValueRange();
    method public void setActiveRangeEnd(float);
    method public void setActiveRangeStart(float);
    method public void setOnValueChangeFinished(kotlin.jvm.functions.Function0<kotlin.Unit>?);
    property public float activeRangeEnd;
    property public float activeRangeStart;
    property public kotlin.jvm.functions.Function0<kotlin.Unit>? onValueChangeFinished;
    property public int steps;
    property public kotlin.ranges.ClosedFloatingPointRange<java.lang.Float> valueRange;
    field public static final androidx.compose.material3.RangeSliderState.Companion Companion;
  }

  public static final class RangeSliderState.Companion {
    method public androidx.compose.runtime.saveable.Saver<androidx.compose.material3.RangeSliderState,? extends java.lang.Object?> Saver(kotlin.jvm.functions.Function0<kotlin.Unit>? onValueChangeFinished, kotlin.ranges.ClosedFloatingPointRange<java.lang.Float> valueRange);
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Immutable @androidx.compose.runtime.Stable public final class RichTooltipColors {
    ctor @KotlinOnly public RichTooltipColors(androidx.compose.ui.graphics.Color containerColor, androidx.compose.ui.graphics.Color contentColor, androidx.compose.ui.graphics.Color titleContentColor, androidx.compose.ui.graphics.Color actionContentColor);
    ctor @BytecodeOnly public RichTooltipColors(long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly public androidx.compose.material3.RichTooltipColors copy(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color titleContentColor, optional androidx.compose.ui.graphics.Color actionContentColor);
    method @BytecodeOnly public androidx.compose.material3.RichTooltipColors copy-jRlVdoo(long, long, long, long);
    method @BytecodeOnly public long getActionContentColor-0d7_KjU();
    method @BytecodeOnly public long getContainerColor-0d7_KjU();
    method @BytecodeOnly public long getContentColor-0d7_KjU();
    method @BytecodeOnly public long getTitleContentColor-0d7_KjU();
    property public androidx.compose.ui.graphics.Color actionContentColor;
    property public androidx.compose.ui.graphics.Color containerColor;
    property public androidx.compose.ui.graphics.Color contentColor;
    property public androidx.compose.ui.graphics.Color titleContentColor;
  }

  @androidx.compose.runtime.Immutable public final class RippleConfiguration {
    ctor public RippleConfiguration();
    ctor @KotlinOnly public RippleConfiguration(optional androidx.compose.ui.graphics.Color color, optional androidx.compose.material.ripple.RippleAlpha? rippleAlpha);
    ctor @BytecodeOnly public RippleConfiguration(long, androidx.compose.material.ripple.RippleAlpha!, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @BytecodeOnly public long getColor-0d7_KjU();
    method public androidx.compose.material.ripple.RippleAlpha? getRippleAlpha();
    property public androidx.compose.ui.graphics.Color color;
    property public androidx.compose.material.ripple.RippleAlpha? rippleAlpha;
  }

  public final class RippleDefaults {
    method public androidx.compose.material.ripple.RippleAlpha getRippleAlpha();
    property public androidx.compose.material.ripple.RippleAlpha RippleAlpha;
    field public static final androidx.compose.material3.RippleDefaults INSTANCE;
  }

  public final class RippleKt {
    method public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.material3.RippleConfiguration?> getLocalRippleConfiguration();
    method @KotlinOnly @androidx.compose.runtime.Stable public static androidx.compose.foundation.IndicationNodeFactory ripple(androidx.compose.ui.graphics.ColorProducer color, optional boolean bounded, optional androidx.compose.ui.unit.Dp radius);
    method @KotlinOnly @androidx.compose.runtime.Stable public static androidx.compose.foundation.IndicationNodeFactory ripple(optional boolean bounded, optional androidx.compose.ui.unit.Dp radius, optional androidx.compose.ui.graphics.Color color);
    method @BytecodeOnly @androidx.compose.runtime.Stable public static androidx.compose.foundation.IndicationNodeFactory ripple-H2RKhps(boolean, float, long);
    method @BytecodeOnly @androidx.compose.runtime.Stable public static androidx.compose.foundation.IndicationNodeFactory ripple-wH6b6FI(androidx.compose.ui.graphics.ColorProducer, boolean, float);
    property public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.material3.RippleConfiguration?> LocalRippleConfiguration;
  }

  public final class ScaffoldDefaults {
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.WindowInsets getContentWindowInsets();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.WindowInsets getContentWindowInsets(androidx.compose.runtime.Composer?, int);
    property @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.WindowInsets contentWindowInsets;
    field public static final androidx.compose.material3.ScaffoldDefaults INSTANCE;
  }

  public final class ScaffoldKt {
    method @KotlinOnly @androidx.compose.runtime.Composable public static void Scaffold(optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit> topBar, optional kotlin.jvm.functions.Function0<kotlin.Unit> bottomBar, optional kotlin.jvm.functions.Function0<kotlin.Unit> snackbarHost, optional kotlin.jvm.functions.Function0<kotlin.Unit> floatingActionButton, optional androidx.compose.material3.FabPosition floatingActionButtonPosition, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.foundation.layout.WindowInsets contentWindowInsets, kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.PaddingValues,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void Scaffold-TvnljyQ(androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, int, long, long, androidx.compose.foundation.layout.WindowInsets?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.PaddingValues!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Immutable public final class SearchBarColors {
    ctor @KotlinOnly @Deprecated public SearchBarColors(androidx.compose.ui.graphics.Color containerColor, androidx.compose.ui.graphics.Color dividerColor);
    ctor @KotlinOnly public SearchBarColors(androidx.compose.ui.graphics.Color containerColor, androidx.compose.ui.graphics.Color dividerColor, androidx.compose.material3.TextFieldColors inputFieldColors);
    ctor @BytecodeOnly public SearchBarColors(long, long, androidx.compose.material3.TextFieldColors!, kotlin.jvm.internal.DefaultConstructorMarker!);
    ctor @BytecodeOnly @Deprecated public SearchBarColors(long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @BytecodeOnly public long getContainerColor-0d7_KjU();
    method @BytecodeOnly public long getDividerColor-0d7_KjU();
    method public androidx.compose.material3.TextFieldColors getInputFieldColors();
    property public androidx.compose.ui.graphics.Color containerColor;
    property public androidx.compose.ui.graphics.Color dividerColor;
    property public androidx.compose.material3.TextFieldColors inputFieldColors;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api public final class SearchBarDefaults {
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public void InputField(androidx.compose.foundation.text.input.TextFieldState textFieldState, androidx.compose.material3.SearchBarState searchBarState, kotlin.jvm.functions.Function1<? super java.lang.String,kotlin.Unit> onSearch, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional boolean readOnly, optional androidx.compose.ui.text.TextStyle textStyle, optional kotlin.jvm.functions.Function0<kotlin.Unit>? placeholder, optional kotlin.jvm.functions.Function0<kotlin.Unit>? leadingIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? trailingIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? prefix, optional kotlin.jvm.functions.Function0<kotlin.Unit>? suffix, optional androidx.compose.foundation.text.input.InputTransformation? inputTransformation, optional androidx.compose.foundation.text.input.OutputTransformation? outputTransformation, optional androidx.compose.foundation.ScrollState scrollState, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.TextFieldColors colors, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public void InputField(androidx.compose.foundation.text.input.TextFieldState, androidx.compose.material3.SearchBarState, kotlin.jvm.functions.Function1<? super java.lang.String!,kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, boolean, androidx.compose.ui.text.TextStyle?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.foundation.text.input.InputTransformation?, androidx.compose.foundation.text.input.OutputTransformation?, androidx.compose.foundation.ScrollState?, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.TextFieldColors?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.runtime.Composer?, int, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public void InputField(androidx.compose.foundation.text.input.TextFieldState state, kotlin.jvm.functions.Function1<? super java.lang.String,kotlin.Unit> onSearch, boolean expanded, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onExpandedChange, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional boolean readOnly, optional androidx.compose.ui.text.TextStyle textStyle, optional kotlin.jvm.functions.Function0<kotlin.Unit>? placeholder, optional kotlin.jvm.functions.Function0<kotlin.Unit>? leadingIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? trailingIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? prefix, optional kotlin.jvm.functions.Function0<kotlin.Unit>? suffix, optional androidx.compose.foundation.text.input.InputTransformation? inputTransformation, optional androidx.compose.foundation.text.input.OutputTransformation? outputTransformation, optional androidx.compose.foundation.ScrollState scrollState, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.TextFieldColors colors, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public void InputField(androidx.compose.foundation.text.input.TextFieldState, kotlin.jvm.functions.Function1<? super java.lang.String!,kotlin.Unit!>, boolean, kotlin.jvm.functions.Function1<? super java.lang.Boolean!,kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, boolean, androidx.compose.ui.text.TextStyle?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.foundation.text.input.InputTransformation?, androidx.compose.foundation.text.input.OutputTransformation?, androidx.compose.foundation.ScrollState?, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.TextFieldColors?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.runtime.Composer?, int, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public void InputField(String query, kotlin.jvm.functions.Function1<? super java.lang.String,kotlin.Unit> onQueryChange, kotlin.jvm.functions.Function1<? super java.lang.String,kotlin.Unit> onSearch, boolean expanded, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onExpandedChange, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional kotlin.jvm.functions.Function0<kotlin.Unit>? placeholder, optional kotlin.jvm.functions.Function0<kotlin.Unit>? leadingIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? trailingIcon, optional androidx.compose.material3.TextFieldColors colors, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public void InputField(String, kotlin.jvm.functions.Function1<? super java.lang.String!,kotlin.Unit!>, kotlin.jvm.functions.Function1<? super java.lang.String!,kotlin.Unit!>, boolean, kotlin.jvm.functions.Function1<? super java.lang.Boolean!,kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.material3.TextFieldColors?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.runtime.Composer?, int, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.AppBarWithSearchColors appBarWithSearchColors(optional androidx.compose.material3.SearchBarColors searchBarColors, optional androidx.compose.ui.graphics.Color appBarContainerColor, optional androidx.compose.ui.graphics.Color appBarNavigationIconColor, optional androidx.compose.ui.graphics.Color appBarActionIconColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.AppBarWithSearchColors appBarWithSearchColors-GyCwops(androidx.compose.material3.SearchBarColors?, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.SearchBarColors colors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color dividerColor, optional androidx.compose.material3.TextFieldColors inputFieldColors);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.SearchBarColors colors-Klgx-Pg(long, long, androidx.compose.material3.TextFieldColors?, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable public androidx.compose.material3.SearchBarColors! colors-dgg9oW8(long, long, androidx.compose.runtime.Composer!, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public androidx.compose.material3.SearchBarScrollBehavior enterAlwaysSearchBarScrollBehavior(optional float initialOffset, optional float initialOffsetLimit, optional kotlin.jvm.functions.Function0<java.lang.Boolean> canScroll, optional androidx.compose.animation.core.AnimationSpec<java.lang.Float> snapAnimationSpec, optional androidx.compose.animation.core.DecayAnimationSpec<java.lang.Float> flingAnimationSpec, optional boolean reverseLayout);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public androidx.compose.material3.SearchBarScrollBehavior enterAlwaysSearchBarScrollBehavior(float, float, kotlin.jvm.functions.Function0<java.lang.Boolean!>?, androidx.compose.animation.core.AnimationSpec<java.lang.Float!>?, androidx.compose.animation.core.DecayAnimationSpec<java.lang.Float!>?, boolean, androidx.compose.runtime.Composer?, int, int);
    method public androidx.compose.foundation.layout.PaddingValues getAppBarContentPadding();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getDockedShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getDockedShape(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly @Deprecated public float getElevation-D9Ej5fM();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getFullScreenShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getFullScreenShape(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.WindowInsets getFullScreenWindowInsets();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.WindowInsets getFullScreenWindowInsets(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getInputFieldHeight-D9Ej5fM();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getInputFieldShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getInputFieldShape(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getShadowElevation-D9Ej5fM();
    method @BytecodeOnly public float getTonalElevation-D9Ej5fM();
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.WindowInsets getWindowInsets();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.WindowInsets getWindowInsets(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.TextFieldColors inputFieldColors(optional androidx.compose.ui.graphics.Color focusedTextColor, optional androidx.compose.ui.graphics.Color unfocusedTextColor, optional androidx.compose.ui.graphics.Color disabledTextColor, optional androidx.compose.ui.graphics.Color cursorColor, optional androidx.compose.foundation.text.selection.TextSelectionColors selectionColors, optional androidx.compose.ui.graphics.Color focusedLeadingIconColor, optional androidx.compose.ui.graphics.Color unfocusedLeadingIconColor, optional androidx.compose.ui.graphics.Color disabledLeadingIconColor, optional androidx.compose.ui.graphics.Color focusedTrailingIconColor, optional androidx.compose.ui.graphics.Color unfocusedTrailingIconColor, optional androidx.compose.ui.graphics.Color disabledTrailingIconColor, optional androidx.compose.ui.graphics.Color focusedPlaceholderColor, optional androidx.compose.ui.graphics.Color unfocusedPlaceholderColor, optional androidx.compose.ui.graphics.Color disabledPlaceholderColor, optional androidx.compose.ui.graphics.Color focusedPrefixColor, optional androidx.compose.ui.graphics.Color unfocusedPrefixColor, optional androidx.compose.ui.graphics.Color disabledPrefixColor, optional androidx.compose.ui.graphics.Color focusedSuffixColor, optional androidx.compose.ui.graphics.Color unfocusedSuffixColor, optional androidx.compose.ui.graphics.Color disabledSuffixColor, optional androidx.compose.ui.graphics.Color focusedContainerColor, optional androidx.compose.ui.graphics.Color unfocusedContainerColor, optional androidx.compose.ui.graphics.Color disabledContainerColor);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable public androidx.compose.material3.TextFieldColors! inputFieldColors--u-KgnY(long, long, long, androidx.compose.foundation.text.selection.TextSelectionColors!, long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer!, int, int, int);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable public androidx.compose.material3.TextFieldColors! inputFieldColors-ITpI4ow(long, long, long, long, androidx.compose.foundation.text.selection.TextSelectionColors!, long, long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer!, int, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.TextFieldColors inputFieldColors-JVEmHcM(long, long, long, long, androidx.compose.foundation.text.selection.TextSelectionColors?, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int, int, int);
    property public androidx.compose.foundation.layout.PaddingValues AppBarContentPadding;
    property @Deprecated public androidx.compose.ui.unit.Dp Elevation;
    property public androidx.compose.ui.unit.Dp InputFieldHeight;
    property public androidx.compose.ui.unit.Dp ShadowElevation;
    property public androidx.compose.ui.unit.Dp TonalElevation;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape dockedShape;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape fullScreenShape;
    property @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.WindowInsets fullScreenWindowInsets;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape inputFieldShape;
    property @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.WindowInsets windowInsets;
    field public static final androidx.compose.material3.SearchBarDefaults INSTANCE;
  }

  public final class SearchBarKt {
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void AppBarWithSearch(androidx.compose.material3.SearchBarState state, kotlin.jvm.functions.Function0<kotlin.Unit> inputField, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? navigationIcon, optional kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit>? actions, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.AppBarWithSearchColors colors, optional androidx.compose.ui.unit.Dp tonalElevation, optional androidx.compose.ui.unit.Dp shadowElevation, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.layout.WindowInsets windowInsets, optional androidx.compose.material3.SearchBarScrollBehavior? scrollBehavior);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void AppBarWithSearch-ii5sN6A(androidx.compose.material3.SearchBarState, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.AppBarWithSearchColors?, float, float, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.layout.WindowInsets?, androidx.compose.material3.SearchBarScrollBehavior?, androidx.compose.runtime.Composer?, int, int, int);
    method @KotlinOnly @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void DockedSearchBar(String query, kotlin.jvm.functions.Function1<java.lang.String,kotlin.Unit> onQueryChange, kotlin.jvm.functions.Function1<java.lang.String,kotlin.Unit> onSearch, boolean active, kotlin.jvm.functions.Function1<java.lang.Boolean,kotlin.Unit> onActiveChange, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional kotlin.jvm.functions.Function0<kotlin.Unit>? placeholder, optional kotlin.jvm.functions.Function0<kotlin.Unit>? leadingIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? trailingIcon, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.SearchBarColors colors, optional androidx.compose.ui.unit.Dp tonalElevation, optional androidx.compose.ui.unit.Dp shadowElevation, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> content);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void DockedSearchBar(kotlin.jvm.functions.Function0<kotlin.Unit> inputField, boolean expanded, kotlin.jvm.functions.Function1<java.lang.Boolean,kotlin.Unit> onExpandedChange, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.SearchBarColors colors, optional androidx.compose.ui.unit.Dp tonalElevation, optional androidx.compose.ui.unit.Dp shadowElevation, kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void DockedSearchBar-EQC0FA8(kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, boolean, kotlin.jvm.functions.Function1<? super java.lang.Boolean!,kotlin.Unit!>, androidx.compose.ui.Modifier?, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.SearchBarColors?, float, float, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void DockedSearchBar-eWTbjVg(String, kotlin.jvm.functions.Function1<? super java.lang.String!,kotlin.Unit!>, kotlin.jvm.functions.Function1<? super java.lang.String!,kotlin.Unit!>, boolean, kotlin.jvm.functions.Function1<? super java.lang.Boolean!,kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.SearchBarColors?, float, float, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void ExpandedDockedSearchBar(androidx.compose.material3.SearchBarState state, kotlin.jvm.functions.Function0<kotlin.Unit> inputField, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.SearchBarColors colors, optional androidx.compose.ui.unit.Dp tonalElevation, optional androidx.compose.ui.unit.Dp shadowElevation, optional androidx.compose.ui.window.PopupProperties properties, kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void ExpandedDockedSearchBar-qKj4JfE(androidx.compose.material3.SearchBarState, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.SearchBarColors?, float, float, androidx.compose.ui.window.PopupProperties?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void ExpandedFullScreenSearchBar(androidx.compose.material3.SearchBarState state, kotlin.jvm.functions.Function0<kotlin.Unit> inputField, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Shape collapsedShape, optional androidx.compose.material3.SearchBarColors colors, optional androidx.compose.ui.unit.Dp tonalElevation, optional androidx.compose.ui.unit.Dp shadowElevation, optional kotlin.jvm.functions.Function0<androidx.compose.foundation.layout.WindowInsets> windowInsets, optional androidx.compose.ui.window.DialogProperties properties, kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void ExpandedFullScreenSearchBar-_UtchM0(androidx.compose.material3.SearchBarState, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.SearchBarColors?, float, float, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,? extends androidx.compose.foundation.layout.WindowInsets!>?, androidx.compose.ui.window.DialogProperties?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void SearchBar(androidx.compose.material3.SearchBarState state, kotlin.jvm.functions.Function0<kotlin.Unit> inputField, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.SearchBarColors colors, optional androidx.compose.ui.unit.Dp tonalElevation, optional androidx.compose.ui.unit.Dp shadowElevation);
    method @KotlinOnly @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void SearchBar(String query, kotlin.jvm.functions.Function1<java.lang.String,kotlin.Unit> onQueryChange, kotlin.jvm.functions.Function1<java.lang.String,kotlin.Unit> onSearch, boolean active, kotlin.jvm.functions.Function1<java.lang.Boolean,kotlin.Unit> onActiveChange, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional kotlin.jvm.functions.Function0<kotlin.Unit>? placeholder, optional kotlin.jvm.functions.Function0<kotlin.Unit>? leadingIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? trailingIcon, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.SearchBarColors colors, optional androidx.compose.ui.unit.Dp tonalElevation, optional androidx.compose.ui.unit.Dp shadowElevation, optional androidx.compose.foundation.layout.WindowInsets windowInsets, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> content);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void SearchBar(kotlin.jvm.functions.Function0<kotlin.Unit> inputField, boolean expanded, kotlin.jvm.functions.Function1<java.lang.Boolean,kotlin.Unit> onExpandedChange, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.SearchBarColors colors, optional androidx.compose.ui.unit.Dp tonalElevation, optional androidx.compose.ui.unit.Dp shadowElevation, optional androidx.compose.foundation.layout.WindowInsets windowInsets, kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> content);
    method @BytecodeOnly @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void SearchBar-WuY5d9Q(String, kotlin.jvm.functions.Function1<? super java.lang.String!,kotlin.Unit!>, kotlin.jvm.functions.Function1<? super java.lang.String!,kotlin.Unit!>, boolean, kotlin.jvm.functions.Function1<? super java.lang.Boolean!,kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.SearchBarColors?, float, float, androidx.compose.foundation.layout.WindowInsets?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void SearchBar-Y92LkZI(kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, boolean, kotlin.jvm.functions.Function1<? super java.lang.Boolean!,kotlin.Unit!>, androidx.compose.ui.Modifier?, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.SearchBarColors?, float, float, androidx.compose.foundation.layout.WindowInsets?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void SearchBar-nbWgWpA(androidx.compose.material3.SearchBarState, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.SearchBarColors?, float, float, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void TopSearchBar(androidx.compose.material3.SearchBarState state, kotlin.jvm.functions.Function0<kotlin.Unit> inputField, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.SearchBarColors colors, optional androidx.compose.ui.unit.Dp tonalElevation, optional androidx.compose.ui.unit.Dp shadowElevation, optional androidx.compose.foundation.layout.WindowInsets windowInsets, optional androidx.compose.material3.SearchBarScrollBehavior? scrollBehavior);
    method @BytecodeOnly @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void TopSearchBar-qKj4JfE(androidx.compose.material3.SearchBarState, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.SearchBarColors?, float, float, androidx.compose.foundation.layout.WindowInsets?, androidx.compose.material3.SearchBarScrollBehavior?, androidx.compose.runtime.Composer?, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static androidx.compose.material3.SearchBarState rememberSearchBarState(optional androidx.compose.material3.SearchBarValue initialValue, optional androidx.compose.animation.core.AnimationSpec<java.lang.Float> animationSpecForExpand, optional androidx.compose.animation.core.AnimationSpec<java.lang.Float> animationSpecForCollapse);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static androidx.compose.material3.SearchBarState rememberSearchBarState(androidx.compose.material3.SearchBarValue?, androidx.compose.animation.core.AnimationSpec<java.lang.Float!>?, androidx.compose.animation.core.AnimationSpec<java.lang.Float!>?, androidx.compose.runtime.Composer?, int, int);
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Stable public interface SearchBarScrollBehavior {
    method public androidx.compose.ui.input.nestedscroll.NestedScrollConnection getNestedScrollConnection();
    method public float getScrollOffset();
    method public float getScrollOffsetLimit();
    method public androidx.compose.ui.Modifier searchBarScrollBehavior(androidx.compose.ui.Modifier);
    method public void setScrollOffset(float);
    method public void setScrollOffsetLimit(float);
    property public abstract androidx.compose.ui.input.nestedscroll.NestedScrollConnection nestedScrollConnection;
    property public abstract float scrollOffset;
    property public abstract float scrollOffsetLimit;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Stable public final class SearchBarState {
    ctor public SearchBarState(androidx.compose.material3.SearchBarValue initialValue, androidx.compose.animation.core.AnimationSpec<java.lang.Float> animationSpecForExpand, androidx.compose.animation.core.AnimationSpec<java.lang.Float> animationSpecForCollapse);
    method public suspend Object? animateToCollapsed(kotlin.coroutines.Continuation<? super kotlin.Unit>);
    method public suspend Object? animateToExpanded(kotlin.coroutines.Continuation<? super kotlin.Unit>);
    method public androidx.compose.ui.layout.LayoutCoordinates? getCollapsedCoords();
    method public androidx.compose.material3.SearchBarValue getCurrentValue();
    method @FloatRange(from=0.0, to=1.0) public float getProgress();
    method public androidx.compose.material3.SearchBarValue getTargetValue();
    method public boolean isAnimating();
    method public void setCollapsedCoords(androidx.compose.ui.layout.LayoutCoordinates?);
    method public suspend Object? snapTo(float fraction, kotlin.coroutines.Continuation<? super kotlin.Unit>);
    property public androidx.compose.ui.layout.LayoutCoordinates? collapsedCoords;
    property public androidx.compose.material3.SearchBarValue currentValue;
    property public boolean isAnimating;
    property @FloatRange(from=0.0, to=1.0) public float progress;
    property public androidx.compose.material3.SearchBarValue targetValue;
    field public static final androidx.compose.material3.SearchBarState.Companion Companion;
  }

  public static final class SearchBarState.Companion {
    method public androidx.compose.runtime.saveable.Saver<androidx.compose.material3.SearchBarState,? extends java.lang.Object?> Saver(androidx.compose.animation.core.AnimationSpec<java.lang.Float> animationSpecForExpand, androidx.compose.animation.core.AnimationSpec<java.lang.Float> animationSpecForCollapse);
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api public enum SearchBarValue {
    enum_constant public static final androidx.compose.material3.SearchBarValue Collapsed;
    enum_constant public static final androidx.compose.material3.SearchBarValue Expanded;
  }

  public final class SecureTextFieldKt {
    method @KotlinOnly @androidx.compose.runtime.Composable public static void OutlinedSecureTextField(androidx.compose.foundation.text.input.TextFieldState state, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.ui.text.TextStyle textStyle, optional androidx.compose.material3.TextFieldLabelPosition labelPosition, optional kotlin.jvm.functions.Function1<androidx.compose.material3.TextFieldLabelScope,kotlin.Unit>? label, optional kotlin.jvm.functions.Function0<kotlin.Unit>? placeholder, optional kotlin.jvm.functions.Function0<kotlin.Unit>? leadingIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? trailingIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? prefix, optional kotlin.jvm.functions.Function0<kotlin.Unit>? suffix, optional kotlin.jvm.functions.Function0<kotlin.Unit>? supportingText, optional boolean isError, optional androidx.compose.foundation.text.input.InputTransformation? inputTransformation, optional androidx.compose.foundation.text.input.TextObfuscationMode textObfuscationMode, optional char textObfuscationCharacter, optional androidx.compose.foundation.text.KeyboardOptions keyboardOptions, optional androidx.compose.foundation.text.input.KeyboardActionHandler? onKeyboardAction, optional kotlin.jvm.functions.Function2<androidx.compose.ui.unit.Density,kotlin.jvm.functions.Function0<androidx.compose.ui.text.TextLayoutResult?>,kotlin.Unit>? onTextLayout, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.TextFieldColors colors, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void OutlinedSecureTextField-XvU6IwQ(androidx.compose.foundation.text.input.TextFieldState, androidx.compose.ui.Modifier?, boolean, androidx.compose.ui.text.TextStyle?, androidx.compose.material3.TextFieldLabelPosition?, kotlin.jvm.functions.Function3<? super androidx.compose.material3.TextFieldLabelScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, boolean, androidx.compose.foundation.text.input.InputTransformation?, int, char, androidx.compose.foundation.text.KeyboardOptions?, androidx.compose.foundation.text.input.KeyboardActionHandler?, kotlin.jvm.functions.Function2<? super androidx.compose.ui.unit.Density!,? super kotlin.jvm.functions.Function0<androidx.compose.ui.text.TextLayoutResult!>!,kotlin.Unit!>?, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.TextFieldColors?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.runtime.Composer?, int, int, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void SecureTextField(androidx.compose.foundation.text.input.TextFieldState state, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.ui.text.TextStyle textStyle, optional androidx.compose.material3.TextFieldLabelPosition labelPosition, optional kotlin.jvm.functions.Function1<androidx.compose.material3.TextFieldLabelScope,kotlin.Unit>? label, optional kotlin.jvm.functions.Function0<kotlin.Unit>? placeholder, optional kotlin.jvm.functions.Function0<kotlin.Unit>? leadingIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? trailingIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? prefix, optional kotlin.jvm.functions.Function0<kotlin.Unit>? suffix, optional kotlin.jvm.functions.Function0<kotlin.Unit>? supportingText, optional boolean isError, optional androidx.compose.foundation.text.input.InputTransformation? inputTransformation, optional androidx.compose.foundation.text.input.TextObfuscationMode textObfuscationMode, optional char textObfuscationCharacter, optional androidx.compose.foundation.text.KeyboardOptions keyboardOptions, optional androidx.compose.foundation.text.input.KeyboardActionHandler? onKeyboardAction, optional kotlin.jvm.functions.Function2<androidx.compose.ui.unit.Density,kotlin.jvm.functions.Function0<androidx.compose.ui.text.TextLayoutResult?>,kotlin.Unit>? onTextLayout, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.TextFieldColors colors, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void SecureTextField-XvU6IwQ(androidx.compose.foundation.text.input.TextFieldState, androidx.compose.ui.Modifier?, boolean, androidx.compose.ui.text.TextStyle?, androidx.compose.material3.TextFieldLabelPosition?, kotlin.jvm.functions.Function3<? super androidx.compose.material3.TextFieldLabelScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, boolean, androidx.compose.foundation.text.input.InputTransformation?, int, char, androidx.compose.foundation.text.KeyboardOptions?, androidx.compose.foundation.text.input.KeyboardActionHandler?, kotlin.jvm.functions.Function2<? super androidx.compose.ui.unit.Density!,? super kotlin.jvm.functions.Function0<androidx.compose.ui.text.TextLayoutResult!>!,kotlin.Unit!>?, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.TextFieldColors?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.runtime.Composer?, int, int, int, int);
  }

  @androidx.compose.runtime.Immutable public final class SegmentedButtonColors {
    ctor @KotlinOnly public SegmentedButtonColors(androidx.compose.ui.graphics.Color activeContainerColor, androidx.compose.ui.graphics.Color activeContentColor, androidx.compose.ui.graphics.Color activeBorderColor, androidx.compose.ui.graphics.Color inactiveContainerColor, androidx.compose.ui.graphics.Color inactiveContentColor, androidx.compose.ui.graphics.Color inactiveBorderColor, androidx.compose.ui.graphics.Color disabledActiveContainerColor, androidx.compose.ui.graphics.Color disabledActiveContentColor, androidx.compose.ui.graphics.Color disabledActiveBorderColor, androidx.compose.ui.graphics.Color disabledInactiveContainerColor, androidx.compose.ui.graphics.Color disabledInactiveContentColor, androidx.compose.ui.graphics.Color disabledInactiveBorderColor);
    ctor @BytecodeOnly public SegmentedButtonColors(long, long, long, long, long, long, long, long, long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly public androidx.compose.material3.SegmentedButtonColors copy(optional androidx.compose.ui.graphics.Color activeContainerColor, optional androidx.compose.ui.graphics.Color activeContentColor, optional androidx.compose.ui.graphics.Color activeBorderColor, optional androidx.compose.ui.graphics.Color inactiveContainerColor, optional androidx.compose.ui.graphics.Color inactiveContentColor, optional androidx.compose.ui.graphics.Color inactiveBorderColor, optional androidx.compose.ui.graphics.Color disabledActiveContainerColor, optional androidx.compose.ui.graphics.Color disabledActiveContentColor, optional androidx.compose.ui.graphics.Color disabledActiveBorderColor, optional androidx.compose.ui.graphics.Color disabledInactiveContainerColor, optional androidx.compose.ui.graphics.Color disabledInactiveContentColor, optional androidx.compose.ui.graphics.Color disabledInactiveBorderColor);
    method @BytecodeOnly public androidx.compose.material3.SegmentedButtonColors copy-2qZNXz8(long, long, long, long, long, long, long, long, long, long, long, long);
    method @BytecodeOnly public long getActiveBorderColor-0d7_KjU();
    method @BytecodeOnly public long getActiveContainerColor-0d7_KjU();
    method @BytecodeOnly public long getActiveContentColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledActiveBorderColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledActiveContainerColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledActiveContentColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledInactiveBorderColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledInactiveContainerColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledInactiveContentColor-0d7_KjU();
    method @BytecodeOnly public long getInactiveBorderColor-0d7_KjU();
    method @BytecodeOnly public long getInactiveContainerColor-0d7_KjU();
    method @BytecodeOnly public long getInactiveContentColor-0d7_KjU();
    property public androidx.compose.ui.graphics.Color activeBorderColor;
    property public androidx.compose.ui.graphics.Color activeContainerColor;
    property public androidx.compose.ui.graphics.Color activeContentColor;
    property public androidx.compose.ui.graphics.Color disabledActiveBorderColor;
    property public androidx.compose.ui.graphics.Color disabledActiveContainerColor;
    property public androidx.compose.ui.graphics.Color disabledActiveContentColor;
    property public androidx.compose.ui.graphics.Color disabledInactiveBorderColor;
    property public androidx.compose.ui.graphics.Color disabledInactiveContainerColor;
    property public androidx.compose.ui.graphics.Color disabledInactiveContentColor;
    property public androidx.compose.ui.graphics.Color inactiveBorderColor;
    property public androidx.compose.ui.graphics.Color inactiveContainerColor;
    property public androidx.compose.ui.graphics.Color inactiveContentColor;
  }

  @androidx.compose.runtime.Stable public final class SegmentedButtonDefaults {
    method @androidx.compose.runtime.Composable public void ActiveIcon();
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void ActiveIcon(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public void Icon(boolean active, optional kotlin.jvm.functions.Function0<kotlin.Unit> activeContent, optional kotlin.jvm.functions.Function0<kotlin.Unit>? inactiveContent);
    method @BytecodeOnly @androidx.compose.runtime.Composable public void Icon(boolean, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly public androidx.compose.foundation.BorderStroke borderStroke(androidx.compose.ui.graphics.Color color, optional androidx.compose.ui.unit.Dp width);
    method @BytecodeOnly public androidx.compose.foundation.BorderStroke borderStroke-l07J4OM(long, float);
    method @androidx.compose.runtime.Composable public androidx.compose.material3.SegmentedButtonColors colors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.SegmentedButtonColors colors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.SegmentedButtonColors colors(optional androidx.compose.ui.graphics.Color activeContainerColor, optional androidx.compose.ui.graphics.Color activeContentColor, optional androidx.compose.ui.graphics.Color activeBorderColor, optional androidx.compose.ui.graphics.Color inactiveContainerColor, optional androidx.compose.ui.graphics.Color inactiveContentColor, optional androidx.compose.ui.graphics.Color inactiveBorderColor, optional androidx.compose.ui.graphics.Color disabledActiveContainerColor, optional androidx.compose.ui.graphics.Color disabledActiveContentColor, optional androidx.compose.ui.graphics.Color disabledActiveBorderColor, optional androidx.compose.ui.graphics.Color disabledInactiveContainerColor, optional androidx.compose.ui.graphics.Color disabledInactiveContentColor, optional androidx.compose.ui.graphics.Color disabledInactiveBorderColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.SegmentedButtonColors colors-XqyqHi0(long, long, long, long, long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int, int);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.foundation.shape.CornerBasedShape getBaseShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.foundation.shape.CornerBasedShape getBaseShape(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getBorderWidth-D9Ej5fM();
    method public androidx.compose.foundation.layout.PaddingValues getContentPadding();
    method @BytecodeOnly public float getIconSize-D9Ej5fM();
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.ui.graphics.Shape itemShape(int index, int count, optional androidx.compose.foundation.shape.CornerBasedShape baseShape);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.ui.graphics.Shape itemShape(int, int, androidx.compose.foundation.shape.CornerBasedShape?, androidx.compose.runtime.Composer?, int, int);
    property public androidx.compose.ui.unit.Dp BorderWidth;
    property public androidx.compose.foundation.layout.PaddingValues ContentPadding;
    property public androidx.compose.ui.unit.Dp IconSize;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.foundation.shape.CornerBasedShape baseShape;
    field public static final androidx.compose.material3.SegmentedButtonDefaults INSTANCE;
  }

  public final class SegmentedButtonKt {
    method @KotlinOnly @androidx.compose.runtime.Composable public static void MultiChoiceSegmentedButtonRow(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.unit.Dp space, kotlin.jvm.functions.Function1<androidx.compose.material3.MultiChoiceSegmentedButtonRowScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void MultiChoiceSegmentedButtonRow-uFdPcIQ(androidx.compose.ui.Modifier?, float, kotlin.jvm.functions.Function3<? super androidx.compose.material3.MultiChoiceSegmentedButtonRowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable public static void SegmentedButton(androidx.compose.material3.MultiChoiceSegmentedButtonRowScope!, boolean, kotlin.jvm.functions.Function1!, androidx.compose.ui.graphics.Shape!, androidx.compose.ui.Modifier!, boolean, androidx.compose.material3.SegmentedButtonColors!, androidx.compose.foundation.BorderStroke!, androidx.compose.foundation.interaction.MutableInteractionSource!, kotlin.jvm.functions.Function2!, kotlin.jvm.functions.Function2!, androidx.compose.runtime.Composer!, int, int, int);
    method @androidx.compose.runtime.Composable public static void SegmentedButton(androidx.compose.material3.MultiChoiceSegmentedButtonRowScope, boolean checked, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onCheckedChange, androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.material3.SegmentedButtonColors colors, optional androidx.compose.foundation.BorderStroke border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, optional kotlin.jvm.functions.Function0<kotlin.Unit> icon, kotlin.jvm.functions.Function0<kotlin.Unit> label);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void SegmentedButton(androidx.compose.material3.MultiChoiceSegmentedButtonRowScope, boolean, kotlin.jvm.functions.Function1<? super java.lang.Boolean!,kotlin.Unit!>, androidx.compose.ui.graphics.Shape, androidx.compose.ui.Modifier?, boolean, androidx.compose.material3.SegmentedButtonColors?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable public static void SegmentedButton(androidx.compose.material3.SingleChoiceSegmentedButtonRowScope!, boolean, kotlin.jvm.functions.Function0!, androidx.compose.ui.graphics.Shape!, androidx.compose.ui.Modifier!, boolean, androidx.compose.material3.SegmentedButtonColors!, androidx.compose.foundation.BorderStroke!, androidx.compose.foundation.interaction.MutableInteractionSource!, kotlin.jvm.functions.Function2!, kotlin.jvm.functions.Function2!, androidx.compose.runtime.Composer!, int, int, int);
    method @androidx.compose.runtime.Composable public static void SegmentedButton(androidx.compose.material3.SingleChoiceSegmentedButtonRowScope, boolean selected, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.material3.SegmentedButtonColors colors, optional androidx.compose.foundation.BorderStroke border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, optional kotlin.jvm.functions.Function0<kotlin.Unit> icon, kotlin.jvm.functions.Function0<kotlin.Unit> label);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void SegmentedButton(androidx.compose.material3.SingleChoiceSegmentedButtonRowScope, boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.graphics.Shape, androidx.compose.ui.Modifier?, boolean, androidx.compose.material3.SegmentedButtonColors?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void SingleChoiceSegmentedButtonRow(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.unit.Dp space, kotlin.jvm.functions.Function1<androidx.compose.material3.SingleChoiceSegmentedButtonRowScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void SingleChoiceSegmentedButtonRow-uFdPcIQ(androidx.compose.ui.Modifier?, float, kotlin.jvm.functions.Function3<? super androidx.compose.material3.SingleChoiceSegmentedButtonRowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
  }

  @androidx.compose.runtime.Immutable public final class SelectableChipColors {
    ctor @KotlinOnly public SelectableChipColors(androidx.compose.ui.graphics.Color containerColor, androidx.compose.ui.graphics.Color labelColor, androidx.compose.ui.graphics.Color leadingIconColor, androidx.compose.ui.graphics.Color trailingIconColor, androidx.compose.ui.graphics.Color disabledContainerColor, androidx.compose.ui.graphics.Color disabledLabelColor, androidx.compose.ui.graphics.Color disabledLeadingIconColor, androidx.compose.ui.graphics.Color disabledTrailingIconColor, androidx.compose.ui.graphics.Color selectedContainerColor, androidx.compose.ui.graphics.Color disabledSelectedContainerColor, androidx.compose.ui.graphics.Color selectedLabelColor, androidx.compose.ui.graphics.Color selectedLeadingIconColor, androidx.compose.ui.graphics.Color selectedTrailingIconColor);
    ctor @BytecodeOnly public SelectableChipColors(long, long, long, long, long, long, long, long, long, long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly public androidx.compose.material3.SelectableChipColors copy(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color labelColor, optional androidx.compose.ui.graphics.Color leadingIconColor, optional androidx.compose.ui.graphics.Color trailingIconColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledLabelColor, optional androidx.compose.ui.graphics.Color disabledLeadingIconColor, optional androidx.compose.ui.graphics.Color disabledTrailingIconColor, optional androidx.compose.ui.graphics.Color selectedContainerColor, optional androidx.compose.ui.graphics.Color disabledSelectedContainerColor, optional androidx.compose.ui.graphics.Color selectedLabelColor, optional androidx.compose.ui.graphics.Color selectedLeadingIconColor, optional androidx.compose.ui.graphics.Color selectedTrailingIconColor);
    method @BytecodeOnly public androidx.compose.material3.SelectableChipColors copy-daRQuJA(long, long, long, long, long, long, long, long, long, long, long, long, long);
  }

  @androidx.compose.runtime.Immutable public final class SelectableChipElevation {
    ctor @KotlinOnly public SelectableChipElevation(androidx.compose.ui.unit.Dp elevation, androidx.compose.ui.unit.Dp pressedElevation, androidx.compose.ui.unit.Dp focusedElevation, androidx.compose.ui.unit.Dp hoveredElevation, androidx.compose.ui.unit.Dp draggedElevation, androidx.compose.ui.unit.Dp disabledElevation);
    ctor @BytecodeOnly public SelectableChipElevation(float, float, float, float, float, float, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @BytecodeOnly public float getDisabledElevation-D9Ej5fM();
    method @BytecodeOnly public float getDraggedElevation-D9Ej5fM();
    method @BytecodeOnly public float getElevation-D9Ej5fM();
    method @BytecodeOnly public float getFocusedElevation-D9Ej5fM();
    method @BytecodeOnly public float getHoveredElevation-D9Ej5fM();
    method @BytecodeOnly public float getPressedElevation-D9Ej5fM();
    property public androidx.compose.ui.unit.Dp disabledElevation;
    property public androidx.compose.ui.unit.Dp draggedElevation;
    property public androidx.compose.ui.unit.Dp elevation;
    property public androidx.compose.ui.unit.Dp focusedElevation;
    property public androidx.compose.ui.unit.Dp hoveredElevation;
    property public androidx.compose.ui.unit.Dp pressedElevation;
  }

  @androidx.compose.runtime.Stable public interface SelectableDates {
    method public default boolean isSelectableDate(long utcTimeMillis);
    method public default boolean isSelectableYear(int year);
  }

  public final class ShapeDefaults {
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.shape.CornerBasedShape getExtraExtraLarge();
    method public androidx.compose.foundation.shape.CornerBasedShape getExtraLarge();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.shape.CornerBasedShape getExtraLargeIncreased();
    method public androidx.compose.foundation.shape.CornerBasedShape getExtraSmall();
    method public androidx.compose.foundation.shape.CornerBasedShape getLarge();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.shape.CornerBasedShape getLargeIncreased();
    method public androidx.compose.foundation.shape.CornerBasedShape getMedium();
    method public androidx.compose.foundation.shape.CornerBasedShape getSmall();
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.shape.CornerBasedShape ExtraExtraLarge;
    property public androidx.compose.foundation.shape.CornerBasedShape ExtraLarge;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.shape.CornerBasedShape ExtraLargeIncreased;
    property public androidx.compose.foundation.shape.CornerBasedShape ExtraSmall;
    property public androidx.compose.foundation.shape.CornerBasedShape Large;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.shape.CornerBasedShape LargeIncreased;
    property public androidx.compose.foundation.shape.CornerBasedShape Medium;
    property public androidx.compose.foundation.shape.CornerBasedShape Small;
    field public static final androidx.compose.material3.ShapeDefaults INSTANCE;
  }

  @androidx.compose.runtime.Immutable public final class Shapes {
    ctor @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public Shapes();
    ctor public Shapes(optional androidx.compose.foundation.shape.CornerBasedShape extraSmall, optional androidx.compose.foundation.shape.CornerBasedShape small, optional androidx.compose.foundation.shape.CornerBasedShape medium, optional androidx.compose.foundation.shape.CornerBasedShape large, optional androidx.compose.foundation.shape.CornerBasedShape extraLarge);
    ctor @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public Shapes(optional androidx.compose.foundation.shape.CornerBasedShape extraSmall, optional androidx.compose.foundation.shape.CornerBasedShape small, optional androidx.compose.foundation.shape.CornerBasedShape medium, optional androidx.compose.foundation.shape.CornerBasedShape large, optional androidx.compose.foundation.shape.CornerBasedShape extraLarge, optional androidx.compose.foundation.shape.CornerBasedShape largeIncreased, optional androidx.compose.foundation.shape.CornerBasedShape extraLargeIncreased, optional androidx.compose.foundation.shape.CornerBasedShape extraExtraLarge);
    method public androidx.compose.material3.Shapes copy(optional androidx.compose.foundation.shape.CornerBasedShape extraSmall, optional androidx.compose.foundation.shape.CornerBasedShape small, optional androidx.compose.foundation.shape.CornerBasedShape medium, optional androidx.compose.foundation.shape.CornerBasedShape large, optional androidx.compose.foundation.shape.CornerBasedShape extraLarge);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.material3.Shapes copy(optional androidx.compose.foundation.shape.CornerBasedShape extraSmall, optional androidx.compose.foundation.shape.CornerBasedShape small, optional androidx.compose.foundation.shape.CornerBasedShape medium, optional androidx.compose.foundation.shape.CornerBasedShape large, optional androidx.compose.foundation.shape.CornerBasedShape extraLarge, optional androidx.compose.foundation.shape.CornerBasedShape largeIncreased, optional androidx.compose.foundation.shape.CornerBasedShape extraLargeIncreased, optional androidx.compose.foundation.shape.CornerBasedShape extraExtraLarge);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.shape.CornerBasedShape getExtraExtraLarge();
    method public androidx.compose.foundation.shape.CornerBasedShape getExtraLarge();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.shape.CornerBasedShape getExtraLargeIncreased();
    method public androidx.compose.foundation.shape.CornerBasedShape getExtraSmall();
    method public androidx.compose.foundation.shape.CornerBasedShape getLarge();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.shape.CornerBasedShape getLargeIncreased();
    method public androidx.compose.foundation.shape.CornerBasedShape getMedium();
    method public androidx.compose.foundation.shape.CornerBasedShape getSmall();
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.shape.CornerBasedShape extraExtraLarge;
    property public androidx.compose.foundation.shape.CornerBasedShape extraLarge;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.shape.CornerBasedShape extraLargeIncreased;
    property public androidx.compose.foundation.shape.CornerBasedShape extraSmall;
    property public androidx.compose.foundation.shape.CornerBasedShape large;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.shape.CornerBasedShape largeIncreased;
    property public androidx.compose.foundation.shape.CornerBasedShape medium;
    property public androidx.compose.foundation.shape.CornerBasedShape small;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Stable public final class SheetState {
    ctor @BytecodeOnly @Deprecated public SheetState(boolean, androidx.compose.ui.unit.Density!, androidx.compose.material3.SheetValue!, kotlin.jvm.functions.Function1!, boolean);
    ctor public SheetState(boolean skipPartiallyExpanded, kotlin.jvm.functions.Function0<java.lang.Float> positionalThreshold, kotlin.jvm.functions.Function0<java.lang.Float> velocityThreshold, optional androidx.compose.material3.SheetValue initialValue, optional kotlin.jvm.functions.Function1<? super androidx.compose.material3.SheetValue,java.lang.Boolean> confirmValueChange, optional boolean skipHiddenState);
    method public suspend Object? expand(kotlin.coroutines.Continuation<? super kotlin.Unit>);
    method public androidx.compose.material3.SheetValue getCurrentValue();
    method public boolean getHasExpandedState();
    method public boolean getHasPartiallyExpandedState();
    method public androidx.compose.material3.SheetValue getTargetValue();
    method public suspend Object? hide(kotlin.coroutines.Continuation<? super kotlin.Unit>);
    method public boolean isAnimationRunning();
    method public boolean isVisible();
    method public suspend Object? partialExpand(kotlin.coroutines.Continuation<? super kotlin.Unit>);
    method public float requireOffset();
    method public suspend Object? show(kotlin.coroutines.Continuation<? super kotlin.Unit>);
    property public androidx.compose.material3.SheetValue currentValue;
    property public boolean hasExpandedState;
    property public boolean hasPartiallyExpandedState;
    property public boolean isAnimationRunning;
    property public boolean isVisible;
    property public androidx.compose.material3.SheetValue targetValue;
    field public static final androidx.compose.material3.SheetState.Companion Companion;
  }

  public static final class SheetState.Companion {
    method public androidx.compose.runtime.saveable.Saver<androidx.compose.material3.SheetState,androidx.compose.material3.SheetValue> Saver(boolean skipPartiallyExpanded, kotlin.jvm.functions.Function0<java.lang.Float> positionalThreshold, kotlin.jvm.functions.Function0<java.lang.Float> velocityThreshold, kotlin.jvm.functions.Function1<? super androidx.compose.material3.SheetValue,java.lang.Boolean> confirmValueChange, boolean skipHiddenState);
    method @BytecodeOnly @Deprecated public androidx.compose.runtime.saveable.Saver! Saver(boolean, kotlin.jvm.functions.Function1!, androidx.compose.ui.unit.Density!, boolean);
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api public enum SheetValue {
    enum_constant public static final androidx.compose.material3.SheetValue Expanded;
    enum_constant public static final androidx.compose.material3.SheetValue Hidden;
    enum_constant public static final androidx.compose.material3.SheetValue PartiallyExpanded;
  }

  @kotlin.jvm.JvmInline public final value class ShortNavigationBarArrangement {
    method @BytecodeOnly public static androidx.compose.material3.ShortNavigationBarArrangement! box-impl(int);
    method @BytecodeOnly public int unbox-impl();
    field public static final androidx.compose.material3.ShortNavigationBarArrangement.Companion Companion;
  }

  public static final class ShortNavigationBarArrangement.Companion {
    method @BytecodeOnly public int getCentered-LnnQw40();
    method @BytecodeOnly public int getEqualWeight-LnnQw40();
    property public androidx.compose.material3.ShortNavigationBarArrangement Centered;
    property public androidx.compose.material3.ShortNavigationBarArrangement EqualWeight;
  }

  public final class ShortNavigationBarDefaults {
    method @BytecodeOnly public int getArrangement-LnnQw40();
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getContainerColor(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getContentColor(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.WindowInsets getWindowInsets();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.WindowInsets getWindowInsets(androidx.compose.runtime.Composer?, int);
    property public androidx.compose.material3.ShortNavigationBarArrangement arrangement;
    property public androidx.compose.ui.graphics.Color containerColor;
    property public androidx.compose.ui.graphics.Color contentColor;
    property @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.WindowInsets windowInsets;
    field public static final androidx.compose.material3.ShortNavigationBarDefaults INSTANCE;
  }

  public final class ShortNavigationBarItemDefaults {
    method @androidx.compose.runtime.Composable public androidx.compose.material3.NavigationItemColors colors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.NavigationItemColors colors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.NavigationItemColors colors(optional androidx.compose.ui.graphics.Color selectedIconColor, optional androidx.compose.ui.graphics.Color selectedTextColor, optional androidx.compose.ui.graphics.Color selectedIndicatorColor, optional androidx.compose.ui.graphics.Color unselectedIconColor, optional androidx.compose.ui.graphics.Color unselectedTextColor, optional androidx.compose.ui.graphics.Color disabledIconColor, optional androidx.compose.ui.graphics.Color disabledTextColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.NavigationItemColors colors-69fazGs(long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    field public static final androidx.compose.material3.ShortNavigationBarItemDefaults INSTANCE;
  }

  public final class ShortNavigationBarKt {
    method @KotlinOnly @androidx.compose.runtime.Composable public static void ShortNavigationBar(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.foundation.layout.WindowInsets windowInsets, optional androidx.compose.material3.ShortNavigationBarArrangement arrangement, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void ShortNavigationBar-kQ6Tpik(androidx.compose.ui.Modifier?, long, long, androidx.compose.foundation.layout.WindowInsets?, int, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void ShortNavigationBarItem(boolean selected, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, kotlin.jvm.functions.Function0<kotlin.Unit> icon, kotlin.jvm.functions.Function0<kotlin.Unit>? label, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.material3.NavigationItemIconPosition iconPosition, optional androidx.compose.material3.NavigationItemColors colors, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void ShortNavigationBarItem-6ZDA4I0(boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.ui.Modifier?, boolean, int, androidx.compose.material3.NavigationItemColors?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.runtime.Composer?, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.material3.ShortNavigationBarOverride> getLocalShortNavigationBarOverride();
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.material3.ShortNavigationBarOverride> LocalShortNavigationBarOverride;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public interface ShortNavigationBarOverride {
    method @androidx.compose.runtime.Composable public void ShortNavigationBar(androidx.compose.material3.ShortNavigationBarOverrideScope);
    method @BytecodeOnly @androidx.compose.runtime.Composable public void ShortNavigationBar(androidx.compose.material3.ShortNavigationBarOverrideScope, androidx.compose.runtime.Composer?, int);
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public final class ShortNavigationBarOverrideScope {
    method @BytecodeOnly public int getArrangement-LnnQw40();
    method @BytecodeOnly public long getContainerColor-0d7_KjU();
    method public kotlin.jvm.functions.Function0<kotlin.Unit> getContent();
    method @BytecodeOnly public long getContentColor-0d7_KjU();
    method public androidx.compose.ui.Modifier getModifier();
    method public androidx.compose.foundation.layout.WindowInsets getWindowInsets();
    property public androidx.compose.material3.ShortNavigationBarArrangement arrangement;
    property public androidx.compose.ui.graphics.Color containerColor;
    property public kotlin.jvm.functions.Function0<kotlin.Unit> content;
    property public androidx.compose.ui.graphics.Color contentColor;
    property public androidx.compose.ui.Modifier modifier;
    property public androidx.compose.foundation.layout.WindowInsets windowInsets;
  }

  public interface SingleChoiceSegmentedButtonRowScope extends androidx.compose.foundation.layout.RowScope {
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public interface SingleRowTopAppBarOverride {
    method @androidx.compose.runtime.Composable public void SingleRowTopAppBar(androidx.compose.material3.SingleRowTopAppBarOverrideScope);
    method @BytecodeOnly @androidx.compose.runtime.Composable public void SingleRowTopAppBar(androidx.compose.material3.SingleRowTopAppBarOverrideScope, androidx.compose.runtime.Composer?, int);
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public final class SingleRowTopAppBarOverrideScope {
    method public kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit> getActions();
    method public androidx.compose.material3.TopAppBarColors getColors();
    method @BytecodeOnly public float getExpandedHeight-D9Ej5fM();
    method public androidx.compose.ui.Modifier getModifier();
    method public kotlin.jvm.functions.Function0<kotlin.Unit> getNavigationIcon();
    method public androidx.compose.material3.TopAppBarScrollBehavior? getScrollBehavior();
    method public kotlin.jvm.functions.Function0<kotlin.Unit>? getSubtitle();
    method public androidx.compose.ui.text.TextStyle getSubtitleTextStyle();
    method public kotlin.jvm.functions.Function0<kotlin.Unit> getTitle();
    method public androidx.compose.ui.Alignment.Horizontal getTitleHorizontalAlignment();
    method public androidx.compose.ui.text.TextStyle getTitleTextStyle();
    method public androidx.compose.foundation.layout.WindowInsets getWindowInsets();
    property public kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit> actions;
    property public androidx.compose.material3.TopAppBarColors colors;
    property public androidx.compose.ui.unit.Dp expandedHeight;
    property public androidx.compose.ui.Modifier modifier;
    property public kotlin.jvm.functions.Function0<kotlin.Unit> navigationIcon;
    property public androidx.compose.material3.TopAppBarScrollBehavior? scrollBehavior;
    property public kotlin.jvm.functions.Function0<kotlin.Unit>? subtitle;
    property public androidx.compose.ui.text.TextStyle subtitleTextStyle;
    property public kotlin.jvm.functions.Function0<kotlin.Unit> title;
    property public androidx.compose.ui.Alignment.Horizontal titleHorizontalAlignment;
    property public androidx.compose.ui.text.TextStyle titleTextStyle;
    property public androidx.compose.foundation.layout.WindowInsets windowInsets;
  }

  @androidx.compose.runtime.Immutable public final class SliderColors {
    ctor @KotlinOnly public SliderColors(androidx.compose.ui.graphics.Color thumbColor, androidx.compose.ui.graphics.Color activeTrackColor, androidx.compose.ui.graphics.Color activeTickColor, androidx.compose.ui.graphics.Color inactiveTrackColor, androidx.compose.ui.graphics.Color inactiveTickColor, androidx.compose.ui.graphics.Color disabledThumbColor, androidx.compose.ui.graphics.Color disabledActiveTrackColor, androidx.compose.ui.graphics.Color disabledActiveTickColor, androidx.compose.ui.graphics.Color disabledInactiveTrackColor, androidx.compose.ui.graphics.Color disabledInactiveTickColor);
    ctor @BytecodeOnly public SliderColors(long, long, long, long, long, long, long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly public androidx.compose.material3.SliderColors copy(optional androidx.compose.ui.graphics.Color thumbColor, optional androidx.compose.ui.graphics.Color activeTrackColor, optional androidx.compose.ui.graphics.Color activeTickColor, optional androidx.compose.ui.graphics.Color inactiveTrackColor, optional androidx.compose.ui.graphics.Color inactiveTickColor, optional androidx.compose.ui.graphics.Color disabledThumbColor, optional androidx.compose.ui.graphics.Color disabledActiveTrackColor, optional androidx.compose.ui.graphics.Color disabledActiveTickColor, optional androidx.compose.ui.graphics.Color disabledInactiveTrackColor, optional androidx.compose.ui.graphics.Color disabledInactiveTickColor);
    method @BytecodeOnly public androidx.compose.material3.SliderColors copy--K518z4(long, long, long, long, long, long, long, long, long, long);
    method @BytecodeOnly public long getActiveTickColor-0d7_KjU();
    method @BytecodeOnly public long getActiveTrackColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledActiveTickColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledActiveTrackColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledInactiveTickColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledInactiveTrackColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledThumbColor-0d7_KjU();
    method @BytecodeOnly public long getInactiveTickColor-0d7_KjU();
    method @BytecodeOnly public long getInactiveTrackColor-0d7_KjU();
    method @BytecodeOnly public long getThumbColor-0d7_KjU();
    property public androidx.compose.ui.graphics.Color activeTickColor;
    property public androidx.compose.ui.graphics.Color activeTrackColor;
    property public androidx.compose.ui.graphics.Color disabledActiveTickColor;
    property public androidx.compose.ui.graphics.Color disabledActiveTrackColor;
    property public androidx.compose.ui.graphics.Color disabledInactiveTickColor;
    property public androidx.compose.ui.graphics.Color disabledInactiveTrackColor;
    property public androidx.compose.ui.graphics.Color disabledThumbColor;
    property public androidx.compose.ui.graphics.Color inactiveTickColor;
    property public androidx.compose.ui.graphics.Color inactiveTrackColor;
    property public androidx.compose.ui.graphics.Color thumbColor;
  }

  @androidx.compose.runtime.Stable public final class SliderDefaults {
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public void CenteredTrack(androidx.compose.material3.SliderState sliderState, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.material3.SliderColors colors, optional kotlin.jvm.functions.Function2<androidx.compose.ui.graphics.drawscope.DrawScope,androidx.compose.ui.geometry.Offset,kotlin.Unit>? drawStopIndicator, optional kotlin.jvm.functions.Function3<androidx.compose.ui.graphics.drawscope.DrawScope,androidx.compose.ui.geometry.Offset,androidx.compose.ui.graphics.Color,kotlin.Unit> drawTick, optional androidx.compose.ui.unit.Dp thumbTrackGapSize, optional androidx.compose.ui.unit.Dp trackInsideCornerSize, optional androidx.compose.ui.unit.Dp trackCornerSize);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void CenteredTrack-7LSsfP0(androidx.compose.material3.SliderState, androidx.compose.ui.Modifier?, boolean, androidx.compose.material3.SliderColors?, kotlin.jvm.functions.Function2<? super androidx.compose.ui.graphics.drawscope.DrawScope!,? super androidx.compose.ui.geometry.Offset!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.ui.graphics.drawscope.DrawScope!,? super androidx.compose.ui.geometry.Offset!,? super androidx.compose.ui.graphics.Color!,kotlin.Unit!>?, float, float, float, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public void Thumb(androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, androidx.compose.material3.SliderState sliderState, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.material3.SliderColors colors, optional boolean enabled, optional androidx.compose.ui.unit.DpSize thumbSize);
    method @KotlinOnly @androidx.compose.runtime.Composable public void Thumb(androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.material3.SliderColors colors, optional boolean enabled, optional androidx.compose.ui.unit.DpSize thumbSize);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void Thumb-9LiSoMs(androidx.compose.foundation.interaction.MutableInteractionSource, androidx.compose.ui.Modifier?, androidx.compose.material3.SliderColors?, boolean, long, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void Thumb-HwbPF3A(androidx.compose.foundation.interaction.MutableInteractionSource, androidx.compose.material3.SliderState, androidx.compose.ui.Modifier?, androidx.compose.material3.SliderColors?, boolean, long, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void Track(androidx.compose.material3.RangeSliderState!, androidx.compose.ui.Modifier!, androidx.compose.material3.SliderColors!, boolean, androidx.compose.runtime.Composer!, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public void Track(androidx.compose.material3.RangeSliderState rangeSliderState, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.material3.SliderColors colors, optional kotlin.jvm.functions.Function2<androidx.compose.ui.graphics.drawscope.DrawScope,androidx.compose.ui.geometry.Offset,kotlin.Unit>? drawStopIndicator, optional kotlin.jvm.functions.Function3<androidx.compose.ui.graphics.drawscope.DrawScope,androidx.compose.ui.geometry.Offset,androidx.compose.ui.graphics.Color,kotlin.Unit> drawTick, optional androidx.compose.ui.unit.Dp thumbTrackGapSize, optional androidx.compose.ui.unit.Dp trackInsideCornerSize);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public void Track(androidx.compose.material3.RangeSliderState rangeSliderState, androidx.compose.ui.unit.Dp trackCornerSize, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.material3.SliderColors colors, optional kotlin.jvm.functions.Function2<androidx.compose.ui.graphics.drawscope.DrawScope,androidx.compose.ui.geometry.Offset,kotlin.Unit>? drawStopIndicator, optional kotlin.jvm.functions.Function3<androidx.compose.ui.graphics.drawscope.DrawScope,androidx.compose.ui.geometry.Offset,androidx.compose.ui.graphics.Color,kotlin.Unit> drawTick, optional androidx.compose.ui.unit.Dp thumbTrackGapSize, optional androidx.compose.ui.unit.Dp trackInsideCornerSize);
    method @Deprecated @androidx.compose.runtime.Composable public void Track(androidx.compose.material3.SliderPositions sliderPositions, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.material3.SliderColors colors, optional boolean enabled);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void Track(androidx.compose.material3.SliderPositions, androidx.compose.ui.Modifier?, androidx.compose.material3.SliderColors?, boolean, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void Track(androidx.compose.material3.SliderState!, androidx.compose.ui.Modifier!, androidx.compose.material3.SliderColors!, boolean, androidx.compose.runtime.Composer!, int, int);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public void Track(androidx.compose.material3.SliderState sliderState, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.material3.SliderColors colors, optional kotlin.jvm.functions.Function2<androidx.compose.ui.graphics.drawscope.DrawScope,androidx.compose.ui.geometry.Offset,kotlin.Unit>? drawStopIndicator, optional kotlin.jvm.functions.Function3<androidx.compose.ui.graphics.drawscope.DrawScope,androidx.compose.ui.geometry.Offset,androidx.compose.ui.graphics.Color,kotlin.Unit> drawTick, optional androidx.compose.ui.unit.Dp thumbTrackGapSize, optional androidx.compose.ui.unit.Dp trackInsideCornerSize);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public void Track(androidx.compose.material3.SliderState sliderState, androidx.compose.ui.unit.Dp trackCornerSize, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.material3.SliderColors colors, optional kotlin.jvm.functions.Function2<androidx.compose.ui.graphics.drawscope.DrawScope,androidx.compose.ui.geometry.Offset,kotlin.Unit>? drawStopIndicator, optional kotlin.jvm.functions.Function3<androidx.compose.ui.graphics.drawscope.DrawScope,androidx.compose.ui.geometry.Offset,androidx.compose.ui.graphics.Color,kotlin.Unit> drawTick, optional androidx.compose.ui.unit.Dp thumbTrackGapSize, optional androidx.compose.ui.unit.Dp trackInsideCornerSize);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void Track-4EFweAY(androidx.compose.material3.RangeSliderState, androidx.compose.ui.Modifier?, boolean, androidx.compose.material3.SliderColors?, kotlin.jvm.functions.Function2<? super androidx.compose.ui.graphics.drawscope.DrawScope!,? super androidx.compose.ui.geometry.Offset!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.ui.graphics.drawscope.DrawScope!,? super androidx.compose.ui.geometry.Offset!,? super androidx.compose.ui.graphics.Color!,kotlin.Unit!>?, float, float, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void Track-4EFweAY(androidx.compose.material3.SliderState, androidx.compose.ui.Modifier?, boolean, androidx.compose.material3.SliderColors?, kotlin.jvm.functions.Function2<? super androidx.compose.ui.graphics.drawscope.DrawScope!,? super androidx.compose.ui.geometry.Offset!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.ui.graphics.drawscope.DrawScope!,? super androidx.compose.ui.geometry.Offset!,? super androidx.compose.ui.graphics.Color!,kotlin.Unit!>?, float, float, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void Track-mnvyFg4(androidx.compose.material3.RangeSliderState, float, androidx.compose.ui.Modifier?, boolean, androidx.compose.material3.SliderColors?, kotlin.jvm.functions.Function2<? super androidx.compose.ui.graphics.drawscope.DrawScope!,? super androidx.compose.ui.geometry.Offset!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.ui.graphics.drawscope.DrawScope!,? super androidx.compose.ui.geometry.Offset!,? super androidx.compose.ui.graphics.Color!,kotlin.Unit!>?, float, float, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void Track-mnvyFg4(androidx.compose.material3.SliderState, float, androidx.compose.ui.Modifier?, boolean, androidx.compose.material3.SliderColors?, kotlin.jvm.functions.Function2<? super androidx.compose.ui.graphics.drawscope.DrawScope!,? super androidx.compose.ui.geometry.Offset!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.ui.graphics.drawscope.DrawScope!,? super androidx.compose.ui.geometry.Offset!,? super androidx.compose.ui.graphics.Color!,kotlin.Unit!>?, float, float, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.compose.material3.SliderColors colors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.SliderColors colors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.SliderColors colors(optional androidx.compose.ui.graphics.Color thumbColor, optional androidx.compose.ui.graphics.Color activeTrackColor, optional androidx.compose.ui.graphics.Color activeTickColor, optional androidx.compose.ui.graphics.Color inactiveTrackColor, optional androidx.compose.ui.graphics.Color inactiveTickColor, optional androidx.compose.ui.graphics.Color disabledThumbColor, optional androidx.compose.ui.graphics.Color disabledActiveTrackColor, optional androidx.compose.ui.graphics.Color disabledActiveTickColor, optional androidx.compose.ui.graphics.Color disabledInactiveTrackColor, optional androidx.compose.ui.graphics.Color disabledInactiveTickColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.SliderColors colors-q0g_0yA(long, long, long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int, int);
    method @KotlinOnly public void drawStopIndicator(androidx.compose.ui.graphics.drawscope.DrawScope, androidx.compose.ui.geometry.Offset offset, androidx.compose.ui.unit.Dp size, androidx.compose.ui.graphics.Color color);
    method @BytecodeOnly public void drawStopIndicator-x3O1jOs(androidx.compose.ui.graphics.drawscope.DrawScope, long, float, long);
    method @BytecodeOnly public float getTickSize-D9Ej5fM();
    method @BytecodeOnly public float getTrackStopIndicatorSize-D9Ej5fM();
    property public androidx.compose.ui.unit.Dp TickSize;
    property public androidx.compose.ui.unit.Dp TrackStopIndicatorSize;
    field public static final androidx.compose.material3.SliderDefaults INSTANCE;
  }

  public final class SliderKt {
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void RangeSlider(androidx.compose.material3.RangeSliderState state, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.material3.SliderColors colors, optional androidx.compose.foundation.interaction.MutableInteractionSource startInteractionSource, optional androidx.compose.foundation.interaction.MutableInteractionSource endInteractionSource, optional kotlin.jvm.functions.Function1<? super androidx.compose.material3.RangeSliderState,kotlin.Unit> startThumb, optional kotlin.jvm.functions.Function1<? super androidx.compose.material3.RangeSliderState,kotlin.Unit> endThumb, optional kotlin.jvm.functions.Function1<? super androidx.compose.material3.RangeSliderState,kotlin.Unit> track);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void RangeSlider(androidx.compose.material3.RangeSliderState, androidx.compose.ui.Modifier?, boolean, androidx.compose.material3.SliderColors?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.material3.RangeSliderState!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.material3.RangeSliderState!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.material3.RangeSliderState!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void RangeSlider(kotlin.ranges.ClosedFloatingPointRange<java.lang.Float> value, kotlin.jvm.functions.Function1<? super kotlin.ranges.ClosedFloatingPointRange<java.lang.Float>,kotlin.Unit> onValueChange, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional kotlin.ranges.ClosedFloatingPointRange<java.lang.Float> valueRange, optional @IntRange(from=0L) int steps, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onValueChangeFinished, optional androidx.compose.material3.SliderColors colors);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void RangeSlider(kotlin.ranges.ClosedFloatingPointRange<java.lang.Float!>, kotlin.jvm.functions.Function1<? super kotlin.ranges.ClosedFloatingPointRange<java.lang.Float!>!,kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, kotlin.ranges.ClosedFloatingPointRange<java.lang.Float!>?, @IntRange(from=0L) int, kotlin.jvm.functions.Function0<kotlin.Unit!>?, androidx.compose.material3.SliderColors?, androidx.compose.runtime.Composer?, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void RangeSlider(kotlin.ranges.ClosedFloatingPointRange<java.lang.Float> value, kotlin.jvm.functions.Function1<? super kotlin.ranges.ClosedFloatingPointRange<java.lang.Float>,kotlin.Unit> onValueChange, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional kotlin.ranges.ClosedFloatingPointRange<java.lang.Float> valueRange, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onValueChangeFinished, optional androidx.compose.material3.SliderColors colors, optional androidx.compose.foundation.interaction.MutableInteractionSource startInteractionSource, optional androidx.compose.foundation.interaction.MutableInteractionSource endInteractionSource, optional kotlin.jvm.functions.Function1<? super androidx.compose.material3.RangeSliderState,kotlin.Unit> startThumb, optional kotlin.jvm.functions.Function1<? super androidx.compose.material3.RangeSliderState,kotlin.Unit> endThumb, optional kotlin.jvm.functions.Function1<? super androidx.compose.material3.RangeSliderState,kotlin.Unit> track, optional @IntRange(from=0L) int steps);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void RangeSlider(kotlin.ranges.ClosedFloatingPointRange<java.lang.Float!>, kotlin.jvm.functions.Function1<? super kotlin.ranges.ClosedFloatingPointRange<java.lang.Float!>!,kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, kotlin.ranges.ClosedFloatingPointRange<java.lang.Float!>?, kotlin.jvm.functions.Function0<kotlin.Unit!>?, androidx.compose.material3.SliderColors?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.material3.RangeSliderState!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.material3.RangeSliderState!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.material3.RangeSliderState!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, @IntRange(from=0L) int, androidx.compose.runtime.Composer?, int, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void Slider(androidx.compose.material3.SliderState state, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.material3.SliderColors colors, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional kotlin.jvm.functions.Function1<? super androidx.compose.material3.SliderState,kotlin.Unit> thumb, optional kotlin.jvm.functions.Function1<? super androidx.compose.material3.SliderState,kotlin.Unit> track);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void Slider(androidx.compose.material3.SliderState, androidx.compose.ui.Modifier?, boolean, androidx.compose.material3.SliderColors?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.material3.SliderState!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.material3.SliderState!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.runtime.Composer?, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void Slider(float value, kotlin.jvm.functions.Function1<? super java.lang.Float,kotlin.Unit> onValueChange, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onValueChangeFinished, optional androidx.compose.material3.SliderColors colors, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional @IntRange(from=0L) int steps, optional kotlin.jvm.functions.Function1<? super androidx.compose.material3.SliderState,kotlin.Unit> thumb, optional kotlin.jvm.functions.Function1<? super androidx.compose.material3.SliderState,kotlin.Unit> track, optional kotlin.ranges.ClosedFloatingPointRange<java.lang.Float> valueRange);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void Slider(float, kotlin.jvm.functions.Function1<? super java.lang.Float!,kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>?, androidx.compose.material3.SliderColors?, androidx.compose.foundation.interaction.MutableInteractionSource?, @IntRange(from=0L) int, kotlin.jvm.functions.Function3<? super androidx.compose.material3.SliderState!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.material3.SliderState!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.ranges.ClosedFloatingPointRange<java.lang.Float!>?, androidx.compose.runtime.Composer?, int, int, int);
    method @androidx.compose.runtime.Composable public static void Slider(float value, kotlin.jvm.functions.Function1<? super java.lang.Float,kotlin.Unit> onValueChange, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional kotlin.ranges.ClosedFloatingPointRange<java.lang.Float> valueRange, optional @IntRange(from=0L) int steps, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onValueChangeFinished, optional androidx.compose.material3.SliderColors colors, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void Slider(float, kotlin.jvm.functions.Function1<? super java.lang.Float!,kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, kotlin.ranges.ClosedFloatingPointRange<java.lang.Float!>?, @IntRange(from=0L) int, kotlin.jvm.functions.Function0<kotlin.Unit!>?, androidx.compose.material3.SliderColors?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.runtime.Composer?, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void VerticalSlider(androidx.compose.material3.SliderState state, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional boolean reverseDirection, optional androidx.compose.material3.SliderColors colors, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional kotlin.jvm.functions.Function1<? super androidx.compose.material3.SliderState,kotlin.Unit> thumb, optional kotlin.jvm.functions.Function1<? super androidx.compose.material3.SliderState,kotlin.Unit> track);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void VerticalSlider(androidx.compose.material3.SliderState, androidx.compose.ui.Modifier?, boolean, boolean, androidx.compose.material3.SliderColors?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.material3.SliderState!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.material3.SliderState!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.runtime.Composer?, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static androidx.compose.material3.RangeSliderState rememberRangeSliderState(optional float activeRangeStart, optional float activeRangeEnd, optional @IntRange(from=0L) int steps, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onValueChangeFinished, optional kotlin.ranges.ClosedFloatingPointRange<java.lang.Float> valueRange);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static androidx.compose.material3.RangeSliderState rememberRangeSliderState(float, float, @IntRange(from=0L) int, kotlin.jvm.functions.Function0<kotlin.Unit!>?, kotlin.ranges.ClosedFloatingPointRange<java.lang.Float!>?, androidx.compose.runtime.Composer?, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static androidx.compose.material3.SliderState rememberSliderState(optional float value, optional @IntRange(from=0L) int steps, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onValueChangeFinished, optional kotlin.ranges.ClosedFloatingPointRange<java.lang.Float> valueRange);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static androidx.compose.material3.SliderState rememberSliderState(float, @IntRange(from=0L) int, kotlin.jvm.functions.Function0<kotlin.Unit!>?, kotlin.ranges.ClosedFloatingPointRange<java.lang.Float!>?, androidx.compose.runtime.Composer?, int, int);
  }

  @Deprecated @androidx.compose.runtime.Stable public final class SliderPositions {
    ctor @Deprecated public SliderPositions();
    ctor @Deprecated public SliderPositions(optional kotlin.ranges.ClosedFloatingPointRange<java.lang.Float> initialActiveRange, optional float[] initialTickFractions);
    method @Deprecated public kotlin.ranges.ClosedFloatingPointRange<java.lang.Float> getActiveRange();
    method @Deprecated public float[] getTickFractions();
    property @Deprecated public kotlin.ranges.ClosedFloatingPointRange<java.lang.Float> activeRange;
    property @Deprecated public float[] tickFractions;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api public final class SliderState implements androidx.compose.foundation.gestures.DraggableState {
    ctor public SliderState();
    ctor public SliderState(optional float value, optional @IntRange(from=0L) int steps, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onValueChangeFinished, optional kotlin.ranges.ClosedFloatingPointRange<java.lang.Float> valueRange);
    method public void dispatchRawDelta(float delta);
    method public suspend Object? drag(androidx.compose.foundation.MutatePriority dragPriority, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.gestures.DragScope,? super kotlin.coroutines.Continuation<? super kotlin.Unit>,? extends java.lang.Object?> block, kotlin.coroutines.Continuation<? super kotlin.Unit>);
    method public float getCoercedValueAsFraction();
    method public kotlin.jvm.functions.Function1<java.lang.Float,kotlin.Unit>? getOnValueChange();
    method public kotlin.jvm.functions.Function0<kotlin.Unit>? getOnValueChangeFinished();
    method public int getSteps();
    method public float getValue();
    method public kotlin.ranges.ClosedFloatingPointRange<java.lang.Float> getValueRange();
    method public boolean isDragging();
    method public void setOnValueChange(kotlin.jvm.functions.Function1<? super java.lang.Float,kotlin.Unit>?);
    method public void setOnValueChangeFinished(kotlin.jvm.functions.Function0<kotlin.Unit>?);
    method public void setShouldAutoSnap(boolean);
    method public void setValue(float);
    method public boolean shouldAutoSnap();
    property public float coercedValueAsFraction;
    property public boolean isDragging;
    property public kotlin.jvm.functions.Function1<java.lang.Float,kotlin.Unit>? onValueChange;
    property public kotlin.jvm.functions.Function0<kotlin.Unit>? onValueChangeFinished;
    property public boolean shouldAutoSnap;
    property public int steps;
    property public float value;
    property public kotlin.ranges.ClosedFloatingPointRange<java.lang.Float> valueRange;
    field public static final androidx.compose.material3.SliderState.Companion Companion;
  }

  public static final class SliderState.Companion {
    method public androidx.compose.runtime.saveable.Saver<androidx.compose.material3.SliderState,? extends java.lang.Object?> Saver(kotlin.jvm.functions.Function0<kotlin.Unit>? onValueChangeFinished, kotlin.ranges.ClosedFloatingPointRange<java.lang.Float> valueRange);
  }

  @androidx.compose.runtime.Stable public interface SnackbarData {
    method public void dismiss();
    method public androidx.compose.material3.SnackbarVisuals getVisuals();
    method public void performAction();
    property public abstract androidx.compose.material3.SnackbarVisuals visuals;
  }

  public final class SnackbarDefaults {
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getActionColor(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getActionContentColor(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getColor(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getContentColor(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getDismissActionContentColor(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getShape(androidx.compose.runtime.Composer?, int);
    property public androidx.compose.ui.graphics.Color actionColor;
    property public androidx.compose.ui.graphics.Color actionContentColor;
    property public androidx.compose.ui.graphics.Color color;
    property public androidx.compose.ui.graphics.Color contentColor;
    property public androidx.compose.ui.graphics.Color dismissActionContentColor;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape shape;
    field public static final androidx.compose.material3.SnackbarDefaults INSTANCE;
  }

  public enum SnackbarDuration {
    enum_constant public static final androidx.compose.material3.SnackbarDuration Indefinite;
    enum_constant public static final androidx.compose.material3.SnackbarDuration Long;
    enum_constant public static final androidx.compose.material3.SnackbarDuration Short;
  }

  public final class SnackbarHostKt {
    method @androidx.compose.runtime.Composable public static void SnackbarHost(androidx.compose.material3.SnackbarHostState hostState, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function1<? super androidx.compose.material3.SnackbarData,kotlin.Unit> snackbar);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void SnackbarHost(androidx.compose.material3.SnackbarHostState, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function3<? super androidx.compose.material3.SnackbarData!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.runtime.Composer?, int, int);
  }

  @androidx.compose.runtime.Stable public final class SnackbarHostState {
    ctor public SnackbarHostState();
    method public androidx.compose.material3.SnackbarData? getCurrentSnackbarData();
    method public suspend Object? showSnackbar(androidx.compose.material3.SnackbarVisuals visuals, kotlin.coroutines.Continuation<? super androidx.compose.material3.SnackbarResult>);
    method public suspend Object? showSnackbar(String message, optional String? actionLabel, optional boolean withDismissAction, optional androidx.compose.material3.SnackbarDuration duration, kotlin.coroutines.Continuation<? super androidx.compose.material3.SnackbarResult>);
    property public androidx.compose.material3.SnackbarData? currentSnackbarData;
  }

  public final class SnackbarKt {
    method @KotlinOnly @androidx.compose.runtime.Composable public static void Snackbar(androidx.compose.material3.SnackbarData snackbarData, optional androidx.compose.ui.Modifier modifier, optional boolean actionOnNewLine, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color actionColor, optional androidx.compose.ui.graphics.Color actionContentColor, optional androidx.compose.ui.graphics.Color dismissActionContentColor);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void Snackbar(optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? action, optional kotlin.jvm.functions.Function0<kotlin.Unit>? dismissAction, optional boolean actionOnNewLine, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color actionContentColor, optional androidx.compose.ui.graphics.Color dismissActionContentColor, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void Snackbar-eQBnUkQ(androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, boolean, androidx.compose.ui.graphics.Shape?, long, long, long, long, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void Snackbar-sDKtq54(androidx.compose.material3.SnackbarData, androidx.compose.ui.Modifier?, boolean, androidx.compose.ui.graphics.Shape?, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
  }

  public enum SnackbarResult {
    enum_constant public static final androidx.compose.material3.SnackbarResult ActionPerformed;
    enum_constant public static final androidx.compose.material3.SnackbarResult Dismissed;
  }

  @androidx.compose.runtime.Stable public interface SnackbarVisuals {
    method public String? getActionLabel();
    method public androidx.compose.material3.SnackbarDuration getDuration();
    method public String getMessage();
    method public boolean getWithDismissAction();
    property public abstract String? actionLabel;
    property public abstract androidx.compose.material3.SnackbarDuration duration;
    property public abstract String message;
    property public abstract boolean withDismissAction;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public final class SplitButtonDefaults {
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public void ElevatedLeadingButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.material3.SplitButtonShapes shapes, optional androidx.compose.material3.ButtonColors colors, optional androidx.compose.material3.ButtonElevation? elevation, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public void ElevatedLeadingButton(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, androidx.compose.material3.SplitButtonShapes?, androidx.compose.material3.ButtonColors?, androidx.compose.material3.ButtonElevation?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public void ElevatedTrailingButton(boolean checked, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onCheckedChange, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.material3.SplitButtonShapes shapes, optional androidx.compose.material3.ButtonColors colors, optional androidx.compose.material3.ButtonElevation? elevation, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public void ElevatedTrailingButton(boolean, kotlin.jvm.functions.Function1<? super java.lang.Boolean!,kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, androidx.compose.material3.SplitButtonShapes?, androidx.compose.material3.ButtonColors?, androidx.compose.material3.ButtonElevation?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public void LeadingButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.material3.SplitButtonShapes shapes, optional androidx.compose.material3.ButtonColors colors, optional androidx.compose.material3.ButtonElevation? elevation, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public void LeadingButton(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, androidx.compose.material3.SplitButtonShapes?, androidx.compose.material3.ButtonColors?, androidx.compose.material3.ButtonElevation?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public void OutlinedLeadingButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.material3.SplitButtonShapes shapes, optional androidx.compose.material3.ButtonColors colors, optional androidx.compose.material3.ButtonElevation? elevation, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public void OutlinedLeadingButton(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, androidx.compose.material3.SplitButtonShapes?, androidx.compose.material3.ButtonColors?, androidx.compose.material3.ButtonElevation?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public void OutlinedTrailingButton(boolean checked, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onCheckedChange, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.material3.SplitButtonShapes shapes, optional androidx.compose.material3.ButtonColors colors, optional androidx.compose.material3.ButtonElevation? elevation, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public void OutlinedTrailingButton(boolean, kotlin.jvm.functions.Function1<? super java.lang.Boolean!,kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, androidx.compose.material3.SplitButtonShapes?, androidx.compose.material3.ButtonColors?, androidx.compose.material3.ButtonElevation?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public void TonalLeadingButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.material3.SplitButtonShapes shapes, optional androidx.compose.material3.ButtonColors colors, optional androidx.compose.material3.ButtonElevation? elevation, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public void TonalLeadingButton(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, androidx.compose.material3.SplitButtonShapes?, androidx.compose.material3.ButtonColors?, androidx.compose.material3.ButtonElevation?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public void TonalTrailingButton(boolean checked, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onCheckedChange, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.material3.SplitButtonShapes shapes, optional androidx.compose.material3.ButtonColors colors, optional androidx.compose.material3.ButtonElevation? elevation, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public void TonalTrailingButton(boolean, kotlin.jvm.functions.Function1<? super java.lang.Boolean!,kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, androidx.compose.material3.SplitButtonShapes?, androidx.compose.material3.ButtonColors?, androidx.compose.material3.ButtonElevation?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public void TrailingButton(boolean checked, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onCheckedChange, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.material3.SplitButtonShapes shapes, optional androidx.compose.material3.ButtonColors colors, optional androidx.compose.material3.ButtonElevation? elevation, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public void TrailingButton(boolean, kotlin.jvm.functions.Function1<? super java.lang.Boolean!,kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, androidx.compose.material3.SplitButtonShapes?, androidx.compose.material3.ButtonColors?, androidx.compose.material3.ButtonElevation?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public void TrailingButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.material3.SplitButtonShapes shapes, optional androidx.compose.material3.ButtonColors colors, optional androidx.compose.material3.ButtonElevation? elevation, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public void TrailingButton(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, androidx.compose.material3.SplitButtonShapes?, androidx.compose.material3.ButtonColors?, androidx.compose.material3.ButtonElevation?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public float getExtraLargeContainerHeight-D9Ej5fM();
    method public androidx.compose.foundation.shape.CornerSize getExtraLargeInnerCornerSize();
    method public androidx.compose.foundation.shape.CornerSize getExtraLargeInnerCornerSizePressed();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.layout.PaddingValues getExtraLargeLeadingButtonContentPadding();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.layout.PaddingValues getExtraLargeTrailingButtonContentPadding();
    method @BytecodeOnly public float getExtraLargeTrailingButtonIconSize-D9Ej5fM();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public float getExtraSmallContainerHeight-D9Ej5fM();
    method public androidx.compose.foundation.shape.CornerSize getExtraSmallInnerCornerSize();
    method public androidx.compose.foundation.shape.CornerSize getExtraSmallInnerCornerSizePressed();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.layout.PaddingValues getExtraSmallLeadingButtonContentPadding();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.layout.PaddingValues getExtraSmallTrailingButtonContentPadding();
    method @BytecodeOnly public float getExtraSmallTrailingButtonIconSize-D9Ej5fM();
    method @BytecodeOnly @Deprecated public androidx.compose.foundation.shape.CornerSize! getInnerCornerSize();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public float getLargeContainerHeight-D9Ej5fM();
    method public androidx.compose.foundation.shape.CornerSize getLargeInnerCornerSize();
    method public androidx.compose.foundation.shape.CornerSize getLargeInnerCornerSizePressed();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.layout.PaddingValues getLargeLeadingButtonContentPadding();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.layout.PaddingValues getLargeTrailingButtonContentPadding();
    method @BytecodeOnly public float getLargeTrailingButtonIconSize-D9Ej5fM();
    method @BytecodeOnly @Deprecated public androidx.compose.foundation.layout.PaddingValues! getLeadingButtonContentPadding();
    method @BytecodeOnly public float getLeadingIconSize-D9Ej5fM();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public float getMediumContainerHeight-D9Ej5fM();
    method public androidx.compose.foundation.shape.CornerSize getMediumInnerCornerSize();
    method public androidx.compose.foundation.shape.CornerSize getMediumInnerCornerSizePressed();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.layout.PaddingValues getMediumLeadingButtonContentPadding();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.layout.PaddingValues getMediumTrailingButtonContentPadding();
    method @BytecodeOnly public float getMediumTrailingButtonIconSize-D9Ej5fM();
    method public androidx.compose.foundation.shape.CornerSize getOuterCornerSize();
    method @BytecodeOnly public float getSmallContainerHeight-D9Ej5fM();
    method public androidx.compose.foundation.shape.CornerSize getSmallInnerCornerSize();
    method public androidx.compose.foundation.shape.CornerSize getSmallInnerCornerSizePressed();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.layout.PaddingValues getSmallLeadingButtonContentPadding();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.layout.PaddingValues getSmallTrailingButtonContentPadding();
    method @BytecodeOnly public float getSmallTrailingButtonIconSize-D9Ej5fM();
    method @BytecodeOnly public float getSpacing-D9Ej5fM();
    method @BytecodeOnly @Deprecated public androidx.compose.foundation.layout.PaddingValues! getTrailingButtonContentPadding();
    method @BytecodeOnly public float getTrailingIconSize-D9Ej5fM();
    method @KotlinOnly public androidx.compose.foundation.layout.PaddingValues leadingButtonContentPaddingFor(androidx.compose.ui.unit.Dp buttonHeight);
    method @BytecodeOnly public androidx.compose.foundation.layout.PaddingValues leadingButtonContentPaddingFor-0680j_4(float);
    method @KotlinOnly public androidx.compose.ui.unit.Dp leadingButtonIconSizeFor(androidx.compose.ui.unit.Dp buttonHeight);
    method @BytecodeOnly public float leadingButtonIconSizeFor-5rwHm24(float);
    method @BytecodeOnly @Deprecated public androidx.compose.material3.SplitButtonShapes! leadingButtonShapes(androidx.compose.foundation.shape.CornerSize!);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.material3.SplitButtonShapes leadingButtonShapesFor(androidx.compose.ui.unit.Dp buttonHeight);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.material3.SplitButtonShapes leadingButtonShapesFor-8Feqmps(float, androidx.compose.runtime.Composer?, int);
    method @KotlinOnly public androidx.compose.foundation.layout.PaddingValues trailingButtonContentPaddingFor(androidx.compose.ui.unit.Dp buttonHeight);
    method @BytecodeOnly public androidx.compose.foundation.layout.PaddingValues trailingButtonContentPaddingFor-0680j_4(float);
    method @KotlinOnly public androidx.compose.ui.unit.Dp trailingButtonIconSizeFor(androidx.compose.ui.unit.Dp buttonHeight);
    method @BytecodeOnly public float trailingButtonIconSizeFor-5rwHm24(float);
    method @BytecodeOnly @Deprecated public androidx.compose.material3.SplitButtonShapes! trailingButtonShapes(androidx.compose.foundation.shape.CornerSize!);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.material3.SplitButtonShapes trailingButtonShapesFor(androidx.compose.ui.unit.Dp buttonHeight);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.material3.SplitButtonShapes trailingButtonShapesFor-8Feqmps(float, androidx.compose.runtime.Composer?, int);
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.unit.Dp ExtraLargeContainerHeight;
    property public androidx.compose.foundation.shape.CornerSize ExtraLargeInnerCornerSize;
    property public androidx.compose.foundation.shape.CornerSize ExtraLargeInnerCornerSizePressed;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.layout.PaddingValues ExtraLargeLeadingButtonContentPadding;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.layout.PaddingValues ExtraLargeTrailingButtonContentPadding;
    property public androidx.compose.ui.unit.Dp ExtraLargeTrailingButtonIconSize;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.unit.Dp ExtraSmallContainerHeight;
    property public androidx.compose.foundation.shape.CornerSize ExtraSmallInnerCornerSize;
    property public androidx.compose.foundation.shape.CornerSize ExtraSmallInnerCornerSizePressed;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.layout.PaddingValues ExtraSmallLeadingButtonContentPadding;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.layout.PaddingValues ExtraSmallTrailingButtonContentPadding;
    property public androidx.compose.ui.unit.Dp ExtraSmallTrailingButtonIconSize;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.unit.Dp LargeContainerHeight;
    property public androidx.compose.foundation.shape.CornerSize LargeInnerCornerSize;
    property public androidx.compose.foundation.shape.CornerSize LargeInnerCornerSizePressed;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.layout.PaddingValues LargeLeadingButtonContentPadding;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.layout.PaddingValues LargeTrailingButtonContentPadding;
    property public androidx.compose.ui.unit.Dp LargeTrailingButtonIconSize;
    property public androidx.compose.ui.unit.Dp LeadingIconSize;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.unit.Dp MediumContainerHeight;
    property public androidx.compose.foundation.shape.CornerSize MediumInnerCornerSize;
    property public androidx.compose.foundation.shape.CornerSize MediumInnerCornerSizePressed;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.layout.PaddingValues MediumLeadingButtonContentPadding;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.layout.PaddingValues MediumTrailingButtonContentPadding;
    property public androidx.compose.ui.unit.Dp MediumTrailingButtonIconSize;
    property public androidx.compose.foundation.shape.CornerSize OuterCornerSize;
    property public androidx.compose.ui.unit.Dp SmallContainerHeight;
    property public androidx.compose.foundation.shape.CornerSize SmallInnerCornerSize;
    property public androidx.compose.foundation.shape.CornerSize SmallInnerCornerSizePressed;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.layout.PaddingValues SmallLeadingButtonContentPadding;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.foundation.layout.PaddingValues SmallTrailingButtonContentPadding;
    property public androidx.compose.ui.unit.Dp SmallTrailingButtonIconSize;
    property public androidx.compose.ui.unit.Dp Spacing;
    property public androidx.compose.ui.unit.Dp TrailingIconSize;
    field public static final androidx.compose.material3.SplitButtonDefaults INSTANCE;
  }

  public final class SplitButtonKt {
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void SplitButtonLayout(kotlin.jvm.functions.Function0<kotlin.Unit> leadingButton, kotlin.jvm.functions.Function0<kotlin.Unit> trailingButton, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.unit.Dp spacing);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void SplitButtonLayout--jt2gSs(kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, float, androidx.compose.runtime.Composer?, int, int);
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public final class SplitButtonShapes {
    ctor public SplitButtonShapes(androidx.compose.ui.graphics.Shape shape, androidx.compose.ui.graphics.Shape? pressedShape, androidx.compose.ui.graphics.Shape? checkedShape);
    method public androidx.compose.ui.graphics.Shape? getCheckedShape();
    method public androidx.compose.ui.graphics.Shape? getPressedShape();
    method public androidx.compose.ui.graphics.Shape getShape();
    property public androidx.compose.ui.graphics.Shape? checkedShape;
    property public androidx.compose.ui.graphics.Shape? pressedShape;
    property public androidx.compose.ui.graphics.Shape shape;
  }

  public final class SuggestionChipDefaults {
    method @androidx.compose.runtime.Composable public androidx.compose.material3.ChipColors elevatedSuggestionChipColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ChipColors elevatedSuggestionChipColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ChipColors elevatedSuggestionChipColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color labelColor, optional androidx.compose.ui.graphics.Color iconContentColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledLabelColor, optional androidx.compose.ui.graphics.Color disabledIconContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ChipColors elevatedSuggestionChipColors-5tl4gsc(long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ChipElevation elevatedSuggestionChipElevation(optional androidx.compose.ui.unit.Dp elevation, optional androidx.compose.ui.unit.Dp pressedElevation, optional androidx.compose.ui.unit.Dp focusedElevation, optional androidx.compose.ui.unit.Dp hoveredElevation, optional androidx.compose.ui.unit.Dp draggedElevation, optional androidx.compose.ui.unit.Dp disabledElevation);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ChipElevation elevatedSuggestionChipElevation-aqJV_2Y(float, float, float, float, float, float, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly public float getHeight-D9Ej5fM();
    method @BytecodeOnly public float getIconSize-D9Ej5fM();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getShape(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @Deprecated @androidx.compose.runtime.Composable public androidx.compose.material3.ChipBorder suggestionChipBorder(optional androidx.compose.ui.graphics.Color borderColor, optional androidx.compose.ui.graphics.Color disabledBorderColor, optional androidx.compose.ui.unit.Dp borderWidth);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.BorderStroke suggestionChipBorder(boolean enabled, optional androidx.compose.ui.graphics.Color borderColor, optional androidx.compose.ui.graphics.Color disabledBorderColor, optional androidx.compose.ui.unit.Dp borderWidth);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable public androidx.compose.material3.ChipBorder suggestionChipBorder-d_3_b6Q(long, long, float, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.BorderStroke suggestionChipBorder-h1eT-Ww(boolean, long, long, float, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.compose.material3.ChipColors suggestionChipColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ChipColors suggestionChipColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ChipColors suggestionChipColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color labelColor, optional androidx.compose.ui.graphics.Color iconContentColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledLabelColor, optional androidx.compose.ui.graphics.Color disabledIconContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ChipColors suggestionChipColors-5tl4gsc(long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ChipElevation suggestionChipElevation(optional androidx.compose.ui.unit.Dp elevation, optional androidx.compose.ui.unit.Dp pressedElevation, optional androidx.compose.ui.unit.Dp focusedElevation, optional androidx.compose.ui.unit.Dp hoveredElevation, optional androidx.compose.ui.unit.Dp draggedElevation, optional androidx.compose.ui.unit.Dp disabledElevation);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ChipElevation suggestionChipElevation-aqJV_2Y(float, float, float, float, float, float, androidx.compose.runtime.Composer?, int, int);
    property public androidx.compose.ui.unit.Dp Height;
    property public androidx.compose.ui.unit.Dp IconSize;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape shape;
    field public static final androidx.compose.material3.SuggestionChipDefaults INSTANCE;
  }

  public final class SurfaceKt {
    method @KotlinOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static void Surface(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Color color, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.unit.Dp tonalElevation, optional androidx.compose.ui.unit.Dp shadowElevation, optional androidx.compose.foundation.BorderStroke? border, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @KotlinOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static void Surface(boolean selected, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Color color, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.unit.Dp tonalElevation, optional androidx.compose.ui.unit.Dp shadowElevation, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @KotlinOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static void Surface(boolean checked, kotlin.jvm.functions.Function1<java.lang.Boolean,kotlin.Unit> onCheckedChange, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Color color, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.unit.Dp tonalElevation, optional androidx.compose.ui.unit.Dp shadowElevation, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @KotlinOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static void Surface(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Color color, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.unit.Dp tonalElevation, optional androidx.compose.ui.unit.Dp shadowElevation, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void Surface-T9BRK9s(androidx.compose.ui.Modifier?, androidx.compose.ui.graphics.Shape?, long, long, float, float, androidx.compose.foundation.BorderStroke?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void Surface-d85dljk(boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, androidx.compose.ui.graphics.Shape?, long, long, float, float, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void Surface-d85dljk(boolean, kotlin.jvm.functions.Function1<? super java.lang.Boolean!,kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, androidx.compose.ui.graphics.Shape?, long, long, float, float, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void Surface-o_FOJdg(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, androidx.compose.ui.graphics.Shape?, long, long, float, float, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.ui.unit.Dp> getLocalAbsoluteTonalElevation();
    property public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.ui.unit.Dp> LocalAbsoluteTonalElevation;
  }

  public final class SwipeToDismissBoxDefaults {
    method @androidx.compose.runtime.Composable public kotlin.jvm.functions.Function1<java.lang.Float,java.lang.Float> getPositionalThreshold();
    method @BytecodeOnly @androidx.compose.runtime.Composable public kotlin.jvm.functions.Function1<java.lang.Float!,java.lang.Float!> getPositionalThreshold(androidx.compose.runtime.Composer?, int);
    property @androidx.compose.runtime.Composable public kotlin.jvm.functions.Function1<java.lang.Float,java.lang.Float> positionalThreshold;
    field public static final androidx.compose.material3.SwipeToDismissBoxDefaults INSTANCE;
  }

  public final class SwipeToDismissBoxKt {
    method @androidx.compose.runtime.Composable public static void SwipeToDismissBox(androidx.compose.material3.SwipeToDismissBoxState state, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> backgroundContent, optional androidx.compose.ui.Modifier modifier, optional boolean enableDismissFromStartToEnd, optional boolean enableDismissFromEndToStart, optional boolean gesturesEnabled, optional kotlin.jvm.functions.Function1<? super androidx.compose.material3.SwipeToDismissBoxValue,kotlin.Unit> onDismiss, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable public static void SwipeToDismissBox(androidx.compose.material3.SwipeToDismissBoxState!, kotlin.jvm.functions.Function3!, androidx.compose.ui.Modifier!, boolean, boolean, boolean, kotlin.jvm.functions.Function3!, androidx.compose.runtime.Composer!, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void SwipeToDismissBox(androidx.compose.material3.SwipeToDismissBoxState, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, boolean, boolean, kotlin.jvm.functions.Function1<? super androidx.compose.material3.SwipeToDismissBoxValue!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @Deprecated @androidx.compose.runtime.Composable public static androidx.compose.material3.SwipeToDismissBoxState rememberSwipeToDismissBoxState(optional androidx.compose.material3.SwipeToDismissBoxValue initialValue, optional kotlin.jvm.functions.Function1<? super androidx.compose.material3.SwipeToDismissBoxValue,java.lang.Boolean> confirmValueChange, optional kotlin.jvm.functions.Function1<? super java.lang.Float,java.lang.Float> positionalThreshold);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable public static androidx.compose.material3.SwipeToDismissBoxState rememberSwipeToDismissBoxState(androidx.compose.material3.SwipeToDismissBoxValue?, kotlin.jvm.functions.Function1<? super androidx.compose.material3.SwipeToDismissBoxValue!,java.lang.Boolean!>?, kotlin.jvm.functions.Function1<? super java.lang.Float!,java.lang.Float!>?, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static androidx.compose.material3.SwipeToDismissBoxState rememberSwipeToDismissBoxState(optional androidx.compose.material3.SwipeToDismissBoxValue initialValue, optional kotlin.jvm.functions.Function1<? super java.lang.Float,java.lang.Float> positionalThreshold);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static androidx.compose.material3.SwipeToDismissBoxState rememberSwipeToDismissBoxState(androidx.compose.material3.SwipeToDismissBoxValue?, kotlin.jvm.functions.Function1<? super java.lang.Float!,java.lang.Float!>?, androidx.compose.runtime.Composer?, int, int);
  }

  public final class SwipeToDismissBoxState {
    ctor @Deprecated public SwipeToDismissBoxState(androidx.compose.material3.SwipeToDismissBoxValue initialValue, androidx.compose.ui.unit.Density density, optional kotlin.jvm.functions.Function1<? super androidx.compose.material3.SwipeToDismissBoxValue,java.lang.Boolean> confirmValueChange, kotlin.jvm.functions.Function1<? super java.lang.Float,java.lang.Float> positionalThreshold);
    ctor public SwipeToDismissBoxState(androidx.compose.material3.SwipeToDismissBoxValue initialValue, kotlin.jvm.functions.Function1<? super java.lang.Float,java.lang.Float> positionalThreshold);
    method public suspend Object? dismiss(androidx.compose.material3.SwipeToDismissBoxValue direction, kotlin.coroutines.Continuation<? super kotlin.Unit>);
    method public androidx.compose.material3.SwipeToDismissBoxValue getCurrentValue();
    method public androidx.compose.material3.SwipeToDismissBoxValue getDismissDirection();
    method @FloatRange(from=0.0, to=1.0) public float getProgress();
    method public androidx.compose.material3.SwipeToDismissBoxValue getSettledValue();
    method public androidx.compose.material3.SwipeToDismissBoxValue getTargetValue();
    method public float requireOffset();
    method public suspend Object? reset(kotlin.coroutines.Continuation<? super kotlin.Unit>);
    method public suspend Object? snapTo(androidx.compose.material3.SwipeToDismissBoxValue targetValue, kotlin.coroutines.Continuation<? super kotlin.Unit>);
    property public androidx.compose.material3.SwipeToDismissBoxValue currentValue;
    property public androidx.compose.material3.SwipeToDismissBoxValue dismissDirection;
    property @FloatRange(from=0.0, to=1.0) public float progress;
    property public androidx.compose.material3.SwipeToDismissBoxValue settledValue;
    property public androidx.compose.material3.SwipeToDismissBoxValue targetValue;
    field public static final androidx.compose.material3.SwipeToDismissBoxState.Companion Companion;
  }

  public static final class SwipeToDismissBoxState.Companion {
    method @Deprecated public androidx.compose.runtime.saveable.Saver<androidx.compose.material3.SwipeToDismissBoxState,androidx.compose.material3.SwipeToDismissBoxValue> Saver(kotlin.jvm.functions.Function1<? super androidx.compose.material3.SwipeToDismissBoxValue,java.lang.Boolean> confirmValueChange, kotlin.jvm.functions.Function1<? super java.lang.Float,java.lang.Float> positionalThreshold, androidx.compose.ui.unit.Density density);
    method public androidx.compose.runtime.saveable.Saver<androidx.compose.material3.SwipeToDismissBoxState,androidx.compose.material3.SwipeToDismissBoxValue> Saver(kotlin.jvm.functions.Function1<? super java.lang.Float,java.lang.Float> positionalThreshold);
  }

  public enum SwipeToDismissBoxValue {
    enum_constant public static final androidx.compose.material3.SwipeToDismissBoxValue EndToStart;
    enum_constant public static final androidx.compose.material3.SwipeToDismissBoxValue Settled;
    enum_constant public static final androidx.compose.material3.SwipeToDismissBoxValue StartToEnd;
  }

  @androidx.compose.runtime.Immutable public final class SwitchColors {
    ctor @KotlinOnly public SwitchColors(androidx.compose.ui.graphics.Color checkedThumbColor, androidx.compose.ui.graphics.Color checkedTrackColor, androidx.compose.ui.graphics.Color checkedBorderColor, androidx.compose.ui.graphics.Color checkedIconColor, androidx.compose.ui.graphics.Color uncheckedThumbColor, androidx.compose.ui.graphics.Color uncheckedTrackColor, androidx.compose.ui.graphics.Color uncheckedBorderColor, androidx.compose.ui.graphics.Color uncheckedIconColor, androidx.compose.ui.graphics.Color disabledCheckedThumbColor, androidx.compose.ui.graphics.Color disabledCheckedTrackColor, androidx.compose.ui.graphics.Color disabledCheckedBorderColor, androidx.compose.ui.graphics.Color disabledCheckedIconColor, androidx.compose.ui.graphics.Color disabledUncheckedThumbColor, androidx.compose.ui.graphics.Color disabledUncheckedTrackColor, androidx.compose.ui.graphics.Color disabledUncheckedBorderColor, androidx.compose.ui.graphics.Color disabledUncheckedIconColor);
    ctor @BytecodeOnly public SwitchColors(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly public androidx.compose.material3.SwitchColors copy(optional androidx.compose.ui.graphics.Color checkedThumbColor, optional androidx.compose.ui.graphics.Color checkedTrackColor, optional androidx.compose.ui.graphics.Color checkedBorderColor, optional androidx.compose.ui.graphics.Color checkedIconColor, optional androidx.compose.ui.graphics.Color uncheckedThumbColor, optional androidx.compose.ui.graphics.Color uncheckedTrackColor, optional androidx.compose.ui.graphics.Color uncheckedBorderColor, optional androidx.compose.ui.graphics.Color uncheckedIconColor, optional androidx.compose.ui.graphics.Color disabledCheckedThumbColor, optional androidx.compose.ui.graphics.Color disabledCheckedTrackColor, optional androidx.compose.ui.graphics.Color disabledCheckedBorderColor, optional androidx.compose.ui.graphics.Color disabledCheckedIconColor, optional androidx.compose.ui.graphics.Color disabledUncheckedThumbColor, optional androidx.compose.ui.graphics.Color disabledUncheckedTrackColor, optional androidx.compose.ui.graphics.Color disabledUncheckedBorderColor, optional androidx.compose.ui.graphics.Color disabledUncheckedIconColor);
    method @BytecodeOnly public androidx.compose.material3.SwitchColors copy-Q_H9qLU(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long);
    method @BytecodeOnly public long getCheckedBorderColor-0d7_KjU();
    method @BytecodeOnly public long getCheckedIconColor-0d7_KjU();
    method @BytecodeOnly public long getCheckedThumbColor-0d7_KjU();
    method @BytecodeOnly public long getCheckedTrackColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledCheckedBorderColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledCheckedIconColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledCheckedThumbColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledCheckedTrackColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledUncheckedBorderColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledUncheckedIconColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledUncheckedThumbColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledUncheckedTrackColor-0d7_KjU();
    method @BytecodeOnly public long getUncheckedBorderColor-0d7_KjU();
    method @BytecodeOnly public long getUncheckedIconColor-0d7_KjU();
    method @BytecodeOnly public long getUncheckedThumbColor-0d7_KjU();
    method @BytecodeOnly public long getUncheckedTrackColor-0d7_KjU();
    property public androidx.compose.ui.graphics.Color checkedBorderColor;
    property public androidx.compose.ui.graphics.Color checkedIconColor;
    property public androidx.compose.ui.graphics.Color checkedThumbColor;
    property public androidx.compose.ui.graphics.Color checkedTrackColor;
    property public androidx.compose.ui.graphics.Color disabledCheckedBorderColor;
    property public androidx.compose.ui.graphics.Color disabledCheckedIconColor;
    property public androidx.compose.ui.graphics.Color disabledCheckedThumbColor;
    property public androidx.compose.ui.graphics.Color disabledCheckedTrackColor;
    property public androidx.compose.ui.graphics.Color disabledUncheckedBorderColor;
    property public androidx.compose.ui.graphics.Color disabledUncheckedIconColor;
    property public androidx.compose.ui.graphics.Color disabledUncheckedThumbColor;
    property public androidx.compose.ui.graphics.Color disabledUncheckedTrackColor;
    property public androidx.compose.ui.graphics.Color uncheckedBorderColor;
    property public androidx.compose.ui.graphics.Color uncheckedIconColor;
    property public androidx.compose.ui.graphics.Color uncheckedThumbColor;
    property public androidx.compose.ui.graphics.Color uncheckedTrackColor;
  }

  public final class SwitchDefaults {
    method @androidx.compose.runtime.Composable public androidx.compose.material3.SwitchColors colors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.SwitchColors colors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.SwitchColors colors(optional androidx.compose.ui.graphics.Color checkedThumbColor, optional androidx.compose.ui.graphics.Color checkedTrackColor, optional androidx.compose.ui.graphics.Color checkedBorderColor, optional androidx.compose.ui.graphics.Color checkedIconColor, optional androidx.compose.ui.graphics.Color uncheckedThumbColor, optional androidx.compose.ui.graphics.Color uncheckedTrackColor, optional androidx.compose.ui.graphics.Color uncheckedBorderColor, optional androidx.compose.ui.graphics.Color uncheckedIconColor, optional androidx.compose.ui.graphics.Color disabledCheckedThumbColor, optional androidx.compose.ui.graphics.Color disabledCheckedTrackColor, optional androidx.compose.ui.graphics.Color disabledCheckedBorderColor, optional androidx.compose.ui.graphics.Color disabledCheckedIconColor, optional androidx.compose.ui.graphics.Color disabledUncheckedThumbColor, optional androidx.compose.ui.graphics.Color disabledUncheckedTrackColor, optional androidx.compose.ui.graphics.Color disabledUncheckedBorderColor, optional androidx.compose.ui.graphics.Color disabledUncheckedIconColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.SwitchColors colors-V1nXRL4(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int, int);
    method @BytecodeOnly public float getIconSize-D9Ej5fM();
    property public androidx.compose.ui.unit.Dp IconSize;
    field public static final androidx.compose.material3.SwitchDefaults INSTANCE;
  }

  public final class SwitchKt {
    method @androidx.compose.runtime.Composable public static void Switch(boolean checked, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit>? onCheckedChange, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? thumbContent, optional boolean enabled, optional androidx.compose.material3.SwitchColors colors, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void Switch(boolean, kotlin.jvm.functions.Function1<? super java.lang.Boolean!,kotlin.Unit!>?, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, boolean, androidx.compose.material3.SwitchColors?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.runtime.Composer?, int, int);
  }

  public interface TabIndicatorScope {
    method public androidx.compose.ui.Modifier tabIndicatorLayout(androidx.compose.ui.Modifier, kotlin.jvm.functions.Function4<? super androidx.compose.ui.layout.MeasureScope,? super androidx.compose.ui.layout.Measurable,? super androidx.compose.ui.unit.Constraints,? super java.util.List<androidx.compose.material3.TabPosition>,? extends androidx.compose.ui.layout.MeasureResult> measure);
    method public androidx.compose.ui.Modifier tabIndicatorOffset(androidx.compose.ui.Modifier, int selectedTabIndex, optional boolean matchContentSize);
  }

  public final class TabKt {
    method @KotlinOnly @androidx.compose.runtime.Composable public static void LeadingIconTab(boolean selected, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, kotlin.jvm.functions.Function0<kotlin.Unit> text, kotlin.jvm.functions.Function0<kotlin.Unit> icon, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.ui.graphics.Color selectedContentColor, optional androidx.compose.ui.graphics.Color unselectedContentColor, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void LeadingIconTab-wqdebIU(boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, long, long, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void Tab(boolean selected, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.ui.graphics.Color selectedContentColor, optional androidx.compose.ui.graphics.Color unselectedContentColor, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> content);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void Tab(boolean selected, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional kotlin.jvm.functions.Function0<kotlin.Unit>? text, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional androidx.compose.ui.graphics.Color selectedContentColor, optional androidx.compose.ui.graphics.Color unselectedContentColor, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void Tab-bogVsAg(boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, long, long, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void Tab-wqdebIU(boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, long, long, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.runtime.Composer?, int, int);
  }

  @androidx.compose.runtime.Immutable public final class TabPosition {
    method @BytecodeOnly public float getContentWidth-D9Ej5fM();
    method @BytecodeOnly public float getLeft-D9Ej5fM();
    method @BytecodeOnly public float getRight-D9Ej5fM();
    method @BytecodeOnly public float getWidth-D9Ej5fM();
    property public androidx.compose.ui.unit.Dp contentWidth;
    property public androidx.compose.ui.unit.Dp left;
    property public androidx.compose.ui.unit.Dp right;
    property public androidx.compose.ui.unit.Dp width;
  }

  public final class TabRowDefaults {
    method @KotlinOnly @Deprecated @androidx.compose.runtime.Composable public void Indicator(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.unit.Dp height, optional androidx.compose.ui.graphics.Color color);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void Indicator-9IZ8Weo(androidx.compose.ui.Modifier?, float, long, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public void PrimaryIndicator(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.unit.Dp width, optional androidx.compose.ui.unit.Dp height, optional androidx.compose.ui.graphics.Color color, optional androidx.compose.ui.graphics.Shape shape);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void PrimaryIndicator-10LGxhE(androidx.compose.ui.Modifier?, float, float, long, androidx.compose.ui.graphics.Shape?, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public void SecondaryIndicator(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.unit.Dp height, optional androidx.compose.ui.graphics.Color color);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void SecondaryIndicator-9IZ8Weo(androidx.compose.ui.Modifier?, float, long, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable public long getContainerColor(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable public long getContentColor(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getPrimaryContainerColor(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getPrimaryContentColor(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getScrollableTabRowEdgeStartPadding-D9Ej5fM();
    method @BytecodeOnly public float getScrollableTabRowMinTabWidth-D9Ej5fM();
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getSecondaryContainerColor(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getSecondaryContentColor(androidx.compose.runtime.Composer?, int);
    method @Deprecated public androidx.compose.ui.Modifier tabIndicatorOffset(androidx.compose.ui.Modifier, androidx.compose.material3.TabPosition currentTabPosition);
    property public androidx.compose.ui.unit.Dp ScrollableTabRowEdgeStartPadding;
    property public androidx.compose.ui.unit.Dp ScrollableTabRowMinTabWidth;
    property @Deprecated public androidx.compose.ui.graphics.Color containerColor;
    property @Deprecated public androidx.compose.ui.graphics.Color contentColor;
    property public androidx.compose.ui.graphics.Color primaryContainerColor;
    property public androidx.compose.ui.graphics.Color primaryContentColor;
    property public androidx.compose.ui.graphics.Color secondaryContainerColor;
    property public androidx.compose.ui.graphics.Color secondaryContentColor;
    field public static final androidx.compose.material3.TabRowDefaults INSTANCE;
  }

  public final class TabRowKt {
    method @KotlinOnly @androidx.compose.runtime.Composable public static void PrimaryScrollableTabRow(int selectedTabIndex, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.foundation.ScrollState scrollState, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.unit.Dp edgePadding, optional kotlin.jvm.functions.Function1<androidx.compose.material3.TabIndicatorScope,kotlin.Unit> indicator, optional kotlin.jvm.functions.Function0<kotlin.Unit> divider, optional androidx.compose.ui.unit.Dp minTabWidth, kotlin.jvm.functions.Function0<kotlin.Unit> tabs);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void PrimaryScrollableTabRow-cx2KkNY(int, androidx.compose.ui.Modifier?, androidx.compose.foundation.ScrollState?, long, long, float, kotlin.jvm.functions.Function3<? super androidx.compose.material3.TabIndicatorScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, float, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable public static void PrimaryScrollableTabRow-qhFBPw4(int, androidx.compose.ui.Modifier!, androidx.compose.foundation.ScrollState!, long, long, float, kotlin.jvm.functions.Function3!, kotlin.jvm.functions.Function2!, kotlin.jvm.functions.Function2!, androidx.compose.runtime.Composer!, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void PrimaryTabRow(int selectedTabIndex, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional kotlin.jvm.functions.Function1<androidx.compose.material3.TabIndicatorScope,kotlin.Unit> indicator, optional kotlin.jvm.functions.Function0<kotlin.Unit> divider, kotlin.jvm.functions.Function0<kotlin.Unit> tabs);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void PrimaryTabRow-pAZo6Ak(int, androidx.compose.ui.Modifier?, long, long, kotlin.jvm.functions.Function3<? super androidx.compose.material3.TabIndicatorScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @Deprecated @androidx.compose.runtime.Composable public static void ScrollableTabRow(int selectedTabIndex, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.unit.Dp edgePadding, optional kotlin.jvm.functions.Function1<java.util.List<androidx.compose.material3.TabPosition>,kotlin.Unit> indicator, optional kotlin.jvm.functions.Function0<kotlin.Unit> divider, kotlin.jvm.functions.Function0<kotlin.Unit> tabs);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable public static void ScrollableTabRow-sKfQg0A(int, androidx.compose.ui.Modifier?, long, long, float, kotlin.jvm.functions.Function3<? super java.util.List<androidx.compose.material3.TabPosition!>!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void SecondaryScrollableTabRow(int selectedTabIndex, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.foundation.ScrollState scrollState, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.unit.Dp edgePadding, optional kotlin.jvm.functions.Function1<androidx.compose.material3.TabIndicatorScope,kotlin.Unit> indicator, optional kotlin.jvm.functions.Function0<kotlin.Unit> divider, optional androidx.compose.ui.unit.Dp minTabWidth, kotlin.jvm.functions.Function0<kotlin.Unit> tabs);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void SecondaryScrollableTabRow-cx2KkNY(int, androidx.compose.ui.Modifier?, androidx.compose.foundation.ScrollState?, long, long, float, kotlin.jvm.functions.Function3<? super androidx.compose.material3.TabIndicatorScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, float, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable public static void SecondaryScrollableTabRow-qhFBPw4(int, androidx.compose.ui.Modifier!, androidx.compose.foundation.ScrollState!, long, long, float, kotlin.jvm.functions.Function3!, kotlin.jvm.functions.Function2!, kotlin.jvm.functions.Function2!, androidx.compose.runtime.Composer!, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void SecondaryTabRow(int selectedTabIndex, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional kotlin.jvm.functions.Function1<androidx.compose.material3.TabIndicatorScope,kotlin.Unit> indicator, optional kotlin.jvm.functions.Function0<kotlin.Unit> divider, kotlin.jvm.functions.Function0<kotlin.Unit> tabs);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void SecondaryTabRow-pAZo6Ak(int, androidx.compose.ui.Modifier?, long, long, kotlin.jvm.functions.Function3<? super androidx.compose.material3.TabIndicatorScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @Deprecated @androidx.compose.runtime.Composable public static void TabRow(int selectedTabIndex, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional kotlin.jvm.functions.Function1<java.util.List<androidx.compose.material3.TabPosition>,kotlin.Unit> indicator, optional kotlin.jvm.functions.Function0<kotlin.Unit> divider, kotlin.jvm.functions.Function0<kotlin.Unit> tabs);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable public static void TabRow-pAZo6Ak(int, androidx.compose.ui.Modifier?, long, long, kotlin.jvm.functions.Function3<? super java.util.List<androidx.compose.material3.TabPosition!>!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
  }

  @androidx.compose.runtime.Immutable public final class TextFieldColors {
    ctor @KotlinOnly public TextFieldColors(androidx.compose.ui.graphics.Color focusedTextColor, androidx.compose.ui.graphics.Color unfocusedTextColor, androidx.compose.ui.graphics.Color disabledTextColor, androidx.compose.ui.graphics.Color errorTextColor, androidx.compose.ui.graphics.Color focusedContainerColor, androidx.compose.ui.graphics.Color unfocusedContainerColor, androidx.compose.ui.graphics.Color disabledContainerColor, androidx.compose.ui.graphics.Color errorContainerColor, androidx.compose.ui.graphics.Color cursorColor, androidx.compose.ui.graphics.Color errorCursorColor, androidx.compose.foundation.text.selection.TextSelectionColors textSelectionColors, androidx.compose.ui.graphics.Color focusedIndicatorColor, androidx.compose.ui.graphics.Color unfocusedIndicatorColor, androidx.compose.ui.graphics.Color disabledIndicatorColor, androidx.compose.ui.graphics.Color errorIndicatorColor, androidx.compose.ui.graphics.Color focusedLeadingIconColor, androidx.compose.ui.graphics.Color unfocusedLeadingIconColor, androidx.compose.ui.graphics.Color disabledLeadingIconColor, androidx.compose.ui.graphics.Color errorLeadingIconColor, androidx.compose.ui.graphics.Color focusedTrailingIconColor, androidx.compose.ui.graphics.Color unfocusedTrailingIconColor, androidx.compose.ui.graphics.Color disabledTrailingIconColor, androidx.compose.ui.graphics.Color errorTrailingIconColor, androidx.compose.ui.graphics.Color focusedLabelColor, androidx.compose.ui.graphics.Color unfocusedLabelColor, androidx.compose.ui.graphics.Color disabledLabelColor, androidx.compose.ui.graphics.Color errorLabelColor, androidx.compose.ui.graphics.Color focusedPlaceholderColor, androidx.compose.ui.graphics.Color unfocusedPlaceholderColor, androidx.compose.ui.graphics.Color disabledPlaceholderColor, androidx.compose.ui.graphics.Color errorPlaceholderColor, androidx.compose.ui.graphics.Color focusedSupportingTextColor, androidx.compose.ui.graphics.Color unfocusedSupportingTextColor, androidx.compose.ui.graphics.Color disabledSupportingTextColor, androidx.compose.ui.graphics.Color errorSupportingTextColor, androidx.compose.ui.graphics.Color focusedPrefixColor, androidx.compose.ui.graphics.Color unfocusedPrefixColor, androidx.compose.ui.graphics.Color disabledPrefixColor, androidx.compose.ui.graphics.Color errorPrefixColor, androidx.compose.ui.graphics.Color focusedSuffixColor, androidx.compose.ui.graphics.Color unfocusedSuffixColor, androidx.compose.ui.graphics.Color disabledSuffixColor, androidx.compose.ui.graphics.Color errorSuffixColor);
    ctor @BytecodeOnly public TextFieldColors(long, long, long, long, long, long, long, long, long, long, androidx.compose.foundation.text.selection.TextSelectionColors!, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly @androidx.compose.runtime.Stable public androidx.compose.ui.graphics.Color containerColor(boolean enabled, boolean isError, boolean focused);
    method @BytecodeOnly @androidx.compose.runtime.Stable public long containerColor-XeAY9LY(boolean, boolean, boolean);
    method @KotlinOnly public androidx.compose.material3.TextFieldColors copy(optional androidx.compose.ui.graphics.Color focusedTextColor, optional androidx.compose.ui.graphics.Color unfocusedTextColor, optional androidx.compose.ui.graphics.Color disabledTextColor, optional androidx.compose.ui.graphics.Color errorTextColor, optional androidx.compose.ui.graphics.Color focusedContainerColor, optional androidx.compose.ui.graphics.Color unfocusedContainerColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color errorContainerColor, optional androidx.compose.ui.graphics.Color cursorColor, optional androidx.compose.ui.graphics.Color errorCursorColor, optional androidx.compose.foundation.text.selection.TextSelectionColors? textSelectionColors, optional androidx.compose.ui.graphics.Color focusedIndicatorColor, optional androidx.compose.ui.graphics.Color unfocusedIndicatorColor, optional androidx.compose.ui.graphics.Color disabledIndicatorColor, optional androidx.compose.ui.graphics.Color errorIndicatorColor, optional androidx.compose.ui.graphics.Color focusedLeadingIconColor, optional androidx.compose.ui.graphics.Color unfocusedLeadingIconColor, optional androidx.compose.ui.graphics.Color disabledLeadingIconColor, optional androidx.compose.ui.graphics.Color errorLeadingIconColor, optional androidx.compose.ui.graphics.Color focusedTrailingIconColor, optional androidx.compose.ui.graphics.Color unfocusedTrailingIconColor, optional androidx.compose.ui.graphics.Color disabledTrailingIconColor, optional androidx.compose.ui.graphics.Color errorTrailingIconColor, optional androidx.compose.ui.graphics.Color focusedLabelColor, optional androidx.compose.ui.graphics.Color unfocusedLabelColor, optional androidx.compose.ui.graphics.Color disabledLabelColor, optional androidx.compose.ui.graphics.Color errorLabelColor, optional androidx.compose.ui.graphics.Color focusedPlaceholderColor, optional androidx.compose.ui.graphics.Color unfocusedPlaceholderColor, optional androidx.compose.ui.graphics.Color disabledPlaceholderColor, optional androidx.compose.ui.graphics.Color errorPlaceholderColor, optional androidx.compose.ui.graphics.Color focusedSupportingTextColor, optional androidx.compose.ui.graphics.Color unfocusedSupportingTextColor, optional androidx.compose.ui.graphics.Color disabledSupportingTextColor, optional androidx.compose.ui.graphics.Color errorSupportingTextColor, optional androidx.compose.ui.graphics.Color focusedPrefixColor, optional androidx.compose.ui.graphics.Color unfocusedPrefixColor, optional androidx.compose.ui.graphics.Color disabledPrefixColor, optional androidx.compose.ui.graphics.Color errorPrefixColor, optional androidx.compose.ui.graphics.Color focusedSuffixColor, optional androidx.compose.ui.graphics.Color unfocusedSuffixColor, optional androidx.compose.ui.graphics.Color disabledSuffixColor, optional androidx.compose.ui.graphics.Color errorSuffixColor);
    method @BytecodeOnly public androidx.compose.material3.TextFieldColors copy-ejIjP34(long, long, long, long, long, long, long, long, long, long, androidx.compose.foundation.text.selection.TextSelectionColors?, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long);
    method @KotlinOnly @androidx.compose.runtime.Stable public androidx.compose.ui.graphics.Color cursorColor(boolean isError);
    method @BytecodeOnly @androidx.compose.runtime.Stable public long cursorColor-vNxB06k(boolean);
    method @BytecodeOnly public long getCursorColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledContainerColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledIndicatorColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledLabelColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledLeadingIconColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledPlaceholderColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledPrefixColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledSuffixColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledSupportingTextColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledTextColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledTrailingIconColor-0d7_KjU();
    method @BytecodeOnly public long getErrorContainerColor-0d7_KjU();
    method @BytecodeOnly public long getErrorCursorColor-0d7_KjU();
    method @BytecodeOnly public long getErrorIndicatorColor-0d7_KjU();
    method @BytecodeOnly public long getErrorLabelColor-0d7_KjU();
    method @BytecodeOnly public long getErrorLeadingIconColor-0d7_KjU();
    method @BytecodeOnly public long getErrorPlaceholderColor-0d7_KjU();
    method @BytecodeOnly public long getErrorPrefixColor-0d7_KjU();
    method @BytecodeOnly public long getErrorSuffixColor-0d7_KjU();
    method @BytecodeOnly public long getErrorSupportingTextColor-0d7_KjU();
    method @BytecodeOnly public long getErrorTextColor-0d7_KjU();
    method @BytecodeOnly public long getErrorTrailingIconColor-0d7_KjU();
    method @BytecodeOnly public long getFocusedContainerColor-0d7_KjU();
    method @BytecodeOnly public long getFocusedIndicatorColor-0d7_KjU();
    method @BytecodeOnly public long getFocusedLabelColor-0d7_KjU();
    method @BytecodeOnly public long getFocusedLeadingIconColor-0d7_KjU();
    method @BytecodeOnly public long getFocusedPlaceholderColor-0d7_KjU();
    method @BytecodeOnly public long getFocusedPrefixColor-0d7_KjU();
    method @BytecodeOnly public long getFocusedSuffixColor-0d7_KjU();
    method @BytecodeOnly public long getFocusedSupportingTextColor-0d7_KjU();
    method @BytecodeOnly public long getFocusedTextColor-0d7_KjU();
    method @BytecodeOnly public long getFocusedTrailingIconColor-0d7_KjU();
    method public androidx.compose.foundation.text.selection.TextSelectionColors getTextSelectionColors();
    method @BytecodeOnly public long getUnfocusedContainerColor-0d7_KjU();
    method @BytecodeOnly public long getUnfocusedIndicatorColor-0d7_KjU();
    method @BytecodeOnly public long getUnfocusedLabelColor-0d7_KjU();
    method @BytecodeOnly public long getUnfocusedLeadingIconColor-0d7_KjU();
    method @BytecodeOnly public long getUnfocusedPlaceholderColor-0d7_KjU();
    method @BytecodeOnly public long getUnfocusedPrefixColor-0d7_KjU();
    method @BytecodeOnly public long getUnfocusedSuffixColor-0d7_KjU();
    method @BytecodeOnly public long getUnfocusedSupportingTextColor-0d7_KjU();
    method @BytecodeOnly public long getUnfocusedTextColor-0d7_KjU();
    method @BytecodeOnly public long getUnfocusedTrailingIconColor-0d7_KjU();
    method @KotlinOnly @androidx.compose.runtime.Stable public androidx.compose.ui.graphics.Color indicatorColor(boolean enabled, boolean isError, boolean focused);
    method @BytecodeOnly @androidx.compose.runtime.Stable public long indicatorColor-XeAY9LY(boolean, boolean, boolean);
    method @KotlinOnly @androidx.compose.runtime.Stable public androidx.compose.ui.graphics.Color labelColor(boolean enabled, boolean isError, boolean focused);
    method @BytecodeOnly @androidx.compose.runtime.Stable public long labelColor-XeAY9LY(boolean, boolean, boolean);
    method @KotlinOnly @androidx.compose.runtime.Stable public androidx.compose.ui.graphics.Color leadingIconColor(boolean enabled, boolean isError, boolean focused);
    method @BytecodeOnly @androidx.compose.runtime.Stable public long leadingIconColor-XeAY9LY(boolean, boolean, boolean);
    method @KotlinOnly @androidx.compose.runtime.Stable public androidx.compose.ui.graphics.Color placeholderColor(boolean enabled, boolean isError, boolean focused);
    method @BytecodeOnly @androidx.compose.runtime.Stable public long placeholderColor-XeAY9LY(boolean, boolean, boolean);
    method @KotlinOnly @androidx.compose.runtime.Stable public androidx.compose.ui.graphics.Color prefixColor(boolean enabled, boolean isError, boolean focused);
    method @BytecodeOnly @androidx.compose.runtime.Stable public long prefixColor-XeAY9LY(boolean, boolean, boolean);
    method @KotlinOnly @androidx.compose.runtime.Stable public androidx.compose.ui.graphics.Color suffixColor(boolean enabled, boolean isError, boolean focused);
    method @BytecodeOnly @androidx.compose.runtime.Stable public long suffixColor-XeAY9LY(boolean, boolean, boolean);
    method @KotlinOnly @androidx.compose.runtime.Stable public androidx.compose.ui.graphics.Color supportingTextColor(boolean enabled, boolean isError, boolean focused);
    method @BytecodeOnly @androidx.compose.runtime.Stable public long supportingTextColor-XeAY9LY(boolean, boolean, boolean);
    method @KotlinOnly @androidx.compose.runtime.Stable public androidx.compose.ui.graphics.Color textColor(boolean enabled, boolean isError, boolean focused);
    method @BytecodeOnly @androidx.compose.runtime.Stable public long textColor-XeAY9LY(boolean, boolean, boolean);
    method @KotlinOnly @androidx.compose.runtime.Stable public androidx.compose.ui.graphics.Color trailingIconColor(boolean enabled, boolean isError, boolean focused);
    method @BytecodeOnly @androidx.compose.runtime.Stable public long trailingIconColor-XeAY9LY(boolean, boolean, boolean);
    property public androidx.compose.ui.graphics.Color cursorColor;
    property public androidx.compose.ui.graphics.Color disabledContainerColor;
    property public androidx.compose.ui.graphics.Color disabledIndicatorColor;
    property public androidx.compose.ui.graphics.Color disabledLabelColor;
    property public androidx.compose.ui.graphics.Color disabledLeadingIconColor;
    property public androidx.compose.ui.graphics.Color disabledPlaceholderColor;
    property public androidx.compose.ui.graphics.Color disabledPrefixColor;
    property public androidx.compose.ui.graphics.Color disabledSuffixColor;
    property public androidx.compose.ui.graphics.Color disabledSupportingTextColor;
    property public androidx.compose.ui.graphics.Color disabledTextColor;
    property public androidx.compose.ui.graphics.Color disabledTrailingIconColor;
    property public androidx.compose.ui.graphics.Color errorContainerColor;
    property public androidx.compose.ui.graphics.Color errorCursorColor;
    property public androidx.compose.ui.graphics.Color errorIndicatorColor;
    property public androidx.compose.ui.graphics.Color errorLabelColor;
    property public androidx.compose.ui.graphics.Color errorLeadingIconColor;
    property public androidx.compose.ui.graphics.Color errorPlaceholderColor;
    property public androidx.compose.ui.graphics.Color errorPrefixColor;
    property public androidx.compose.ui.graphics.Color errorSuffixColor;
    property public androidx.compose.ui.graphics.Color errorSupportingTextColor;
    property public androidx.compose.ui.graphics.Color errorTextColor;
    property public androidx.compose.ui.graphics.Color errorTrailingIconColor;
    property public androidx.compose.ui.graphics.Color focusedContainerColor;
    property public androidx.compose.ui.graphics.Color focusedIndicatorColor;
    property public androidx.compose.ui.graphics.Color focusedLabelColor;
    property public androidx.compose.ui.graphics.Color focusedLeadingIconColor;
    property public androidx.compose.ui.graphics.Color focusedPlaceholderColor;
    property public androidx.compose.ui.graphics.Color focusedPrefixColor;
    property public androidx.compose.ui.graphics.Color focusedSuffixColor;
    property public androidx.compose.ui.graphics.Color focusedSupportingTextColor;
    property public androidx.compose.ui.graphics.Color focusedTextColor;
    property public androidx.compose.ui.graphics.Color focusedTrailingIconColor;
    property public androidx.compose.foundation.text.selection.TextSelectionColors textSelectionColors;
    property public androidx.compose.ui.graphics.Color unfocusedContainerColor;
    property public androidx.compose.ui.graphics.Color unfocusedIndicatorColor;
    property public androidx.compose.ui.graphics.Color unfocusedLabelColor;
    property public androidx.compose.ui.graphics.Color unfocusedLeadingIconColor;
    property public androidx.compose.ui.graphics.Color unfocusedPlaceholderColor;
    property public androidx.compose.ui.graphics.Color unfocusedPrefixColor;
    property public androidx.compose.ui.graphics.Color unfocusedSuffixColor;
    property public androidx.compose.ui.graphics.Color unfocusedSupportingTextColor;
    property public androidx.compose.ui.graphics.Color unfocusedTextColor;
    property public androidx.compose.ui.graphics.Color unfocusedTrailingIconColor;
  }

  @androidx.compose.runtime.Immutable public final class TextFieldDefaults {
    method @KotlinOnly @androidx.compose.runtime.Composable public void Container(boolean enabled, boolean isError, androidx.compose.foundation.interaction.InteractionSource interactionSource, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.material3.TextFieldColors colors, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.unit.Dp focusedIndicatorLineThickness, optional androidx.compose.ui.unit.Dp unfocusedIndicatorLineThickness);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void Container-4EFweAY(boolean, boolean, androidx.compose.foundation.interaction.InteractionSource, androidx.compose.ui.Modifier?, androidx.compose.material3.TextFieldColors?, androidx.compose.ui.graphics.Shape?, float, float, androidx.compose.runtime.Composer?, int, int);
    method @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public void ContainerBox(boolean enabled, boolean isError, androidx.compose.foundation.interaction.InteractionSource interactionSource, androidx.compose.material3.TextFieldColors colors, optional androidx.compose.ui.graphics.Shape shape);
    method @BytecodeOnly @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void ContainerBox(boolean, boolean, androidx.compose.foundation.interaction.InteractionSource, androidx.compose.material3.TextFieldColors, androidx.compose.ui.graphics.Shape?, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public void DecorationBox(String value, kotlin.jvm.functions.Function0<kotlin.Unit> innerTextField, boolean enabled, boolean singleLine, androidx.compose.ui.text.input.VisualTransformation visualTransformation, androidx.compose.foundation.interaction.InteractionSource interactionSource, optional boolean isError, optional kotlin.jvm.functions.Function0<kotlin.Unit>? label, optional kotlin.jvm.functions.Function0<kotlin.Unit>? placeholder, optional kotlin.jvm.functions.Function0<kotlin.Unit>? leadingIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? trailingIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? prefix, optional kotlin.jvm.functions.Function0<kotlin.Unit>? suffix, optional kotlin.jvm.functions.Function0<kotlin.Unit>? supportingText, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.TextFieldColors colors, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional kotlin.jvm.functions.Function0<kotlin.Unit> container);
    method @BytecodeOnly @androidx.compose.runtime.Composable public void DecorationBox(String, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, boolean, boolean, androidx.compose.ui.text.input.VisualTransformation, androidx.compose.foundation.interaction.InteractionSource, boolean, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.TextFieldColors?, androidx.compose.foundation.layout.PaddingValues?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.runtime.Composer?, int, int, int);
    method @androidx.compose.runtime.Composable public androidx.compose.material3.TextFieldColors colors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.TextFieldColors colors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.TextFieldColors colors(optional androidx.compose.ui.graphics.Color focusedTextColor, optional androidx.compose.ui.graphics.Color unfocusedTextColor, optional androidx.compose.ui.graphics.Color disabledTextColor, optional androidx.compose.ui.graphics.Color errorTextColor, optional androidx.compose.ui.graphics.Color focusedContainerColor, optional androidx.compose.ui.graphics.Color unfocusedContainerColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color errorContainerColor, optional androidx.compose.ui.graphics.Color cursorColor, optional androidx.compose.ui.graphics.Color errorCursorColor, optional androidx.compose.foundation.text.selection.TextSelectionColors? selectionColors, optional androidx.compose.ui.graphics.Color focusedIndicatorColor, optional androidx.compose.ui.graphics.Color unfocusedIndicatorColor, optional androidx.compose.ui.graphics.Color disabledIndicatorColor, optional androidx.compose.ui.graphics.Color errorIndicatorColor, optional androidx.compose.ui.graphics.Color focusedLeadingIconColor, optional androidx.compose.ui.graphics.Color unfocusedLeadingIconColor, optional androidx.compose.ui.graphics.Color disabledLeadingIconColor, optional androidx.compose.ui.graphics.Color errorLeadingIconColor, optional androidx.compose.ui.graphics.Color focusedTrailingIconColor, optional androidx.compose.ui.graphics.Color unfocusedTrailingIconColor, optional androidx.compose.ui.graphics.Color disabledTrailingIconColor, optional androidx.compose.ui.graphics.Color errorTrailingIconColor, optional androidx.compose.ui.graphics.Color focusedLabelColor, optional androidx.compose.ui.graphics.Color unfocusedLabelColor, optional androidx.compose.ui.graphics.Color disabledLabelColor, optional androidx.compose.ui.graphics.Color errorLabelColor, optional androidx.compose.ui.graphics.Color focusedPlaceholderColor, optional androidx.compose.ui.graphics.Color unfocusedPlaceholderColor, optional androidx.compose.ui.graphics.Color disabledPlaceholderColor, optional androidx.compose.ui.graphics.Color errorPlaceholderColor, optional androidx.compose.ui.graphics.Color focusedSupportingTextColor, optional androidx.compose.ui.graphics.Color unfocusedSupportingTextColor, optional androidx.compose.ui.graphics.Color disabledSupportingTextColor, optional androidx.compose.ui.graphics.Color errorSupportingTextColor, optional androidx.compose.ui.graphics.Color focusedPrefixColor, optional androidx.compose.ui.graphics.Color unfocusedPrefixColor, optional androidx.compose.ui.graphics.Color disabledPrefixColor, optional androidx.compose.ui.graphics.Color errorPrefixColor, optional androidx.compose.ui.graphics.Color focusedSuffixColor, optional androidx.compose.ui.graphics.Color unfocusedSuffixColor, optional androidx.compose.ui.graphics.Color disabledSuffixColor, optional androidx.compose.ui.graphics.Color errorSuffixColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.TextFieldColors colors-0hiis_0(long, long, long, long, long, long, long, long, long, long, androidx.compose.foundation.text.selection.TextSelectionColors?, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int, int, int, int, int, int);
    method @KotlinOnly public androidx.compose.foundation.layout.PaddingValues contentPaddingWithLabel(optional androidx.compose.ui.unit.Dp start, optional androidx.compose.ui.unit.Dp end, optional androidx.compose.ui.unit.Dp top, optional androidx.compose.ui.unit.Dp bottom);
    method @BytecodeOnly public androidx.compose.foundation.layout.PaddingValues contentPaddingWithLabel-a9UjIt4(float, float, float, float);
    method @KotlinOnly public androidx.compose.foundation.layout.PaddingValues contentPaddingWithoutLabel(optional androidx.compose.ui.unit.Dp start, optional androidx.compose.ui.unit.Dp top, optional androidx.compose.ui.unit.Dp end, optional androidx.compose.ui.unit.Dp bottom);
    method @BytecodeOnly public androidx.compose.foundation.layout.PaddingValues contentPaddingWithoutLabel-a9UjIt4(float, float, float, float);
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.text.input.TextFieldDecorator decorator(androidx.compose.foundation.text.input.TextFieldState state, boolean enabled, androidx.compose.foundation.text.input.TextFieldLineLimits lineLimits, androidx.compose.foundation.text.input.OutputTransformation? outputTransformation, androidx.compose.foundation.interaction.InteractionSource interactionSource, optional androidx.compose.material3.TextFieldLabelPosition labelPosition, optional kotlin.jvm.functions.Function1<? super androidx.compose.material3.TextFieldLabelScope,kotlin.Unit>? label, optional kotlin.jvm.functions.Function0<kotlin.Unit>? placeholder, optional kotlin.jvm.functions.Function0<kotlin.Unit>? leadingIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? trailingIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? prefix, optional kotlin.jvm.functions.Function0<kotlin.Unit>? suffix, optional kotlin.jvm.functions.Function0<kotlin.Unit>? supportingText, optional boolean isError, optional androidx.compose.material3.TextFieldColors colors, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional kotlin.jvm.functions.Function0<kotlin.Unit> container);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.text.input.TextFieldDecorator decorator(androidx.compose.foundation.text.input.TextFieldState, boolean, androidx.compose.foundation.text.input.TextFieldLineLimits, androidx.compose.foundation.text.input.OutputTransformation?, androidx.compose.foundation.interaction.InteractionSource, androidx.compose.material3.TextFieldLabelPosition?, kotlin.jvm.functions.Function3<? super androidx.compose.material3.TextFieldLabelScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, boolean, androidx.compose.material3.TextFieldColors?, androidx.compose.foundation.layout.PaddingValues?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.runtime.Composer?, int, int, int);
    method @Deprecated @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getFilledShape();
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getFilledShape(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly @Deprecated public float getFocusedBorderThickness-D9Ej5fM();
    method @BytecodeOnly public float getFocusedIndicatorThickness-D9Ej5fM();
    method @BytecodeOnly public float getMinHeight-D9Ej5fM();
    method @BytecodeOnly public float getMinWidth-D9Ej5fM();
    method @Deprecated @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getOutlinedShape();
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getOutlinedShape(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getShape(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly @Deprecated public float getUnfocusedBorderThickness-D9Ej5fM();
    method @BytecodeOnly public float getUnfocusedIndicatorThickness-D9Ej5fM();
    method @KotlinOnly public androidx.compose.ui.Modifier indicatorLine(androidx.compose.ui.Modifier, boolean enabled, boolean isError, androidx.compose.foundation.interaction.InteractionSource interactionSource, optional androidx.compose.material3.TextFieldColors? colors, optional androidx.compose.ui.graphics.Shape? textFieldShape, optional androidx.compose.ui.unit.Dp focusedIndicatorLineThickness, optional androidx.compose.ui.unit.Dp unfocusedIndicatorLineThickness);
    method @BytecodeOnly public androidx.compose.ui.Modifier indicatorLine-AWlRVLg(androidx.compose.ui.Modifier, boolean, boolean, androidx.compose.foundation.interaction.InteractionSource, androidx.compose.material3.TextFieldColors?, androidx.compose.ui.graphics.Shape?, float, float);
    method @BytecodeOnly @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api public androidx.compose.ui.Modifier! indicatorLine-gv0btCI(androidx.compose.ui.Modifier!, boolean, boolean, androidx.compose.foundation.interaction.InteractionSource!, androidx.compose.material3.TextFieldColors!, float, float);
    method @KotlinOnly @Deprecated public androidx.compose.foundation.layout.PaddingValues outlinedTextFieldPadding(optional androidx.compose.ui.unit.Dp start, optional androidx.compose.ui.unit.Dp top, optional androidx.compose.ui.unit.Dp end, optional androidx.compose.ui.unit.Dp bottom);
    method @BytecodeOnly @Deprecated public androidx.compose.foundation.layout.PaddingValues outlinedTextFieldPadding-a9UjIt4(float, float, float, float);
    method @KotlinOnly @Deprecated public androidx.compose.foundation.layout.PaddingValues textFieldWithLabelPadding(optional androidx.compose.ui.unit.Dp start, optional androidx.compose.ui.unit.Dp end, optional androidx.compose.ui.unit.Dp top, optional androidx.compose.ui.unit.Dp bottom);
    method @BytecodeOnly @Deprecated public androidx.compose.foundation.layout.PaddingValues textFieldWithLabelPadding-a9UjIt4(float, float, float, float);
    method @KotlinOnly @Deprecated public androidx.compose.foundation.layout.PaddingValues textFieldWithoutLabelPadding(optional androidx.compose.ui.unit.Dp start, optional androidx.compose.ui.unit.Dp top, optional androidx.compose.ui.unit.Dp end, optional androidx.compose.ui.unit.Dp bottom);
    method @BytecodeOnly @Deprecated public androidx.compose.foundation.layout.PaddingValues textFieldWithoutLabelPadding-a9UjIt4(float, float, float, float);
    property @Deprecated public androidx.compose.ui.unit.Dp FocusedBorderThickness;
    property public androidx.compose.ui.unit.Dp FocusedIndicatorThickness;
    property public androidx.compose.ui.unit.Dp MinHeight;
    property public androidx.compose.ui.unit.Dp MinWidth;
    property @Deprecated public androidx.compose.ui.unit.Dp UnfocusedBorderThickness;
    property public androidx.compose.ui.unit.Dp UnfocusedIndicatorThickness;
    property @Deprecated @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape filledShape;
    property @Deprecated @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape outlinedShape;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape shape;
    field public static final androidx.compose.material3.TextFieldDefaults INSTANCE;
  }

  public final class TextFieldKt {
    method @androidx.compose.runtime.Composable public static void TextField(androidx.compose.foundation.text.input.TextFieldState state, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional boolean readOnly, optional androidx.compose.ui.text.TextStyle textStyle, optional androidx.compose.material3.TextFieldLabelPosition labelPosition, optional kotlin.jvm.functions.Function1<? super androidx.compose.material3.TextFieldLabelScope,kotlin.Unit>? label, optional kotlin.jvm.functions.Function0<kotlin.Unit>? placeholder, optional kotlin.jvm.functions.Function0<kotlin.Unit>? leadingIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? trailingIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? prefix, optional kotlin.jvm.functions.Function0<kotlin.Unit>? suffix, optional kotlin.jvm.functions.Function0<kotlin.Unit>? supportingText, optional boolean isError, optional androidx.compose.foundation.text.input.InputTransformation? inputTransformation, optional androidx.compose.foundation.text.input.OutputTransformation? outputTransformation, optional androidx.compose.foundation.text.KeyboardOptions keyboardOptions, optional androidx.compose.foundation.text.input.KeyboardActionHandler? onKeyboardAction, optional androidx.compose.foundation.text.input.TextFieldLineLimits lineLimits, optional kotlin.jvm.functions.Function2<? super androidx.compose.ui.unit.Density,? super kotlin.jvm.functions.Function0<androidx.compose.ui.text.TextLayoutResult?>,kotlin.Unit>? onTextLayout, optional androidx.compose.foundation.ScrollState scrollState, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.TextFieldColors colors, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void TextField(androidx.compose.foundation.text.input.TextFieldState, androidx.compose.ui.Modifier?, boolean, boolean, androidx.compose.ui.text.TextStyle?, androidx.compose.material3.TextFieldLabelPosition?, kotlin.jvm.functions.Function3<? super androidx.compose.material3.TextFieldLabelScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, boolean, androidx.compose.foundation.text.input.InputTransformation?, androidx.compose.foundation.text.input.OutputTransformation?, androidx.compose.foundation.text.KeyboardOptions?, androidx.compose.foundation.text.input.KeyboardActionHandler?, androidx.compose.foundation.text.input.TextFieldLineLimits?, kotlin.jvm.functions.Function2<? super androidx.compose.ui.unit.Density!,? super kotlin.jvm.functions.Function0<androidx.compose.ui.text.TextLayoutResult!>!,kotlin.Unit!>?, androidx.compose.foundation.ScrollState?, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.TextFieldColors?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.runtime.Composer?, int, int, int, int);
    method @androidx.compose.runtime.Composable public static void TextField(androidx.compose.ui.text.input.TextFieldValue value, kotlin.jvm.functions.Function1<? super androidx.compose.ui.text.input.TextFieldValue,kotlin.Unit> onValueChange, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional boolean readOnly, optional androidx.compose.ui.text.TextStyle textStyle, optional kotlin.jvm.functions.Function0<kotlin.Unit>? label, optional kotlin.jvm.functions.Function0<kotlin.Unit>? placeholder, optional kotlin.jvm.functions.Function0<kotlin.Unit>? leadingIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? trailingIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? prefix, optional kotlin.jvm.functions.Function0<kotlin.Unit>? suffix, optional kotlin.jvm.functions.Function0<kotlin.Unit>? supportingText, optional boolean isError, optional androidx.compose.ui.text.input.VisualTransformation visualTransformation, optional androidx.compose.foundation.text.KeyboardOptions keyboardOptions, optional androidx.compose.foundation.text.KeyboardActions keyboardActions, optional boolean singleLine, optional int maxLines, optional int minLines, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.TextFieldColors colors);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void TextField(androidx.compose.ui.text.input.TextFieldValue, kotlin.jvm.functions.Function1<? super androidx.compose.ui.text.input.TextFieldValue!,kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, boolean, androidx.compose.ui.text.TextStyle?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, boolean, androidx.compose.ui.text.input.VisualTransformation?, androidx.compose.foundation.text.KeyboardOptions?, androidx.compose.foundation.text.KeyboardActions?, boolean, int, int, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.TextFieldColors?, androidx.compose.runtime.Composer?, int, int, int, int);
    method @androidx.compose.runtime.Composable public static void TextField(String value, kotlin.jvm.functions.Function1<? super java.lang.String,kotlin.Unit> onValueChange, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional boolean readOnly, optional androidx.compose.ui.text.TextStyle textStyle, optional kotlin.jvm.functions.Function0<kotlin.Unit>? label, optional kotlin.jvm.functions.Function0<kotlin.Unit>? placeholder, optional kotlin.jvm.functions.Function0<kotlin.Unit>? leadingIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? trailingIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? prefix, optional kotlin.jvm.functions.Function0<kotlin.Unit>? suffix, optional kotlin.jvm.functions.Function0<kotlin.Unit>? supportingText, optional boolean isError, optional androidx.compose.ui.text.input.VisualTransformation visualTransformation, optional androidx.compose.foundation.text.KeyboardOptions keyboardOptions, optional androidx.compose.foundation.text.KeyboardActions keyboardActions, optional boolean singleLine, optional int maxLines, optional int minLines, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.TextFieldColors colors);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void TextField(String, kotlin.jvm.functions.Function1<? super java.lang.String!,kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, boolean, androidx.compose.ui.text.TextStyle?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, boolean, androidx.compose.ui.text.input.VisualTransformation?, androidx.compose.foundation.text.KeyboardOptions?, androidx.compose.foundation.text.KeyboardActions?, boolean, int, int, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.TextFieldColors?, androidx.compose.runtime.Composer?, int, int, int, int);
  }

  public abstract class TextFieldLabelPosition {
  }

  public static final class TextFieldLabelPosition.Above extends androidx.compose.material3.TextFieldLabelPosition {
    ctor public TextFieldLabelPosition.Above();
    ctor public TextFieldLabelPosition.Above(optional androidx.compose.ui.Alignment.Horizontal alignment);
    method public androidx.compose.ui.Alignment.Horizontal getAlignment();
    property public androidx.compose.ui.Alignment.Horizontal alignment;
  }

  public static final class TextFieldLabelPosition.Attached extends androidx.compose.material3.TextFieldLabelPosition {
    ctor public TextFieldLabelPosition.Attached();
    ctor public TextFieldLabelPosition.Attached(optional boolean alwaysMinimize, optional androidx.compose.ui.Alignment.Horizontal minimizedAlignment, optional androidx.compose.ui.Alignment.Horizontal expandedAlignment);
    method public boolean getAlwaysMinimize();
    method public androidx.compose.ui.Alignment.Horizontal getExpandedAlignment();
    method public androidx.compose.ui.Alignment.Horizontal getMinimizedAlignment();
    property public boolean alwaysMinimize;
    property public androidx.compose.ui.Alignment.Horizontal expandedAlignment;
    property public androidx.compose.ui.Alignment.Horizontal minimizedAlignment;
  }

  @androidx.compose.runtime.Stable public interface TextFieldLabelScope {
    method @FloatRange(from=0.0, to=1.0) public float getLabelMinimizedProgress();
    property @FloatRange(from=0.0, to=1.0) public abstract float labelMinimizedProgress;
  }

  public final class TextKt {
    method @androidx.compose.runtime.Composable public static void ProvideTextStyle(androidx.compose.ui.text.TextStyle value, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void ProvideTextStyle(androidx.compose.ui.text.TextStyle, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void Text(androidx.compose.ui.text.AnnotatedString text, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color color, optional androidx.compose.foundation.text.TextAutoSize? autoSize, optional androidx.compose.ui.unit.TextUnit fontSize, optional androidx.compose.ui.text.font.FontStyle? fontStyle, optional androidx.compose.ui.text.font.FontWeight? fontWeight, optional androidx.compose.ui.text.font.FontFamily? fontFamily, optional androidx.compose.ui.unit.TextUnit letterSpacing, optional androidx.compose.ui.text.style.TextDecoration? textDecoration, optional androidx.compose.ui.text.style.TextAlign? textAlign, optional androidx.compose.ui.unit.TextUnit lineHeight, optional androidx.compose.ui.text.style.TextOverflow overflow, optional boolean softWrap, optional int maxLines, optional int minLines, optional java.util.Map<java.lang.String,androidx.compose.foundation.text.InlineTextContent> inlineContent, optional kotlin.jvm.functions.Function1<androidx.compose.ui.text.TextLayoutResult,kotlin.Unit> onTextLayout, optional androidx.compose.ui.text.TextStyle style);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void Text(String text, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color color, optional androidx.compose.foundation.text.TextAutoSize? autoSize, optional androidx.compose.ui.unit.TextUnit fontSize, optional androidx.compose.ui.text.font.FontStyle? fontStyle, optional androidx.compose.ui.text.font.FontWeight? fontWeight, optional androidx.compose.ui.text.font.FontFamily? fontFamily, optional androidx.compose.ui.unit.TextUnit letterSpacing, optional androidx.compose.ui.text.style.TextDecoration? textDecoration, optional androidx.compose.ui.text.style.TextAlign? textAlign, optional androidx.compose.ui.unit.TextUnit lineHeight, optional androidx.compose.ui.text.style.TextOverflow overflow, optional boolean softWrap, optional int maxLines, optional int minLines, optional kotlin.jvm.functions.Function1<androidx.compose.ui.text.TextLayoutResult,kotlin.Unit>? onTextLayout, optional androidx.compose.ui.text.TextStyle style);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void Text--4IGK_g(androidx.compose.ui.text.AnnotatedString!, androidx.compose.ui.Modifier!, long, long, androidx.compose.ui.text.font.FontStyle!, androidx.compose.ui.text.font.FontWeight!, androidx.compose.ui.text.font.FontFamily!, long, androidx.compose.ui.text.style.TextDecoration!, androidx.compose.ui.text.style.TextAlign!, long, int, boolean, int, java.util.Map!, kotlin.jvm.functions.Function1!, androidx.compose.ui.text.TextStyle!, androidx.compose.runtime.Composer!, int, int, int);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void Text--4IGK_g(String!, androidx.compose.ui.Modifier!, long, long, androidx.compose.ui.text.font.FontStyle!, androidx.compose.ui.text.font.FontWeight!, androidx.compose.ui.text.font.FontFamily!, long, androidx.compose.ui.text.style.TextDecoration!, androidx.compose.ui.text.style.TextAlign!, long, int, boolean, int, int, kotlin.jvm.functions.Function1!, androidx.compose.ui.text.TextStyle!, androidx.compose.runtime.Composer!, int, int, int);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void Text-IbK3jfQ(androidx.compose.ui.text.AnnotatedString!, androidx.compose.ui.Modifier!, long, long, androidx.compose.ui.text.font.FontStyle!, androidx.compose.ui.text.font.FontWeight!, androidx.compose.ui.text.font.FontFamily!, long, androidx.compose.ui.text.style.TextDecoration!, androidx.compose.ui.text.style.TextAlign!, long, int, boolean, int, int, java.util.Map!, kotlin.jvm.functions.Function1!, androidx.compose.ui.text.TextStyle!, androidx.compose.runtime.Composer!, int, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void Text-Nvy7gAk(String, androidx.compose.ui.Modifier?, long, androidx.compose.foundation.text.TextAutoSize?, long, androidx.compose.ui.text.font.FontStyle?, androidx.compose.ui.text.font.FontWeight?, androidx.compose.ui.text.font.FontFamily?, long, androidx.compose.ui.text.style.TextDecoration?, androidx.compose.ui.text.style.TextAlign?, long, int, boolean, int, int, kotlin.jvm.functions.Function1<? super androidx.compose.ui.text.TextLayoutResult!,kotlin.Unit!>?, androidx.compose.ui.text.TextStyle?, androidx.compose.runtime.Composer?, int, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void Text-Z58ophY(androidx.compose.ui.text.AnnotatedString, androidx.compose.ui.Modifier?, long, androidx.compose.foundation.text.TextAutoSize?, long, androidx.compose.ui.text.font.FontStyle?, androidx.compose.ui.text.font.FontWeight?, androidx.compose.ui.text.font.FontFamily?, long, androidx.compose.ui.text.style.TextDecoration?, androidx.compose.ui.text.style.TextAlign?, long, int, boolean, int, int, java.util.Map<java.lang.String!,androidx.compose.foundation.text.InlineTextContent!>?, kotlin.jvm.functions.Function1<? super androidx.compose.ui.text.TextLayoutResult!,kotlin.Unit!>?, androidx.compose.ui.text.TextStyle?, androidx.compose.runtime.Composer?, int, int, int);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void Text-fLXpl1I(String!, androidx.compose.ui.Modifier!, long, long, androidx.compose.ui.text.font.FontStyle!, androidx.compose.ui.text.font.FontWeight!, androidx.compose.ui.text.font.FontFamily!, long, androidx.compose.ui.text.style.TextDecoration!, androidx.compose.ui.text.style.TextAlign!, long, int, boolean, int, kotlin.jvm.functions.Function1!, androidx.compose.ui.text.TextStyle!, androidx.compose.runtime.Composer!, int, int, int);
    method public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.ui.text.TextStyle> getLocalTextStyle();
    property public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.ui.text.TextStyle> LocalTextStyle;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Immutable public final class TimePickerColors {
    ctor @KotlinOnly public TimePickerColors(androidx.compose.ui.graphics.Color clockDialColor, androidx.compose.ui.graphics.Color selectorColor, androidx.compose.ui.graphics.Color containerColor, androidx.compose.ui.graphics.Color periodSelectorBorderColor, androidx.compose.ui.graphics.Color clockDialSelectedContentColor, androidx.compose.ui.graphics.Color clockDialUnselectedContentColor, androidx.compose.ui.graphics.Color periodSelectorSelectedContainerColor, androidx.compose.ui.graphics.Color periodSelectorUnselectedContainerColor, androidx.compose.ui.graphics.Color periodSelectorSelectedContentColor, androidx.compose.ui.graphics.Color periodSelectorUnselectedContentColor, androidx.compose.ui.graphics.Color timeSelectorSelectedContainerColor, androidx.compose.ui.graphics.Color timeSelectorUnselectedContainerColor, androidx.compose.ui.graphics.Color timeSelectorSelectedContentColor, androidx.compose.ui.graphics.Color timeSelectorUnselectedContentColor);
    ctor @BytecodeOnly public TimePickerColors(long, long, long, long, long, long, long, long, long, long, long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly public androidx.compose.material3.TimePickerColors copy(optional androidx.compose.ui.graphics.Color clockDialColor, optional androidx.compose.ui.graphics.Color selectorColor, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color periodSelectorBorderColor, optional androidx.compose.ui.graphics.Color clockDialSelectedContentColor, optional androidx.compose.ui.graphics.Color clockDialUnselectedContentColor, optional androidx.compose.ui.graphics.Color periodSelectorSelectedContainerColor, optional androidx.compose.ui.graphics.Color periodSelectorUnselectedContainerColor, optional androidx.compose.ui.graphics.Color periodSelectorSelectedContentColor, optional androidx.compose.ui.graphics.Color periodSelectorUnselectedContentColor, optional androidx.compose.ui.graphics.Color timeSelectorSelectedContainerColor, optional androidx.compose.ui.graphics.Color timeSelectorUnselectedContainerColor, optional androidx.compose.ui.graphics.Color timeSelectorSelectedContentColor, optional androidx.compose.ui.graphics.Color timeSelectorUnselectedContentColor);
    method @BytecodeOnly public androidx.compose.material3.TimePickerColors copy-dVHXu7A(long, long, long, long, long, long, long, long, long, long, long, long, long, long);
    method @BytecodeOnly public long getClockDialColor-0d7_KjU();
    method @BytecodeOnly public long getClockDialSelectedContentColor-0d7_KjU();
    method @BytecodeOnly public long getClockDialUnselectedContentColor-0d7_KjU();
    method @BytecodeOnly public long getContainerColor-0d7_KjU();
    method @BytecodeOnly public long getPeriodSelectorBorderColor-0d7_KjU();
    method @BytecodeOnly public long getPeriodSelectorSelectedContainerColor-0d7_KjU();
    method @BytecodeOnly public long getPeriodSelectorSelectedContentColor-0d7_KjU();
    method @BytecodeOnly public long getPeriodSelectorUnselectedContainerColor-0d7_KjU();
    method @BytecodeOnly public long getPeriodSelectorUnselectedContentColor-0d7_KjU();
    method @BytecodeOnly public long getSelectorColor-0d7_KjU();
    method @BytecodeOnly public long getTimeSelectorSelectedContainerColor-0d7_KjU();
    method @BytecodeOnly public long getTimeSelectorSelectedContentColor-0d7_KjU();
    method @BytecodeOnly public long getTimeSelectorUnselectedContainerColor-0d7_KjU();
    method @BytecodeOnly public long getTimeSelectorUnselectedContentColor-0d7_KjU();
    property public androidx.compose.ui.graphics.Color clockDialColor;
    property public androidx.compose.ui.graphics.Color clockDialSelectedContentColor;
    property public androidx.compose.ui.graphics.Color clockDialUnselectedContentColor;
    property public androidx.compose.ui.graphics.Color containerColor;
    property public androidx.compose.ui.graphics.Color periodSelectorBorderColor;
    property public androidx.compose.ui.graphics.Color periodSelectorSelectedContainerColor;
    property public androidx.compose.ui.graphics.Color periodSelectorSelectedContentColor;
    property public androidx.compose.ui.graphics.Color periodSelectorUnselectedContainerColor;
    property public androidx.compose.ui.graphics.Color periodSelectorUnselectedContentColor;
    property public androidx.compose.ui.graphics.Color selectorColor;
    property public androidx.compose.ui.graphics.Color timeSelectorSelectedContainerColor;
    property public androidx.compose.ui.graphics.Color timeSelectorSelectedContentColor;
    property public androidx.compose.ui.graphics.Color timeSelectorUnselectedContainerColor;
    property public androidx.compose.ui.graphics.Color timeSelectorUnselectedContentColor;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Stable public final class TimePickerDefaults {
    method @androidx.compose.runtime.Composable public androidx.compose.material3.TimePickerColors colors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.TimePickerColors colors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.TimePickerColors colors(optional androidx.compose.ui.graphics.Color clockDialColor, optional androidx.compose.ui.graphics.Color clockDialSelectedContentColor, optional androidx.compose.ui.graphics.Color clockDialUnselectedContentColor, optional androidx.compose.ui.graphics.Color selectorColor, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color periodSelectorBorderColor, optional androidx.compose.ui.graphics.Color periodSelectorSelectedContainerColor, optional androidx.compose.ui.graphics.Color periodSelectorUnselectedContainerColor, optional androidx.compose.ui.graphics.Color periodSelectorSelectedContentColor, optional androidx.compose.ui.graphics.Color periodSelectorUnselectedContentColor, optional androidx.compose.ui.graphics.Color timeSelectorSelectedContainerColor, optional androidx.compose.ui.graphics.Color timeSelectorUnselectedContainerColor, optional androidx.compose.ui.graphics.Color timeSelectorSelectedContentColor, optional androidx.compose.ui.graphics.Color timeSelectorUnselectedContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.TimePickerColors colors-u3YEpmA(long, long, long, long, long, long, long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.material3.TimePickerLayoutType layoutType();
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public int layoutType-sDNSZnc(androidx.compose.runtime.Composer?, int);
    field public static final androidx.compose.material3.TimePickerDefaults INSTANCE;
  }

  public final class TimePickerDialogDefaults {
    method @KotlinOnly @androidx.compose.runtime.Composable public void DisplayModeToggle(kotlin.jvm.functions.Function0<kotlin.Unit> onDisplayModeChange, androidx.compose.material3.TimePickerDisplayMode displayMode, optional androidx.compose.ui.Modifier modifier);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void DisplayModeToggle-S7Bxtbk(kotlin.jvm.functions.Function0<kotlin.Unit!>, int, androidx.compose.ui.Modifier?, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public void Title(androidx.compose.material3.TimePickerDisplayMode displayMode, optional androidx.compose.ui.Modifier modifier);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void Title-pK_nZyw(int, androidx.compose.ui.Modifier?, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getContainerColor(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getMinHeightForTimePicker-D9Ej5fM();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getShape(androidx.compose.runtime.Composer?, int);
    property public androidx.compose.ui.unit.Dp MinHeightForTimePicker;
    property public androidx.compose.ui.graphics.Color containerColor;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape shape;
    field public static final androidx.compose.material3.TimePickerDialogDefaults INSTANCE;
  }

  public final class TimePickerDialogKt {
    method @KotlinOnly @androidx.compose.runtime.Composable public static void TimePickerDialog(kotlin.jvm.functions.Function0<kotlin.Unit> onDismissRequest, kotlin.jvm.functions.Function0<kotlin.Unit> confirmButton, kotlin.jvm.functions.Function0<kotlin.Unit> title, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.window.DialogProperties properties, optional kotlin.jvm.functions.Function0<kotlin.Unit>? modeToggleButton, optional kotlin.jvm.functions.Function0<kotlin.Unit>? dismissButton, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Color containerColor, kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void TimePickerDialog-FItCLgY(kotlin.jvm.functions.Function0<kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, androidx.compose.ui.window.DialogProperties?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.ui.graphics.Shape?, long, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
  }

  @androidx.compose.runtime.Immutable @kotlin.jvm.JvmInline public final value class TimePickerDisplayMode {
    method @BytecodeOnly public static androidx.compose.material3.TimePickerDisplayMode! box-impl(int);
    method @BytecodeOnly public int unbox-impl();
    field public static final androidx.compose.material3.TimePickerDisplayMode.Companion Companion;
  }

  public static final class TimePickerDisplayMode.Companion {
    method @BytecodeOnly public int getInput--ONbchU();
    method @BytecodeOnly public int getPicker--ONbchU();
    property public androidx.compose.material3.TimePickerDisplayMode Input;
    property public androidx.compose.material3.TimePickerDisplayMode Picker;
  }

  public final class TimePickerKt {
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void TimeInput(androidx.compose.material3.TimePickerState state, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.material3.TimePickerColors colors);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void TimeInput(androidx.compose.material3.TimePickerState, androidx.compose.ui.Modifier?, androidx.compose.material3.TimePickerColors?, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void TimePicker(androidx.compose.material3.TimePickerState state, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.material3.TimePickerColors colors, optional androidx.compose.material3.TimePickerLayoutType layoutType);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void TimePicker-mT9BvqQ(androidx.compose.material3.TimePickerState, androidx.compose.ui.Modifier?, androidx.compose.material3.TimePickerColors?, int, androidx.compose.runtime.Composer?, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api public static androidx.compose.material3.TimePickerState TimePickerState(int initialHour, int initialMinute, boolean is24Hour);
    method public static boolean isPm(androidx.compose.material3.TimePickerState);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static androidx.compose.material3.TimePickerState rememberTimePickerState(optional int initialHour, optional int initialMinute, optional boolean is24Hour);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static androidx.compose.material3.TimePickerState rememberTimePickerState(int, int, boolean, androidx.compose.runtime.Composer?, int, int);
    property public static boolean androidx.compose.material3.TimePickerState.isPm;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Immutable @kotlin.jvm.JvmInline public final value class TimePickerLayoutType {
    method @BytecodeOnly public static androidx.compose.material3.TimePickerLayoutType! box-impl(int);
    method @BytecodeOnly public int unbox-impl();
    field public static final androidx.compose.material3.TimePickerLayoutType.Companion Companion;
  }

  public static final class TimePickerLayoutType.Companion {
    method @BytecodeOnly public int getHorizontal-QJTpgSE();
    method @BytecodeOnly public int getVertical-QJTpgSE();
    property public androidx.compose.material3.TimePickerLayoutType Horizontal;
    property public androidx.compose.material3.TimePickerLayoutType Vertical;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @kotlin.jvm.JvmInline public final value class TimePickerSelectionMode {
    method @BytecodeOnly public static androidx.compose.material3.TimePickerSelectionMode! box-impl(int);
    method public int getValue();
    method @BytecodeOnly public int unbox-impl();
    property public int value;
    field public static final androidx.compose.material3.TimePickerSelectionMode.Companion Companion;
  }

  public static final class TimePickerSelectionMode.Companion {
    method @BytecodeOnly public int getHour-yecRtBI();
    method @BytecodeOnly public int getMinute-yecRtBI();
    property public androidx.compose.material3.TimePickerSelectionMode Hour;
    property public androidx.compose.material3.TimePickerSelectionMode Minute;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api public interface TimePickerState {
    method @IntRange(from=0L, to=23L) public int getHour();
    method @IntRange(from=0L, to=59L) public int getMinute();
    method @BytecodeOnly public int getSelection-yecRtBI();
    method public boolean is24hour();
    method public void set24hour(boolean);
    method public void setHour(@IntRange(from=0L, to=23L) int);
    method public void setMinute(@IntRange(from=0L, to=59L) int);
    method @BytecodeOnly public void setSelection-6_8s6DQ(int);
    property @IntRange(from=0L, to=23L) public abstract int hour;
    property public abstract boolean is24hour;
    property @IntRange(from=0L, to=59L) public abstract int minute;
    property public abstract androidx.compose.material3.TimePickerSelectionMode selection;
  }

  @androidx.compose.runtime.Immutable public final class ToggleButtonColors {
    ctor @KotlinOnly public ToggleButtonColors(androidx.compose.ui.graphics.Color containerColor, androidx.compose.ui.graphics.Color contentColor, androidx.compose.ui.graphics.Color disabledContainerColor, androidx.compose.ui.graphics.Color disabledContentColor, androidx.compose.ui.graphics.Color checkedContainerColor, androidx.compose.ui.graphics.Color checkedContentColor);
    ctor @BytecodeOnly public ToggleButtonColors(long, long, long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly public androidx.compose.material3.ToggleButtonColors copy(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledContentColor, optional androidx.compose.ui.graphics.Color checkedContainerColor, optional androidx.compose.ui.graphics.Color checkedContentColor);
    method @BytecodeOnly public androidx.compose.material3.ToggleButtonColors copy-tNS2XkQ(long, long, long, long, long, long);
    method @BytecodeOnly public long getCheckedContainerColor-0d7_KjU();
    method @BytecodeOnly public long getCheckedContentColor-0d7_KjU();
    method @BytecodeOnly public long getContainerColor-0d7_KjU();
    method @BytecodeOnly public long getContentColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledContainerColor-0d7_KjU();
    method @BytecodeOnly public long getDisabledContentColor-0d7_KjU();
    property public androidx.compose.ui.graphics.Color checkedContainerColor;
    property public androidx.compose.ui.graphics.Color checkedContentColor;
    property public androidx.compose.ui.graphics.Color containerColor;
    property public androidx.compose.ui.graphics.Color contentColor;
    property public androidx.compose.ui.graphics.Color disabledContainerColor;
    property public androidx.compose.ui.graphics.Color disabledContentColor;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public final class ToggleButtonDefaults {
    method @androidx.compose.runtime.Composable public androidx.compose.material3.ToggleButtonColors elevatedToggleButtonColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ToggleButtonColors elevatedToggleButtonColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ToggleButtonColors elevatedToggleButtonColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledContentColor, optional androidx.compose.ui.graphics.Color checkedContainerColor, optional androidx.compose.ui.graphics.Color checkedContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ToggleButtonColors elevatedToggleButtonColors-5tl4gsc(long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getCheckedShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getCheckedShape(androidx.compose.runtime.Composer?, int);
    method public androidx.compose.foundation.layout.PaddingValues getContentPadding();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getExtraLargeCheckedSquareShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getExtraLargeCheckedSquareShape(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getExtraLargePressedShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getExtraLargePressedShape(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getExtraLargeSquareShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getExtraLargeSquareShape(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getExtraSmallCheckedSquareShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getExtraSmallCheckedSquareShape(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getExtraSmallPressedShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getExtraSmallPressedShape(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getExtraSmallSquareShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getExtraSmallSquareShape(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getIconSize-D9Ej5fM();
    method @BytecodeOnly public float getIconSpacing-D9Ej5fM();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getLargeCheckedSquareShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getLargeCheckedSquareShape(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getLargePressedShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getLargePressedShape(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getLargeSquareShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getLargeSquareShape(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getMediumCheckedSquareShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getMediumCheckedSquareShape(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getMediumPressedShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getMediumPressedShape(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getMediumSquareShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getMediumSquareShape(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getMinHeight-D9Ej5fM();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getPressedShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getPressedShape(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getRoundShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getRoundShape(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getShape(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getSquareShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getSquareShape(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.material3.ToggleButtonColors outlinedToggleButtonColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ToggleButtonColors outlinedToggleButtonColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ToggleButtonColors outlinedToggleButtonColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledContentColor, optional androidx.compose.ui.graphics.Color checkedContainerColor, optional androidx.compose.ui.graphics.Color checkedContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ToggleButtonColors outlinedToggleButtonColors-5tl4gsc(long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.compose.material3.ToggleButtonShapes shapes();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ToggleButtonShapes shapes(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.material3.ToggleButtonShapes shapes(optional androidx.compose.ui.graphics.Shape? shape, optional androidx.compose.ui.graphics.Shape? pressedShape, optional androidx.compose.ui.graphics.Shape? checkedShape);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ToggleButtonShapes shapes(androidx.compose.ui.graphics.Shape?, androidx.compose.ui.graphics.Shape?, androidx.compose.ui.graphics.Shape?, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ToggleButtonShapes shapesFor(androidx.compose.ui.unit.Dp buttonHeight);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ToggleButtonShapes shapesFor-8Feqmps(float, androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.material3.ToggleButtonColors toggleButtonColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ToggleButtonColors toggleButtonColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ToggleButtonColors toggleButtonColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledContentColor, optional androidx.compose.ui.graphics.Color checkedContainerColor, optional androidx.compose.ui.graphics.Color checkedContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ToggleButtonColors toggleButtonColors-5tl4gsc(long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.compose.material3.ToggleButtonColors tonalToggleButtonColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ToggleButtonColors tonalToggleButtonColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ToggleButtonColors tonalToggleButtonColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color disabledContainerColor, optional androidx.compose.ui.graphics.Color disabledContentColor, optional androidx.compose.ui.graphics.Color checkedContainerColor, optional androidx.compose.ui.graphics.Color checkedContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.ToggleButtonColors tonalToggleButtonColors-5tl4gsc(long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    property public androidx.compose.foundation.layout.PaddingValues ContentPadding;
    property public androidx.compose.ui.unit.Dp IconSize;
    property public androidx.compose.ui.unit.Dp IconSpacing;
    property public androidx.compose.ui.unit.Dp MinHeight;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape checkedShape;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape extraLargeCheckedSquareShape;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape extraLargePressedShape;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape extraLargeSquareShape;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape extraSmallCheckedSquareShape;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape extraSmallPressedShape;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape extraSmallSquareShape;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape largeCheckedSquareShape;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape largePressedShape;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape largeSquareShape;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape mediumCheckedSquareShape;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape mediumPressedShape;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape mediumSquareShape;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape pressedShape;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape roundShape;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape shape;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape squareShape;
    field public static final androidx.compose.material3.ToggleButtonDefaults INSTANCE;
  }

  public final class ToggleButtonKt {
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void ElevatedToggleButton(boolean checked, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onCheckedChange, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.material3.ToggleButtonShapes shapes, optional androidx.compose.material3.ToggleButtonColors colors, optional androidx.compose.material3.ButtonElevation? elevation, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void ElevatedToggleButton(boolean, kotlin.jvm.functions.Function1<? super java.lang.Boolean!,kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, androidx.compose.material3.ToggleButtonShapes?, androidx.compose.material3.ToggleButtonColors?, androidx.compose.material3.ButtonElevation?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void OutlinedToggleButton(boolean checked, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onCheckedChange, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.material3.ToggleButtonShapes shapes, optional androidx.compose.material3.ToggleButtonColors colors, optional androidx.compose.material3.ButtonElevation? elevation, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void OutlinedToggleButton(boolean, kotlin.jvm.functions.Function1<? super java.lang.Boolean!,kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, androidx.compose.material3.ToggleButtonShapes?, androidx.compose.material3.ToggleButtonColors?, androidx.compose.material3.ButtonElevation?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void ToggleButton(boolean checked, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onCheckedChange, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.material3.ToggleButtonShapes shapes, optional androidx.compose.material3.ToggleButtonColors colors, optional androidx.compose.material3.ButtonElevation? elevation, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void ToggleButton(boolean, kotlin.jvm.functions.Function1<? super java.lang.Boolean!,kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, androidx.compose.material3.ToggleButtonShapes?, androidx.compose.material3.ToggleButtonColors?, androidx.compose.material3.ButtonElevation?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void TonalToggleButton(boolean checked, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> onCheckedChange, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.material3.ToggleButtonShapes shapes, optional androidx.compose.material3.ToggleButtonColors colors, optional androidx.compose.material3.ButtonElevation? elevation, optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void TonalToggleButton(boolean, kotlin.jvm.functions.Function1<? super java.lang.Boolean!,kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, androidx.compose.material3.ToggleButtonShapes?, androidx.compose.material3.ToggleButtonColors?, androidx.compose.material3.ButtonElevation?, androidx.compose.foundation.BorderStroke?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Immutable public final class ToggleButtonShapes {
    ctor public ToggleButtonShapes(androidx.compose.ui.graphics.Shape shape, androidx.compose.ui.graphics.Shape pressedShape, androidx.compose.ui.graphics.Shape checkedShape);
    method public androidx.compose.material3.ToggleButtonShapes copy(optional androidx.compose.ui.graphics.Shape? shape, optional androidx.compose.ui.graphics.Shape? pressedShape, optional androidx.compose.ui.graphics.Shape? checkedShape);
    method public androidx.compose.ui.graphics.Shape getCheckedShape();
    method public androidx.compose.ui.graphics.Shape getPressedShape();
    method public androidx.compose.ui.graphics.Shape getShape();
    property public androidx.compose.ui.graphics.Shape checkedShape;
    property public androidx.compose.ui.graphics.Shape pressedShape;
    property public androidx.compose.ui.graphics.Shape shape;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public final class ToggleFloatingActionButtonDefaults {
    method @androidx.compose.runtime.Composable public androidx.compose.ui.Modifier animateIcon(androidx.compose.ui.Modifier, kotlin.jvm.functions.Function0<java.lang.Float> checkedProgress, optional kotlin.jvm.functions.Function1<? super java.lang.Float,androidx.compose.ui.graphics.Color> color, optional kotlin.jvm.functions.Function1<? super java.lang.Float,androidx.compose.ui.unit.Dp> size);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.Modifier animateIcon(androidx.compose.ui.Modifier, kotlin.jvm.functions.Function0<java.lang.Float!>, kotlin.jvm.functions.Function1<? super java.lang.Float!,androidx.compose.ui.graphics.Color!>?, kotlin.jvm.functions.Function1<? super java.lang.Float!,androidx.compose.ui.unit.Dp!>?, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public kotlin.jvm.functions.Function1<java.lang.Float,androidx.compose.ui.graphics.Color> containerColor(optional androidx.compose.ui.graphics.Color initialColor, optional androidx.compose.ui.graphics.Color finalColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public kotlin.jvm.functions.Function1<java.lang.Float!,androidx.compose.ui.graphics.Color!> containerColor-dgg9oW8(long, long, androidx.compose.runtime.Composer?, int, int);
    method public kotlin.jvm.functions.Function1<java.lang.Float,androidx.compose.ui.unit.Dp> containerCornerRadius();
    method @KotlinOnly public kotlin.jvm.functions.Function1<java.lang.Float,androidx.compose.ui.unit.Dp> containerCornerRadius(androidx.compose.ui.unit.Dp initialSize, optional androidx.compose.ui.unit.Dp finalSize);
    method @BytecodeOnly public kotlin.jvm.functions.Function1<java.lang.Float!,androidx.compose.ui.unit.Dp!> containerCornerRadius-YgX7TsA(float, float);
    method public kotlin.jvm.functions.Function1<java.lang.Float,androidx.compose.ui.unit.Dp> containerCornerRadiusLarge();
    method public kotlin.jvm.functions.Function1<java.lang.Float,androidx.compose.ui.unit.Dp> containerCornerRadiusMedium();
    method public kotlin.jvm.functions.Function1<java.lang.Float,androidx.compose.ui.unit.Dp> containerSize();
    method @KotlinOnly public kotlin.jvm.functions.Function1<java.lang.Float,androidx.compose.ui.unit.Dp> containerSize(androidx.compose.ui.unit.Dp initialSize, optional androidx.compose.ui.unit.Dp finalSize);
    method @BytecodeOnly public kotlin.jvm.functions.Function1<java.lang.Float!,androidx.compose.ui.unit.Dp!> containerSize-YgX7TsA(float, float);
    method public kotlin.jvm.functions.Function1<java.lang.Float,androidx.compose.ui.unit.Dp> containerSizeLarge();
    method public kotlin.jvm.functions.Function1<java.lang.Float,androidx.compose.ui.unit.Dp> containerSizeMedium();
    method @KotlinOnly @androidx.compose.runtime.Composable public kotlin.jvm.functions.Function1<java.lang.Float,androidx.compose.ui.graphics.Color> iconColor(optional androidx.compose.ui.graphics.Color initialColor, optional androidx.compose.ui.graphics.Color finalColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public kotlin.jvm.functions.Function1<java.lang.Float!,androidx.compose.ui.graphics.Color!> iconColor-dgg9oW8(long, long, androidx.compose.runtime.Composer?, int, int);
    method public kotlin.jvm.functions.Function1<java.lang.Float,androidx.compose.ui.unit.Dp> iconSize();
    method @KotlinOnly public kotlin.jvm.functions.Function1<java.lang.Float,androidx.compose.ui.unit.Dp> iconSize(androidx.compose.ui.unit.Dp initialSize, optional androidx.compose.ui.unit.Dp finalSize);
    method @BytecodeOnly public kotlin.jvm.functions.Function1<java.lang.Float!,androidx.compose.ui.unit.Dp!> iconSize-YgX7TsA(float, float);
    method public kotlin.jvm.functions.Function1<java.lang.Float,androidx.compose.ui.unit.Dp> iconSizeLarge();
    method public kotlin.jvm.functions.Function1<java.lang.Float,androidx.compose.ui.unit.Dp> iconSizeMedium();
    field public static final androidx.compose.material3.ToggleFloatingActionButtonDefaults INSTANCE;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public interface ToggleFloatingActionButtonScope {
    method public float getCheckedProgress();
    property public abstract float checkedProgress;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @kotlin.jvm.JvmInline public final value class TooltipAnchorPosition {
    method @BytecodeOnly public static androidx.compose.material3.TooltipAnchorPosition! box-impl(int);
    method @BytecodeOnly public int unbox-impl();
    field public static final androidx.compose.material3.TooltipAnchorPosition.Companion Companion;
  }

  public static final class TooltipAnchorPosition.Companion {
    method @BytecodeOnly public int getAbove-lOKsHw4();
    method @BytecodeOnly public int getBelow-lOKsHw4();
    method @BytecodeOnly public int getEnd-lOKsHw4();
    method @BytecodeOnly public int getLeft-lOKsHw4();
    method @BytecodeOnly public int getRight-lOKsHw4();
    method @BytecodeOnly public int getStart-lOKsHw4();
    property public androidx.compose.material3.TooltipAnchorPosition Above;
    property public androidx.compose.material3.TooltipAnchorPosition Below;
    property public androidx.compose.material3.TooltipAnchorPosition End;
    property public androidx.compose.material3.TooltipAnchorPosition Left;
    property public androidx.compose.material3.TooltipAnchorPosition Right;
    property public androidx.compose.material3.TooltipAnchorPosition Start;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api public final class TooltipDefaults {
    method public androidx.compose.material3.DefaultTooltipCaretShape caretShape();
    method @KotlinOnly public androidx.compose.ui.graphics.Shape caretShape(optional androidx.compose.ui.unit.DpSize caretSize);
    method @BytecodeOnly public androidx.compose.ui.graphics.Shape caretShape-EaSLcWc(long);
    method @BytecodeOnly public long getCaretSize-MYxV2XQ();
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getPlainTooltipContainerColor(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getPlainTooltipContainerShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getPlainTooltipContainerShape(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getPlainTooltipContentColor(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getPlainTooltipMaxWidth-D9Ej5fM();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getRichTooltipContainerShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getRichTooltipContainerShape(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getRichTooltipMaxWidth-D9Ej5fM();
    method @KotlinOnly @Deprecated @androidx.compose.runtime.Composable public androidx.compose.ui.window.PopupPositionProvider rememberPlainTooltipPositionProvider(optional androidx.compose.ui.unit.Dp spacingBetweenTooltipAndAnchor);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable public androidx.compose.ui.window.PopupPositionProvider rememberPlainTooltipPositionProvider-kHDZbjc(float, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @Deprecated @androidx.compose.runtime.Composable public androidx.compose.ui.window.PopupPositionProvider rememberRichTooltipPositionProvider(optional androidx.compose.ui.unit.Dp spacingBetweenTooltipAndAnchor);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable public androidx.compose.ui.window.PopupPositionProvider rememberRichTooltipPositionProvider-kHDZbjc(float, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.ui.window.PopupPositionProvider rememberTooltipPositionProvider(androidx.compose.material3.TooltipAnchorPosition positioning, optional androidx.compose.ui.unit.Dp spacingBetweenTooltipAndAnchor);
    method @KotlinOnly @Deprecated @androidx.compose.runtime.Composable public androidx.compose.ui.window.PopupPositionProvider rememberTooltipPositionProvider(optional androidx.compose.ui.unit.Dp spacingBetweenTooltipAndAnchor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.window.PopupPositionProvider rememberTooltipPositionProvider-Hu5FAss(int, float, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable public androidx.compose.ui.window.PopupPositionProvider rememberTooltipPositionProvider-kHDZbjc(float, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.compose.material3.RichTooltipColors richTooltipColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.RichTooltipColors richTooltipColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.RichTooltipColors richTooltipColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color titleContentColor, optional androidx.compose.ui.graphics.Color actionContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.RichTooltipColors richTooltipColors-ro_MJ88(long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    property public androidx.compose.ui.unit.DpSize caretSize;
    property public androidx.compose.ui.graphics.Color plainTooltipContainerColor;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape plainTooltipContainerShape;
    property public androidx.compose.ui.graphics.Color plainTooltipContentColor;
    property public androidx.compose.ui.unit.Dp plainTooltipMaxWidth;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape richTooltipContainerShape;
    property public androidx.compose.ui.unit.Dp richTooltipMaxWidth;
    field public static final androidx.compose.material3.TooltipDefaults INSTANCE;
  }

  public final class TooltipKt {
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void PlainTooltip(androidx.compose.material3.TooltipScope, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Shape? caretShape, optional androidx.compose.ui.unit.Dp maxWidth, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.unit.Dp tonalElevation, optional androidx.compose.ui.unit.Dp shadowElevation, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void PlainTooltip-gv3ox5I(androidx.compose.material3.TooltipScope, androidx.compose.ui.Modifier?, androidx.compose.ui.graphics.Shape?, float, androidx.compose.ui.graphics.Shape?, long, long, float, float, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void PlainTooltip-m9Er-Xc(androidx.compose.material3.TooltipScope!, androidx.compose.ui.Modifier!, long, float, androidx.compose.ui.graphics.Shape!, long, long, float, float, kotlin.jvm.functions.Function2!, androidx.compose.runtime.Composer!, int, int);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void RichTooltip(androidx.compose.material3.TooltipScope, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? title, optional kotlin.jvm.functions.Function0<kotlin.Unit>? action, optional androidx.compose.ui.graphics.Shape? caretShape, optional androidx.compose.ui.unit.Dp maxWidth, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.RichTooltipColors colors, optional androidx.compose.ui.unit.Dp tonalElevation, optional androidx.compose.ui.unit.Dp shadowElevation, kotlin.jvm.functions.Function0<kotlin.Unit> text);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void RichTooltip-EkvW5A0(androidx.compose.material3.TooltipScope, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.ui.graphics.Shape?, float, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.RichTooltipColors?, float, float, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @BytecodeOnly @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void RichTooltip-ZuUcA3Q(androidx.compose.material3.TooltipScope!, androidx.compose.ui.Modifier!, kotlin.jvm.functions.Function2!, kotlin.jvm.functions.Function2!, long, float, androidx.compose.ui.graphics.Shape!, androidx.compose.material3.RichTooltipColors!, float, float, kotlin.jvm.functions.Function2!, androidx.compose.runtime.Composer!, int, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void TooltipBox(androidx.compose.ui.window.PopupPositionProvider positionProvider, kotlin.jvm.functions.Function1<? super androidx.compose.material3.TooltipScope,kotlin.Unit> tooltip, androidx.compose.material3.TooltipState state, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onDismissRequest, optional boolean focusable, optional boolean enableUserInput, optional boolean hasAction, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void TooltipBox(androidx.compose.ui.window.PopupPositionProvider!, kotlin.jvm.functions.Function3!, androidx.compose.material3.TooltipState!, androidx.compose.ui.Modifier!, boolean, boolean, kotlin.jvm.functions.Function2!, androidx.compose.runtime.Composer!, int, int);
    method @BytecodeOnly @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void TooltipBox(androidx.compose.ui.window.PopupPositionProvider!, kotlin.jvm.functions.Function3!, androidx.compose.material3.TooltipState!, androidx.compose.ui.Modifier!, kotlin.jvm.functions.Function0!, boolean, boolean, kotlin.jvm.functions.Function2!, androidx.compose.runtime.Composer!, int, int);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void TooltipBox(androidx.compose.ui.window.PopupPositionProvider, kotlin.jvm.functions.Function3<? super androidx.compose.material3.TooltipScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.material3.TooltipState, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function0<kotlin.Unit!>?, boolean, boolean, boolean, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api public static androidx.compose.material3.TooltipState TooltipState(optional boolean initialIsVisible, optional boolean isPersistent, optional androidx.compose.foundation.MutatorMutex mutatorMutex);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static androidx.compose.material3.TooltipState rememberTooltipState(optional boolean initialIsVisible, optional boolean isPersistent, optional androidx.compose.foundation.MutatorMutex mutatorMutex);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static androidx.compose.material3.TooltipState rememberTooltipState(boolean, boolean, androidx.compose.foundation.MutatorMutex?, androidx.compose.runtime.Composer?, int, int);
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api public sealed interface TooltipScope {
    method @BytecodeOnly @Deprecated public androidx.compose.ui.Modifier! drawCaret(androidx.compose.ui.Modifier!, kotlin.jvm.functions.Function2!);
    method public androidx.compose.ui.layout.LayoutCoordinates? obtainAnchorBounds(androidx.compose.ui.layout.MeasureScope);
    method public androidx.compose.ui.window.PopupPositionProvider obtainPositionProvider();
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api public interface TooltipState {
    method public void dismiss();
    method public androidx.compose.animation.core.MutableTransitionState<java.lang.Boolean> getTransition();
    method public boolean isPersistent();
    method public boolean isVisible();
    method public void onDispose();
    method public suspend Object? show(optional androidx.compose.foundation.MutatePriority mutatePriority, kotlin.coroutines.Continuation<? super kotlin.Unit>);
    property public abstract boolean isPersistent;
    property public abstract boolean isVisible;
    property public abstract androidx.compose.animation.core.MutableTransitionState<java.lang.Boolean> transition;
  }

  public final class Tooltip_androidKt {
    method @BytecodeOnly @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void PlainTooltip(androidx.compose.material3.TooltipScope!, androidx.compose.ui.Modifier!, long, androidx.compose.ui.graphics.Shape!, long, long, float, float, kotlin.jvm.functions.Function2!, androidx.compose.runtime.Composer!, int, int);
    method @BytecodeOnly @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void PlainTooltip(androidx.compose.material3.TooltipScope!, androidx.compose.ui.Modifier!, long, float, androidx.compose.ui.graphics.Shape!, long, long, float, float, kotlin.jvm.functions.Function2!, androidx.compose.runtime.Composer!, int, int);
    method @BytecodeOnly @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void RichTooltip(androidx.compose.material3.TooltipScope!, androidx.compose.ui.Modifier!, kotlin.jvm.functions.Function2!, kotlin.jvm.functions.Function2!, long, androidx.compose.ui.graphics.Shape!, androidx.compose.material3.RichTooltipColors!, float, float, kotlin.jvm.functions.Function2!, androidx.compose.runtime.Composer!, int, int);
    method @BytecodeOnly @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void RichTooltip(androidx.compose.material3.TooltipScope!, androidx.compose.ui.Modifier!, kotlin.jvm.functions.Function2!, kotlin.jvm.functions.Function2!, long, float, androidx.compose.ui.graphics.Shape!, androidx.compose.material3.RichTooltipColors!, float, float, kotlin.jvm.functions.Function2!, androidx.compose.runtime.Composer!, int, int, int);
  }

  @androidx.compose.runtime.Stable public final class TopAppBarColors {
    ctor @KotlinOnly @Deprecated public TopAppBarColors(androidx.compose.ui.graphics.Color containerColor, androidx.compose.ui.graphics.Color scrolledContainerColor, androidx.compose.ui.graphics.Color navigationIconContentColor, androidx.compose.ui.graphics.Color titleContentColor, androidx.compose.ui.graphics.Color actionIconContentColor);
    ctor @KotlinOnly public TopAppBarColors(androidx.compose.ui.graphics.Color containerColor, androidx.compose.ui.graphics.Color scrolledContainerColor, androidx.compose.ui.graphics.Color navigationIconContentColor, androidx.compose.ui.graphics.Color titleContentColor, androidx.compose.ui.graphics.Color actionIconContentColor, androidx.compose.ui.graphics.Color subtitleContentColor);
    ctor @BytecodeOnly @Deprecated public TopAppBarColors(long, long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    ctor @BytecodeOnly public TopAppBarColors(long, long, long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly public androidx.compose.material3.TopAppBarColors copy(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color scrolledContainerColor, optional androidx.compose.ui.graphics.Color navigationIconContentColor, optional androidx.compose.ui.graphics.Color titleContentColor, optional androidx.compose.ui.graphics.Color actionIconContentColor, optional androidx.compose.ui.graphics.Color subtitleContentColor);
    method @BytecodeOnly public androidx.compose.material3.TopAppBarColors copy-tNS2XkQ(long, long, long, long, long, long);
    method @BytecodeOnly public long getActionIconContentColor-0d7_KjU();
    method @BytecodeOnly public long getContainerColor-0d7_KjU();
    method @BytecodeOnly public long getNavigationIconContentColor-0d7_KjU();
    method @BytecodeOnly public long getScrolledContainerColor-0d7_KjU();
    method @BytecodeOnly public long getSubtitleContentColor-0d7_KjU();
    method @BytecodeOnly public long getTitleContentColor-0d7_KjU();
    property public androidx.compose.ui.graphics.Color actionIconContentColor;
    property public androidx.compose.ui.graphics.Color containerColor;
    property public androidx.compose.ui.graphics.Color navigationIconContentColor;
    property public androidx.compose.ui.graphics.Color scrolledContainerColor;
    property public androidx.compose.ui.graphics.Color subtitleContentColor;
    property public androidx.compose.ui.graphics.Color titleContentColor;
  }

  public final class TopAppBarDefaults {
    method @Deprecated @androidx.compose.runtime.Composable public androidx.compose.material3.TopAppBarColors centerAlignedTopAppBarColors();
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable public androidx.compose.material3.TopAppBarColors centerAlignedTopAppBarColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @Deprecated @androidx.compose.runtime.Composable public androidx.compose.material3.TopAppBarColors centerAlignedTopAppBarColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color scrolledContainerColor, optional androidx.compose.ui.graphics.Color navigationIconContentColor, optional androidx.compose.ui.graphics.Color titleContentColor, optional androidx.compose.ui.graphics.Color actionIconContentColor);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable public androidx.compose.material3.TopAppBarColors centerAlignedTopAppBarColors-zjMxDiM(long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public androidx.compose.material3.TopAppBarScrollBehavior! enterAlwaysScrollBehavior(androidx.compose.material3.TopAppBarState!, kotlin.jvm.functions.Function0!, androidx.compose.animation.core.AnimationSpec!, androidx.compose.animation.core.DecayAnimationSpec!, androidx.compose.runtime.Composer!, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public androidx.compose.material3.TopAppBarScrollBehavior enterAlwaysScrollBehavior(optional androidx.compose.material3.TopAppBarState state, optional kotlin.jvm.functions.Function0<java.lang.Boolean> canScroll, optional androidx.compose.animation.core.AnimationSpec<java.lang.Float>? snapAnimationSpec, optional androidx.compose.animation.core.DecayAnimationSpec<java.lang.Float>? flingAnimationSpec, optional boolean reverseLayout);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public androidx.compose.material3.TopAppBarScrollBehavior enterAlwaysScrollBehavior(androidx.compose.material3.TopAppBarState?, kotlin.jvm.functions.Function0<java.lang.Boolean!>?, androidx.compose.animation.core.AnimationSpec<java.lang.Float!>?, androidx.compose.animation.core.DecayAnimationSpec<java.lang.Float!>?, boolean, androidx.compose.runtime.Composer?, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public androidx.compose.material3.TopAppBarScrollBehavior exitUntilCollapsedScrollBehavior(optional androidx.compose.material3.TopAppBarState state, optional kotlin.jvm.functions.Function0<java.lang.Boolean> canScroll, optional androidx.compose.animation.core.AnimationSpec<java.lang.Float>? snapAnimationSpec, optional androidx.compose.animation.core.DecayAnimationSpec<java.lang.Float>? flingAnimationSpec);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public androidx.compose.material3.TopAppBarScrollBehavior exitUntilCollapsedScrollBehavior(androidx.compose.material3.TopAppBarState?, kotlin.jvm.functions.Function0<java.lang.Boolean!>?, androidx.compose.animation.core.AnimationSpec<java.lang.Float!>?, androidx.compose.animation.core.DecayAnimationSpec<java.lang.Float!>?, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly public float getLargeAppBarCollapsedHeight-D9Ej5fM();
    method @BytecodeOnly public float getLargeAppBarExpandedHeight-D9Ej5fM();
    method @BytecodeOnly public float getLargeFlexibleAppBarWithSubtitleExpandedHeight-D9Ej5fM();
    method @BytecodeOnly public float getLargeFlexibleAppBarWithoutSubtitleExpandedHeight-D9Ej5fM();
    method @BytecodeOnly public float getMediumAppBarCollapsedHeight-D9Ej5fM();
    method @BytecodeOnly public float getMediumAppBarExpandedHeight-D9Ej5fM();
    method @BytecodeOnly public float getMediumFlexibleAppBarWithSubtitleExpandedHeight-D9Ej5fM();
    method @BytecodeOnly public float getMediumFlexibleAppBarWithoutSubtitleExpandedHeight-D9Ej5fM();
    method @BytecodeOnly public float getTopAppBarExpandedHeight-D9Ej5fM();
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.WindowInsets getWindowInsets();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.WindowInsets getWindowInsets(androidx.compose.runtime.Composer?, int);
    method @Deprecated @androidx.compose.runtime.Composable public androidx.compose.material3.TopAppBarColors largeTopAppBarColors();
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable public androidx.compose.material3.TopAppBarColors largeTopAppBarColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @Deprecated @androidx.compose.runtime.Composable public androidx.compose.material3.TopAppBarColors largeTopAppBarColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color scrolledContainerColor, optional androidx.compose.ui.graphics.Color navigationIconContentColor, optional androidx.compose.ui.graphics.Color titleContentColor, optional androidx.compose.ui.graphics.Color actionIconContentColor);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable public androidx.compose.material3.TopAppBarColors largeTopAppBarColors-zjMxDiM(long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @Deprecated @androidx.compose.runtime.Composable public androidx.compose.material3.TopAppBarColors mediumTopAppBarColors();
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable public androidx.compose.material3.TopAppBarColors mediumTopAppBarColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @Deprecated @androidx.compose.runtime.Composable public androidx.compose.material3.TopAppBarColors mediumTopAppBarColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color scrolledContainerColor, optional androidx.compose.ui.graphics.Color navigationIconContentColor, optional androidx.compose.ui.graphics.Color titleContentColor, optional androidx.compose.ui.graphics.Color actionIconContentColor);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable public androidx.compose.material3.TopAppBarColors mediumTopAppBarColors-zjMxDiM(long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public androidx.compose.material3.TopAppBarScrollBehavior pinnedScrollBehavior(optional androidx.compose.material3.TopAppBarState state, optional kotlin.jvm.functions.Function0<java.lang.Boolean> canScroll);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public androidx.compose.material3.TopAppBarScrollBehavior pinnedScrollBehavior(androidx.compose.material3.TopAppBarState?, kotlin.jvm.functions.Function0<java.lang.Boolean!>?, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.compose.material3.TopAppBarColors topAppBarColors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.TopAppBarColors topAppBarColors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.TopAppBarColors topAppBarColors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color scrolledContainerColor, optional androidx.compose.ui.graphics.Color navigationIconContentColor, optional androidx.compose.ui.graphics.Color titleContentColor, optional androidx.compose.ui.graphics.Color actionIconContentColor, optional androidx.compose.ui.graphics.Color subtitleContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.TopAppBarColors topAppBarColors-5tl4gsc(long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @Deprecated @androidx.compose.runtime.Composable public androidx.compose.material3.TopAppBarColors! topAppBarColors-zjMxDiM(long, long, long, long, long, androidx.compose.runtime.Composer!, int, int);
    property public androidx.compose.ui.unit.Dp LargeAppBarCollapsedHeight;
    property public androidx.compose.ui.unit.Dp LargeAppBarExpandedHeight;
    property public androidx.compose.ui.unit.Dp LargeFlexibleAppBarWithSubtitleExpandedHeight;
    property public androidx.compose.ui.unit.Dp LargeFlexibleAppBarWithoutSubtitleExpandedHeight;
    property public androidx.compose.ui.unit.Dp MediumAppBarCollapsedHeight;
    property public androidx.compose.ui.unit.Dp MediumAppBarExpandedHeight;
    property public androidx.compose.ui.unit.Dp MediumFlexibleAppBarWithSubtitleExpandedHeight;
    property public androidx.compose.ui.unit.Dp MediumFlexibleAppBarWithoutSubtitleExpandedHeight;
    property public androidx.compose.ui.unit.Dp TopAppBarExpandedHeight;
    property @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.WindowInsets windowInsets;
    field public static final androidx.compose.material3.TopAppBarDefaults INSTANCE;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Stable public interface TopAppBarScrollBehavior {
    method public androidx.compose.animation.core.DecayAnimationSpec<java.lang.Float>? getFlingAnimationSpec();
    method public androidx.compose.ui.input.nestedscroll.NestedScrollConnection getNestedScrollConnection();
    method public androidx.compose.animation.core.AnimationSpec<java.lang.Float>? getSnapAnimationSpec();
    method public androidx.compose.material3.TopAppBarState getState();
    method public boolean isPinned();
    property public abstract androidx.compose.animation.core.DecayAnimationSpec<java.lang.Float>? flingAnimationSpec;
    property public abstract boolean isPinned;
    property public abstract androidx.compose.ui.input.nestedscroll.NestedScrollConnection nestedScrollConnection;
    property public abstract androidx.compose.animation.core.AnimationSpec<java.lang.Float>? snapAnimationSpec;
    property public abstract androidx.compose.material3.TopAppBarState state;
  }

  @androidx.compose.runtime.Stable public final class TopAppBarState {
    ctor public TopAppBarState(float initialHeightOffsetLimit, float initialHeightOffset, float initialContentOffset);
    method public float getCollapsedFraction();
    method public float getContentOffset();
    method public float getHeightOffset();
    method public float getHeightOffsetLimit();
    method public float getOverlappedFraction();
    method public void setContentOffset(float);
    method public void setHeightOffset(float);
    method public void setHeightOffsetLimit(float);
    property public float collapsedFraction;
    property public float contentOffset;
    property public float heightOffset;
    property public float heightOffsetLimit;
    property public float overlappedFraction;
    field public static final androidx.compose.material3.TopAppBarState.Companion Companion;
  }

  public static final class TopAppBarState.Companion {
    method public androidx.compose.runtime.saveable.Saver<androidx.compose.material3.TopAppBarState,? extends java.lang.Object?> getSaver();
    property public androidx.compose.runtime.saveable.Saver<androidx.compose.material3.TopAppBarState,? extends java.lang.Object?> Saver;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public interface TwoRowsTopAppBarOverride {
    method @androidx.compose.runtime.Composable public void TwoRowsTopAppBar(androidx.compose.material3.TwoRowsTopAppBarOverrideScope);
    method @BytecodeOnly @androidx.compose.runtime.Composable public void TwoRowsTopAppBar(androidx.compose.material3.TwoRowsTopAppBarOverrideScope, androidx.compose.runtime.Composer?, int);
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public final class TwoRowsTopAppBarOverrideScope {
    method public kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit> getActions();
    method @BytecodeOnly public float getCollapsedHeight-D9Ej5fM();
    method public androidx.compose.material3.TopAppBarColors getColors();
    method @BytecodeOnly public float getExpandedHeight-D9Ej5fM();
    method public androidx.compose.ui.Modifier getModifier();
    method public kotlin.jvm.functions.Function0<kotlin.Unit> getNavigationIcon();
    method public androidx.compose.material3.TopAppBarScrollBehavior? getScrollBehavior();
    method public kotlin.jvm.functions.Function0<kotlin.Unit>? getSmallSubtitle();
    method public androidx.compose.ui.text.TextStyle getSmallSubtitleTextStyle();
    method public kotlin.jvm.functions.Function0<kotlin.Unit> getSmallTitle();
    method public androidx.compose.ui.text.TextStyle getSmallTitleTextStyle();
    method public kotlin.jvm.functions.Function0<kotlin.Unit>? getSubtitle();
    method public androidx.compose.ui.text.TextStyle getSubtitleTextStyle();
    method public kotlin.jvm.functions.Function0<kotlin.Unit> getTitle();
    method @BytecodeOnly public float getTitleBottomPadding-D9Ej5fM();
    method public androidx.compose.ui.Alignment.Horizontal getTitleHorizontalAlignment();
    method public androidx.compose.ui.text.TextStyle getTitleTextStyle();
    method public androidx.compose.foundation.layout.WindowInsets getWindowInsets();
    property public kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.RowScope,kotlin.Unit> actions;
    property public androidx.compose.ui.unit.Dp collapsedHeight;
    property public androidx.compose.material3.TopAppBarColors colors;
    property public androidx.compose.ui.unit.Dp expandedHeight;
    property public androidx.compose.ui.Modifier modifier;
    property public kotlin.jvm.functions.Function0<kotlin.Unit> navigationIcon;
    property public androidx.compose.material3.TopAppBarScrollBehavior? scrollBehavior;
    property public kotlin.jvm.functions.Function0<kotlin.Unit>? smallSubtitle;
    property public androidx.compose.ui.text.TextStyle smallSubtitleTextStyle;
    property public kotlin.jvm.functions.Function0<kotlin.Unit> smallTitle;
    property public androidx.compose.ui.text.TextStyle smallTitleTextStyle;
    property public kotlin.jvm.functions.Function0<kotlin.Unit>? subtitle;
    property public androidx.compose.ui.text.TextStyle subtitleTextStyle;
    property public kotlin.jvm.functions.Function0<kotlin.Unit> title;
    property public androidx.compose.ui.unit.Dp titleBottomPadding;
    property public androidx.compose.ui.Alignment.Horizontal titleHorizontalAlignment;
    property public androidx.compose.ui.text.TextStyle titleTextStyle;
    property public androidx.compose.foundation.layout.WindowInsets windowInsets;
  }

  @androidx.compose.runtime.Immutable public final class Typography {
    ctor @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public Typography();
    ctor public Typography(optional androidx.compose.ui.text.TextStyle displayLarge, optional androidx.compose.ui.text.TextStyle displayMedium, optional androidx.compose.ui.text.TextStyle displaySmall, optional androidx.compose.ui.text.TextStyle headlineLarge, optional androidx.compose.ui.text.TextStyle headlineMedium, optional androidx.compose.ui.text.TextStyle headlineSmall, optional androidx.compose.ui.text.TextStyle titleLarge, optional androidx.compose.ui.text.TextStyle titleMedium, optional androidx.compose.ui.text.TextStyle titleSmall, optional androidx.compose.ui.text.TextStyle bodyLarge, optional androidx.compose.ui.text.TextStyle bodyMedium, optional androidx.compose.ui.text.TextStyle bodySmall, optional androidx.compose.ui.text.TextStyle labelLarge, optional androidx.compose.ui.text.TextStyle labelMedium, optional androidx.compose.ui.text.TextStyle labelSmall);
    ctor @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public Typography(optional androidx.compose.ui.text.TextStyle displayLarge, optional androidx.compose.ui.text.TextStyle displayMedium, optional androidx.compose.ui.text.TextStyle displaySmall, optional androidx.compose.ui.text.TextStyle headlineLarge, optional androidx.compose.ui.text.TextStyle headlineMedium, optional androidx.compose.ui.text.TextStyle headlineSmall, optional androidx.compose.ui.text.TextStyle titleLarge, optional androidx.compose.ui.text.TextStyle titleMedium, optional androidx.compose.ui.text.TextStyle titleSmall, optional androidx.compose.ui.text.TextStyle bodyLarge, optional androidx.compose.ui.text.TextStyle bodyMedium, optional androidx.compose.ui.text.TextStyle bodySmall, optional androidx.compose.ui.text.TextStyle labelLarge, optional androidx.compose.ui.text.TextStyle labelMedium, optional androidx.compose.ui.text.TextStyle labelSmall, optional androidx.compose.ui.text.TextStyle displayLargeEmphasized, optional androidx.compose.ui.text.TextStyle displayMediumEmphasized, optional androidx.compose.ui.text.TextStyle displaySmallEmphasized, optional androidx.compose.ui.text.TextStyle headlineLargeEmphasized, optional androidx.compose.ui.text.TextStyle headlineMediumEmphasized, optional androidx.compose.ui.text.TextStyle headlineSmallEmphasized, optional androidx.compose.ui.text.TextStyle titleLargeEmphasized, optional androidx.compose.ui.text.TextStyle titleMediumEmphasized, optional androidx.compose.ui.text.TextStyle titleSmallEmphasized, optional androidx.compose.ui.text.TextStyle bodyLargeEmphasized, optional androidx.compose.ui.text.TextStyle bodyMediumEmphasized, optional androidx.compose.ui.text.TextStyle bodySmallEmphasized, optional androidx.compose.ui.text.TextStyle labelLargeEmphasized, optional androidx.compose.ui.text.TextStyle labelMediumEmphasized, optional androidx.compose.ui.text.TextStyle labelSmallEmphasized);
    method public androidx.compose.material3.Typography copy(optional androidx.compose.ui.text.TextStyle displayLarge, optional androidx.compose.ui.text.TextStyle displayMedium, optional androidx.compose.ui.text.TextStyle displaySmall, optional androidx.compose.ui.text.TextStyle headlineLarge, optional androidx.compose.ui.text.TextStyle headlineMedium, optional androidx.compose.ui.text.TextStyle headlineSmall, optional androidx.compose.ui.text.TextStyle titleLarge, optional androidx.compose.ui.text.TextStyle titleMedium, optional androidx.compose.ui.text.TextStyle titleSmall, optional androidx.compose.ui.text.TextStyle bodyLarge, optional androidx.compose.ui.text.TextStyle bodyMedium, optional androidx.compose.ui.text.TextStyle bodySmall, optional androidx.compose.ui.text.TextStyle labelLarge, optional androidx.compose.ui.text.TextStyle labelMedium, optional androidx.compose.ui.text.TextStyle labelSmall);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.material3.Typography copy(optional androidx.compose.ui.text.TextStyle displayLarge, optional androidx.compose.ui.text.TextStyle displayMedium, optional androidx.compose.ui.text.TextStyle displaySmall, optional androidx.compose.ui.text.TextStyle headlineLarge, optional androidx.compose.ui.text.TextStyle headlineMedium, optional androidx.compose.ui.text.TextStyle headlineSmall, optional androidx.compose.ui.text.TextStyle titleLarge, optional androidx.compose.ui.text.TextStyle titleMedium, optional androidx.compose.ui.text.TextStyle titleSmall, optional androidx.compose.ui.text.TextStyle bodyLarge, optional androidx.compose.ui.text.TextStyle bodyMedium, optional androidx.compose.ui.text.TextStyle bodySmall, optional androidx.compose.ui.text.TextStyle labelLarge, optional androidx.compose.ui.text.TextStyle labelMedium, optional androidx.compose.ui.text.TextStyle labelSmall, optional androidx.compose.ui.text.TextStyle displayLargeEmphasized, optional androidx.compose.ui.text.TextStyle displayMediumEmphasized, optional androidx.compose.ui.text.TextStyle displaySmallEmphasized, optional androidx.compose.ui.text.TextStyle headlineLargeEmphasized, optional androidx.compose.ui.text.TextStyle headlineMediumEmphasized, optional androidx.compose.ui.text.TextStyle headlineSmallEmphasized, optional androidx.compose.ui.text.TextStyle titleLargeEmphasized, optional androidx.compose.ui.text.TextStyle titleMediumEmphasized, optional androidx.compose.ui.text.TextStyle titleSmallEmphasized, optional androidx.compose.ui.text.TextStyle bodyLargeEmphasized, optional androidx.compose.ui.text.TextStyle bodyMediumEmphasized, optional androidx.compose.ui.text.TextStyle bodySmallEmphasized, optional androidx.compose.ui.text.TextStyle labelLargeEmphasized, optional androidx.compose.ui.text.TextStyle labelMediumEmphasized, optional androidx.compose.ui.text.TextStyle labelSmallEmphasized);
    method public androidx.compose.ui.text.TextStyle getBodyLarge();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.text.TextStyle getBodyLargeEmphasized();
    method public androidx.compose.ui.text.TextStyle getBodyMedium();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.text.TextStyle getBodyMediumEmphasized();
    method public androidx.compose.ui.text.TextStyle getBodySmall();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.text.TextStyle getBodySmallEmphasized();
    method public androidx.compose.ui.text.TextStyle getDisplayLarge();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.text.TextStyle getDisplayLargeEmphasized();
    method public androidx.compose.ui.text.TextStyle getDisplayMedium();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.text.TextStyle getDisplayMediumEmphasized();
    method public androidx.compose.ui.text.TextStyle getDisplaySmall();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.text.TextStyle getDisplaySmallEmphasized();
    method public androidx.compose.ui.text.TextStyle getHeadlineLarge();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.text.TextStyle getHeadlineLargeEmphasized();
    method public androidx.compose.ui.text.TextStyle getHeadlineMedium();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.text.TextStyle getHeadlineMediumEmphasized();
    method public androidx.compose.ui.text.TextStyle getHeadlineSmall();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.text.TextStyle getHeadlineSmallEmphasized();
    method public androidx.compose.ui.text.TextStyle getLabelLarge();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.text.TextStyle getLabelLargeEmphasized();
    method public androidx.compose.ui.text.TextStyle getLabelMedium();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.text.TextStyle getLabelMediumEmphasized();
    method public androidx.compose.ui.text.TextStyle getLabelSmall();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.text.TextStyle getLabelSmallEmphasized();
    method public androidx.compose.ui.text.TextStyle getTitleLarge();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.text.TextStyle getTitleLargeEmphasized();
    method public androidx.compose.ui.text.TextStyle getTitleMedium();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.text.TextStyle getTitleMediumEmphasized();
    method public androidx.compose.ui.text.TextStyle getTitleSmall();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.text.TextStyle getTitleSmallEmphasized();
    property public androidx.compose.ui.text.TextStyle bodyLarge;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.text.TextStyle bodyLargeEmphasized;
    property public androidx.compose.ui.text.TextStyle bodyMedium;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.text.TextStyle bodyMediumEmphasized;
    property public androidx.compose.ui.text.TextStyle bodySmall;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.text.TextStyle bodySmallEmphasized;
    property public androidx.compose.ui.text.TextStyle displayLarge;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.text.TextStyle displayLargeEmphasized;
    property public androidx.compose.ui.text.TextStyle displayMedium;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.text.TextStyle displayMediumEmphasized;
    property public androidx.compose.ui.text.TextStyle displaySmall;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.text.TextStyle displaySmallEmphasized;
    property public androidx.compose.ui.text.TextStyle headlineLarge;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.text.TextStyle headlineLargeEmphasized;
    property public androidx.compose.ui.text.TextStyle headlineMedium;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.text.TextStyle headlineMediumEmphasized;
    property public androidx.compose.ui.text.TextStyle headlineSmall;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.text.TextStyle headlineSmallEmphasized;
    property public androidx.compose.ui.text.TextStyle labelLarge;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.text.TextStyle labelLargeEmphasized;
    property public androidx.compose.ui.text.TextStyle labelMedium;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.text.TextStyle labelMediumEmphasized;
    property public androidx.compose.ui.text.TextStyle labelSmall;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.text.TextStyle labelSmallEmphasized;
    property public androidx.compose.ui.text.TextStyle titleLarge;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.text.TextStyle titleLargeEmphasized;
    property public androidx.compose.ui.text.TextStyle titleMedium;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.text.TextStyle titleMediumEmphasized;
    property public androidx.compose.ui.text.TextStyle titleSmall;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.text.TextStyle titleSmallEmphasized;
  }

  public final class VerticalDragHandleDefaults {
    method @androidx.compose.runtime.Composable public androidx.compose.material3.DragHandleColors colors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.DragHandleColors colors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.DragHandleColors colors(optional androidx.compose.ui.graphics.Color color, optional androidx.compose.ui.graphics.Color pressedColor, optional androidx.compose.ui.graphics.Color draggedColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.DragHandleColors colors-RGew2ao(long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.compose.material3.DragHandleShapes shapes();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.DragHandleShapes shapes(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.material3.DragHandleShapes shapes(optional androidx.compose.ui.graphics.Shape? shape, optional androidx.compose.ui.graphics.Shape? pressedShape, optional androidx.compose.ui.graphics.Shape? draggedShape);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.DragHandleShapes shapes(androidx.compose.ui.graphics.Shape?, androidx.compose.ui.graphics.Shape?, androidx.compose.ui.graphics.Shape?, androidx.compose.runtime.Composer?, int, int);
    method public androidx.compose.material3.DragHandleSizes sizes();
    method @KotlinOnly public androidx.compose.material3.DragHandleSizes sizes(optional androidx.compose.ui.unit.DpSize size, optional androidx.compose.ui.unit.DpSize pressedSize, optional androidx.compose.ui.unit.DpSize draggedSize);
    method @BytecodeOnly public androidx.compose.material3.DragHandleSizes sizes-L9TjZb0(long, long, long);
    field public static final androidx.compose.material3.VerticalDragHandleDefaults INSTANCE;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public interface VerticalFloatingToolbarOverride {
    method @androidx.compose.runtime.Composable public void VerticalFloatingToolbar(androidx.compose.material3.VerticalFloatingToolbarOverrideScope);
    method @BytecodeOnly @androidx.compose.runtime.Composable public void VerticalFloatingToolbar(androidx.compose.material3.VerticalFloatingToolbarOverrideScope, androidx.compose.runtime.Composer?, int);
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public final class VerticalFloatingToolbarOverrideScope {
    method @BytecodeOnly public float getCollapsedShadowElevation-D9Ej5fM();
    method public androidx.compose.material3.FloatingToolbarColors getColors();
    method public kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> getContent();
    method public androidx.compose.foundation.layout.PaddingValues getContentPadding();
    method @BytecodeOnly public float getExpandedShadowElevation-D9Ej5fM();
    method public kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.ColumnScope,kotlin.Unit>? getLeadingContent();
    method public androidx.compose.ui.Modifier getModifier();
    method public androidx.compose.material3.FloatingToolbarScrollBehavior? getScrollBehavior();
    method public androidx.compose.ui.graphics.Shape getShape();
    method public kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.ColumnScope,kotlin.Unit>? getTrailingContent();
    method public boolean isExpanded();
    property public androidx.compose.ui.unit.Dp collapsedShadowElevation;
    property public androidx.compose.material3.FloatingToolbarColors colors;
    property public kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> content;
    property public androidx.compose.foundation.layout.PaddingValues contentPadding;
    property public androidx.compose.ui.unit.Dp expandedShadowElevation;
    property public boolean isExpanded;
    property public kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.ColumnScope,kotlin.Unit>? leadingContent;
    property public androidx.compose.ui.Modifier modifier;
    property public androidx.compose.material3.FloatingToolbarScrollBehavior? scrollBehavior;
    property public androidx.compose.ui.graphics.Shape shape;
    property public kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.ColumnScope,kotlin.Unit>? trailingContent;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public interface VerticalFloatingToolbarWithFabOverride {
    method @androidx.compose.runtime.Composable public void VerticalFloatingToolbarWithFab(androidx.compose.material3.VerticalFloatingToolbarWithFabOverrideScope);
    method @BytecodeOnly @androidx.compose.runtime.Composable public void VerticalFloatingToolbarWithFab(androidx.compose.material3.VerticalFloatingToolbarWithFabOverrideScope, androidx.compose.runtime.Composer?, int);
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public final class VerticalFloatingToolbarWithFabOverrideScope {
    method public androidx.compose.animation.core.FiniteAnimationSpec<java.lang.Float> getAnimationSpec();
    method @BytecodeOnly public float getCollapsedShadowElevation-D9Ej5fM();
    method public androidx.compose.material3.FloatingToolbarColors getColors();
    method public kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> getContent();
    method public androidx.compose.foundation.layout.PaddingValues getContentPadding();
    method @BytecodeOnly public float getExpandedShadowElevation-D9Ej5fM();
    method public kotlin.jvm.functions.Function0<kotlin.Unit> getFloatingActionButton();
    method @BytecodeOnly public int getFloatingActionButtonPosition-dDJPGzU();
    method public androidx.compose.ui.Modifier getModifier();
    method public androidx.compose.material3.FloatingToolbarScrollBehavior? getScrollBehavior();
    method public androidx.compose.ui.graphics.Shape getShape();
    method public boolean isExpanded();
    property public androidx.compose.animation.core.FiniteAnimationSpec<java.lang.Float> animationSpec;
    property public androidx.compose.ui.unit.Dp collapsedShadowElevation;
    property public androidx.compose.material3.FloatingToolbarColors colors;
    property public kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> content;
    property public androidx.compose.foundation.layout.PaddingValues contentPadding;
    property public androidx.compose.ui.unit.Dp expandedShadowElevation;
    property public kotlin.jvm.functions.Function0<kotlin.Unit> floatingActionButton;
    property public androidx.compose.material3.FloatingToolbarVerticalFabPosition floatingActionButtonPosition;
    property public boolean isExpanded;
    property public androidx.compose.ui.Modifier modifier;
    property public androidx.compose.material3.FloatingToolbarScrollBehavior? scrollBehavior;
    property public androidx.compose.ui.graphics.Shape shape;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public final class WavyProgressIndicatorDefaults {
    method @BytecodeOnly public float getCircularContainerSize-D9Ej5fM();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.drawscope.Stroke getCircularIndicatorStroke();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.drawscope.Stroke getCircularIndicatorStroke(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getCircularIndicatorTrackGapSize-D9Ej5fM();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.drawscope.Stroke getCircularTrackStroke();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.drawscope.Stroke getCircularTrackStroke(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getCircularWavelength-D9Ej5fM();
    method public kotlin.jvm.functions.Function1<java.lang.Float,java.lang.Float> getIndicatorAmplitude();
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getIndicatorColor(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getLinearContainerHeight-D9Ej5fM();
    method @BytecodeOnly public float getLinearContainerWidth-D9Ej5fM();
    method @BytecodeOnly public float getLinearDeterminateWavelength-D9Ej5fM();
    method @BytecodeOnly public float getLinearIndeterminateWavelength-D9Ej5fM();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.drawscope.Stroke getLinearIndicatorStroke();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.drawscope.Stroke getLinearIndicatorStroke(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getLinearIndicatorTrackGapSize-D9Ej5fM();
    method @BytecodeOnly public float getLinearTrackStopIndicatorSize-D9Ej5fM();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.drawscope.Stroke getLinearTrackStroke();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.drawscope.Stroke getLinearTrackStroke(androidx.compose.runtime.Composer?, int);
    method public androidx.compose.animation.core.AnimationSpec<java.lang.Float> getProgressAnimationSpec();
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getTrackColor(androidx.compose.runtime.Composer?, int);
    property public androidx.compose.ui.unit.Dp CircularContainerSize;
    property public androidx.compose.ui.unit.Dp CircularIndicatorTrackGapSize;
    property public androidx.compose.ui.unit.Dp CircularWavelength;
    property public androidx.compose.ui.unit.Dp LinearContainerHeight;
    property public androidx.compose.ui.unit.Dp LinearContainerWidth;
    property public androidx.compose.ui.unit.Dp LinearDeterminateWavelength;
    property public androidx.compose.ui.unit.Dp LinearIndeterminateWavelength;
    property public androidx.compose.ui.unit.Dp LinearIndicatorTrackGapSize;
    property public androidx.compose.ui.unit.Dp LinearTrackStopIndicatorSize;
    property public androidx.compose.animation.core.AnimationSpec<java.lang.Float> ProgressAnimationSpec;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.drawscope.Stroke circularIndicatorStroke;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.drawscope.Stroke circularTrackStroke;
    property public kotlin.jvm.functions.Function1<java.lang.Float,java.lang.Float> indicatorAmplitude;
    property public androidx.compose.ui.graphics.Color indicatorColor;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.drawscope.Stroke linearIndicatorStroke;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.drawscope.Stroke linearTrackStroke;
    property public androidx.compose.ui.graphics.Color trackColor;
    field public static final androidx.compose.material3.WavyProgressIndicatorDefaults INSTANCE;
  }

  public final class WavyProgressIndicatorKt {
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void CircularWavyProgressIndicator(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color color, optional androidx.compose.ui.graphics.Color trackColor, optional androidx.compose.ui.graphics.drawscope.Stroke stroke, optional androidx.compose.ui.graphics.drawscope.Stroke trackStroke, optional androidx.compose.ui.unit.Dp gapSize, optional @FloatRange(from=0.0, to=1.0) float amplitude, optional androidx.compose.ui.unit.Dp wavelength, optional androidx.compose.ui.unit.Dp waveSpeed);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void CircularWavyProgressIndicator(kotlin.jvm.functions.Function0<java.lang.Float> progress, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color color, optional androidx.compose.ui.graphics.Color trackColor, optional androidx.compose.ui.graphics.drawscope.Stroke stroke, optional androidx.compose.ui.graphics.drawscope.Stroke trackStroke, optional androidx.compose.ui.unit.Dp gapSize, optional kotlin.jvm.functions.Function1<java.lang.Float,java.lang.Float> amplitude, optional androidx.compose.ui.unit.Dp wavelength, optional androidx.compose.ui.unit.Dp waveSpeed);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void CircularWavyProgressIndicator-L8eD4gc(kotlin.jvm.functions.Function0<java.lang.Float!>, androidx.compose.ui.Modifier?, long, long, androidx.compose.ui.graphics.drawscope.Stroke?, androidx.compose.ui.graphics.drawscope.Stroke?, float, kotlin.jvm.functions.Function1<? super java.lang.Float!,java.lang.Float!>?, float, float, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void CircularWavyProgressIndicator-hvuEXSk(androidx.compose.ui.Modifier?, long, long, androidx.compose.ui.graphics.drawscope.Stroke?, androidx.compose.ui.graphics.drawscope.Stroke?, float, @FloatRange(from=0.0, to=1.0) float, float, float, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void LinearWavyProgressIndicator(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color color, optional androidx.compose.ui.graphics.Color trackColor, optional androidx.compose.ui.graphics.drawscope.Stroke stroke, optional androidx.compose.ui.graphics.drawscope.Stroke trackStroke, optional androidx.compose.ui.unit.Dp gapSize, optional @FloatRange(from=0.0, to=1.0) float amplitude, optional androidx.compose.ui.unit.Dp wavelength, optional androidx.compose.ui.unit.Dp waveSpeed);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void LinearWavyProgressIndicator(kotlin.jvm.functions.Function0<java.lang.Float> progress, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color color, optional androidx.compose.ui.graphics.Color trackColor, optional androidx.compose.ui.graphics.drawscope.Stroke stroke, optional androidx.compose.ui.graphics.drawscope.Stroke trackStroke, optional androidx.compose.ui.unit.Dp gapSize, optional androidx.compose.ui.unit.Dp stopSize, optional kotlin.jvm.functions.Function1<java.lang.Float,java.lang.Float> amplitude, optional androidx.compose.ui.unit.Dp wavelength, optional androidx.compose.ui.unit.Dp waveSpeed);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void LinearWavyProgressIndicator-1YwxWKA(kotlin.jvm.functions.Function0<java.lang.Float!>, androidx.compose.ui.Modifier?, long, long, androidx.compose.ui.graphics.drawscope.Stroke?, androidx.compose.ui.graphics.drawscope.Stroke?, float, float, kotlin.jvm.functions.Function1<? super java.lang.Float!,java.lang.Float!>?, float, float, androidx.compose.runtime.Composer?, int, int, int);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void LinearWavyProgressIndicator-hvuEXSk(androidx.compose.ui.Modifier?, long, long, androidx.compose.ui.graphics.drawscope.Stroke?, androidx.compose.ui.graphics.drawscope.Stroke?, float, @FloatRange(from=0.0, to=1.0) float, float, float, androidx.compose.runtime.Composer?, int, int);
  }

  @androidx.compose.runtime.Immutable public final class WideNavigationRailColors {
    ctor @KotlinOnly @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public WideNavigationRailColors(androidx.compose.ui.graphics.Color containerColor, androidx.compose.ui.graphics.Color contentColor, androidx.compose.ui.graphics.Color modalContainerColor, androidx.compose.ui.graphics.Color modalScrimColor);
    ctor @KotlinOnly public WideNavigationRailColors(androidx.compose.ui.graphics.Color containerColor, androidx.compose.ui.graphics.Color contentColor, androidx.compose.ui.graphics.Color modalContainerColor, androidx.compose.ui.graphics.Color modalScrimColor, androidx.compose.ui.graphics.Color modalContentColor);
    ctor @BytecodeOnly @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public WideNavigationRailColors(long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    ctor @BytecodeOnly public WideNavigationRailColors(long, long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method @KotlinOnly public androidx.compose.material3.WideNavigationRailColors copy(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color modalContainerColor, optional androidx.compose.ui.graphics.Color modalScrimColor, optional androidx.compose.ui.graphics.Color modalContentColor);
    method @BytecodeOnly @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.material3.WideNavigationRailColors! copy-jRlVdoo(long, long, long, long);
    method @BytecodeOnly public androidx.compose.material3.WideNavigationRailColors copy-t635Npw(long, long, long, long, long);
    method @BytecodeOnly public long getContainerColor-0d7_KjU();
    method @BytecodeOnly public long getContentColor-0d7_KjU();
    method @BytecodeOnly public long getModalContainerColor-0d7_KjU();
    method @BytecodeOnly public long getModalContentColor-0d7_KjU();
    method @BytecodeOnly public long getModalScrimColor-0d7_KjU();
    property public androidx.compose.ui.graphics.Color containerColor;
    property public androidx.compose.ui.graphics.Color contentColor;
    property public androidx.compose.ui.graphics.Color modalContainerColor;
    property public androidx.compose.ui.graphics.Color modalContentColor;
    property public androidx.compose.ui.graphics.Color modalScrimColor;
  }

  public final class WideNavigationRailDefaults {
    method @androidx.compose.runtime.Composable public androidx.compose.material3.WideNavigationRailColors colors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.WideNavigationRailColors colors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.WideNavigationRailColors colors(optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color contentColor, optional androidx.compose.ui.graphics.Color modalContainerColor, optional androidx.compose.ui.graphics.Color modalScrimColor, optional androidx.compose.ui.graphics.Color modalContentColor);
    method @BytecodeOnly @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.material3.WideNavigationRailColors! colors-ro_MJ88(long, long, long, long, androidx.compose.runtime.Composer!, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.WideNavigationRailColors colors-zjMxDiM(long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method public androidx.compose.foundation.layout.Arrangement.Vertical getArrangement();
    method @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getContainerShape();
    method @BytecodeOnly @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getContainerShape(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getModalCollapsedShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getModalCollapsedShape(androidx.compose.runtime.Composer?, int);
    method @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getModalContainerShape();
    method @BytecodeOnly @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getModalContainerShape(androidx.compose.runtime.Composer?, int);
    method public androidx.compose.material3.ModalWideNavigationRailProperties getModalExpandedProperties();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getModalExpandedShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getModalExpandedShape(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape getShape(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.WindowInsets getWindowInsets();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.WindowInsets getWindowInsets(androidx.compose.runtime.Composer?, int);
    property public androidx.compose.material3.ModalWideNavigationRailProperties ModalExpandedProperties;
    property public androidx.compose.foundation.layout.Arrangement.Vertical arrangement;
    property @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape containerShape;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape modalCollapsedShape;
    property @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape modalContainerShape;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape modalExpandedShape;
    property @androidx.compose.runtime.Composable public androidx.compose.ui.graphics.Shape shape;
    property @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.WindowInsets windowInsets;
    field public static final androidx.compose.material3.WideNavigationRailDefaults INSTANCE;
  }

  public final class WideNavigationRailItemDefaults {
    method @androidx.compose.runtime.Composable public androidx.compose.material3.NavigationItemColors colors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.NavigationItemColors colors(androidx.compose.runtime.Composer?, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public androidx.compose.material3.NavigationItemColors colors(optional androidx.compose.ui.graphics.Color selectedIconColor, optional androidx.compose.ui.graphics.Color selectedTextColor, optional androidx.compose.ui.graphics.Color selectedIndicatorColor, optional androidx.compose.ui.graphics.Color unselectedIconColor, optional androidx.compose.ui.graphics.Color unselectedTextColor, optional androidx.compose.ui.graphics.Color disabledIconColor, optional androidx.compose.ui.graphics.Color disabledTextColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.material3.NavigationItemColors colors-69fazGs(long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly public androidx.compose.material3.NavigationItemIconPosition iconPositionFor(boolean railExpanded);
    method @BytecodeOnly public int iconPositionFor-s8pcRp0(boolean);
    field public static final androidx.compose.material3.WideNavigationRailItemDefaults INSTANCE;
  }

  public final class WideNavigationRailKt {
    method @KotlinOnly @androidx.compose.runtime.Composable public static void ModalWideNavigationRail(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.material3.WideNavigationRailState state, optional boolean hideOnCollapse, optional androidx.compose.ui.graphics.Shape collapsedShape, optional androidx.compose.ui.graphics.Shape expandedShape, optional androidx.compose.material3.WideNavigationRailColors colors, optional kotlin.jvm.functions.Function0<kotlin.Unit>? header, optional androidx.compose.ui.unit.Dp expandedHeaderTopPadding, optional androidx.compose.foundation.layout.WindowInsets windowInsets, optional androidx.compose.foundation.layout.Arrangement.Vertical arrangement, optional androidx.compose.material3.ModalWideNavigationRailProperties expandedProperties, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void ModalWideNavigationRail-k3FuEkE(androidx.compose.ui.Modifier?, androidx.compose.material3.WideNavigationRailState?, boolean, androidx.compose.ui.graphics.Shape?, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.WideNavigationRailColors?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, float, androidx.compose.foundation.layout.WindowInsets?, androidx.compose.foundation.layout.Arrangement.Vertical?, androidx.compose.material3.ModalWideNavigationRailProperties?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @androidx.compose.runtime.Composable public static void WideNavigationRail(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.material3.WideNavigationRailState state, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.material3.WideNavigationRailColors colors, optional kotlin.jvm.functions.Function0<kotlin.Unit>? header, optional androidx.compose.foundation.layout.WindowInsets windowInsets, optional androidx.compose.foundation.layout.Arrangement.Vertical arrangement, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void WideNavigationRail(androidx.compose.ui.Modifier?, androidx.compose.material3.WideNavigationRailState?, androidx.compose.ui.graphics.Shape?, androidx.compose.material3.WideNavigationRailColors?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.foundation.layout.WindowInsets?, androidx.compose.foundation.layout.Arrangement.Vertical?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public static void WideNavigationRailItem(boolean selected, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, kotlin.jvm.functions.Function0<kotlin.Unit> icon, kotlin.jvm.functions.Function0<kotlin.Unit>? label, boolean railExpanded, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.compose.material3.NavigationItemIconPosition iconPosition, optional androidx.compose.material3.NavigationItemColors colors, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource);
    method @BytecodeOnly @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public static void WideNavigationRailItem-pli-t6k(boolean, kotlin.jvm.functions.Function0!, kotlin.jvm.functions.Function2!, kotlin.jvm.functions.Function2!, androidx.compose.ui.Modifier!, boolean, boolean, int, androidx.compose.material3.NavigationItemColors!, androidx.compose.foundation.interaction.MutableInteractionSource!, androidx.compose.runtime.Composer!, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void WideNavigationRailItem-pli-t6k(boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, boolean, androidx.compose.ui.Modifier?, boolean, int, androidx.compose.material3.NavigationItemColors?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.runtime.Composer?, int, int);
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.material3.ModalWideNavigationRailOverride> getLocalModalWideNavigationRailOverride();
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.material3.WideNavigationRailOverride> getLocalWideNavigationRailOverride();
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.material3.ModalWideNavigationRailOverride> LocalModalWideNavigationRailOverride;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.material3.WideNavigationRailOverride> LocalWideNavigationRailOverride;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public interface WideNavigationRailOverride {
    method @androidx.compose.runtime.Composable public void WideNavigationRail(androidx.compose.material3.WideNavigationRailOverrideScope);
    method @BytecodeOnly @androidx.compose.runtime.Composable public void WideNavigationRail(androidx.compose.material3.WideNavigationRailOverrideScope, androidx.compose.runtime.Composer?, int);
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ComponentOverrideApi public final class WideNavigationRailOverrideScope {
    method public androidx.compose.foundation.layout.Arrangement.Vertical getArrangement();
    method public androidx.compose.material3.WideNavigationRailColors getColors();
    method public kotlin.jvm.functions.Function0<kotlin.Unit> getContent();
    method public kotlin.jvm.functions.Function0<kotlin.Unit>? getHeader();
    method public androidx.compose.ui.Modifier getModifier();
    method public androidx.compose.ui.graphics.Shape getShape();
    method public androidx.compose.material3.WideNavigationRailState getState();
    method public androidx.compose.foundation.layout.WindowInsets getWindowInsets();
    property public androidx.compose.foundation.layout.Arrangement.Vertical arrangement;
    property public androidx.compose.material3.WideNavigationRailColors colors;
    property public kotlin.jvm.functions.Function0<kotlin.Unit> content;
    property public kotlin.jvm.functions.Function0<kotlin.Unit>? header;
    property public androidx.compose.ui.Modifier modifier;
    property public androidx.compose.ui.graphics.Shape shape;
    property public androidx.compose.material3.WideNavigationRailState state;
    property public androidx.compose.foundation.layout.WindowInsets windowInsets;
  }

  public interface WideNavigationRailState {
    method public suspend Object? collapse(kotlin.coroutines.Continuation<? super kotlin.Unit>);
    method public suspend Object? expand(kotlin.coroutines.Continuation<? super kotlin.Unit>);
    method public androidx.compose.material3.WideNavigationRailValue getCurrentValue();
    method public androidx.compose.material3.WideNavigationRailValue getTargetValue();
    method public boolean isAnimating();
    method public suspend Object? snapTo(androidx.compose.material3.WideNavigationRailValue targetValue, kotlin.coroutines.Continuation<? super kotlin.Unit>);
    method public suspend Object? toggle(kotlin.coroutines.Continuation<? super kotlin.Unit>);
    property public abstract androidx.compose.material3.WideNavigationRailValue currentValue;
    property public abstract boolean isAnimating;
    property public abstract androidx.compose.material3.WideNavigationRailValue targetValue;
  }

  public final class WideNavigationRailStateKt {
    method @androidx.compose.runtime.Composable public static androidx.compose.material3.WideNavigationRailState rememberWideNavigationRailState(optional androidx.compose.material3.WideNavigationRailValue initialValue);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static androidx.compose.material3.WideNavigationRailState rememberWideNavigationRailState(androidx.compose.material3.WideNavigationRailValue?, androidx.compose.runtime.Composer?, int, int);
  }

  public enum WideNavigationRailValue {
    enum_constant public static final androidx.compose.material3.WideNavigationRailValue Collapsed;
    enum_constant public static final androidx.compose.material3.WideNavigationRailValue Expanded;
  }

  public typealias CalendarLocale = java.util.Locale;

  @Deprecated public typealias MenuAnchorType = androidx.compose.material3.ExposedDropdownMenuAnchorType;

}

package androidx.compose.material3.carousel {

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api public final class CarouselDefaults {
    method @BytecodeOnly public float getMaxSmallItemSize-D9Ej5fM();
    method @BytecodeOnly public float getMinSmallItemSize-D9Ej5fM();
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.gestures.TargetedFlingBehavior multiBrowseFlingBehavior(androidx.compose.material3.carousel.CarouselState state, optional androidx.compose.animation.core.DecayAnimationSpec<java.lang.Float> decayAnimationSpec, optional androidx.compose.animation.core.AnimationSpec<java.lang.Float> snapAnimationSpec);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.gestures.TargetedFlingBehavior multiBrowseFlingBehavior(androidx.compose.material3.carousel.CarouselState, androidx.compose.animation.core.DecayAnimationSpec<java.lang.Float!>?, androidx.compose.animation.core.AnimationSpec<java.lang.Float!>?, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.gestures.TargetedFlingBehavior noSnapFlingBehavior();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.gestures.TargetedFlingBehavior noSnapFlingBehavior(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.gestures.TargetedFlingBehavior singleAdvanceFlingBehavior(androidx.compose.material3.carousel.CarouselState state, optional androidx.compose.animation.core.AnimationSpec<java.lang.Float> snapAnimationSpec);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.gestures.TargetedFlingBehavior singleAdvanceFlingBehavior(androidx.compose.material3.carousel.CarouselState, androidx.compose.animation.core.AnimationSpec<java.lang.Float!>?, androidx.compose.runtime.Composer?, int, int);
    property public androidx.compose.ui.unit.Dp MaxSmallItemSize;
    property public androidx.compose.ui.unit.Dp MinSmallItemSize;
    field public static final androidx.compose.material3.carousel.CarouselDefaults INSTANCE;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api public sealed interface CarouselItemDrawInfo {
    method public androidx.compose.ui.geometry.Rect getMaskRect();
    method public float getMaxSize();
    method public float getMinSize();
    method public float getSize();
    property public abstract androidx.compose.ui.geometry.Rect maskRect;
    property public abstract float maxSize;
    property public abstract float minSize;
    property public abstract float size;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api public sealed interface CarouselItemScope {
    method public androidx.compose.material3.carousel.CarouselItemDrawInfo getCarouselItemDrawInfo();
    method @androidx.compose.runtime.Composable public androidx.compose.ui.Modifier maskBorder(androidx.compose.ui.Modifier, androidx.compose.foundation.BorderStroke border, androidx.compose.ui.graphics.Shape shape);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.Modifier maskBorder(androidx.compose.ui.Modifier, androidx.compose.foundation.BorderStroke, androidx.compose.ui.graphics.Shape, androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.ui.Modifier maskClip(androidx.compose.ui.Modifier, androidx.compose.ui.graphics.Shape shape);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.ui.Modifier maskClip(androidx.compose.ui.Modifier, androidx.compose.ui.graphics.Shape, androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.GenericShape rememberMaskShape(androidx.compose.ui.graphics.Shape shape);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.foundation.shape.GenericShape rememberMaskShape(androidx.compose.ui.graphics.Shape, androidx.compose.runtime.Composer?, int);
    property public abstract androidx.compose.material3.carousel.CarouselItemDrawInfo carouselItemDrawInfo;
  }

  public final class CarouselKt {
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void HorizontalCenteredHeroCarousel(androidx.compose.material3.carousel.CarouselState state, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.unit.Dp maxItemWidth, optional androidx.compose.ui.unit.Dp itemSpacing, optional androidx.compose.foundation.gestures.TargetedFlingBehavior flingBehavior, optional boolean userScrollEnabled, optional androidx.compose.ui.unit.Dp minSmallItemWidth, optional androidx.compose.ui.unit.Dp maxSmallItemWidth, optional androidx.compose.foundation.layout.PaddingValues contentPadding, kotlin.jvm.functions.Function2<androidx.compose.material3.carousel.CarouselItemScope,java.lang.Integer,kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void HorizontalCenteredHeroCarousel-p2lB3Bg(androidx.compose.material3.carousel.CarouselState, androidx.compose.ui.Modifier?, float, float, androidx.compose.foundation.gestures.TargetedFlingBehavior?, boolean, float, float, androidx.compose.foundation.layout.PaddingValues?, kotlin.jvm.functions.Function4<? super androidx.compose.material3.carousel.CarouselItemScope!,? super java.lang.Integer!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void HorizontalMultiBrowseCarousel(androidx.compose.material3.carousel.CarouselState state, androidx.compose.ui.unit.Dp preferredItemWidth, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.unit.Dp itemSpacing, optional androidx.compose.foundation.gestures.TargetedFlingBehavior flingBehavior, optional boolean userScrollEnabled, optional androidx.compose.ui.unit.Dp minSmallItemWidth, optional androidx.compose.ui.unit.Dp maxSmallItemWidth, optional androidx.compose.foundation.layout.PaddingValues contentPadding, kotlin.jvm.functions.Function2<androidx.compose.material3.carousel.CarouselItemScope,java.lang.Integer,kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void HorizontalMultiBrowseCarousel-3tcCNu0(androidx.compose.material3.carousel.CarouselState, float, androidx.compose.ui.Modifier?, float, androidx.compose.foundation.gestures.TargetedFlingBehavior?, boolean, float, float, androidx.compose.foundation.layout.PaddingValues?, kotlin.jvm.functions.Function4<? super androidx.compose.material3.carousel.CarouselItemScope!,? super java.lang.Integer!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void HorizontalMultiBrowseCarousel-zCIJ0Nk(androidx.compose.material3.carousel.CarouselState!, float, androidx.compose.ui.Modifier!, float, androidx.compose.foundation.gestures.TargetedFlingBehavior!, float, float, androidx.compose.foundation.layout.PaddingValues!, kotlin.jvm.functions.Function4!, androidx.compose.runtime.Composer!, int, int);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void HorizontalUncontainedCarousel(androidx.compose.material3.carousel.CarouselState state, androidx.compose.ui.unit.Dp itemWidth, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.unit.Dp itemSpacing, optional androidx.compose.foundation.gestures.TargetedFlingBehavior flingBehavior, optional boolean userScrollEnabled, optional androidx.compose.foundation.layout.PaddingValues contentPadding, kotlin.jvm.functions.Function2<androidx.compose.material3.carousel.CarouselItemScope,java.lang.Integer,kotlin.Unit> content);
    method @BytecodeOnly @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void HorizontalUncontainedCarousel-9QcgTRs(androidx.compose.material3.carousel.CarouselState!, float, androidx.compose.ui.Modifier!, float, androidx.compose.foundation.gestures.TargetedFlingBehavior!, androidx.compose.foundation.layout.PaddingValues!, kotlin.jvm.functions.Function4!, androidx.compose.runtime.Composer!, int, int);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static void HorizontalUncontainedCarousel-VUP9l70(androidx.compose.material3.carousel.CarouselState, float, androidx.compose.ui.Modifier?, float, androidx.compose.foundation.gestures.TargetedFlingBehavior?, boolean, androidx.compose.foundation.layout.PaddingValues?, kotlin.jvm.functions.Function4<? super androidx.compose.material3.carousel.CarouselItemScope!,? super java.lang.Integer!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api public final class CarouselState implements androidx.compose.foundation.gestures.ScrollableState {
    ctor public CarouselState(optional int currentItem, optional @FloatRange(from=-0.5, to=0.5) float currentItemOffsetFraction, kotlin.jvm.functions.Function0<java.lang.Integer> itemCount);
    method public suspend Object? animateScrollToItem(int item, optional androidx.compose.animation.core.AnimationSpec<java.lang.Float> animationSpec, kotlin.coroutines.Continuation<? super kotlin.Unit>);
    method public float dispatchRawDelta(float delta);
    method public int getCurrentItem();
    method public boolean isScrollInProgress();
    method public suspend Object? scroll(androidx.compose.foundation.MutatePriority scrollPriority, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.gestures.ScrollScope,? super kotlin.coroutines.Continuation<? super kotlin.Unit>,? extends java.lang.Object?> block, kotlin.coroutines.Continuation<? super kotlin.Unit>);
    method public suspend Object? scrollToItem(int item, kotlin.coroutines.Continuation<? super kotlin.Unit>);
    property public int currentItem;
    property public boolean isScrollInProgress;
    field public static final androidx.compose.material3.carousel.CarouselState.Companion Companion;
  }

  @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api public static final class CarouselState.Companion {
    method public androidx.compose.runtime.saveable.Saver<androidx.compose.material3.carousel.CarouselState,? extends java.lang.Object?> getSaver();
    property public androidx.compose.runtime.saveable.Saver<androidx.compose.material3.carousel.CarouselState,? extends java.lang.Object?> Saver;
  }

  public final class CarouselStateKt {
    method @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static androidx.compose.material3.carousel.CarouselState rememberCarouselState(optional int initialItem, kotlin.jvm.functions.Function0<java.lang.Integer> itemCount);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public static androidx.compose.material3.carousel.CarouselState rememberCarouselState(int, kotlin.jvm.functions.Function0<java.lang.Integer!>, androidx.compose.runtime.Composer?, int, int);
  }

}

package androidx.compose.material3.pulltorefresh {

  public final class PullToRefreshDefaults {
    method @KotlinOnly @androidx.compose.runtime.Composable public void Indicator(androidx.compose.material3.pulltorefresh.PullToRefreshState state, boolean isRefreshing, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color color, optional androidx.compose.ui.unit.Dp maxDistance);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void Indicator-2poqoh4(androidx.compose.material3.pulltorefresh.PullToRefreshState, boolean, androidx.compose.ui.Modifier?, long, long, float, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @androidx.compose.runtime.Composable public void IndicatorBox(androidx.compose.material3.pulltorefresh.PullToRefreshState state, boolean isRefreshing, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.unit.Dp maxDistance, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.unit.Dp elevation, kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.BoxScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public void IndicatorBox-1CPYgEU(androidx.compose.material3.pulltorefresh.PullToRefreshState, boolean, androidx.compose.ui.Modifier?, float, androidx.compose.ui.graphics.Shape?, long, float, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @KotlinOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public void LoadingIndicator(androidx.compose.material3.pulltorefresh.PullToRefreshState state, boolean isRefreshing, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.graphics.Color containerColor, optional androidx.compose.ui.graphics.Color color, optional androidx.compose.ui.unit.Dp elevation, optional androidx.compose.ui.unit.Dp maxDistance);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void LoadingIndicator-4eDdRP8(androidx.compose.material3.pulltorefresh.PullToRefreshState, boolean, androidx.compose.ui.Modifier?, long, long, float, float, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api @androidx.compose.runtime.Composable public long getContainerColor(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getElevation-D9Ej5fM();
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getIndicatorColor(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public long getIndicatorContainerColor(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getIndicatorMaxDistance-D9Ej5fM();
    method public androidx.compose.ui.graphics.Shape getIndicatorShape();
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public long getLoadingIndicatorColor(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi @androidx.compose.runtime.Composable public long getLoadingIndicatorContainerColor(androidx.compose.runtime.Composer?, int);
    method @BytecodeOnly public float getLoadingIndicatorElevation-D9Ej5fM();
    method @BytecodeOnly public float getPositionalThreshold-D9Ej5fM();
    method @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api public androidx.compose.ui.graphics.Shape getShape();
    property public androidx.compose.ui.unit.Dp Elevation;
    property public androidx.compose.ui.unit.Dp IndicatorMaxDistance;
    property public androidx.compose.ui.unit.Dp LoadingIndicatorElevation;
    property public androidx.compose.ui.unit.Dp PositionalThreshold;
    property @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api public androidx.compose.ui.graphics.Color containerColor;
    property public androidx.compose.ui.graphics.Color indicatorColor;
    property public androidx.compose.ui.graphics.Color indicatorContainerColor;
    property public androidx.compose.ui.graphics.Shape indicatorShape;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.graphics.Color loadingIndicatorColor;
    property @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3ExpressiveApi public androidx.compose.ui.graphics.Color loadingIndicatorContainerColor;
    property @Deprecated @SuppressCompatibility @androidx.compose.material3.ExperimentalMaterial3Api public androidx.compose.ui.graphics.Shape shape;
    field public static final androidx.compose.material3.pulltorefresh.PullToRefreshDefaults INSTANCE;
  }

  public final class PullToRefreshKt {
    method @androidx.compose.runtime.Composable public static void PullToRefreshBox(boolean isRefreshing, kotlin.jvm.functions.Function0<kotlin.Unit> onRefresh, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.material3.pulltorefresh.PullToRefreshState state, optional androidx.compose.ui.Alignment contentAlignment, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> indicator, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void PullToRefreshBox(boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, androidx.compose.material3.pulltorefresh.PullToRefreshState?, androidx.compose.ui.Alignment?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method public static androidx.compose.material3.pulltorefresh.PullToRefreshState PullToRefreshState();
    method @KotlinOnly public static androidx.compose.ui.Modifier pullToRefresh(androidx.compose.ui.Modifier, boolean isRefreshing, androidx.compose.material3.pulltorefresh.PullToRefreshState state, optional boolean enabled, optional androidx.compose.ui.unit.Dp threshold, kotlin.jvm.functions.Function0<kotlin.Unit> onRefresh);
    method @BytecodeOnly public static androidx.compose.ui.Modifier pullToRefresh-Z4HSEVQ(androidx.compose.ui.Modifier, boolean, androidx.compose.material3.pulltorefresh.PullToRefreshState, boolean, float, kotlin.jvm.functions.Function0<kotlin.Unit!>);
    method @androidx.compose.runtime.Composable public static androidx.compose.material3.pulltorefresh.PullToRefreshState rememberPullToRefreshState();
    method @BytecodeOnly @androidx.compose.runtime.Composable public static androidx.compose.material3.pulltorefresh.PullToRefreshState rememberPullToRefreshState(androidx.compose.runtime.Composer?, int);
  }

  @androidx.compose.runtime.Stable public interface PullToRefreshState {
    method public suspend Object? animateToHidden(kotlin.coroutines.Continuation<? super kotlin.Unit>);
    method public suspend Object? animateToThreshold(kotlin.coroutines.Continuation<? super kotlin.Unit>);
    method @FloatRange(from=0.0) public float getDistanceFraction();
    method public boolean isAnimating();
    method public suspend Object? snapTo(@FloatRange(from=0.0) float targetValue, kotlin.coroutines.Continuation<? super kotlin.Unit>);
    property @FloatRange(from=0.0) public abstract float distanceFraction;
    property public abstract boolean isAnimating;
  }

}

