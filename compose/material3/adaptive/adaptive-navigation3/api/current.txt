// Signature format: 4.0
package androidx.compose.material3.adaptive.navigation3 {

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public final class ListDetailSceneStrategy<T> implements androidx.navigation3.ui.SceneStrategy<T> {
    ctor public ListDetailSceneStrategy(String backNavigationBehavior, androidx.compose.material3.adaptive.layout.PaneScaffoldDirective directive);
    method @androidx.compose.runtime.Composable public androidx.navigation3.ui.Scene<T>? calculateScene(java.util.List<? extends androidx.navigation3.runtime.NavEntry<T>> entries, kotlin.jvm.functions.Function1<? super java.lang.Integer,kotlin.Unit> onBack);
    method public String getBackNavigationBehavior();
    method public androidx.compose.material3.adaptive.layout.PaneScaffoldDirective getDirective();
    property public String backNavigationBehavior;
    property public androidx.compose.material3.adaptive.layout.PaneScaffoldDirective directive;
    field public static final androidx.compose.material3.adaptive.navigation3.ListDetailSceneStrategy.Companion Companion;
  }

  public static final class ListDetailSceneStrategy.Companion {
    method public java.util.Map<java.lang.String,java.lang.Object> detailPane(optional Object sceneKey);
    method public java.util.Map<java.lang.String,java.lang.Object> extraPane(optional Object sceneKey);
    method public java.util.Map<java.lang.String,java.lang.Object> listPane(optional Object sceneKey, optional kotlin.jvm.functions.Function1<? super androidx.compose.material3.adaptive.layout.ThreePaneScaffoldScope,kotlin.Unit> detailPlaceholder);
  }

  public final class ListDetailSceneStrategy_androidKt {
    method @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Composable public static <T> androidx.compose.material3.adaptive.navigation3.ListDetailSceneStrategy<T> rememberListDetailSceneStrategy(optional String backNavigationBehavior, optional androidx.compose.material3.adaptive.layout.PaneScaffoldDirective directive);
  }

}

