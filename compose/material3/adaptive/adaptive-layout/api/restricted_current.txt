// Signature format: 4.0
package androidx.compose.material3.adaptive.layout {

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Stable public sealed interface AdaptStrategy {
    method @Deprecated public default androidx.compose.material3.adaptive.layout.PaneAdaptedValue adapt();
    field public static final androidx.compose.material3.adaptive.layout.AdaptStrategy.Companion Companion;
  }

  public static final class AdaptStrategy.Companion {
    method public androidx.compose.material3.adaptive.layout.AdaptStrategy getHide();
    property public androidx.compose.material3.adaptive.layout.AdaptStrategy Hide;
  }

  @androidx.compose.runtime.Immutable public static final class AdaptStrategy.Levitate implements androidx.compose.material3.adaptive.layout.AdaptStrategy {
    ctor public AdaptStrategy.Levitate();
    ctor public AdaptStrategy.Levitate(optional String strategy, optional androidx.compose.ui.Alignment alignment);
    method public androidx.compose.ui.Alignment getAlignment();
    method public String getStrategy();
    property public androidx.compose.ui.Alignment alignment;
    property public String strategy;
  }

  @kotlin.jvm.JvmInline public static final value class AdaptStrategy.Levitate.Strategy {
    field public static final androidx.compose.material3.adaptive.layout.AdaptStrategy.Levitate.Strategy.Companion Companion;
  }

  public static final class AdaptStrategy.Levitate.Strategy.Companion {
    method public String getAlways();
    method public String getSinglePaneOnly();
    property public String Always;
    property public String SinglePaneOnly;
  }

  @androidx.compose.runtime.Immutable public static final class AdaptStrategy.Reflow implements androidx.compose.material3.adaptive.layout.AdaptStrategy {
    ctor public AdaptStrategy.Reflow(Object targetPane);
    method public Object getTargetPane();
    property public Object targetPane;
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveComponentOverrideApi public interface AnimatedPaneOverride {
    method @androidx.compose.runtime.Composable public <S, T extends androidx.compose.material3.adaptive.layout.PaneScaffoldValue<S>> void AnimatedPane(androidx.compose.material3.adaptive.layout.AnimatedPaneOverrideScope<S,T>);
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveComponentOverrideApi public final class AnimatedPaneOverrideScope<S, T extends androidx.compose.material3.adaptive.layout.PaneScaffoldValue<S>> {
    method public androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.unit.IntRect> getBoundsAnimationSpec();
    method public kotlin.jvm.functions.Function1<androidx.compose.material3.adaptive.layout.AnimatedPaneScope,kotlin.Unit> getContent();
    method public androidx.compose.animation.EnterTransition getEnterTransition();
    method public androidx.compose.animation.ExitTransition getExitTransition();
    method public androidx.compose.ui.Modifier getModifier();
    method public androidx.compose.material3.adaptive.layout.ExtendedPaneScaffoldPaneScope<S,T> getScope();
    property public androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.unit.IntRect> boundsAnimationSpec;
    property public kotlin.jvm.functions.Function1<androidx.compose.material3.adaptive.layout.AnimatedPaneScope,kotlin.Unit> content;
    property public androidx.compose.animation.EnterTransition enterTransition;
    property public androidx.compose.animation.ExitTransition exitTransition;
    property public androidx.compose.ui.Modifier modifier;
    property public androidx.compose.material3.adaptive.layout.ExtendedPaneScaffoldPaneScope<S,T> scope;
  }

  public sealed interface AnimatedPaneScope extends androidx.compose.animation.AnimatedVisibilityScope {
    field public static final androidx.compose.material3.adaptive.layout.AnimatedPaneScope.Companion Companion;
  }

  public static final class AnimatedPaneScope.Companion {
    method @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public androidx.compose.material3.adaptive.layout.AnimatedPaneScope create(androidx.compose.animation.AnimatedVisibilityScope animatedVisibilityScope);
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public sealed interface ExtendedPaneScaffoldPaneScope<Role, ScaffoldValue extends androidx.compose.material3.adaptive.layout.PaneScaffoldValue<Role>> extends androidx.compose.material3.adaptive.layout.ExtendedPaneScaffoldScope<Role,ScaffoldValue> androidx.compose.material3.adaptive.layout.PaneScaffoldPaneScope<Role> {
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public sealed interface ExtendedPaneScaffoldScope<Role, ScaffoldValue extends androidx.compose.material3.adaptive.layout.PaneScaffoldValue<Role>> extends androidx.compose.material3.adaptive.layout.PaneScaffoldScope androidx.compose.ui.layout.LookaheadScope androidx.compose.material3.adaptive.layout.PaneScaffoldTransitionScope<Role,ScaffoldValue> {
  }

  @androidx.compose.runtime.Immutable @kotlin.jvm.JvmInline public final value class HingePolicy {
    field public static final androidx.compose.material3.adaptive.layout.HingePolicy.Companion Companion;
  }

  public static final class HingePolicy.Companion {
    method public int getAlwaysAvoid();
    method public int getAvoidOccluding();
    method public int getAvoidSeparating();
    method public int getNeverAvoid();
    property public int AlwaysAvoid;
    property public int AvoidOccluding;
    property public int AvoidSeparating;
    property public int NeverAvoid;
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public final class ListDetailPaneScaffoldDefaults {
    method public androidx.compose.material3.adaptive.layout.ThreePaneScaffoldAdaptStrategies adaptStrategies(optional androidx.compose.material3.adaptive.layout.AdaptStrategy detailPaneAdaptStrategy, optional androidx.compose.material3.adaptive.layout.AdaptStrategy listPaneAdaptStrategy, optional androidx.compose.material3.adaptive.layout.AdaptStrategy extraPaneAdaptStrategy);
    field public static final androidx.compose.material3.adaptive.layout.ListDetailPaneScaffoldDefaults INSTANCE;
  }

  public final class ListDetailPaneScaffoldKt {
    method @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Composable public static void ListDetailPaneScaffold(androidx.compose.material3.adaptive.layout.PaneScaffoldDirective directive, androidx.compose.material3.adaptive.layout.ThreePaneScaffoldState scaffoldState, kotlin.jvm.functions.Function1<? super androidx.compose.material3.adaptive.layout.ThreePaneScaffoldPaneScope,kotlin.Unit> listPane, kotlin.jvm.functions.Function1<? super androidx.compose.material3.adaptive.layout.ThreePaneScaffoldPaneScope,kotlin.Unit> detailPane, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function1<? super androidx.compose.material3.adaptive.layout.ThreePaneScaffoldPaneScope,kotlin.Unit>? extraPane, optional kotlin.jvm.functions.Function2<? super androidx.compose.material3.adaptive.layout.ThreePaneScaffoldScope,? super androidx.compose.material3.adaptive.layout.PaneExpansionState,kotlin.Unit>? paneExpansionDragHandle, optional androidx.compose.material3.adaptive.layout.PaneExpansionState? paneExpansionState);
    method @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Composable public static void ListDetailPaneScaffold(androidx.compose.material3.adaptive.layout.PaneScaffoldDirective directive, androidx.compose.material3.adaptive.layout.ThreePaneScaffoldValue value, kotlin.jvm.functions.Function1<? super androidx.compose.material3.adaptive.layout.ThreePaneScaffoldPaneScope,kotlin.Unit> listPane, kotlin.jvm.functions.Function1<? super androidx.compose.material3.adaptive.layout.ThreePaneScaffoldPaneScope,kotlin.Unit> detailPane, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function1<? super androidx.compose.material3.adaptive.layout.ThreePaneScaffoldPaneScope,kotlin.Unit>? extraPane, optional kotlin.jvm.functions.Function2<? super androidx.compose.material3.adaptive.layout.ThreePaneScaffoldScope,? super androidx.compose.material3.adaptive.layout.PaneExpansionState,kotlin.Unit>? paneExpansionDragHandle, optional androidx.compose.material3.adaptive.layout.PaneExpansionState? paneExpansionState);
  }

  public final class ListDetailPaneScaffoldRole {
    method public androidx.compose.material3.adaptive.layout.ThreePaneScaffoldRole getDetail();
    method public androidx.compose.material3.adaptive.layout.ThreePaneScaffoldRole getExtra();
    method public androidx.compose.material3.adaptive.layout.ThreePaneScaffoldRole getList();
    property public androidx.compose.material3.adaptive.layout.ThreePaneScaffoldRole Detail;
    property public androidx.compose.material3.adaptive.layout.ThreePaneScaffoldRole Extra;
    property public androidx.compose.material3.adaptive.layout.ThreePaneScaffoldRole List;
    field public static final androidx.compose.material3.adaptive.layout.ListDetailPaneScaffoldRole INSTANCE;
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Stable public final class MutableThreePaneScaffoldState extends androidx.compose.material3.adaptive.layout.ThreePaneScaffoldState {
    ctor public MutableThreePaneScaffoldState(androidx.compose.material3.adaptive.layout.ThreePaneScaffoldValue initialScaffoldValue);
    method public suspend Object? animateTo(optional androidx.compose.material3.adaptive.layout.ThreePaneScaffoldValue targetState, optional androidx.compose.animation.core.FiniteAnimationSpec<java.lang.Float>? animationSpec, optional boolean isPredictiveBackInProgress, kotlin.coroutines.Continuation<? super kotlin.Unit>);
    method public androidx.compose.material3.adaptive.layout.ThreePaneScaffoldValue getCurrentState();
    method @FloatRange(from=0.0, to=1.0) public float getProgressFraction();
    method public androidx.compose.material3.adaptive.layout.ThreePaneScaffoldValue getTargetState();
    method public boolean isPredictiveBackInProgress();
    method public suspend Object? seekTo(@FloatRange(from=0.0, to=1.0) float fraction, optional androidx.compose.material3.adaptive.layout.ThreePaneScaffoldValue targetState, optional boolean isPredictiveBackInProgress, kotlin.coroutines.Continuation<? super kotlin.Unit>);
    method public suspend Object? snapTo(androidx.compose.material3.adaptive.layout.ThreePaneScaffoldValue targetState, kotlin.coroutines.Continuation<? super kotlin.Unit>);
    property public androidx.compose.material3.adaptive.layout.ThreePaneScaffoldValue currentState;
    property public boolean isPredictiveBackInProgress;
    property @FloatRange(from=0.0, to=1.0) public float progressFraction;
    property public androidx.compose.material3.adaptive.layout.ThreePaneScaffoldValue targetState;
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Stable public sealed interface PaneAdaptedValue {
    field public static final androidx.compose.material3.adaptive.layout.PaneAdaptedValue.Companion Companion;
  }

  public static final class PaneAdaptedValue.Companion {
    method public androidx.compose.material3.adaptive.layout.PaneAdaptedValue getExpanded();
    method public androidx.compose.material3.adaptive.layout.PaneAdaptedValue getHidden();
    property public androidx.compose.material3.adaptive.layout.PaneAdaptedValue Expanded;
    property public androidx.compose.material3.adaptive.layout.PaneAdaptedValue Hidden;
  }

  @androidx.compose.runtime.Immutable public static final class PaneAdaptedValue.Levitated implements androidx.compose.material3.adaptive.layout.PaneAdaptedValue {
    ctor public PaneAdaptedValue.Levitated(androidx.compose.ui.Alignment alignment);
    method public androidx.compose.ui.Alignment getAlignment();
    property public androidx.compose.ui.Alignment alignment;
  }

  @androidx.compose.runtime.Immutable public static final class PaneAdaptedValue.Reflowed implements androidx.compose.material3.adaptive.layout.PaneAdaptedValue {
    ctor public PaneAdaptedValue.Reflowed(Object targetPane);
    method public Object getTargetPane();
    property public Object targetPane;
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public abstract sealed class PaneExpansionAnchor {
    method @androidx.compose.runtime.Composable public abstract String getDescription();
    property @androidx.compose.runtime.Composable public abstract String description;
  }

  public abstract static class PaneExpansionAnchor.Offset extends androidx.compose.material3.adaptive.layout.PaneExpansionAnchor {
    method public final int getDirection();
    method public final float getOffset();
    property public final int direction;
    property public final float offset;
    field public static final androidx.compose.material3.adaptive.layout.PaneExpansionAnchor.Offset.Companion Companion;
  }

  public static final class PaneExpansionAnchor.Offset.Companion {
    method public androidx.compose.material3.adaptive.layout.PaneExpansionAnchor.Offset fromEnd(float offset);
    method public androidx.compose.material3.adaptive.layout.PaneExpansionAnchor.Offset fromStart(float offset);
  }

  @kotlin.jvm.JvmInline public static final value class PaneExpansionAnchor.Offset.Direction {
    field public static final androidx.compose.material3.adaptive.layout.PaneExpansionAnchor.Offset.Direction.Companion Companion;
  }

  public static final class PaneExpansionAnchor.Offset.Direction.Companion {
    method public int getFromEnd();
    method public int getFromStart();
    property public int FromEnd;
    property public int FromStart;
  }

  public static final class PaneExpansionAnchor.Proportion extends androidx.compose.material3.adaptive.layout.PaneExpansionAnchor {
    ctor public PaneExpansionAnchor.Proportion(@FloatRange(from=0.0, to=1.0) float proportion);
    method @androidx.compose.runtime.Composable public String getDescription();
    method public float getProportion();
    property @androidx.compose.runtime.Composable public String description;
    property @FloatRange(from=0.0, to=1.0) public float proportion;
  }

  public final class PaneExpansionDraggableModifierKt {
    method @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Composable public static kotlin.jvm.functions.Function1<androidx.compose.ui.semantics.SemanticsPropertyReceiver,kotlin.Unit> defaultDragHandleSemantics(androidx.compose.material3.adaptive.layout.PaneExpansionState);
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Stable public final class PaneExpansionState {
    method public suspend Object? animateTo(androidx.compose.material3.adaptive.layout.PaneExpansionAnchor anchor, optional float initialVelocity, kotlin.coroutines.Continuation<? super kotlin.Unit>);
    method public void clear();
    method public androidx.compose.material3.adaptive.layout.PaneExpansionAnchor? getCurrentAnchor();
    method public boolean isUnspecified();
    method public void setFirstPaneProportion(@FloatRange(from=0.0, to=1.0) float firstPaneProportion);
    method public void setFirstPaneWidth(int firstPaneWidth);
    property public androidx.compose.material3.adaptive.layout.PaneExpansionAnchor? currentAnchor;
    field public static final androidx.compose.material3.adaptive.layout.PaneExpansionState.Companion Companion;
    field public static final int Unspecified = -1; // 0xffffffff
  }

  public static final class PaneExpansionState.Companion {
    property public static int Unspecified;
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Immutable public sealed interface PaneExpansionStateKey {
    field public static final androidx.compose.material3.adaptive.layout.PaneExpansionStateKey.Companion Companion;
  }

  public static final class PaneExpansionStateKey.Companion {
    method public androidx.compose.material3.adaptive.layout.PaneExpansionStateKey getDefault();
    property public androidx.compose.material3.adaptive.layout.PaneExpansionStateKey Default;
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Stable public sealed interface PaneExpansionStateKeyProvider {
    method public androidx.compose.material3.adaptive.layout.PaneExpansionStateKey getPaneExpansionStateKey();
    property public abstract androidx.compose.material3.adaptive.layout.PaneExpansionStateKey paneExpansionStateKey;
  }

  public final class PaneExpansionStateKt {
    method @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Composable public static androidx.compose.material3.adaptive.layout.PaneExpansionState rememberPaneExpansionState(optional androidx.compose.material3.adaptive.layout.PaneExpansionStateKey key, optional java.util.List<? extends androidx.compose.material3.adaptive.layout.PaneExpansionAnchor> anchors, optional int initialAnchoredIndex, optional androidx.compose.animation.core.FiniteAnimationSpec<java.lang.Float> anchoringAnimationSpec, optional androidx.compose.foundation.gestures.FlingBehavior flingBehavior);
    method @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Composable public static androidx.compose.material3.adaptive.layout.PaneExpansionState rememberPaneExpansionState(androidx.compose.material3.adaptive.layout.PaneExpansionStateKeyProvider keyProvider, optional java.util.List<? extends androidx.compose.material3.adaptive.layout.PaneExpansionAnchor> anchors, optional int initialAnchoredIndex, optional androidx.compose.animation.core.FiniteAnimationSpec<java.lang.Float> anchoringAnimationSpec, optional androidx.compose.foundation.gestures.FlingBehavior flingBehavior);
  }

  public final class PaneKt {
    method @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Composable public static <S, T extends androidx.compose.material3.adaptive.layout.PaneScaffoldValue<S>> void AnimatedPane(androidx.compose.material3.adaptive.layout.ExtendedPaneScaffoldPaneScope<S,T>, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.animation.EnterTransition enterTransition, optional androidx.compose.animation.ExitTransition exitTransition, optional androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.unit.IntRect> boundsAnimationSpec, kotlin.jvm.functions.Function1<? super androidx.compose.material3.adaptive.layout.AnimatedPaneScope,kotlin.Unit> content);
    method @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveComponentOverrideApi public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.material3.adaptive.layout.AnimatedPaneOverride> getLocalAnimatedPaneOverride();
    property @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveComponentOverrideApi public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.material3.adaptive.layout.AnimatedPaneOverride> LocalAnimatedPaneOverride;
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Stable public sealed interface PaneMotion {
    method public int getType();
    property public abstract int type;
    field public static final androidx.compose.material3.adaptive.layout.PaneMotion.Companion Companion;
  }

  public static final class PaneMotion.Companion {
    method public androidx.compose.material3.adaptive.layout.PaneMotion getAnimateBounds();
    method public androidx.compose.material3.adaptive.layout.PaneMotion getEnterAsModal();
    method public androidx.compose.material3.adaptive.layout.PaneMotion getEnterFromLeft();
    method public androidx.compose.material3.adaptive.layout.PaneMotion getEnterFromLeftDelayed();
    method public androidx.compose.material3.adaptive.layout.PaneMotion getEnterFromRight();
    method public androidx.compose.material3.adaptive.layout.PaneMotion getEnterFromRightDelayed();
    method public androidx.compose.material3.adaptive.layout.PaneMotion getEnterWithExpand();
    method public androidx.compose.material3.adaptive.layout.PaneMotion getExitAsModal();
    method public androidx.compose.material3.adaptive.layout.PaneMotion getExitToLeft();
    method public androidx.compose.material3.adaptive.layout.PaneMotion getExitToRight();
    method public androidx.compose.material3.adaptive.layout.PaneMotion getExitWithShrink();
    method public androidx.compose.material3.adaptive.layout.PaneMotion getNoMotion();
    property public androidx.compose.material3.adaptive.layout.PaneMotion AnimateBounds;
    property public androidx.compose.material3.adaptive.layout.PaneMotion EnterAsModal;
    property public androidx.compose.material3.adaptive.layout.PaneMotion EnterFromLeft;
    property public androidx.compose.material3.adaptive.layout.PaneMotion EnterFromLeftDelayed;
    property public androidx.compose.material3.adaptive.layout.PaneMotion EnterFromRight;
    property public androidx.compose.material3.adaptive.layout.PaneMotion EnterFromRightDelayed;
    property public androidx.compose.material3.adaptive.layout.PaneMotion EnterWithExpand;
    property public androidx.compose.material3.adaptive.layout.PaneMotion ExitAsModal;
    property public androidx.compose.material3.adaptive.layout.PaneMotion ExitToLeft;
    property public androidx.compose.material3.adaptive.layout.PaneMotion ExitToRight;
    property public androidx.compose.material3.adaptive.layout.PaneMotion ExitWithShrink;
    property public androidx.compose.material3.adaptive.layout.PaneMotion NoMotion;
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @kotlin.jvm.JvmInline public static final value class PaneMotion.Type {
    method public int getValue();
    property public int value;
    field public static final androidx.compose.material3.adaptive.layout.PaneMotion.Type.Companion Companion;
  }

  public static final class PaneMotion.Type.Companion {
    method public int getEntering();
    method public int getEnteringModal();
    method public int getExiting();
    method public int getExitingModal();
    method public int getHidden();
    method public int getShown();
    property public int Entering;
    property public int EnteringModal;
    property public int Exiting;
    property public int ExitingModal;
    property public int Hidden;
    property public int Shown;
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public final class PaneMotionData {
    method public androidx.compose.material3.adaptive.layout.PaneMotion getMotion();
    method public long getOriginPosition();
    method public long getOriginSize();
    method public long getTargetPosition();
    method public long getTargetSize();
    property public androidx.compose.material3.adaptive.layout.PaneMotion motion;
    property public long originPosition;
    property public long originSize;
    property public long targetPosition;
    property public long targetSize;
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public final class PaneMotionDefaults {
    method public androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.unit.IntRect> getAnimationSpec();
    method public androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.unit.IntRect> getDelayedAnimationSpec();
    method public androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.unit.IntOffset> getDelayedOffsetAnimationSpec();
    method public androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.unit.IntSize> getDelayedSizeAnimationSpec();
    method public androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.unit.IntOffset> getOffsetAnimationSpec();
    method public androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.unit.IntSize> getSizeAnimationSpec();
    method public androidx.compose.animation.core.FiniteAnimationSpec<java.lang.Float> getVisibilityAnimationSpec();
    property public androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.unit.IntRect> AnimationSpec;
    property public androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.unit.IntRect> DelayedAnimationSpec;
    property public androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.unit.IntOffset> DelayedOffsetAnimationSpec;
    property public androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.unit.IntSize> DelayedSizeAnimationSpec;
    property public androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.unit.IntOffset> OffsetAnimationSpec;
    property public androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.unit.IntSize> SizeAnimationSpec;
    property public androidx.compose.animation.core.FiniteAnimationSpec<java.lang.Float> VisibilityAnimationSpec;
    field public static final androidx.compose.material3.adaptive.layout.PaneMotionDefaults INSTANCE;
  }

  public final class PaneMotionKt {
    method @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public static <Role> androidx.compose.animation.EnterTransition calculateDefaultEnterTransition(androidx.compose.material3.adaptive.layout.PaneScaffoldMotionDataProvider<Role>, Role role);
    method @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public static <Role> androidx.compose.animation.ExitTransition calculateDefaultExitTransition(androidx.compose.material3.adaptive.layout.PaneScaffoldMotionDataProvider<Role>, Role role);
    method @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public static inline <Role> void forEach(androidx.compose.material3.adaptive.layout.PaneScaffoldMotionDataProvider<Role>, kotlin.jvm.functions.Function2<? super Role,? super androidx.compose.material3.adaptive.layout.PaneMotionData,kotlin.Unit> action);
    method @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public static inline <Role> void forEachReversed(androidx.compose.material3.adaptive.layout.PaneScaffoldMotionDataProvider<Role>, kotlin.jvm.functions.Function2<? super Role,? super androidx.compose.material3.adaptive.layout.PaneMotionData,kotlin.Unit> action);
  }

  @androidx.compose.runtime.Immutable public final class PaneScaffoldDirective {
    ctor public PaneScaffoldDirective(int maxHorizontalPartitions, float horizontalPartitionSpacerSize, int maxVerticalPartitions, float verticalPartitionSpacerSize, float defaultPanePreferredWidth, float defaultPanePreferredHeight, java.util.List<androidx.compose.ui.geometry.Rect> excludedBounds);
    ctor public PaneScaffoldDirective(int maxHorizontalPartitions, float horizontalPartitionSpacerSize, int maxVerticalPartitions, float verticalPartitionSpacerSize, float defaultPanePreferredWidth, java.util.List<androidx.compose.ui.geometry.Rect> excludedBounds);
    method @Deprecated public androidx.compose.material3.adaptive.layout.PaneScaffoldDirective copy(optional int maxHorizontalPartitions, optional float horizontalPartitionSpacerSize, optional int maxVerticalPartitions, optional float verticalPartitionSpacerSize, optional float defaultPanePreferredWidth, optional java.util.List<androidx.compose.ui.geometry.Rect> excludedBounds);
    method public androidx.compose.material3.adaptive.layout.PaneScaffoldDirective copy(optional int maxHorizontalPartitions, optional float horizontalPartitionSpacerSize, optional int maxVerticalPartitions, optional float verticalPartitionSpacerSize, optional float defaultPanePreferredWidth, optional java.util.List<androidx.compose.ui.geometry.Rect> excludedBounds, optional float defaultPanePreferredHeight);
    method public float getDefaultPanePreferredHeight();
    method public float getDefaultPanePreferredWidth();
    method public java.util.List<androidx.compose.ui.geometry.Rect> getExcludedBounds();
    method public float getHorizontalPartitionSpacerSize();
    method public int getMaxHorizontalPartitions();
    method public int getMaxVerticalPartitions();
    method public float getVerticalPartitionSpacerSize();
    property public float defaultPanePreferredHeight;
    property public float defaultPanePreferredWidth;
    property public java.util.List<androidx.compose.ui.geometry.Rect> excludedBounds;
    property public float horizontalPartitionSpacerSize;
    property public int maxHorizontalPartitions;
    property public int maxVerticalPartitions;
    property public float verticalPartitionSpacerSize;
    field public static final androidx.compose.material3.adaptive.layout.PaneScaffoldDirective.Companion Companion;
  }

  public static final class PaneScaffoldDirective.Companion {
    method public androidx.compose.material3.adaptive.layout.PaneScaffoldDirective getDefault();
    property public androidx.compose.material3.adaptive.layout.PaneScaffoldDirective Default;
  }

  public final class PaneScaffoldDirectiveKt {
    method @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public static androidx.compose.material3.adaptive.layout.PaneScaffoldDirective calculatePaneScaffoldDirective(androidx.compose.material3.adaptive.WindowAdaptiveInfo windowAdaptiveInfo, optional int verticalHingePolicy);
    method @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public static androidx.compose.material3.adaptive.layout.PaneScaffoldDirective calculatePaneScaffoldDirectiveWithTwoPanesOnMediumWidth(androidx.compose.material3.adaptive.WindowAdaptiveInfo windowAdaptiveInfo, optional int verticalHingePolicy);
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public sealed interface PaneScaffoldMotionDataProvider<Role> {
    method public operator androidx.compose.material3.adaptive.layout.PaneMotionData get(int index);
    method public operator androidx.compose.material3.adaptive.layout.PaneMotionData get(Role role);
    method public int getCount();
    method public Role getRoleAt(int index);
    method public long getScaffoldSize();
    property public abstract int count;
    property public abstract long scaffoldSize;
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public sealed interface PaneScaffoldPaneScope<Role> {
    method public androidx.compose.material3.adaptive.layout.PaneMotion getPaneMotion();
    method public Role getPaneRole();
    property public abstract androidx.compose.material3.adaptive.layout.PaneMotion paneMotion;
    property public abstract Role paneRole;
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public sealed interface PaneScaffoldParentData {
    method public float getMinTouchTargetSize();
    method public float getPreferredHeight();
    method public float getPreferredWidth();
    method public boolean isAnimatedPane();
    property public abstract boolean isAnimatedPane;
    property public abstract float minTouchTargetSize;
    property public abstract float preferredHeight;
    property public abstract float preferredWidth;
  }

  public sealed interface PaneScaffoldScope {
    method public androidx.compose.runtime.saveable.SaveableStateHolder getSaveableStateHolder();
    method @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public androidx.compose.ui.Modifier paneExpansionDraggable(androidx.compose.ui.Modifier, androidx.compose.material3.adaptive.layout.PaneExpansionState state, float minTouchTargetSize, androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.ui.semantics.SemanticsPropertyReceiver,kotlin.Unit> semanticsProperties);
    method public androidx.compose.ui.Modifier preferredHeight(androidx.compose.ui.Modifier, float height);
    method public androidx.compose.ui.Modifier preferredWidth(androidx.compose.ui.Modifier, float width);
    property public abstract androidx.compose.runtime.saveable.SaveableStateHolder saveableStateHolder;
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public sealed interface PaneScaffoldTransitionScope<Role, ScaffoldValue extends androidx.compose.material3.adaptive.layout.PaneScaffoldValue<Role>> {
    method public androidx.compose.material3.adaptive.layout.PaneScaffoldMotionDataProvider<Role> getMotionDataProvider();
    method @FloatRange(from=0.0, to=1.0) public float getMotionProgress();
    method public androidx.compose.animation.core.Transition<ScaffoldValue> getScaffoldStateTransition();
    property public abstract androidx.compose.material3.adaptive.layout.PaneScaffoldMotionDataProvider<Role> motionDataProvider;
    property @FloatRange(from=0.0, to=1.0) public abstract float motionProgress;
    property public abstract androidx.compose.animation.core.Transition<ScaffoldValue> scaffoldStateTransition;
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public sealed interface PaneScaffoldValue<T> {
    method public operator androidx.compose.material3.adaptive.layout.PaneAdaptedValue get(T role);
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public final class SupportingPaneScaffoldDefaults {
    method public androidx.compose.material3.adaptive.layout.ThreePaneScaffoldAdaptStrategies adaptStrategies(optional androidx.compose.material3.adaptive.layout.AdaptStrategy mainPaneAdaptStrategy, optional androidx.compose.material3.adaptive.layout.AdaptStrategy supportingPaneAdaptStrategy, optional androidx.compose.material3.adaptive.layout.AdaptStrategy extraPaneAdaptStrategy);
    field public static final androidx.compose.material3.adaptive.layout.SupportingPaneScaffoldDefaults INSTANCE;
  }

  public final class SupportingPaneScaffoldKt {
    method @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Composable public static void SupportingPaneScaffold(androidx.compose.material3.adaptive.layout.PaneScaffoldDirective directive, androidx.compose.material3.adaptive.layout.ThreePaneScaffoldState scaffoldState, kotlin.jvm.functions.Function1<? super androidx.compose.material3.adaptive.layout.ThreePaneScaffoldPaneScope,kotlin.Unit> mainPane, kotlin.jvm.functions.Function1<? super androidx.compose.material3.adaptive.layout.ThreePaneScaffoldPaneScope,kotlin.Unit> supportingPane, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function1<? super androidx.compose.material3.adaptive.layout.ThreePaneScaffoldPaneScope,kotlin.Unit>? extraPane, optional kotlin.jvm.functions.Function2<? super androidx.compose.material3.adaptive.layout.ThreePaneScaffoldScope,? super androidx.compose.material3.adaptive.layout.PaneExpansionState,kotlin.Unit>? paneExpansionDragHandle, optional androidx.compose.material3.adaptive.layout.PaneExpansionState? paneExpansionState);
    method @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Composable public static void SupportingPaneScaffold(androidx.compose.material3.adaptive.layout.PaneScaffoldDirective directive, androidx.compose.material3.adaptive.layout.ThreePaneScaffoldValue value, kotlin.jvm.functions.Function1<? super androidx.compose.material3.adaptive.layout.ThreePaneScaffoldPaneScope,kotlin.Unit> mainPane, kotlin.jvm.functions.Function1<? super androidx.compose.material3.adaptive.layout.ThreePaneScaffoldPaneScope,kotlin.Unit> supportingPane, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function1<? super androidx.compose.material3.adaptive.layout.ThreePaneScaffoldPaneScope,kotlin.Unit>? extraPane, optional kotlin.jvm.functions.Function2<? super androidx.compose.material3.adaptive.layout.ThreePaneScaffoldScope,? super androidx.compose.material3.adaptive.layout.PaneExpansionState,kotlin.Unit>? paneExpansionDragHandle, optional androidx.compose.material3.adaptive.layout.PaneExpansionState? paneExpansionState);
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public final class SupportingPaneScaffoldRole {
    method public androidx.compose.material3.adaptive.layout.ThreePaneScaffoldRole getExtra();
    method public androidx.compose.material3.adaptive.layout.ThreePaneScaffoldRole getMain();
    method public androidx.compose.material3.adaptive.layout.ThreePaneScaffoldRole getSupporting();
    property public androidx.compose.material3.adaptive.layout.ThreePaneScaffoldRole Extra;
    property public androidx.compose.material3.adaptive.layout.ThreePaneScaffoldRole Main;
    property public androidx.compose.material3.adaptive.layout.ThreePaneScaffoldRole Supporting;
    field public static final androidx.compose.material3.adaptive.layout.SupportingPaneScaffoldRole INSTANCE;
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Immutable public final class ThreePaneMotion {
    method public operator androidx.compose.material3.adaptive.layout.PaneMotion get(androidx.compose.material3.adaptive.layout.ThreePaneScaffoldRole role);
    field public static final androidx.compose.material3.adaptive.layout.ThreePaneMotion.Companion Companion;
  }

  public static final class ThreePaneMotion.Companion {
    method public androidx.compose.material3.adaptive.layout.ThreePaneMotion getNoMotion();
    property public androidx.compose.material3.adaptive.layout.ThreePaneMotion NoMotion;
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public final class ThreePaneScaffoldAdaptStrategies {
    ctor public ThreePaneScaffoldAdaptStrategies(androidx.compose.material3.adaptive.layout.AdaptStrategy primaryPaneAdaptStrategy, androidx.compose.material3.adaptive.layout.AdaptStrategy secondaryPaneAdaptStrategy, androidx.compose.material3.adaptive.layout.AdaptStrategy tertiaryPaneAdaptStrategy);
    method public operator androidx.compose.material3.adaptive.layout.AdaptStrategy get(androidx.compose.material3.adaptive.layout.ThreePaneScaffoldRole role);
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public final class ThreePaneScaffoldDestinationItem<T> {
    ctor public ThreePaneScaffoldDestinationItem(androidx.compose.material3.adaptive.layout.ThreePaneScaffoldRole pane, optional T? contentKey);
    method public T? getContentKey();
    method public androidx.compose.material3.adaptive.layout.ThreePaneScaffoldRole getPane();
    property public T? contentKey;
    property public androidx.compose.material3.adaptive.layout.ThreePaneScaffoldRole pane;
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Immutable public final class ThreePaneScaffoldHorizontalOrder {
    method public void forEach(kotlin.jvm.functions.Function1<? super androidx.compose.material3.adaptive.layout.ThreePaneScaffoldRole,kotlin.Unit> action);
    method public void forEachIndexed(kotlin.jvm.functions.Function2<? super java.lang.Integer,? super androidx.compose.material3.adaptive.layout.ThreePaneScaffoldRole,kotlin.Unit> action);
    method public void forEachIndexedReversed(kotlin.jvm.functions.Function2<? super java.lang.Integer,? super androidx.compose.material3.adaptive.layout.ThreePaneScaffoldRole,kotlin.Unit> action);
    method public operator androidx.compose.material3.adaptive.layout.ThreePaneScaffoldRole get(int index);
    method public int getSize();
    method public int indexOf(androidx.compose.material3.adaptive.layout.ThreePaneScaffoldRole role);
    property public int size;
  }

  public final class ThreePaneScaffoldKt {
    method @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveComponentOverrideApi public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.material3.adaptive.layout.ThreePaneScaffoldOverride> getLocalThreePaneScaffoldOverride();
    property @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveComponentOverrideApi public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.material3.adaptive.layout.ThreePaneScaffoldOverride> LocalThreePaneScaffoldOverride;
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveComponentOverrideApi public interface ThreePaneScaffoldOverride {
    method @androidx.compose.runtime.Composable public void ThreePaneScaffold(androidx.compose.material3.adaptive.layout.ThreePaneScaffoldOverrideScope);
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveComponentOverrideApi public final class ThreePaneScaffoldOverrideScope {
    method public androidx.compose.ui.Modifier getModifier();
    method public kotlin.jvm.functions.Function1<androidx.compose.material3.adaptive.layout.PaneExpansionState,kotlin.Unit>? getPaneExpansionDragHandle();
    method public androidx.compose.material3.adaptive.layout.PaneExpansionState getPaneExpansionState();
    method public androidx.compose.material3.adaptive.layout.ThreePaneScaffoldHorizontalOrder getPaneOrder();
    method public kotlin.jvm.functions.Function0<kotlin.Unit> getPrimaryPane();
    method public androidx.compose.material3.adaptive.layout.PaneScaffoldDirective getScaffoldDirective();
    method public androidx.compose.material3.adaptive.layout.ThreePaneScaffoldState getScaffoldState();
    method public kotlin.jvm.functions.Function0<kotlin.Unit> getSecondaryPane();
    method public kotlin.jvm.functions.Function0<kotlin.Unit>? getTertiaryPane();
    property public androidx.compose.ui.Modifier modifier;
    property public kotlin.jvm.functions.Function1<androidx.compose.material3.adaptive.layout.PaneExpansionState,kotlin.Unit>? paneExpansionDragHandle;
    property public androidx.compose.material3.adaptive.layout.PaneExpansionState paneExpansionState;
    property public androidx.compose.material3.adaptive.layout.ThreePaneScaffoldHorizontalOrder paneOrder;
    property public kotlin.jvm.functions.Function0<kotlin.Unit> primaryPane;
    property public androidx.compose.material3.adaptive.layout.PaneScaffoldDirective scaffoldDirective;
    property public androidx.compose.material3.adaptive.layout.ThreePaneScaffoldState scaffoldState;
    property public kotlin.jvm.functions.Function0<kotlin.Unit> secondaryPane;
    property public kotlin.jvm.functions.Function0<kotlin.Unit>? tertiaryPane;
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public sealed interface ThreePaneScaffoldPaneScope extends androidx.compose.material3.adaptive.layout.ThreePaneScaffoldScope androidx.compose.material3.adaptive.layout.ExtendedPaneScaffoldPaneScope<androidx.compose.material3.adaptive.layout.ThreePaneScaffoldRole,androidx.compose.material3.adaptive.layout.ThreePaneScaffoldValue> {
  }

  public enum ThreePaneScaffoldRole {
    enum_constant public static final androidx.compose.material3.adaptive.layout.ThreePaneScaffoldRole Primary;
    enum_constant public static final androidx.compose.material3.adaptive.layout.ThreePaneScaffoldRole Secondary;
    enum_constant public static final androidx.compose.material3.adaptive.layout.ThreePaneScaffoldRole Tertiary;
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public sealed interface ThreePaneScaffoldScope extends androidx.compose.material3.adaptive.layout.ExtendedPaneScaffoldScope<androidx.compose.material3.adaptive.layout.ThreePaneScaffoldRole,androidx.compose.material3.adaptive.layout.ThreePaneScaffoldValue> {
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Stable public abstract sealed class ThreePaneScaffoldState {
    method public abstract androidx.compose.material3.adaptive.layout.ThreePaneScaffoldValue getCurrentState();
    method @FloatRange(from=0.0, to=1.0) public abstract float getProgressFraction();
    method public abstract androidx.compose.material3.adaptive.layout.ThreePaneScaffoldValue getTargetState();
    method public abstract boolean isPredictiveBackInProgress();
    property public abstract androidx.compose.material3.adaptive.layout.ThreePaneScaffoldValue currentState;
    property public abstract boolean isPredictiveBackInProgress;
    property @FloatRange(from=0.0, to=1.0) public abstract float progressFraction;
    property public abstract androidx.compose.material3.adaptive.layout.ThreePaneScaffoldValue targetState;
  }

  @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi @androidx.compose.runtime.Immutable public final class ThreePaneScaffoldValue implements androidx.compose.material3.adaptive.layout.PaneExpansionStateKeyProvider androidx.compose.material3.adaptive.layout.PaneScaffoldValue<androidx.compose.material3.adaptive.layout.ThreePaneScaffoldRole> {
    ctor public ThreePaneScaffoldValue(androidx.compose.material3.adaptive.layout.PaneAdaptedValue primary, androidx.compose.material3.adaptive.layout.PaneAdaptedValue secondary, androidx.compose.material3.adaptive.layout.PaneAdaptedValue tertiary);
    method public operator androidx.compose.material3.adaptive.layout.PaneAdaptedValue get(androidx.compose.material3.adaptive.layout.ThreePaneScaffoldRole role);
    method public androidx.compose.material3.adaptive.layout.PaneExpansionStateKey getPaneExpansionStateKey();
    method public androidx.compose.material3.adaptive.layout.PaneAdaptedValue getPrimary();
    method public androidx.compose.material3.adaptive.layout.PaneAdaptedValue getSecondary();
    method public androidx.compose.material3.adaptive.layout.PaneAdaptedValue getTertiary();
    property public androidx.compose.material3.adaptive.layout.PaneExpansionStateKey paneExpansionStateKey;
    property public androidx.compose.material3.adaptive.layout.PaneAdaptedValue primary;
    property public androidx.compose.material3.adaptive.layout.PaneAdaptedValue secondary;
    property public androidx.compose.material3.adaptive.layout.PaneAdaptedValue tertiary;
  }

  public final class ThreePaneScaffoldValueKt {
    method @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public static androidx.compose.material3.adaptive.layout.ThreePaneScaffoldValue calculateThreePaneScaffoldValue(int maxHorizontalPartitions, androidx.compose.material3.adaptive.layout.ThreePaneScaffoldAdaptStrategies adaptStrategies, androidx.compose.material3.adaptive.layout.ThreePaneScaffoldDestinationItem<? extends java.lang.Object?>? currentDestination, optional int maxVerticalPartitions);
    method @SuppressCompatibility @androidx.compose.material3.adaptive.ExperimentalMaterial3AdaptiveApi public static androidx.compose.material3.adaptive.layout.ThreePaneScaffoldValue calculateThreePaneScaffoldValue(int maxHorizontalPartitions, androidx.compose.material3.adaptive.layout.ThreePaneScaffoldAdaptStrategies adaptStrategies, java.util.List<? extends androidx.compose.material3.adaptive.layout.ThreePaneScaffoldDestinationItem<? extends java.lang.Object?>> destinationHistory, optional int maxVerticalPartitions);
  }

}

