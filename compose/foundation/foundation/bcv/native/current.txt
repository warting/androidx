// Klib ABI Dump
// Targets: [linuxX64.linuxx64Stubs]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <androidx.compose.foundation:foundation>
open annotation class androidx.compose.foundation.gestures/ExperimentalTapGestureDetectorBehaviorApi : kotlin/Annotation { // androidx.compose.foundation.gestures/ExperimentalTapGestureDetectorBehaviorApi|null[0]
    constructor <init>() // androidx.compose.foundation.gestures/ExperimentalTapGestureDetectorBehaviorApi.<init>|<init>(){}[0]
}

open annotation class androidx.compose.foundation.lazy.grid/LazyGridScopeMarker : kotlin/Annotation { // androidx.compose.foundation.lazy.grid/LazyGridScopeMarker|null[0]
    constructor <init>() // androidx.compose.foundation.lazy.grid/LazyGridScopeMarker.<init>|<init>(){}[0]
}

open annotation class androidx.compose.foundation.lazy/LazyScopeMarker : kotlin/Annotation { // androidx.compose.foundation.lazy/LazyScopeMarker|null[0]
    constructor <init>() // androidx.compose.foundation.lazy/LazyScopeMarker.<init>|<init>(){}[0]
}

open annotation class androidx.compose.foundation.text/InternalFoundationTextApi : kotlin/Annotation { // androidx.compose.foundation.text/InternalFoundationTextApi|null[0]
    constructor <init>() // androidx.compose.foundation.text/InternalFoundationTextApi.<init>|<init>(){}[0]
}

open annotation class androidx.compose.foundation/ExperimentalFoundationApi : kotlin/Annotation { // androidx.compose.foundation/ExperimentalFoundationApi|null[0]
    constructor <init>() // androidx.compose.foundation/ExperimentalFoundationApi.<init>|<init>(){}[0]
}

open annotation class androidx.compose.foundation/InternalFoundationApi : kotlin/Annotation { // androidx.compose.foundation/InternalFoundationApi|null[0]
    constructor <init>() // androidx.compose.foundation/InternalFoundationApi.<init>|<init>(){}[0]
}

final enum class androidx.compose.foundation.gestures/Orientation : kotlin/Enum<androidx.compose.foundation.gestures/Orientation> { // androidx.compose.foundation.gestures/Orientation|null[0]
    enum entry Horizontal // androidx.compose.foundation.gestures/Orientation.Horizontal|null[0]
    enum entry Vertical // androidx.compose.foundation.gestures/Orientation.Vertical|null[0]

    final val entries // androidx.compose.foundation.gestures/Orientation.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<androidx.compose.foundation.gestures/Orientation> // androidx.compose.foundation.gestures/Orientation.entries.<get-entries>|<get-entries>#static(){}[0]

    final fun valueOf(kotlin/String): androidx.compose.foundation.gestures/Orientation // androidx.compose.foundation.gestures/Orientation.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<androidx.compose.foundation.gestures/Orientation> // androidx.compose.foundation.gestures/Orientation.values|values#static(){}[0]
}

final enum class androidx.compose.foundation/MutatePriority : kotlin/Enum<androidx.compose.foundation/MutatePriority> { // androidx.compose.foundation/MutatePriority|null[0]
    enum entry Default // androidx.compose.foundation/MutatePriority.Default|null[0]
    enum entry PreventUserInput // androidx.compose.foundation/MutatePriority.PreventUserInput|null[0]
    enum entry UserInput // androidx.compose.foundation/MutatePriority.UserInput|null[0]

    final val entries // androidx.compose.foundation/MutatePriority.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<androidx.compose.foundation/MutatePriority> // androidx.compose.foundation/MutatePriority.entries.<get-entries>|<get-entries>#static(){}[0]

    final fun valueOf(kotlin/String): androidx.compose.foundation/MutatePriority // androidx.compose.foundation/MutatePriority.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<androidx.compose.foundation/MutatePriority> // androidx.compose.foundation/MutatePriority.values|values#static(){}[0]
}

abstract fun interface androidx.compose.foundation.lazy.layout/LazyLayoutMeasurePolicy { // androidx.compose.foundation.lazy.layout/LazyLayoutMeasurePolicy|null[0]
    abstract fun (androidx.compose.foundation.lazy.layout/LazyLayoutMeasureScope).measure(androidx.compose.ui.unit/Constraints): androidx.compose.ui.layout/MeasureResult // androidx.compose.foundation.lazy.layout/LazyLayoutMeasurePolicy.measure|measure@androidx.compose.foundation.lazy.layout.LazyLayoutMeasureScope(androidx.compose.ui.unit.Constraints){}[0]
}

abstract fun interface androidx.compose.foundation.text.input/InputTransformation { // androidx.compose.foundation.text.input/InputTransformation|null[0]
    open val keyboardOptions // androidx.compose.foundation.text.input/InputTransformation.keyboardOptions|{}keyboardOptions[0]
        open fun <get-keyboardOptions>(): androidx.compose.foundation.text/KeyboardOptions? // androidx.compose.foundation.text.input/InputTransformation.keyboardOptions.<get-keyboardOptions>|<get-keyboardOptions>(){}[0]

    abstract fun (androidx.compose.foundation.text.input/TextFieldBuffer).transformInput() // androidx.compose.foundation.text.input/InputTransformation.transformInput|transformInput@androidx.compose.foundation.text.input.TextFieldBuffer(){}[0]
    open fun (androidx.compose.ui.semantics/SemanticsPropertyReceiver).applySemantics() // androidx.compose.foundation.text.input/InputTransformation.applySemantics|applySemantics@androidx.compose.ui.semantics.SemanticsPropertyReceiver(){}[0]

    final object Companion : androidx.compose.foundation.text.input/InputTransformation { // androidx.compose.foundation.text.input/InputTransformation.Companion|null[0]
        final fun (androidx.compose.foundation.text.input/TextFieldBuffer).transformInput() // androidx.compose.foundation.text.input/InputTransformation.Companion.transformInput|transformInput@androidx.compose.foundation.text.input.TextFieldBuffer(){}[0]
    }
}

abstract fun interface androidx.compose.foundation.text.input/KeyboardActionHandler { // androidx.compose.foundation.text.input/KeyboardActionHandler|null[0]
    abstract fun onKeyboardAction(kotlin/Function0<kotlin/Unit>) // androidx.compose.foundation.text.input/KeyboardActionHandler.onKeyboardAction|onKeyboardAction(kotlin.Function0<kotlin.Unit>){}[0]
}

abstract fun interface androidx.compose.foundation.text.input/OutputTransformation { // androidx.compose.foundation.text.input/OutputTransformation|null[0]
    abstract fun (androidx.compose.foundation.text.input/TextFieldBuffer).transformOutput() // androidx.compose.foundation.text.input/OutputTransformation.transformOutput|transformOutput@androidx.compose.foundation.text.input.TextFieldBuffer(){}[0]
}

abstract fun interface androidx.compose.foundation.text.input/TextFieldDecorator { // androidx.compose.foundation.text.input/TextFieldDecorator|null[0]
    abstract fun Decoration(kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int) // androidx.compose.foundation.text.input/TextFieldDecorator.Decoration|Decoration(kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int){}[0]
}

abstract fun interface androidx.compose.foundation/MarqueeSpacing { // androidx.compose.foundation/MarqueeSpacing|null[0]
    abstract fun (androidx.compose.ui.unit/Density).calculateSpacing(kotlin/Int, kotlin/Int): kotlin/Int // androidx.compose.foundation/MarqueeSpacing.calculateSpacing|calculateSpacing@androidx.compose.ui.unit.Density(kotlin.Int;kotlin.Int){}[0]

    final object Companion { // androidx.compose.foundation/MarqueeSpacing.Companion|null[0]
        final fun fractionOfContainer(kotlin/Float): androidx.compose.foundation/MarqueeSpacing // androidx.compose.foundation/MarqueeSpacing.Companion.fractionOfContainer|fractionOfContainer(kotlin.Float){}[0]
    }
}

abstract interface <#A: kotlin/Any?> androidx.compose.foundation.gestures/DraggableAnchors { // androidx.compose.foundation.gestures/DraggableAnchors|null[0]
    abstract val size // androidx.compose.foundation.gestures/DraggableAnchors.size|{}size[0]
        abstract fun <get-size>(): kotlin/Int // androidx.compose.foundation.gestures/DraggableAnchors.size.<get-size>|<get-size>(){}[0]

    abstract fun anchorAt(kotlin/Int): #A? // androidx.compose.foundation.gestures/DraggableAnchors.anchorAt|anchorAt(kotlin.Int){}[0]
    abstract fun closestAnchor(kotlin/Float): #A? // androidx.compose.foundation.gestures/DraggableAnchors.closestAnchor|closestAnchor(kotlin.Float){}[0]
    abstract fun closestAnchor(kotlin/Float, kotlin/Boolean): #A? // androidx.compose.foundation.gestures/DraggableAnchors.closestAnchor|closestAnchor(kotlin.Float;kotlin.Boolean){}[0]
    abstract fun hasPositionFor(#A): kotlin/Boolean // androidx.compose.foundation.gestures/DraggableAnchors.hasPositionFor|hasPositionFor(1:0){}[0]
    abstract fun maxPosition(): kotlin/Float // androidx.compose.foundation.gestures/DraggableAnchors.maxPosition|maxPosition(){}[0]
    abstract fun minPosition(): kotlin/Float // androidx.compose.foundation.gestures/DraggableAnchors.minPosition|minPosition(){}[0]
    abstract fun positionAt(kotlin/Int): kotlin/Float // androidx.compose.foundation.gestures/DraggableAnchors.positionAt|positionAt(kotlin.Int){}[0]
    abstract fun positionOf(#A): kotlin/Float // androidx.compose.foundation.gestures/DraggableAnchors.positionOf|positionOf(1:0){}[0]
}

abstract interface androidx.compose.foundation.gestures.snapping/SnapLayoutInfoProvider { // androidx.compose.foundation.gestures.snapping/SnapLayoutInfoProvider|null[0]
    abstract fun calculateSnapOffset(kotlin/Float): kotlin/Float // androidx.compose.foundation.gestures.snapping/SnapLayoutInfoProvider.calculateSnapOffset|calculateSnapOffset(kotlin.Float){}[0]
    open fun calculateApproachOffset(kotlin/Float, kotlin/Float): kotlin/Float // androidx.compose.foundation.gestures.snapping/SnapLayoutInfoProvider.calculateApproachOffset|calculateApproachOffset(kotlin.Float;kotlin.Float){}[0]
}

abstract interface androidx.compose.foundation.gestures.snapping/SnapPosition { // androidx.compose.foundation.gestures.snapping/SnapPosition|null[0]
    abstract fun position(kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int): kotlin/Int // androidx.compose.foundation.gestures.snapping/SnapPosition.position|position(kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int){}[0]

    final object Center : androidx.compose.foundation.gestures.snapping/SnapPosition { // androidx.compose.foundation.gestures.snapping/SnapPosition.Center|null[0]
        final fun position(kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int): kotlin/Int // androidx.compose.foundation.gestures.snapping/SnapPosition.Center.position|position(kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
        final fun toString(): kotlin/String // androidx.compose.foundation.gestures.snapping/SnapPosition.Center.toString|toString(){}[0]
    }

    final object End : androidx.compose.foundation.gestures.snapping/SnapPosition { // androidx.compose.foundation.gestures.snapping/SnapPosition.End|null[0]
        final fun position(kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int): kotlin/Int // androidx.compose.foundation.gestures.snapping/SnapPosition.End.position|position(kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
        final fun toString(): kotlin/String // androidx.compose.foundation.gestures.snapping/SnapPosition.End.toString|toString(){}[0]
    }

    final object Start : androidx.compose.foundation.gestures.snapping/SnapPosition { // androidx.compose.foundation.gestures.snapping/SnapPosition.Start|null[0]
        final fun position(kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int): kotlin/Int // androidx.compose.foundation.gestures.snapping/SnapPosition.Start.position|position(kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
        final fun toString(): kotlin/String // androidx.compose.foundation.gestures.snapping/SnapPosition.Start.toString|toString(){}[0]
    }
}

abstract interface androidx.compose.foundation.gestures/AnchoredDragScope { // androidx.compose.foundation.gestures/AnchoredDragScope|null[0]
    abstract fun dragTo(kotlin/Float, kotlin/Float = ...) // androidx.compose.foundation.gestures/AnchoredDragScope.dragTo|dragTo(kotlin.Float;kotlin.Float){}[0]
}

abstract interface androidx.compose.foundation.gestures/BringIntoViewSpec { // androidx.compose.foundation.gestures/BringIntoViewSpec|null[0]
    open val scrollAnimationSpec // androidx.compose.foundation.gestures/BringIntoViewSpec.scrollAnimationSpec|{}scrollAnimationSpec[0]
        open fun <get-scrollAnimationSpec>(): androidx.compose.animation.core/AnimationSpec<kotlin/Float> // androidx.compose.foundation.gestures/BringIntoViewSpec.scrollAnimationSpec.<get-scrollAnimationSpec>|<get-scrollAnimationSpec>(){}[0]

    open fun calculateScrollDistance(kotlin/Float, kotlin/Float, kotlin/Float): kotlin/Float // androidx.compose.foundation.gestures/BringIntoViewSpec.calculateScrollDistance|calculateScrollDistance(kotlin.Float;kotlin.Float;kotlin.Float){}[0]

    final object Companion // androidx.compose.foundation.gestures/BringIntoViewSpec.Companion|null[0]
}

abstract interface androidx.compose.foundation.gestures/Drag2DScope { // androidx.compose.foundation.gestures/Drag2DScope|null[0]
    abstract fun dragBy(androidx.compose.ui.geometry/Offset) // androidx.compose.foundation.gestures/Drag2DScope.dragBy|dragBy(androidx.compose.ui.geometry.Offset){}[0]
}

abstract interface androidx.compose.foundation.gestures/DragScope { // androidx.compose.foundation.gestures/DragScope|null[0]
    abstract fun dragBy(kotlin/Float) // androidx.compose.foundation.gestures/DragScope.dragBy|dragBy(kotlin.Float){}[0]
}

abstract interface androidx.compose.foundation.gestures/Draggable2DState { // androidx.compose.foundation.gestures/Draggable2DState|null[0]
    abstract fun dispatchRawDelta(androidx.compose.ui.geometry/Offset) // androidx.compose.foundation.gestures/Draggable2DState.dispatchRawDelta|dispatchRawDelta(androidx.compose.ui.geometry.Offset){}[0]
    abstract suspend fun drag(androidx.compose.foundation/MutatePriority = ..., kotlin.coroutines/SuspendFunction1<androidx.compose.foundation.gestures/Drag2DScope, kotlin/Unit>) // androidx.compose.foundation.gestures/Draggable2DState.drag|drag(androidx.compose.foundation.MutatePriority;kotlin.coroutines.SuspendFunction1<androidx.compose.foundation.gestures.Drag2DScope,kotlin.Unit>){}[0]
}

abstract interface androidx.compose.foundation.gestures/DraggableState { // androidx.compose.foundation.gestures/DraggableState|null[0]
    abstract fun dispatchRawDelta(kotlin/Float) // androidx.compose.foundation.gestures/DraggableState.dispatchRawDelta|dispatchRawDelta(kotlin.Float){}[0]
    abstract suspend fun drag(androidx.compose.foundation/MutatePriority = ..., kotlin.coroutines/SuspendFunction1<androidx.compose.foundation.gestures/DragScope, kotlin/Unit>) // androidx.compose.foundation.gestures/DraggableState.drag|drag(androidx.compose.foundation.MutatePriority;kotlin.coroutines.SuspendFunction1<androidx.compose.foundation.gestures.DragScope,kotlin.Unit>){}[0]
}

abstract interface androidx.compose.foundation.gestures/FlingBehavior { // androidx.compose.foundation.gestures/FlingBehavior|null[0]
    abstract suspend fun (androidx.compose.foundation.gestures/ScrollScope).performFling(kotlin/Float): kotlin/Float // androidx.compose.foundation.gestures/FlingBehavior.performFling|performFling@androidx.compose.foundation.gestures.ScrollScope(kotlin.Float){}[0]
}

abstract interface androidx.compose.foundation.gestures/PressGestureScope : androidx.compose.ui.unit/Density { // androidx.compose.foundation.gestures/PressGestureScope|null[0]
    abstract suspend fun awaitRelease() // androidx.compose.foundation.gestures/PressGestureScope.awaitRelease|awaitRelease(){}[0]
    abstract suspend fun tryAwaitRelease(): kotlin/Boolean // androidx.compose.foundation.gestures/PressGestureScope.tryAwaitRelease|tryAwaitRelease(){}[0]
}

abstract interface androidx.compose.foundation.gestures/Scroll2DScope { // androidx.compose.foundation.gestures/Scroll2DScope|null[0]
    abstract fun scrollBy(androidx.compose.ui.geometry/Offset): androidx.compose.ui.geometry/Offset // androidx.compose.foundation.gestures/Scroll2DScope.scrollBy|scrollBy(androidx.compose.ui.geometry.Offset){}[0]
}

abstract interface androidx.compose.foundation.gestures/ScrollScope { // androidx.compose.foundation.gestures/ScrollScope|null[0]
    abstract fun scrollBy(kotlin/Float): kotlin/Float // androidx.compose.foundation.gestures/ScrollScope.scrollBy|scrollBy(kotlin.Float){}[0]
}

abstract interface androidx.compose.foundation.gestures/Scrollable2DState { // androidx.compose.foundation.gestures/Scrollable2DState|null[0]
    abstract val isScrollInProgress // androidx.compose.foundation.gestures/Scrollable2DState.isScrollInProgress|{}isScrollInProgress[0]
        abstract fun <get-isScrollInProgress>(): kotlin/Boolean // androidx.compose.foundation.gestures/Scrollable2DState.isScrollInProgress.<get-isScrollInProgress>|<get-isScrollInProgress>(){}[0]

    abstract fun canScroll(androidx.compose.ui.geometry/Offset): kotlin/Boolean // androidx.compose.foundation.gestures/Scrollable2DState.canScroll|canScroll(androidx.compose.ui.geometry.Offset){}[0]
    abstract fun dispatchRawDelta(androidx.compose.ui.geometry/Offset): androidx.compose.ui.geometry/Offset // androidx.compose.foundation.gestures/Scrollable2DState.dispatchRawDelta|dispatchRawDelta(androidx.compose.ui.geometry.Offset){}[0]
    abstract suspend fun scroll(androidx.compose.foundation/MutatePriority = ..., kotlin.coroutines/SuspendFunction1<androidx.compose.foundation.gestures/Scroll2DScope, kotlin/Unit>) // androidx.compose.foundation.gestures/Scrollable2DState.scroll|scroll(androidx.compose.foundation.MutatePriority;kotlin.coroutines.SuspendFunction1<androidx.compose.foundation.gestures.Scroll2DScope,kotlin.Unit>){}[0]
}

abstract interface androidx.compose.foundation.gestures/ScrollableState { // androidx.compose.foundation.gestures/ScrollableState|null[0]
    abstract val isScrollInProgress // androidx.compose.foundation.gestures/ScrollableState.isScrollInProgress|{}isScrollInProgress[0]
        abstract fun <get-isScrollInProgress>(): kotlin/Boolean // androidx.compose.foundation.gestures/ScrollableState.isScrollInProgress.<get-isScrollInProgress>|<get-isScrollInProgress>(){}[0]
    open val canScrollBackward // androidx.compose.foundation.gestures/ScrollableState.canScrollBackward|{}canScrollBackward[0]
        open fun <get-canScrollBackward>(): kotlin/Boolean // androidx.compose.foundation.gestures/ScrollableState.canScrollBackward.<get-canScrollBackward>|<get-canScrollBackward>(){}[0]
    open val canScrollForward // androidx.compose.foundation.gestures/ScrollableState.canScrollForward|{}canScrollForward[0]
        open fun <get-canScrollForward>(): kotlin/Boolean // androidx.compose.foundation.gestures/ScrollableState.canScrollForward.<get-canScrollForward>|<get-canScrollForward>(){}[0]
    open val lastScrolledBackward // androidx.compose.foundation.gestures/ScrollableState.lastScrolledBackward|{}lastScrolledBackward[0]
        open fun <get-lastScrolledBackward>(): kotlin/Boolean // androidx.compose.foundation.gestures/ScrollableState.lastScrolledBackward.<get-lastScrolledBackward>|<get-lastScrolledBackward>(){}[0]
    open val lastScrolledForward // androidx.compose.foundation.gestures/ScrollableState.lastScrolledForward|{}lastScrolledForward[0]
        open fun <get-lastScrolledForward>(): kotlin/Boolean // androidx.compose.foundation.gestures/ScrollableState.lastScrolledForward.<get-lastScrolledForward>|<get-lastScrolledForward>(){}[0]

    abstract fun dispatchRawDelta(kotlin/Float): kotlin/Float // androidx.compose.foundation.gestures/ScrollableState.dispatchRawDelta|dispatchRawDelta(kotlin.Float){}[0]
    abstract suspend fun scroll(androidx.compose.foundation/MutatePriority = ..., kotlin.coroutines/SuspendFunction1<androidx.compose.foundation.gestures/ScrollScope, kotlin/Unit>) // androidx.compose.foundation.gestures/ScrollableState.scroll|scroll(androidx.compose.foundation.MutatePriority;kotlin.coroutines.SuspendFunction1<androidx.compose.foundation.gestures.ScrollScope,kotlin.Unit>){}[0]
}

abstract interface androidx.compose.foundation.gestures/TargetedFlingBehavior : androidx.compose.foundation.gestures/FlingBehavior { // androidx.compose.foundation.gestures/TargetedFlingBehavior|null[0]
    abstract suspend fun (androidx.compose.foundation.gestures/ScrollScope).performFling(kotlin/Float, kotlin/Function1<kotlin/Float, kotlin/Unit>): kotlin/Float // androidx.compose.foundation.gestures/TargetedFlingBehavior.performFling|performFling@androidx.compose.foundation.gestures.ScrollScope(kotlin.Float;kotlin.Function1<kotlin.Float,kotlin.Unit>){}[0]
    open suspend fun (androidx.compose.foundation.gestures/ScrollScope).performFling(kotlin/Float): kotlin/Float // androidx.compose.foundation.gestures/TargetedFlingBehavior.performFling|performFling@androidx.compose.foundation.gestures.ScrollScope(kotlin.Float){}[0]
}

abstract interface androidx.compose.foundation.gestures/TransformScope { // androidx.compose.foundation.gestures/TransformScope|null[0]
    abstract fun transformBy(kotlin/Float = ..., androidx.compose.ui.geometry/Offset = ..., kotlin/Float = ...) // androidx.compose.foundation.gestures/TransformScope.transformBy|transformBy(kotlin.Float;androidx.compose.ui.geometry.Offset;kotlin.Float){}[0]
}

abstract interface androidx.compose.foundation.gestures/TransformableState { // androidx.compose.foundation.gestures/TransformableState|null[0]
    abstract val isTransformInProgress // androidx.compose.foundation.gestures/TransformableState.isTransformInProgress|{}isTransformInProgress[0]
        abstract fun <get-isTransformInProgress>(): kotlin/Boolean // androidx.compose.foundation.gestures/TransformableState.isTransformInProgress.<get-isTransformInProgress>|<get-isTransformInProgress>(){}[0]

    abstract suspend fun transform(androidx.compose.foundation/MutatePriority = ..., kotlin.coroutines/SuspendFunction1<androidx.compose.foundation.gestures/TransformScope, kotlin/Unit>) // androidx.compose.foundation.gestures/TransformableState.transform|transform(androidx.compose.foundation.MutatePriority;kotlin.coroutines.SuspendFunction1<androidx.compose.foundation.gestures.TransformScope,kotlin.Unit>){}[0]
}

abstract interface androidx.compose.foundation.interaction/DragInteraction : androidx.compose.foundation.interaction/Interaction { // androidx.compose.foundation.interaction/DragInteraction|null[0]
    final class Cancel : androidx.compose.foundation.interaction/DragInteraction { // androidx.compose.foundation.interaction/DragInteraction.Cancel|null[0]
        constructor <init>(androidx.compose.foundation.interaction/DragInteraction.Start) // androidx.compose.foundation.interaction/DragInteraction.Cancel.<init>|<init>(androidx.compose.foundation.interaction.DragInteraction.Start){}[0]

        final val start // androidx.compose.foundation.interaction/DragInteraction.Cancel.start|{}start[0]
            final fun <get-start>(): androidx.compose.foundation.interaction/DragInteraction.Start // androidx.compose.foundation.interaction/DragInteraction.Cancel.start.<get-start>|<get-start>(){}[0]
    }

    final class Start : androidx.compose.foundation.interaction/DragInteraction { // androidx.compose.foundation.interaction/DragInteraction.Start|null[0]
        constructor <init>() // androidx.compose.foundation.interaction/DragInteraction.Start.<init>|<init>(){}[0]
    }

    final class Stop : androidx.compose.foundation.interaction/DragInteraction { // androidx.compose.foundation.interaction/DragInteraction.Stop|null[0]
        constructor <init>(androidx.compose.foundation.interaction/DragInteraction.Start) // androidx.compose.foundation.interaction/DragInteraction.Stop.<init>|<init>(androidx.compose.foundation.interaction.DragInteraction.Start){}[0]

        final val start // androidx.compose.foundation.interaction/DragInteraction.Stop.start|{}start[0]
            final fun <get-start>(): androidx.compose.foundation.interaction/DragInteraction.Start // androidx.compose.foundation.interaction/DragInteraction.Stop.start.<get-start>|<get-start>(){}[0]
    }
}

abstract interface androidx.compose.foundation.interaction/FocusInteraction : androidx.compose.foundation.interaction/Interaction { // androidx.compose.foundation.interaction/FocusInteraction|null[0]
    final class Focus : androidx.compose.foundation.interaction/FocusInteraction { // androidx.compose.foundation.interaction/FocusInteraction.Focus|null[0]
        constructor <init>() // androidx.compose.foundation.interaction/FocusInteraction.Focus.<init>|<init>(){}[0]
    }

    final class Unfocus : androidx.compose.foundation.interaction/FocusInteraction { // androidx.compose.foundation.interaction/FocusInteraction.Unfocus|null[0]
        constructor <init>(androidx.compose.foundation.interaction/FocusInteraction.Focus) // androidx.compose.foundation.interaction/FocusInteraction.Unfocus.<init>|<init>(androidx.compose.foundation.interaction.FocusInteraction.Focus){}[0]

        final val focus // androidx.compose.foundation.interaction/FocusInteraction.Unfocus.focus|{}focus[0]
            final fun <get-focus>(): androidx.compose.foundation.interaction/FocusInteraction.Focus // androidx.compose.foundation.interaction/FocusInteraction.Unfocus.focus.<get-focus>|<get-focus>(){}[0]
    }
}

abstract interface androidx.compose.foundation.interaction/HoverInteraction : androidx.compose.foundation.interaction/Interaction { // androidx.compose.foundation.interaction/HoverInteraction|null[0]
    final class Enter : androidx.compose.foundation.interaction/HoverInteraction { // androidx.compose.foundation.interaction/HoverInteraction.Enter|null[0]
        constructor <init>() // androidx.compose.foundation.interaction/HoverInteraction.Enter.<init>|<init>(){}[0]
    }

    final class Exit : androidx.compose.foundation.interaction/HoverInteraction { // androidx.compose.foundation.interaction/HoverInteraction.Exit|null[0]
        constructor <init>(androidx.compose.foundation.interaction/HoverInteraction.Enter) // androidx.compose.foundation.interaction/HoverInteraction.Exit.<init>|<init>(androidx.compose.foundation.interaction.HoverInteraction.Enter){}[0]

        final val enter // androidx.compose.foundation.interaction/HoverInteraction.Exit.enter|{}enter[0]
            final fun <get-enter>(): androidx.compose.foundation.interaction/HoverInteraction.Enter // androidx.compose.foundation.interaction/HoverInteraction.Exit.enter.<get-enter>|<get-enter>(){}[0]
    }
}

abstract interface androidx.compose.foundation.interaction/Interaction // androidx.compose.foundation.interaction/Interaction|null[0]

abstract interface androidx.compose.foundation.interaction/InteractionSource { // androidx.compose.foundation.interaction/InteractionSource|null[0]
    abstract val interactions // androidx.compose.foundation.interaction/InteractionSource.interactions|{}interactions[0]
        abstract fun <get-interactions>(): kotlinx.coroutines.flow/Flow<androidx.compose.foundation.interaction/Interaction> // androidx.compose.foundation.interaction/InteractionSource.interactions.<get-interactions>|<get-interactions>(){}[0]
}

abstract interface androidx.compose.foundation.interaction/MutableInteractionSource : androidx.compose.foundation.interaction/InteractionSource { // androidx.compose.foundation.interaction/MutableInteractionSource|null[0]
    abstract fun tryEmit(androidx.compose.foundation.interaction/Interaction): kotlin/Boolean // androidx.compose.foundation.interaction/MutableInteractionSource.tryEmit|tryEmit(androidx.compose.foundation.interaction.Interaction){}[0]
    abstract suspend fun emit(androidx.compose.foundation.interaction/Interaction) // androidx.compose.foundation.interaction/MutableInteractionSource.emit|emit(androidx.compose.foundation.interaction.Interaction){}[0]
}

abstract interface androidx.compose.foundation.interaction/PressInteraction : androidx.compose.foundation.interaction/Interaction { // androidx.compose.foundation.interaction/PressInteraction|null[0]
    final class Cancel : androidx.compose.foundation.interaction/PressInteraction { // androidx.compose.foundation.interaction/PressInteraction.Cancel|null[0]
        constructor <init>(androidx.compose.foundation.interaction/PressInteraction.Press) // androidx.compose.foundation.interaction/PressInteraction.Cancel.<init>|<init>(androidx.compose.foundation.interaction.PressInteraction.Press){}[0]

        final val press // androidx.compose.foundation.interaction/PressInteraction.Cancel.press|{}press[0]
            final fun <get-press>(): androidx.compose.foundation.interaction/PressInteraction.Press // androidx.compose.foundation.interaction/PressInteraction.Cancel.press.<get-press>|<get-press>(){}[0]
    }

    final class Press : androidx.compose.foundation.interaction/PressInteraction { // androidx.compose.foundation.interaction/PressInteraction.Press|null[0]
        constructor <init>(androidx.compose.ui.geometry/Offset) // androidx.compose.foundation.interaction/PressInteraction.Press.<init>|<init>(androidx.compose.ui.geometry.Offset){}[0]

        final val pressPosition // androidx.compose.foundation.interaction/PressInteraction.Press.pressPosition|{}pressPosition[0]
            final fun <get-pressPosition>(): androidx.compose.ui.geometry/Offset // androidx.compose.foundation.interaction/PressInteraction.Press.pressPosition.<get-pressPosition>|<get-pressPosition>(){}[0]
    }

    final class Release : androidx.compose.foundation.interaction/PressInteraction { // androidx.compose.foundation.interaction/PressInteraction.Release|null[0]
        constructor <init>(androidx.compose.foundation.interaction/PressInteraction.Press) // androidx.compose.foundation.interaction/PressInteraction.Release.<init>|<init>(androidx.compose.foundation.interaction.PressInteraction.Press){}[0]

        final val press // androidx.compose.foundation.interaction/PressInteraction.Release.press|{}press[0]
            final fun <get-press>(): androidx.compose.foundation.interaction/PressInteraction.Press // androidx.compose.foundation.interaction/PressInteraction.Release.press.<get-press>|<get-press>(){}[0]
    }
}

abstract interface androidx.compose.foundation.lazy.grid/GridCells { // androidx.compose.foundation.lazy.grid/GridCells|null[0]
    abstract fun (androidx.compose.ui.unit/Density).calculateCrossAxisCellSizes(kotlin/Int, kotlin/Int): kotlin.collections/List<kotlin/Int> // androidx.compose.foundation.lazy.grid/GridCells.calculateCrossAxisCellSizes|calculateCrossAxisCellSizes@androidx.compose.ui.unit.Density(kotlin.Int;kotlin.Int){}[0]

    final class Adaptive : androidx.compose.foundation.lazy.grid/GridCells { // androidx.compose.foundation.lazy.grid/GridCells.Adaptive|null[0]
        constructor <init>(androidx.compose.ui.unit/Dp) // androidx.compose.foundation.lazy.grid/GridCells.Adaptive.<init>|<init>(androidx.compose.ui.unit.Dp){}[0]

        final fun (androidx.compose.ui.unit/Density).calculateCrossAxisCellSizes(kotlin/Int, kotlin/Int): kotlin.collections/List<kotlin/Int> // androidx.compose.foundation.lazy.grid/GridCells.Adaptive.calculateCrossAxisCellSizes|calculateCrossAxisCellSizes@androidx.compose.ui.unit.Density(kotlin.Int;kotlin.Int){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // androidx.compose.foundation.lazy.grid/GridCells.Adaptive.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // androidx.compose.foundation.lazy.grid/GridCells.Adaptive.hashCode|hashCode(){}[0]
    }

    final class Fixed : androidx.compose.foundation.lazy.grid/GridCells { // androidx.compose.foundation.lazy.grid/GridCells.Fixed|null[0]
        constructor <init>(kotlin/Int) // androidx.compose.foundation.lazy.grid/GridCells.Fixed.<init>|<init>(kotlin.Int){}[0]

        final fun (androidx.compose.ui.unit/Density).calculateCrossAxisCellSizes(kotlin/Int, kotlin/Int): kotlin.collections/List<kotlin/Int> // androidx.compose.foundation.lazy.grid/GridCells.Fixed.calculateCrossAxisCellSizes|calculateCrossAxisCellSizes@androidx.compose.ui.unit.Density(kotlin.Int;kotlin.Int){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // androidx.compose.foundation.lazy.grid/GridCells.Fixed.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // androidx.compose.foundation.lazy.grid/GridCells.Fixed.hashCode|hashCode(){}[0]
    }

    final class FixedSize : androidx.compose.foundation.lazy.grid/GridCells { // androidx.compose.foundation.lazy.grid/GridCells.FixedSize|null[0]
        constructor <init>(androidx.compose.ui.unit/Dp) // androidx.compose.foundation.lazy.grid/GridCells.FixedSize.<init>|<init>(androidx.compose.ui.unit.Dp){}[0]

        final fun (androidx.compose.ui.unit/Density).calculateCrossAxisCellSizes(kotlin/Int, kotlin/Int): kotlin.collections/List<kotlin/Int> // androidx.compose.foundation.lazy.grid/GridCells.FixedSize.calculateCrossAxisCellSizes|calculateCrossAxisCellSizes@androidx.compose.ui.unit.Density(kotlin.Int;kotlin.Int){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // androidx.compose.foundation.lazy.grid/GridCells.FixedSize.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // androidx.compose.foundation.lazy.grid/GridCells.FixedSize.hashCode|hashCode(){}[0]
    }
}

abstract interface androidx.compose.foundation.lazy.layout/LazyLayoutItemProvider { // androidx.compose.foundation.lazy.layout/LazyLayoutItemProvider|null[0]
    abstract val itemCount // androidx.compose.foundation.lazy.layout/LazyLayoutItemProvider.itemCount|{}itemCount[0]
        abstract fun <get-itemCount>(): kotlin/Int // androidx.compose.foundation.lazy.layout/LazyLayoutItemProvider.itemCount.<get-itemCount>|<get-itemCount>(){}[0]

    abstract fun Item(kotlin/Int, kotlin/Any, androidx.compose.runtime/Composer?, kotlin/Int) // androidx.compose.foundation.lazy.layout/LazyLayoutItemProvider.Item|Item(kotlin.Int;kotlin.Any;androidx.compose.runtime.Composer?;kotlin.Int){}[0]
    open fun getContentType(kotlin/Int): kotlin/Any? // androidx.compose.foundation.lazy.layout/LazyLayoutItemProvider.getContentType|getContentType(kotlin.Int){}[0]
    open fun getIndex(kotlin/Any): kotlin/Int // androidx.compose.foundation.lazy.layout/LazyLayoutItemProvider.getIndex|getIndex(kotlin.Any){}[0]
    open fun getKey(kotlin/Int): kotlin/Any // androidx.compose.foundation.lazy.layout/LazyLayoutItemProvider.getKey|getKey(kotlin.Int){}[0]
}

abstract interface androidx.compose.foundation.lazy.layout/LazyLayoutScrollScope : androidx.compose.foundation.gestures/ScrollScope { // androidx.compose.foundation.lazy.layout/LazyLayoutScrollScope|null[0]
    abstract val firstVisibleItemIndex // androidx.compose.foundation.lazy.layout/LazyLayoutScrollScope.firstVisibleItemIndex|{}firstVisibleItemIndex[0]
        abstract fun <get-firstVisibleItemIndex>(): kotlin/Int // androidx.compose.foundation.lazy.layout/LazyLayoutScrollScope.firstVisibleItemIndex.<get-firstVisibleItemIndex>|<get-firstVisibleItemIndex>(){}[0]
    abstract val firstVisibleItemScrollOffset // androidx.compose.foundation.lazy.layout/LazyLayoutScrollScope.firstVisibleItemScrollOffset|{}firstVisibleItemScrollOffset[0]
        abstract fun <get-firstVisibleItemScrollOffset>(): kotlin/Int // androidx.compose.foundation.lazy.layout/LazyLayoutScrollScope.firstVisibleItemScrollOffset.<get-firstVisibleItemScrollOffset>|<get-firstVisibleItemScrollOffset>(){}[0]
    abstract val itemCount // androidx.compose.foundation.lazy.layout/LazyLayoutScrollScope.itemCount|{}itemCount[0]
        abstract fun <get-itemCount>(): kotlin/Int // androidx.compose.foundation.lazy.layout/LazyLayoutScrollScope.itemCount.<get-itemCount>|<get-itemCount>(){}[0]
    abstract val lastVisibleItemIndex // androidx.compose.foundation.lazy.layout/LazyLayoutScrollScope.lastVisibleItemIndex|{}lastVisibleItemIndex[0]
        abstract fun <get-lastVisibleItemIndex>(): kotlin/Int // androidx.compose.foundation.lazy.layout/LazyLayoutScrollScope.lastVisibleItemIndex.<get-lastVisibleItemIndex>|<get-lastVisibleItemIndex>(){}[0]

    abstract fun calculateDistanceTo(kotlin/Int, kotlin/Int = ...): kotlin/Int // androidx.compose.foundation.lazy.layout/LazyLayoutScrollScope.calculateDistanceTo|calculateDistanceTo(kotlin.Int;kotlin.Int){}[0]
    abstract fun snapToItem(kotlin/Int, kotlin/Int = ...) // androidx.compose.foundation.lazy.layout/LazyLayoutScrollScope.snapToItem|snapToItem(kotlin.Int;kotlin.Int){}[0]
}

abstract interface androidx.compose.foundation.lazy.staggeredgrid/StaggeredGridCells { // androidx.compose.foundation.lazy.staggeredgrid/StaggeredGridCells|null[0]
    abstract fun (androidx.compose.ui.unit/Density).calculateCrossAxisCellSizes(kotlin/Int, kotlin/Int): kotlin/IntArray // androidx.compose.foundation.lazy.staggeredgrid/StaggeredGridCells.calculateCrossAxisCellSizes|calculateCrossAxisCellSizes@androidx.compose.ui.unit.Density(kotlin.Int;kotlin.Int){}[0]

    final class Adaptive : androidx.compose.foundation.lazy.staggeredgrid/StaggeredGridCells { // androidx.compose.foundation.lazy.staggeredgrid/StaggeredGridCells.Adaptive|null[0]
        constructor <init>(androidx.compose.ui.unit/Dp) // androidx.compose.foundation.lazy.staggeredgrid/StaggeredGridCells.Adaptive.<init>|<init>(androidx.compose.ui.unit.Dp){}[0]

        final fun (androidx.compose.ui.unit/Density).calculateCrossAxisCellSizes(kotlin/Int, kotlin/Int): kotlin/IntArray // androidx.compose.foundation.lazy.staggeredgrid/StaggeredGridCells.Adaptive.calculateCrossAxisCellSizes|calculateCrossAxisCellSizes@androidx.compose.ui.unit.Density(kotlin.Int;kotlin.Int){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // androidx.compose.foundation.lazy.staggeredgrid/StaggeredGridCells.Adaptive.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // androidx.compose.foundation.lazy.staggeredgrid/StaggeredGridCells.Adaptive.hashCode|hashCode(){}[0]
    }

    final class Fixed : androidx.compose.foundation.lazy.staggeredgrid/StaggeredGridCells { // androidx.compose.foundation.lazy.staggeredgrid/StaggeredGridCells.Fixed|null[0]
        constructor <init>(kotlin/Int) // androidx.compose.foundation.lazy.staggeredgrid/StaggeredGridCells.Fixed.<init>|<init>(kotlin.Int){}[0]

        final fun (androidx.compose.ui.unit/Density).calculateCrossAxisCellSizes(kotlin/Int, kotlin/Int): kotlin/IntArray // androidx.compose.foundation.lazy.staggeredgrid/StaggeredGridCells.Fixed.calculateCrossAxisCellSizes|calculateCrossAxisCellSizes@androidx.compose.ui.unit.Density(kotlin.Int;kotlin.Int){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // androidx.compose.foundation.lazy.staggeredgrid/StaggeredGridCells.Fixed.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // androidx.compose.foundation.lazy.staggeredgrid/StaggeredGridCells.Fixed.hashCode|hashCode(){}[0]
    }

    final class FixedSize : androidx.compose.foundation.lazy.staggeredgrid/StaggeredGridCells { // androidx.compose.foundation.lazy.staggeredgrid/StaggeredGridCells.FixedSize|null[0]
        constructor <init>(androidx.compose.ui.unit/Dp) // androidx.compose.foundation.lazy.staggeredgrid/StaggeredGridCells.FixedSize.<init>|<init>(androidx.compose.ui.unit.Dp){}[0]

        final fun (androidx.compose.ui.unit/Density).calculateCrossAxisCellSizes(kotlin/Int, kotlin/Int): kotlin/IntArray // androidx.compose.foundation.lazy.staggeredgrid/StaggeredGridCells.FixedSize.calculateCrossAxisCellSizes|calculateCrossAxisCellSizes@androidx.compose.ui.unit.Density(kotlin.Int;kotlin.Int){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // androidx.compose.foundation.lazy.staggeredgrid/StaggeredGridCells.FixedSize.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // androidx.compose.foundation.lazy.staggeredgrid/StaggeredGridCells.FixedSize.hashCode|hashCode(){}[0]
    }
}

abstract interface androidx.compose.foundation.lazy/LazyItemScope { // androidx.compose.foundation.lazy/LazyItemScope|null[0]
    abstract fun (androidx.compose.ui/Modifier).fillParentMaxHeight(kotlin/Float = ...): androidx.compose.ui/Modifier // androidx.compose.foundation.lazy/LazyItemScope.fillParentMaxHeight|fillParentMaxHeight@androidx.compose.ui.Modifier(kotlin.Float){}[0]
    abstract fun (androidx.compose.ui/Modifier).fillParentMaxSize(kotlin/Float = ...): androidx.compose.ui/Modifier // androidx.compose.foundation.lazy/LazyItemScope.fillParentMaxSize|fillParentMaxSize@androidx.compose.ui.Modifier(kotlin.Float){}[0]
    abstract fun (androidx.compose.ui/Modifier).fillParentMaxWidth(kotlin/Float = ...): androidx.compose.ui/Modifier // androidx.compose.foundation.lazy/LazyItemScope.fillParentMaxWidth|fillParentMaxWidth@androidx.compose.ui.Modifier(kotlin.Float){}[0]
    open fun (androidx.compose.ui/Modifier).animateItem(androidx.compose.animation.core/FiniteAnimationSpec<kotlin/Float>? = ..., androidx.compose.animation.core/FiniteAnimationSpec<androidx.compose.ui.unit/IntOffset>? = ..., androidx.compose.animation.core/FiniteAnimationSpec<kotlin/Float>? = ...): androidx.compose.ui/Modifier // androidx.compose.foundation.lazy/LazyItemScope.animateItem|animateItem@androidx.compose.ui.Modifier(androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float>?;androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.unit.IntOffset>?;androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float>?){}[0]
}

abstract interface androidx.compose.foundation.lazy/LazyListItemInfo { // androidx.compose.foundation.lazy/LazyListItemInfo|null[0]
    abstract val index // androidx.compose.foundation.lazy/LazyListItemInfo.index|{}index[0]
        abstract fun <get-index>(): kotlin/Int // androidx.compose.foundation.lazy/LazyListItemInfo.index.<get-index>|<get-index>(){}[0]
    abstract val key // androidx.compose.foundation.lazy/LazyListItemInfo.key|{}key[0]
        abstract fun <get-key>(): kotlin/Any // androidx.compose.foundation.lazy/LazyListItemInfo.key.<get-key>|<get-key>(){}[0]
    abstract val offset // androidx.compose.foundation.lazy/LazyListItemInfo.offset|{}offset[0]
        abstract fun <get-offset>(): kotlin/Int // androidx.compose.foundation.lazy/LazyListItemInfo.offset.<get-offset>|<get-offset>(){}[0]
    abstract val size // androidx.compose.foundation.lazy/LazyListItemInfo.size|{}size[0]
        abstract fun <get-size>(): kotlin/Int // androidx.compose.foundation.lazy/LazyListItemInfo.size.<get-size>|<get-size>(){}[0]
    open val contentType // androidx.compose.foundation.lazy/LazyListItemInfo.contentType|{}contentType[0]
        open fun <get-contentType>(): kotlin/Any? // androidx.compose.foundation.lazy/LazyListItemInfo.contentType.<get-contentType>|<get-contentType>(){}[0]
}

abstract interface androidx.compose.foundation.lazy/LazyListLayoutInfo { // androidx.compose.foundation.lazy/LazyListLayoutInfo|null[0]
    abstract val totalItemsCount // androidx.compose.foundation.lazy/LazyListLayoutInfo.totalItemsCount|{}totalItemsCount[0]
        abstract fun <get-totalItemsCount>(): kotlin/Int // androidx.compose.foundation.lazy/LazyListLayoutInfo.totalItemsCount.<get-totalItemsCount>|<get-totalItemsCount>(){}[0]
    abstract val viewportEndOffset // androidx.compose.foundation.lazy/LazyListLayoutInfo.viewportEndOffset|{}viewportEndOffset[0]
        abstract fun <get-viewportEndOffset>(): kotlin/Int // androidx.compose.foundation.lazy/LazyListLayoutInfo.viewportEndOffset.<get-viewportEndOffset>|<get-viewportEndOffset>(){}[0]
    abstract val viewportStartOffset // androidx.compose.foundation.lazy/LazyListLayoutInfo.viewportStartOffset|{}viewportStartOffset[0]
        abstract fun <get-viewportStartOffset>(): kotlin/Int // androidx.compose.foundation.lazy/LazyListLayoutInfo.viewportStartOffset.<get-viewportStartOffset>|<get-viewportStartOffset>(){}[0]
    abstract val visibleItemsInfo // androidx.compose.foundation.lazy/LazyListLayoutInfo.visibleItemsInfo|{}visibleItemsInfo[0]
        abstract fun <get-visibleItemsInfo>(): kotlin.collections/List<androidx.compose.foundation.lazy/LazyListItemInfo> // androidx.compose.foundation.lazy/LazyListLayoutInfo.visibleItemsInfo.<get-visibleItemsInfo>|<get-visibleItemsInfo>(){}[0]
    open val afterContentPadding // androidx.compose.foundation.lazy/LazyListLayoutInfo.afterContentPadding|{}afterContentPadding[0]
        open fun <get-afterContentPadding>(): kotlin/Int // androidx.compose.foundation.lazy/LazyListLayoutInfo.afterContentPadding.<get-afterContentPadding>|<get-afterContentPadding>(){}[0]
    open val beforeContentPadding // androidx.compose.foundation.lazy/LazyListLayoutInfo.beforeContentPadding|{}beforeContentPadding[0]
        open fun <get-beforeContentPadding>(): kotlin/Int // androidx.compose.foundation.lazy/LazyListLayoutInfo.beforeContentPadding.<get-beforeContentPadding>|<get-beforeContentPadding>(){}[0]
    open val mainAxisItemSpacing // androidx.compose.foundation.lazy/LazyListLayoutInfo.mainAxisItemSpacing|{}mainAxisItemSpacing[0]
        open fun <get-mainAxisItemSpacing>(): kotlin/Int // androidx.compose.foundation.lazy/LazyListLayoutInfo.mainAxisItemSpacing.<get-mainAxisItemSpacing>|<get-mainAxisItemSpacing>(){}[0]
    open val orientation // androidx.compose.foundation.lazy/LazyListLayoutInfo.orientation|{}orientation[0]
        open fun <get-orientation>(): androidx.compose.foundation.gestures/Orientation // androidx.compose.foundation.lazy/LazyListLayoutInfo.orientation.<get-orientation>|<get-orientation>(){}[0]
    open val reverseLayout // androidx.compose.foundation.lazy/LazyListLayoutInfo.reverseLayout|{}reverseLayout[0]
        open fun <get-reverseLayout>(): kotlin/Boolean // androidx.compose.foundation.lazy/LazyListLayoutInfo.reverseLayout.<get-reverseLayout>|<get-reverseLayout>(){}[0]
    open val viewportSize // androidx.compose.foundation.lazy/LazyListLayoutInfo.viewportSize|{}viewportSize[0]
        open fun <get-viewportSize>(): androidx.compose.ui.unit/IntSize // androidx.compose.foundation.lazy/LazyListLayoutInfo.viewportSize.<get-viewportSize>|<get-viewportSize>(){}[0]
}

abstract interface androidx.compose.foundation.lazy/LazyListScope { // androidx.compose.foundation.lazy/LazyListScope|null[0]
    open fun item(kotlin/Any? = ..., kotlin/Any? = ..., kotlin/Function3<androidx.compose.foundation.lazy/LazyItemScope, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>) // androidx.compose.foundation.lazy/LazyListScope.item|item(kotlin.Any?;kotlin.Any?;kotlin.Function3<androidx.compose.foundation.lazy.LazyItemScope,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>){}[0]
    open fun item(kotlin/Any? = ..., kotlin/Function3<androidx.compose.foundation.lazy/LazyItemScope, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>) // androidx.compose.foundation.lazy/LazyListScope.item|item(kotlin.Any?;kotlin.Function3<androidx.compose.foundation.lazy.LazyItemScope,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>){}[0]
    open fun items(kotlin/Int, kotlin/Function1<kotlin/Int, kotlin/Any>? = ..., kotlin/Function1<kotlin/Int, kotlin/Any?> = ..., kotlin/Function4<androidx.compose.foundation.lazy/LazyItemScope, kotlin/Int, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>) // androidx.compose.foundation.lazy/LazyListScope.items|items(kotlin.Int;kotlin.Function1<kotlin.Int,kotlin.Any>?;kotlin.Function1<kotlin.Int,kotlin.Any?>;kotlin.Function4<androidx.compose.foundation.lazy.LazyItemScope,kotlin.Int,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>){}[0]
    open fun items(kotlin/Int, kotlin/Function1<kotlin/Int, kotlin/Any>? = ..., kotlin/Function4<androidx.compose.foundation.lazy/LazyItemScope, kotlin/Int, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>) // androidx.compose.foundation.lazy/LazyListScope.items|items(kotlin.Int;kotlin.Function1<kotlin.Int,kotlin.Any>?;kotlin.Function4<androidx.compose.foundation.lazy.LazyItemScope,kotlin.Int,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>){}[0]
    open fun stickyHeader(kotlin/Any? = ..., kotlin/Any? = ..., kotlin/Function3<androidx.compose.foundation.lazy/LazyItemScope, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>) // androidx.compose.foundation.lazy/LazyListScope.stickyHeader|stickyHeader(kotlin.Any?;kotlin.Any?;kotlin.Function3<androidx.compose.foundation.lazy.LazyItemScope,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>){}[0]
    open fun stickyHeader(kotlin/Any? = ..., kotlin/Any? = ..., kotlin/Function4<androidx.compose.foundation.lazy/LazyItemScope, kotlin/Int, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>) // androidx.compose.foundation.lazy/LazyListScope.stickyHeader|stickyHeader(kotlin.Any?;kotlin.Any?;kotlin.Function4<androidx.compose.foundation.lazy.LazyItemScope,kotlin.Int,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>){}[0]
}

abstract interface androidx.compose.foundation.pager/PageSize { // androidx.compose.foundation.pager/PageSize|null[0]
    abstract fun (androidx.compose.ui.unit/Density).calculateMainAxisPageSize(kotlin/Int, kotlin/Int): kotlin/Int // androidx.compose.foundation.pager/PageSize.calculateMainAxisPageSize|calculateMainAxisPageSize@androidx.compose.ui.unit.Density(kotlin.Int;kotlin.Int){}[0]

    final class Fixed : androidx.compose.foundation.pager/PageSize { // androidx.compose.foundation.pager/PageSize.Fixed|null[0]
        constructor <init>(androidx.compose.ui.unit/Dp) // androidx.compose.foundation.pager/PageSize.Fixed.<init>|<init>(androidx.compose.ui.unit.Dp){}[0]

        final val pageSize // androidx.compose.foundation.pager/PageSize.Fixed.pageSize|{}pageSize[0]
            final fun <get-pageSize>(): androidx.compose.ui.unit/Dp // androidx.compose.foundation.pager/PageSize.Fixed.pageSize.<get-pageSize>|<get-pageSize>(){}[0]

        final fun (androidx.compose.ui.unit/Density).calculateMainAxisPageSize(kotlin/Int, kotlin/Int): kotlin/Int // androidx.compose.foundation.pager/PageSize.Fixed.calculateMainAxisPageSize|calculateMainAxisPageSize@androidx.compose.ui.unit.Density(kotlin.Int;kotlin.Int){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // androidx.compose.foundation.pager/PageSize.Fixed.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // androidx.compose.foundation.pager/PageSize.Fixed.hashCode|hashCode(){}[0]
    }

    final object Fill : androidx.compose.foundation.pager/PageSize { // androidx.compose.foundation.pager/PageSize.Fill|null[0]
        final fun (androidx.compose.ui.unit/Density).calculateMainAxisPageSize(kotlin/Int, kotlin/Int): kotlin/Int // androidx.compose.foundation.pager/PageSize.Fill.calculateMainAxisPageSize|calculateMainAxisPageSize@androidx.compose.ui.unit.Density(kotlin.Int;kotlin.Int){}[0]
    }
}

abstract interface androidx.compose.foundation.pager/PagerSnapDistance { // androidx.compose.foundation.pager/PagerSnapDistance|null[0]
    abstract fun calculateTargetPage(kotlin/Int, kotlin/Int, kotlin/Float, kotlin/Int, kotlin/Int): kotlin/Int // androidx.compose.foundation.pager/PagerSnapDistance.calculateTargetPage|calculateTargetPage(kotlin.Int;kotlin.Int;kotlin.Float;kotlin.Int;kotlin.Int){}[0]

    final object Companion { // androidx.compose.foundation.pager/PagerSnapDistance.Companion|null[0]
        final fun atMost(kotlin/Int): androidx.compose.foundation.pager/PagerSnapDistance // androidx.compose.foundation.pager/PagerSnapDistance.Companion.atMost|atMost(kotlin.Int){}[0]
    }
}

abstract interface androidx.compose.foundation.relocation/BringIntoViewResponder { // androidx.compose.foundation.relocation/BringIntoViewResponder|null[0]
    abstract fun calculateRectForParent(androidx.compose.ui.geometry/Rect): androidx.compose.ui.geometry/Rect // androidx.compose.foundation.relocation/BringIntoViewResponder.calculateRectForParent|calculateRectForParent(androidx.compose.ui.geometry.Rect){}[0]
    abstract suspend fun bringChildIntoView(kotlin/Function0<androidx.compose.ui.geometry/Rect?>) // androidx.compose.foundation.relocation/BringIntoViewResponder.bringChildIntoView|bringChildIntoView(kotlin.Function0<androidx.compose.ui.geometry.Rect?>){}[0]
}

abstract interface androidx.compose.foundation.shape/CornerSize { // androidx.compose.foundation.shape/CornerSize|null[0]
    abstract fun toPx(androidx.compose.ui.geometry/Size, androidx.compose.ui.unit/Density): kotlin/Float // androidx.compose.foundation.shape/CornerSize.toPx|toPx(androidx.compose.ui.geometry.Size;androidx.compose.ui.unit.Density){}[0]
}

abstract interface androidx.compose.foundation.text.contextmenu.data/TextContextMenuSession { // androidx.compose.foundation.text.contextmenu.data/TextContextMenuSession|null[0]
    abstract fun close() // androidx.compose.foundation.text.contextmenu.data/TextContextMenuSession.close|close(){}[0]
}

abstract interface androidx.compose.foundation.text.contextmenu.provider/TextContextMenuDataProvider { // androidx.compose.foundation.text.contextmenu.provider/TextContextMenuDataProvider|null[0]
    abstract fun contentBounds(androidx.compose.ui.layout/LayoutCoordinates): androidx.compose.ui.geometry/Rect // androidx.compose.foundation.text.contextmenu.provider/TextContextMenuDataProvider.contentBounds|contentBounds(androidx.compose.ui.layout.LayoutCoordinates){}[0]
    abstract fun data(): androidx.compose.foundation.text.contextmenu.data/TextContextMenuData // androidx.compose.foundation.text.contextmenu.provider/TextContextMenuDataProvider.data|data(){}[0]
    abstract fun position(androidx.compose.ui.layout/LayoutCoordinates): androidx.compose.ui.geometry/Offset // androidx.compose.foundation.text.contextmenu.provider/TextContextMenuDataProvider.position|position(androidx.compose.ui.layout.LayoutCoordinates){}[0]
}

abstract interface androidx.compose.foundation.text.contextmenu.provider/TextContextMenuProvider { // androidx.compose.foundation.text.contextmenu.provider/TextContextMenuProvider|null[0]
    abstract suspend fun showTextContextMenu(androidx.compose.foundation.text.contextmenu.provider/TextContextMenuDataProvider) // androidx.compose.foundation.text.contextmenu.provider/TextContextMenuProvider.showTextContextMenu|showTextContextMenu(androidx.compose.foundation.text.contextmenu.provider.TextContextMenuDataProvider){}[0]
}

abstract interface androidx.compose.foundation.text/KeyboardActionScope { // androidx.compose.foundation.text/KeyboardActionScope|null[0]
    abstract fun defaultKeyboardAction(androidx.compose.ui.text.input/ImeAction) // androidx.compose.foundation.text/KeyboardActionScope.defaultKeyboardAction|defaultKeyboardAction(androidx.compose.ui.text.input.ImeAction){}[0]
}

abstract interface androidx.compose.foundation.text/TextAutoSize { // androidx.compose.foundation.text/TextAutoSize|null[0]
    abstract fun (androidx.compose.foundation.text.modifiers/TextAutoSizeLayoutScope).getFontSize(androidx.compose.ui.unit/Constraints, androidx.compose.ui.text/AnnotatedString): androidx.compose.ui.unit/TextUnit // androidx.compose.foundation.text/TextAutoSize.getFontSize|getFontSize@androidx.compose.foundation.text.modifiers.TextAutoSizeLayoutScope(androidx.compose.ui.unit.Constraints;androidx.compose.ui.text.AnnotatedString){}[0]
    abstract fun equals(kotlin/Any?): kotlin/Boolean // androidx.compose.foundation.text/TextAutoSize.equals|equals(kotlin.Any?){}[0]
    abstract fun hashCode(): kotlin/Int // androidx.compose.foundation.text/TextAutoSize.hashCode|hashCode(){}[0]

    final object Companion { // androidx.compose.foundation.text/TextAutoSize.Companion|null[0]
        final fun StepBased(androidx.compose.ui.unit/TextUnit = ..., androidx.compose.ui.unit/TextUnit = ..., androidx.compose.ui.unit/TextUnit = ...): androidx.compose.foundation.text/TextAutoSize // androidx.compose.foundation.text/TextAutoSize.Companion.StepBased|StepBased(androidx.compose.ui.unit.TextUnit;androidx.compose.ui.unit.TextUnit;androidx.compose.ui.unit.TextUnit){}[0]
    }
}

abstract interface androidx.compose.foundation/Indication { // androidx.compose.foundation/Indication|null[0]
    open fun rememberUpdatedInstance(androidx.compose.foundation.interaction/InteractionSource, androidx.compose.runtime/Composer?, kotlin/Int): androidx.compose.foundation/IndicationInstance // androidx.compose.foundation/Indication.rememberUpdatedInstance|rememberUpdatedInstance(androidx.compose.foundation.interaction.InteractionSource;androidx.compose.runtime.Composer?;kotlin.Int){}[0]
}

abstract interface androidx.compose.foundation/IndicationInstance { // androidx.compose.foundation/IndicationInstance|null[0]
    abstract fun (androidx.compose.ui.graphics.drawscope/ContentDrawScope).drawIndication() // androidx.compose.foundation/IndicationInstance.drawIndication|drawIndication@androidx.compose.ui.graphics.drawscope.ContentDrawScope(){}[0]
}

abstract interface androidx.compose.foundation/IndicationNodeFactory : androidx.compose.foundation/Indication { // androidx.compose.foundation/IndicationNodeFactory|null[0]
    abstract fun create(androidx.compose.foundation.interaction/InteractionSource): androidx.compose.ui.node/DelegatableNode // androidx.compose.foundation/IndicationNodeFactory.create|create(androidx.compose.foundation.interaction.InteractionSource){}[0]
    abstract fun equals(kotlin/Any?): kotlin/Boolean // androidx.compose.foundation/IndicationNodeFactory.equals|equals(kotlin.Any?){}[0]
    abstract fun hashCode(): kotlin/Int // androidx.compose.foundation/IndicationNodeFactory.hashCode|hashCode(){}[0]
}

abstract interface androidx.compose.foundation/OverscrollEffect { // androidx.compose.foundation/OverscrollEffect|null[0]
    abstract val isInProgress // androidx.compose.foundation/OverscrollEffect.isInProgress|{}isInProgress[0]
        abstract fun <get-isInProgress>(): kotlin/Boolean // androidx.compose.foundation/OverscrollEffect.isInProgress.<get-isInProgress>|<get-isInProgress>(){}[0]
    open val effectModifier // androidx.compose.foundation/OverscrollEffect.effectModifier|{}effectModifier[0]
        open fun <get-effectModifier>(): androidx.compose.ui/Modifier // androidx.compose.foundation/OverscrollEffect.effectModifier.<get-effectModifier>|<get-effectModifier>(){}[0]
    open val node // androidx.compose.foundation/OverscrollEffect.node|{}node[0]
        open fun <get-node>(): androidx.compose.ui.node/DelegatableNode // androidx.compose.foundation/OverscrollEffect.node.<get-node>|<get-node>(){}[0]

    abstract fun applyToScroll(androidx.compose.ui.geometry/Offset, androidx.compose.ui.input.nestedscroll/NestedScrollSource, kotlin/Function1<androidx.compose.ui.geometry/Offset, androidx.compose.ui.geometry/Offset>): androidx.compose.ui.geometry/Offset // androidx.compose.foundation/OverscrollEffect.applyToScroll|applyToScroll(androidx.compose.ui.geometry.Offset;androidx.compose.ui.input.nestedscroll.NestedScrollSource;kotlin.Function1<androidx.compose.ui.geometry.Offset,androidx.compose.ui.geometry.Offset>){}[0]
    abstract suspend fun applyToFling(androidx.compose.ui.unit/Velocity, kotlin.coroutines/SuspendFunction1<androidx.compose.ui.unit/Velocity, androidx.compose.ui.unit/Velocity>) // androidx.compose.foundation/OverscrollEffect.applyToFling|applyToFling(androidx.compose.ui.unit.Velocity;kotlin.coroutines.SuspendFunction1<androidx.compose.ui.unit.Velocity,androidx.compose.ui.unit.Velocity>){}[0]
}

abstract interface androidx.compose.foundation/OverscrollFactory { // androidx.compose.foundation/OverscrollFactory|null[0]
    abstract fun createOverscrollEffect(): androidx.compose.foundation/OverscrollEffect // androidx.compose.foundation/OverscrollFactory.createOverscrollEffect|createOverscrollEffect(){}[0]
    abstract fun equals(kotlin/Any?): kotlin/Boolean // androidx.compose.foundation/OverscrollFactory.equals|equals(kotlin.Any?){}[0]
    abstract fun hashCode(): kotlin/Int // androidx.compose.foundation/OverscrollFactory.hashCode|hashCode(){}[0]
}

sealed interface <#A: out kotlin/Any?> androidx.compose.foundation.lazy.layout/IntervalList { // androidx.compose.foundation.lazy.layout/IntervalList|null[0]
    abstract val size // androidx.compose.foundation.lazy.layout/IntervalList.size|{}size[0]
        abstract fun <get-size>(): kotlin/Int // androidx.compose.foundation.lazy.layout/IntervalList.size.<get-size>|<get-size>(){}[0]

    abstract fun forEach(kotlin/Int = ..., kotlin/Int = ..., kotlin/Function1<androidx.compose.foundation.lazy.layout/IntervalList.Interval<#A>, kotlin/Unit>) // androidx.compose.foundation.lazy.layout/IntervalList.forEach|forEach(kotlin.Int;kotlin.Int;kotlin.Function1<androidx.compose.foundation.lazy.layout.IntervalList.Interval<1:0>,kotlin.Unit>){}[0]
    abstract fun get(kotlin/Int): androidx.compose.foundation.lazy.layout/IntervalList.Interval<#A> // androidx.compose.foundation.lazy.layout/IntervalList.get|get(kotlin.Int){}[0]

    final class <#A1: out kotlin/Any?> Interval { // androidx.compose.foundation.lazy.layout/IntervalList.Interval|null[0]
        final val size // androidx.compose.foundation.lazy.layout/IntervalList.Interval.size|{}size[0]
            final fun <get-size>(): kotlin/Int // androidx.compose.foundation.lazy.layout/IntervalList.Interval.size.<get-size>|<get-size>(){}[0]
        final val startIndex // androidx.compose.foundation.lazy.layout/IntervalList.Interval.startIndex|{}startIndex[0]
            final fun <get-startIndex>(): kotlin/Int // androidx.compose.foundation.lazy.layout/IntervalList.Interval.startIndex.<get-startIndex>|<get-startIndex>(){}[0]
        final val value // androidx.compose.foundation.lazy.layout/IntervalList.Interval.value|{}value[0]
            final fun <get-value>(): #A1 // androidx.compose.foundation.lazy.layout/IntervalList.Interval.value.<get-value>|<get-value>(){}[0]
    }
}

sealed interface androidx.compose.foundation.lazy.grid/LazyGridItemInfo { // androidx.compose.foundation.lazy.grid/LazyGridItemInfo|null[0]
    abstract val column // androidx.compose.foundation.lazy.grid/LazyGridItemInfo.column|{}column[0]
        abstract fun <get-column>(): kotlin/Int // androidx.compose.foundation.lazy.grid/LazyGridItemInfo.column.<get-column>|<get-column>(){}[0]
    abstract val contentType // androidx.compose.foundation.lazy.grid/LazyGridItemInfo.contentType|{}contentType[0]
        abstract fun <get-contentType>(): kotlin/Any? // androidx.compose.foundation.lazy.grid/LazyGridItemInfo.contentType.<get-contentType>|<get-contentType>(){}[0]
    abstract val index // androidx.compose.foundation.lazy.grid/LazyGridItemInfo.index|{}index[0]
        abstract fun <get-index>(): kotlin/Int // androidx.compose.foundation.lazy.grid/LazyGridItemInfo.index.<get-index>|<get-index>(){}[0]
    abstract val key // androidx.compose.foundation.lazy.grid/LazyGridItemInfo.key|{}key[0]
        abstract fun <get-key>(): kotlin/Any // androidx.compose.foundation.lazy.grid/LazyGridItemInfo.key.<get-key>|<get-key>(){}[0]
    abstract val offset // androidx.compose.foundation.lazy.grid/LazyGridItemInfo.offset|{}offset[0]
        abstract fun <get-offset>(): androidx.compose.ui.unit/IntOffset // androidx.compose.foundation.lazy.grid/LazyGridItemInfo.offset.<get-offset>|<get-offset>(){}[0]
    abstract val row // androidx.compose.foundation.lazy.grid/LazyGridItemInfo.row|{}row[0]
        abstract fun <get-row>(): kotlin/Int // androidx.compose.foundation.lazy.grid/LazyGridItemInfo.row.<get-row>|<get-row>(){}[0]
    abstract val size // androidx.compose.foundation.lazy.grid/LazyGridItemInfo.size|{}size[0]
        abstract fun <get-size>(): androidx.compose.ui.unit/IntSize // androidx.compose.foundation.lazy.grid/LazyGridItemInfo.size.<get-size>|<get-size>(){}[0]
    abstract val span // androidx.compose.foundation.lazy.grid/LazyGridItemInfo.span|{}span[0]
        abstract fun <get-span>(): kotlin/Int // androidx.compose.foundation.lazy.grid/LazyGridItemInfo.span.<get-span>|<get-span>(){}[0]

    final object Companion { // androidx.compose.foundation.lazy.grid/LazyGridItemInfo.Companion|null[0]
        final const val UnknownColumn // androidx.compose.foundation.lazy.grid/LazyGridItemInfo.Companion.UnknownColumn|{}UnknownColumn[0]
            final fun <get-UnknownColumn>(): kotlin/Int // androidx.compose.foundation.lazy.grid/LazyGridItemInfo.Companion.UnknownColumn.<get-UnknownColumn>|<get-UnknownColumn>(){}[0]
        final const val UnknownRow // androidx.compose.foundation.lazy.grid/LazyGridItemInfo.Companion.UnknownRow|{}UnknownRow[0]
            final fun <get-UnknownRow>(): kotlin/Int // androidx.compose.foundation.lazy.grid/LazyGridItemInfo.Companion.UnknownRow.<get-UnknownRow>|<get-UnknownRow>(){}[0]
    }
}

sealed interface androidx.compose.foundation.lazy.grid/LazyGridItemScope { // androidx.compose.foundation.lazy.grid/LazyGridItemScope|null[0]
    abstract fun (androidx.compose.ui/Modifier).animateItem(androidx.compose.animation.core/FiniteAnimationSpec<kotlin/Float>? = ..., androidx.compose.animation.core/FiniteAnimationSpec<androidx.compose.ui.unit/IntOffset>? = ..., androidx.compose.animation.core/FiniteAnimationSpec<kotlin/Float>? = ...): androidx.compose.ui/Modifier // androidx.compose.foundation.lazy.grid/LazyGridItemScope.animateItem|animateItem@androidx.compose.ui.Modifier(androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float>?;androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.unit.IntOffset>?;androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float>?){}[0]
}

sealed interface androidx.compose.foundation.lazy.grid/LazyGridItemSpanScope { // androidx.compose.foundation.lazy.grid/LazyGridItemSpanScope|null[0]
    abstract val maxCurrentLineSpan // androidx.compose.foundation.lazy.grid/LazyGridItemSpanScope.maxCurrentLineSpan|{}maxCurrentLineSpan[0]
        abstract fun <get-maxCurrentLineSpan>(): kotlin/Int // androidx.compose.foundation.lazy.grid/LazyGridItemSpanScope.maxCurrentLineSpan.<get-maxCurrentLineSpan>|<get-maxCurrentLineSpan>(){}[0]
    abstract val maxLineSpan // androidx.compose.foundation.lazy.grid/LazyGridItemSpanScope.maxLineSpan|{}maxLineSpan[0]
        abstract fun <get-maxLineSpan>(): kotlin/Int // androidx.compose.foundation.lazy.grid/LazyGridItemSpanScope.maxLineSpan.<get-maxLineSpan>|<get-maxLineSpan>(){}[0]
}

sealed interface androidx.compose.foundation.lazy.grid/LazyGridLayoutInfo { // androidx.compose.foundation.lazy.grid/LazyGridLayoutInfo|null[0]
    abstract val afterContentPadding // androidx.compose.foundation.lazy.grid/LazyGridLayoutInfo.afterContentPadding|{}afterContentPadding[0]
        abstract fun <get-afterContentPadding>(): kotlin/Int // androidx.compose.foundation.lazy.grid/LazyGridLayoutInfo.afterContentPadding.<get-afterContentPadding>|<get-afterContentPadding>(){}[0]
    abstract val beforeContentPadding // androidx.compose.foundation.lazy.grid/LazyGridLayoutInfo.beforeContentPadding|{}beforeContentPadding[0]
        abstract fun <get-beforeContentPadding>(): kotlin/Int // androidx.compose.foundation.lazy.grid/LazyGridLayoutInfo.beforeContentPadding.<get-beforeContentPadding>|<get-beforeContentPadding>(){}[0]
    abstract val mainAxisItemSpacing // androidx.compose.foundation.lazy.grid/LazyGridLayoutInfo.mainAxisItemSpacing|{}mainAxisItemSpacing[0]
        abstract fun <get-mainAxisItemSpacing>(): kotlin/Int // androidx.compose.foundation.lazy.grid/LazyGridLayoutInfo.mainAxisItemSpacing.<get-mainAxisItemSpacing>|<get-mainAxisItemSpacing>(){}[0]
    abstract val maxSpan // androidx.compose.foundation.lazy.grid/LazyGridLayoutInfo.maxSpan|{}maxSpan[0]
        abstract fun <get-maxSpan>(): kotlin/Int // androidx.compose.foundation.lazy.grid/LazyGridLayoutInfo.maxSpan.<get-maxSpan>|<get-maxSpan>(){}[0]
    abstract val orientation // androidx.compose.foundation.lazy.grid/LazyGridLayoutInfo.orientation|{}orientation[0]
        abstract fun <get-orientation>(): androidx.compose.foundation.gestures/Orientation // androidx.compose.foundation.lazy.grid/LazyGridLayoutInfo.orientation.<get-orientation>|<get-orientation>(){}[0]
    abstract val reverseLayout // androidx.compose.foundation.lazy.grid/LazyGridLayoutInfo.reverseLayout|{}reverseLayout[0]
        abstract fun <get-reverseLayout>(): kotlin/Boolean // androidx.compose.foundation.lazy.grid/LazyGridLayoutInfo.reverseLayout.<get-reverseLayout>|<get-reverseLayout>(){}[0]
    abstract val totalItemsCount // androidx.compose.foundation.lazy.grid/LazyGridLayoutInfo.totalItemsCount|{}totalItemsCount[0]
        abstract fun <get-totalItemsCount>(): kotlin/Int // androidx.compose.foundation.lazy.grid/LazyGridLayoutInfo.totalItemsCount.<get-totalItemsCount>|<get-totalItemsCount>(){}[0]
    abstract val viewportEndOffset // androidx.compose.foundation.lazy.grid/LazyGridLayoutInfo.viewportEndOffset|{}viewportEndOffset[0]
        abstract fun <get-viewportEndOffset>(): kotlin/Int // androidx.compose.foundation.lazy.grid/LazyGridLayoutInfo.viewportEndOffset.<get-viewportEndOffset>|<get-viewportEndOffset>(){}[0]
    abstract val viewportSize // androidx.compose.foundation.lazy.grid/LazyGridLayoutInfo.viewportSize|{}viewportSize[0]
        abstract fun <get-viewportSize>(): androidx.compose.ui.unit/IntSize // androidx.compose.foundation.lazy.grid/LazyGridLayoutInfo.viewportSize.<get-viewportSize>|<get-viewportSize>(){}[0]
    abstract val viewportStartOffset // androidx.compose.foundation.lazy.grid/LazyGridLayoutInfo.viewportStartOffset|{}viewportStartOffset[0]
        abstract fun <get-viewportStartOffset>(): kotlin/Int // androidx.compose.foundation.lazy.grid/LazyGridLayoutInfo.viewportStartOffset.<get-viewportStartOffset>|<get-viewportStartOffset>(){}[0]
    abstract val visibleItemsInfo // androidx.compose.foundation.lazy.grid/LazyGridLayoutInfo.visibleItemsInfo|{}visibleItemsInfo[0]
        abstract fun <get-visibleItemsInfo>(): kotlin.collections/List<androidx.compose.foundation.lazy.grid/LazyGridItemInfo> // androidx.compose.foundation.lazy.grid/LazyGridLayoutInfo.visibleItemsInfo.<get-visibleItemsInfo>|<get-visibleItemsInfo>(){}[0]
}

sealed interface androidx.compose.foundation.lazy.grid/LazyGridScope { // androidx.compose.foundation.lazy.grid/LazyGridScope|null[0]
    abstract fun item(kotlin/Any? = ..., kotlin/Function1<androidx.compose.foundation.lazy.grid/LazyGridItemSpanScope, androidx.compose.foundation.lazy.grid/GridItemSpan>? = ..., kotlin/Any? = ..., kotlin/Function3<androidx.compose.foundation.lazy.grid/LazyGridItemScope, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>) // androidx.compose.foundation.lazy.grid/LazyGridScope.item|item(kotlin.Any?;kotlin.Function1<androidx.compose.foundation.lazy.grid.LazyGridItemSpanScope,androidx.compose.foundation.lazy.grid.GridItemSpan>?;kotlin.Any?;kotlin.Function3<androidx.compose.foundation.lazy.grid.LazyGridItemScope,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>){}[0]
    abstract fun items(kotlin/Int, kotlin/Function1<kotlin/Int, kotlin/Any>? = ..., kotlin/Function2<androidx.compose.foundation.lazy.grid/LazyGridItemSpanScope, kotlin/Int, androidx.compose.foundation.lazy.grid/GridItemSpan>? = ..., kotlin/Function1<kotlin/Int, kotlin/Any?> = ..., kotlin/Function4<androidx.compose.foundation.lazy.grid/LazyGridItemScope, kotlin/Int, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>) // androidx.compose.foundation.lazy.grid/LazyGridScope.items|items(kotlin.Int;kotlin.Function1<kotlin.Int,kotlin.Any>?;kotlin.Function2<androidx.compose.foundation.lazy.grid.LazyGridItemSpanScope,kotlin.Int,androidx.compose.foundation.lazy.grid.GridItemSpan>?;kotlin.Function1<kotlin.Int,kotlin.Any?>;kotlin.Function4<androidx.compose.foundation.lazy.grid.LazyGridItemScope,kotlin.Int,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>){}[0]
    abstract fun stickyHeader(kotlin/Any? = ..., kotlin/Any? = ..., kotlin/Function4<androidx.compose.foundation.lazy.grid/LazyGridItemScope, kotlin/Int, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>) // androidx.compose.foundation.lazy.grid/LazyGridScope.stickyHeader|stickyHeader(kotlin.Any?;kotlin.Any?;kotlin.Function4<androidx.compose.foundation.lazy.grid.LazyGridItemScope,kotlin.Int,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>){}[0]
}

sealed interface androidx.compose.foundation.lazy.layout/LazyLayoutMeasureScope : androidx.compose.ui.layout/MeasureScope { // androidx.compose.foundation.lazy.layout/LazyLayoutMeasureScope|null[0]
    abstract fun compose(kotlin/Int): kotlin.collections/List<androidx.compose.ui.layout/Measurable> // androidx.compose.foundation.lazy.layout/LazyLayoutMeasureScope.compose|compose(kotlin.Int){}[0]
}

sealed interface androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridItemInfo { // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridItemInfo|null[0]
    abstract val contentType // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridItemInfo.contentType|{}contentType[0]
        abstract fun <get-contentType>(): kotlin/Any? // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridItemInfo.contentType.<get-contentType>|<get-contentType>(){}[0]
    abstract val index // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridItemInfo.index|{}index[0]
        abstract fun <get-index>(): kotlin/Int // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridItemInfo.index.<get-index>|<get-index>(){}[0]
    abstract val key // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridItemInfo.key|{}key[0]
        abstract fun <get-key>(): kotlin/Any // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridItemInfo.key.<get-key>|<get-key>(){}[0]
    abstract val lane // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridItemInfo.lane|{}lane[0]
        abstract fun <get-lane>(): kotlin/Int // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridItemInfo.lane.<get-lane>|<get-lane>(){}[0]
    abstract val offset // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridItemInfo.offset|{}offset[0]
        abstract fun <get-offset>(): androidx.compose.ui.unit/IntOffset // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridItemInfo.offset.<get-offset>|<get-offset>(){}[0]
    abstract val size // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridItemInfo.size|{}size[0]
        abstract fun <get-size>(): androidx.compose.ui.unit/IntSize // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridItemInfo.size.<get-size>|<get-size>(){}[0]
}

sealed interface androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridItemScope { // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridItemScope|null[0]
    abstract fun (androidx.compose.ui/Modifier).animateItem(androidx.compose.animation.core/FiniteAnimationSpec<kotlin/Float>? = ..., androidx.compose.animation.core/FiniteAnimationSpec<androidx.compose.ui.unit/IntOffset>? = ..., androidx.compose.animation.core/FiniteAnimationSpec<kotlin/Float>? = ...): androidx.compose.ui/Modifier // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridItemScope.animateItem|animateItem@androidx.compose.ui.Modifier(androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float>?;androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.unit.IntOffset>?;androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float>?){}[0]
}

sealed interface androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridLayoutInfo { // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridLayoutInfo|null[0]
    abstract val afterContentPadding // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridLayoutInfo.afterContentPadding|{}afterContentPadding[0]
        abstract fun <get-afterContentPadding>(): kotlin/Int // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridLayoutInfo.afterContentPadding.<get-afterContentPadding>|<get-afterContentPadding>(){}[0]
    abstract val beforeContentPadding // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridLayoutInfo.beforeContentPadding|{}beforeContentPadding[0]
        abstract fun <get-beforeContentPadding>(): kotlin/Int // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridLayoutInfo.beforeContentPadding.<get-beforeContentPadding>|<get-beforeContentPadding>(){}[0]
    abstract val mainAxisItemSpacing // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridLayoutInfo.mainAxisItemSpacing|{}mainAxisItemSpacing[0]
        abstract fun <get-mainAxisItemSpacing>(): kotlin/Int // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridLayoutInfo.mainAxisItemSpacing.<get-mainAxisItemSpacing>|<get-mainAxisItemSpacing>(){}[0]
    abstract val orientation // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridLayoutInfo.orientation|{}orientation[0]
        abstract fun <get-orientation>(): androidx.compose.foundation.gestures/Orientation // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridLayoutInfo.orientation.<get-orientation>|<get-orientation>(){}[0]
    abstract val totalItemsCount // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridLayoutInfo.totalItemsCount|{}totalItemsCount[0]
        abstract fun <get-totalItemsCount>(): kotlin/Int // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridLayoutInfo.totalItemsCount.<get-totalItemsCount>|<get-totalItemsCount>(){}[0]
    abstract val viewportEndOffset // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridLayoutInfo.viewportEndOffset|{}viewportEndOffset[0]
        abstract fun <get-viewportEndOffset>(): kotlin/Int // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridLayoutInfo.viewportEndOffset.<get-viewportEndOffset>|<get-viewportEndOffset>(){}[0]
    abstract val viewportSize // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridLayoutInfo.viewportSize|{}viewportSize[0]
        abstract fun <get-viewportSize>(): androidx.compose.ui.unit/IntSize // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridLayoutInfo.viewportSize.<get-viewportSize>|<get-viewportSize>(){}[0]
    abstract val viewportStartOffset // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridLayoutInfo.viewportStartOffset|{}viewportStartOffset[0]
        abstract fun <get-viewportStartOffset>(): kotlin/Int // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridLayoutInfo.viewportStartOffset.<get-viewportStartOffset>|<get-viewportStartOffset>(){}[0]
    abstract val visibleItemsInfo // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridLayoutInfo.visibleItemsInfo|{}visibleItemsInfo[0]
        abstract fun <get-visibleItemsInfo>(): kotlin.collections/List<androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridItemInfo> // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridLayoutInfo.visibleItemsInfo.<get-visibleItemsInfo>|<get-visibleItemsInfo>(){}[0]
}

sealed interface androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridScope { // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridScope|null[0]
    abstract fun item(kotlin/Any? = ..., kotlin/Any? = ..., androidx.compose.foundation.lazy.staggeredgrid/StaggeredGridItemSpan? = ..., kotlin/Function3<androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridItemScope, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>) // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridScope.item|item(kotlin.Any?;kotlin.Any?;androidx.compose.foundation.lazy.staggeredgrid.StaggeredGridItemSpan?;kotlin.Function3<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridItemScope,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>){}[0]
    abstract fun items(kotlin/Int, kotlin/Function1<kotlin/Int, kotlin/Any>? = ..., kotlin/Function1<kotlin/Int, kotlin/Any?> = ..., kotlin/Function1<kotlin/Int, androidx.compose.foundation.lazy.staggeredgrid/StaggeredGridItemSpan>? = ..., kotlin/Function4<androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridItemScope, kotlin/Int, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>) // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridScope.items|items(kotlin.Int;kotlin.Function1<kotlin.Int,kotlin.Any>?;kotlin.Function1<kotlin.Int,kotlin.Any?>;kotlin.Function1<kotlin.Int,androidx.compose.foundation.lazy.staggeredgrid.StaggeredGridItemSpan>?;kotlin.Function4<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridItemScope,kotlin.Int,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>){}[0]
}

sealed interface androidx.compose.foundation.pager/PageInfo { // androidx.compose.foundation.pager/PageInfo|null[0]
    abstract val index // androidx.compose.foundation.pager/PageInfo.index|{}index[0]
        abstract fun <get-index>(): kotlin/Int // androidx.compose.foundation.pager/PageInfo.index.<get-index>|<get-index>(){}[0]
    abstract val key // androidx.compose.foundation.pager/PageInfo.key|{}key[0]
        abstract fun <get-key>(): kotlin/Any // androidx.compose.foundation.pager/PageInfo.key.<get-key>|<get-key>(){}[0]
    abstract val offset // androidx.compose.foundation.pager/PageInfo.offset|{}offset[0]
        abstract fun <get-offset>(): kotlin/Int // androidx.compose.foundation.pager/PageInfo.offset.<get-offset>|<get-offset>(){}[0]
}

sealed interface androidx.compose.foundation.pager/PagerLayoutInfo { // androidx.compose.foundation.pager/PagerLayoutInfo|null[0]
    abstract val afterContentPadding // androidx.compose.foundation.pager/PagerLayoutInfo.afterContentPadding|{}afterContentPadding[0]
        abstract fun <get-afterContentPadding>(): kotlin/Int // androidx.compose.foundation.pager/PagerLayoutInfo.afterContentPadding.<get-afterContentPadding>|<get-afterContentPadding>(){}[0]
    abstract val beforeContentPadding // androidx.compose.foundation.pager/PagerLayoutInfo.beforeContentPadding|{}beforeContentPadding[0]
        abstract fun <get-beforeContentPadding>(): kotlin/Int // androidx.compose.foundation.pager/PagerLayoutInfo.beforeContentPadding.<get-beforeContentPadding>|<get-beforeContentPadding>(){}[0]
    abstract val beyondViewportPageCount // androidx.compose.foundation.pager/PagerLayoutInfo.beyondViewportPageCount|{}beyondViewportPageCount[0]
        abstract fun <get-beyondViewportPageCount>(): kotlin/Int // androidx.compose.foundation.pager/PagerLayoutInfo.beyondViewportPageCount.<get-beyondViewportPageCount>|<get-beyondViewportPageCount>(){}[0]
    abstract val orientation // androidx.compose.foundation.pager/PagerLayoutInfo.orientation|{}orientation[0]
        abstract fun <get-orientation>(): androidx.compose.foundation.gestures/Orientation // androidx.compose.foundation.pager/PagerLayoutInfo.orientation.<get-orientation>|<get-orientation>(){}[0]
    abstract val pageSize // androidx.compose.foundation.pager/PagerLayoutInfo.pageSize|{}pageSize[0]
        abstract fun <get-pageSize>(): kotlin/Int // androidx.compose.foundation.pager/PagerLayoutInfo.pageSize.<get-pageSize>|<get-pageSize>(){}[0]
    abstract val pageSpacing // androidx.compose.foundation.pager/PagerLayoutInfo.pageSpacing|{}pageSpacing[0]
        abstract fun <get-pageSpacing>(): kotlin/Int // androidx.compose.foundation.pager/PagerLayoutInfo.pageSpacing.<get-pageSpacing>|<get-pageSpacing>(){}[0]
    abstract val reverseLayout // androidx.compose.foundation.pager/PagerLayoutInfo.reverseLayout|{}reverseLayout[0]
        abstract fun <get-reverseLayout>(): kotlin/Boolean // androidx.compose.foundation.pager/PagerLayoutInfo.reverseLayout.<get-reverseLayout>|<get-reverseLayout>(){}[0]
    abstract val snapPosition // androidx.compose.foundation.pager/PagerLayoutInfo.snapPosition|{}snapPosition[0]
        abstract fun <get-snapPosition>(): androidx.compose.foundation.gestures.snapping/SnapPosition // androidx.compose.foundation.pager/PagerLayoutInfo.snapPosition.<get-snapPosition>|<get-snapPosition>(){}[0]
    abstract val viewportEndOffset // androidx.compose.foundation.pager/PagerLayoutInfo.viewportEndOffset|{}viewportEndOffset[0]
        abstract fun <get-viewportEndOffset>(): kotlin/Int // androidx.compose.foundation.pager/PagerLayoutInfo.viewportEndOffset.<get-viewportEndOffset>|<get-viewportEndOffset>(){}[0]
    abstract val viewportSize // androidx.compose.foundation.pager/PagerLayoutInfo.viewportSize|{}viewportSize[0]
        abstract fun <get-viewportSize>(): androidx.compose.ui.unit/IntSize // androidx.compose.foundation.pager/PagerLayoutInfo.viewportSize.<get-viewportSize>|<get-viewportSize>(){}[0]
    abstract val viewportStartOffset // androidx.compose.foundation.pager/PagerLayoutInfo.viewportStartOffset|{}viewportStartOffset[0]
        abstract fun <get-viewportStartOffset>(): kotlin/Int // androidx.compose.foundation.pager/PagerLayoutInfo.viewportStartOffset.<get-viewportStartOffset>|<get-viewportStartOffset>(){}[0]
    abstract val visiblePagesInfo // androidx.compose.foundation.pager/PagerLayoutInfo.visiblePagesInfo|{}visiblePagesInfo[0]
        abstract fun <get-visiblePagesInfo>(): kotlin.collections/List<androidx.compose.foundation.pager/PageInfo> // androidx.compose.foundation.pager/PagerLayoutInfo.visiblePagesInfo.<get-visiblePagesInfo>|<get-visiblePagesInfo>(){}[0]
}

sealed interface androidx.compose.foundation.pager/PagerScope // androidx.compose.foundation.pager/PagerScope|null[0]

sealed interface androidx.compose.foundation.relocation/BringIntoViewRequester { // androidx.compose.foundation.relocation/BringIntoViewRequester|null[0]
    abstract suspend fun bringIntoView(androidx.compose.ui.geometry/Rect? = ...) // androidx.compose.foundation.relocation/BringIntoViewRequester.bringIntoView|bringIntoView(androidx.compose.ui.geometry.Rect?){}[0]
}

sealed interface androidx.compose.foundation.text.input/TextFieldLineLimits { // androidx.compose.foundation.text.input/TextFieldLineLimits|null[0]
    final class MultiLine : androidx.compose.foundation.text.input/TextFieldLineLimits { // androidx.compose.foundation.text.input/TextFieldLineLimits.MultiLine|null[0]
        constructor <init>(kotlin/Int = ..., kotlin/Int = ...) // androidx.compose.foundation.text.input/TextFieldLineLimits.MultiLine.<init>|<init>(kotlin.Int;kotlin.Int){}[0]

        final val maxHeightInLines // androidx.compose.foundation.text.input/TextFieldLineLimits.MultiLine.maxHeightInLines|{}maxHeightInLines[0]
            final fun <get-maxHeightInLines>(): kotlin/Int // androidx.compose.foundation.text.input/TextFieldLineLimits.MultiLine.maxHeightInLines.<get-maxHeightInLines>|<get-maxHeightInLines>(){}[0]
        final val minHeightInLines // androidx.compose.foundation.text.input/TextFieldLineLimits.MultiLine.minHeightInLines|{}minHeightInLines[0]
            final fun <get-minHeightInLines>(): kotlin/Int // androidx.compose.foundation.text.input/TextFieldLineLimits.MultiLine.minHeightInLines.<get-minHeightInLines>|<get-minHeightInLines>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // androidx.compose.foundation.text.input/TextFieldLineLimits.MultiLine.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // androidx.compose.foundation.text.input/TextFieldLineLimits.MultiLine.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // androidx.compose.foundation.text.input/TextFieldLineLimits.MultiLine.toString|toString(){}[0]
    }

    final object Companion { // androidx.compose.foundation.text.input/TextFieldLineLimits.Companion|null[0]
        final val Default // androidx.compose.foundation.text.input/TextFieldLineLimits.Companion.Default|{}Default[0]
            final fun <get-Default>(): androidx.compose.foundation.text.input/TextFieldLineLimits // androidx.compose.foundation.text.input/TextFieldLineLimits.Companion.Default.<get-Default>|<get-Default>(){}[0]
    }

    final object SingleLine : androidx.compose.foundation.text.input/TextFieldLineLimits { // androidx.compose.foundation.text.input/TextFieldLineLimits.SingleLine|null[0]
        final fun toString(): kotlin/String // androidx.compose.foundation.text.input/TextFieldLineLimits.SingleLine.toString|toString(){}[0]
    }
}

sealed interface androidx.compose.foundation.text.modifiers/TextAutoSizeLayoutScope : androidx.compose.ui.unit/Density { // androidx.compose.foundation.text.modifiers/TextAutoSizeLayoutScope|null[0]
    abstract fun performLayout(androidx.compose.ui.unit/Constraints, androidx.compose.ui.text/AnnotatedString, androidx.compose.ui.unit/TextUnit): androidx.compose.ui.text/TextLayoutResult // androidx.compose.foundation.text.modifiers/TextAutoSizeLayoutScope.performLayout|performLayout(androidx.compose.ui.unit.Constraints;androidx.compose.ui.text.AnnotatedString;androidx.compose.ui.unit.TextUnit){}[0]
}

abstract class <#A: androidx.compose.foundation.lazy.layout/LazyLayoutIntervalContent.Interval> androidx.compose.foundation.lazy.layout/LazyLayoutIntervalContent { // androidx.compose.foundation.lazy.layout/LazyLayoutIntervalContent|null[0]
    constructor <init>() // androidx.compose.foundation.lazy.layout/LazyLayoutIntervalContent.<init>|<init>(){}[0]

    abstract val intervals // androidx.compose.foundation.lazy.layout/LazyLayoutIntervalContent.intervals|{}intervals[0]
        abstract fun <get-intervals>(): androidx.compose.foundation.lazy.layout/IntervalList<#A> // androidx.compose.foundation.lazy.layout/LazyLayoutIntervalContent.intervals.<get-intervals>|<get-intervals>(){}[0]
    final val itemCount // androidx.compose.foundation.lazy.layout/LazyLayoutIntervalContent.itemCount|{}itemCount[0]
        final fun <get-itemCount>(): kotlin/Int // androidx.compose.foundation.lazy.layout/LazyLayoutIntervalContent.itemCount.<get-itemCount>|<get-itemCount>(){}[0]

    final fun getContentType(kotlin/Int): kotlin/Any? // androidx.compose.foundation.lazy.layout/LazyLayoutIntervalContent.getContentType|getContentType(kotlin.Int){}[0]
    final fun getKey(kotlin/Int): kotlin/Any // androidx.compose.foundation.lazy.layout/LazyLayoutIntervalContent.getKey|getKey(kotlin.Int){}[0]
    final inline fun <#A1: kotlin/Any?> withInterval(kotlin/Int, kotlin/Function2<kotlin/Int, #A, #A1>): #A1 // androidx.compose.foundation.lazy.layout/LazyLayoutIntervalContent.withInterval|withInterval(kotlin.Int;kotlin.Function2<kotlin.Int,1:0,0:0>){0§<kotlin.Any?>}[0]

    abstract interface Interval { // androidx.compose.foundation.lazy.layout/LazyLayoutIntervalContent.Interval|null[0]
        open val key // androidx.compose.foundation.lazy.layout/LazyLayoutIntervalContent.Interval.key|{}key[0]
            open fun <get-key>(): kotlin/Function1<kotlin/Int, kotlin/Any>? // androidx.compose.foundation.lazy.layout/LazyLayoutIntervalContent.Interval.key.<get-key>|<get-key>(){}[0]
        open val type // androidx.compose.foundation.lazy.layout/LazyLayoutIntervalContent.Interval.type|{}type[0]
            open fun <get-type>(): kotlin/Function1<kotlin/Int, kotlin/Any?> // androidx.compose.foundation.lazy.layout/LazyLayoutIntervalContent.Interval.type.<get-type>|<get-type>(){}[0]
    }
}

abstract class androidx.compose.foundation.pager/PagerState : androidx.compose.foundation.gestures/ScrollableState { // androidx.compose.foundation.pager/PagerState|null[0]
    constructor <init>(kotlin/Int = ..., kotlin/Float = ...) // androidx.compose.foundation.pager/PagerState.<init>|<init>(kotlin.Int;kotlin.Float){}[0]

    abstract val pageCount // androidx.compose.foundation.pager/PagerState.pageCount|{}pageCount[0]
        abstract fun <get-pageCount>(): kotlin/Int // androidx.compose.foundation.pager/PagerState.pageCount.<get-pageCount>|<get-pageCount>(){}[0]
    final val currentPage // androidx.compose.foundation.pager/PagerState.currentPage|{}currentPage[0]
        final fun <get-currentPage>(): kotlin/Int // androidx.compose.foundation.pager/PagerState.currentPage.<get-currentPage>|<get-currentPage>(){}[0]
    final val currentPageOffsetFraction // androidx.compose.foundation.pager/PagerState.currentPageOffsetFraction|{}currentPageOffsetFraction[0]
        final fun <get-currentPageOffsetFraction>(): kotlin/Float // androidx.compose.foundation.pager/PagerState.currentPageOffsetFraction.<get-currentPageOffsetFraction>|<get-currentPageOffsetFraction>(){}[0]
    final val interactionSource // androidx.compose.foundation.pager/PagerState.interactionSource|{}interactionSource[0]
        final fun <get-interactionSource>(): androidx.compose.foundation.interaction/InteractionSource // androidx.compose.foundation.pager/PagerState.interactionSource.<get-interactionSource>|<get-interactionSource>(){}[0]
    final val layoutInfo // androidx.compose.foundation.pager/PagerState.layoutInfo|{}layoutInfo[0]
        final fun <get-layoutInfo>(): androidx.compose.foundation.pager/PagerLayoutInfo // androidx.compose.foundation.pager/PagerState.layoutInfo.<get-layoutInfo>|<get-layoutInfo>(){}[0]
    final val settledPage // androidx.compose.foundation.pager/PagerState.settledPage|{}settledPage[0]
        final fun <get-settledPage>(): kotlin/Int // androidx.compose.foundation.pager/PagerState.settledPage.<get-settledPage>|<get-settledPage>(){}[0]
    final val targetPage // androidx.compose.foundation.pager/PagerState.targetPage|{}targetPage[0]
        final fun <get-targetPage>(): kotlin/Int // androidx.compose.foundation.pager/PagerState.targetPage.<get-targetPage>|<get-targetPage>(){}[0]
    open val isScrollInProgress // androidx.compose.foundation.pager/PagerState.isScrollInProgress|{}isScrollInProgress[0]
        open fun <get-isScrollInProgress>(): kotlin/Boolean // androidx.compose.foundation.pager/PagerState.isScrollInProgress.<get-isScrollInProgress>|<get-isScrollInProgress>(){}[0]
    open val lastScrolledBackward // androidx.compose.foundation.pager/PagerState.lastScrolledBackward|{}lastScrolledBackward[0]
        open fun <get-lastScrolledBackward>(): kotlin/Boolean // androidx.compose.foundation.pager/PagerState.lastScrolledBackward.<get-lastScrolledBackward>|<get-lastScrolledBackward>(){}[0]
    open val lastScrolledForward // androidx.compose.foundation.pager/PagerState.lastScrolledForward|{}lastScrolledForward[0]
        open fun <get-lastScrolledForward>(): kotlin/Boolean // androidx.compose.foundation.pager/PagerState.lastScrolledForward.<get-lastScrolledForward>|<get-lastScrolledForward>(){}[0]

    final var canScrollBackward // androidx.compose.foundation.pager/PagerState.canScrollBackward|{}canScrollBackward[0]
        final fun <get-canScrollBackward>(): kotlin/Boolean // androidx.compose.foundation.pager/PagerState.canScrollBackward.<get-canScrollBackward>|<get-canScrollBackward>(){}[0]
    final var canScrollForward // androidx.compose.foundation.pager/PagerState.canScrollForward|{}canScrollForward[0]
        final fun <get-canScrollForward>(): kotlin/Boolean // androidx.compose.foundation.pager/PagerState.canScrollForward.<get-canScrollForward>|<get-canScrollForward>(){}[0]

    final fun (androidx.compose.foundation.gestures/ScrollScope).updateCurrentPage(kotlin/Int, kotlin/Float = ...) // androidx.compose.foundation.pager/PagerState.updateCurrentPage|updateCurrentPage@androidx.compose.foundation.gestures.ScrollScope(kotlin.Int;kotlin.Float){}[0]
    final fun (androidx.compose.foundation.gestures/ScrollScope).updateTargetPage(kotlin/Int) // androidx.compose.foundation.pager/PagerState.updateTargetPage|updateTargetPage@androidx.compose.foundation.gestures.ScrollScope(kotlin.Int){}[0]
    final fun getOffsetDistanceInPages(kotlin/Int): kotlin/Float // androidx.compose.foundation.pager/PagerState.getOffsetDistanceInPages|getOffsetDistanceInPages(kotlin.Int){}[0]
    final fun requestScrollToPage(kotlin/Int, kotlin/Float = ...) // androidx.compose.foundation.pager/PagerState.requestScrollToPage|requestScrollToPage(kotlin.Int;kotlin.Float){}[0]
    final suspend fun animateScrollToPage(kotlin/Int, kotlin/Float = ..., androidx.compose.animation.core/AnimationSpec<kotlin/Float> = ...) // androidx.compose.foundation.pager/PagerState.animateScrollToPage|animateScrollToPage(kotlin.Int;kotlin.Float;androidx.compose.animation.core.AnimationSpec<kotlin.Float>){}[0]
    final suspend fun scrollToPage(kotlin/Int, kotlin/Float = ...) // androidx.compose.foundation.pager/PagerState.scrollToPage|scrollToPage(kotlin.Int;kotlin.Float){}[0]
    open fun dispatchRawDelta(kotlin/Float): kotlin/Float // androidx.compose.foundation.pager/PagerState.dispatchRawDelta|dispatchRawDelta(kotlin.Float){}[0]
    open suspend fun scroll(androidx.compose.foundation/MutatePriority, kotlin.coroutines/SuspendFunction1<androidx.compose.foundation.gestures/ScrollScope, kotlin/Unit>) // androidx.compose.foundation.pager/PagerState.scroll|scroll(androidx.compose.foundation.MutatePriority;kotlin.coroutines.SuspendFunction1<androidx.compose.foundation.gestures.ScrollScope,kotlin.Unit>){}[0]
}

abstract class androidx.compose.foundation.shape/CornerBasedShape : androidx.compose.ui.graphics/Shape { // androidx.compose.foundation.shape/CornerBasedShape|null[0]
    constructor <init>(androidx.compose.foundation.shape/CornerSize, androidx.compose.foundation.shape/CornerSize, androidx.compose.foundation.shape/CornerSize, androidx.compose.foundation.shape/CornerSize) // androidx.compose.foundation.shape/CornerBasedShape.<init>|<init>(androidx.compose.foundation.shape.CornerSize;androidx.compose.foundation.shape.CornerSize;androidx.compose.foundation.shape.CornerSize;androidx.compose.foundation.shape.CornerSize){}[0]

    final val bottomEnd // androidx.compose.foundation.shape/CornerBasedShape.bottomEnd|{}bottomEnd[0]
        final fun <get-bottomEnd>(): androidx.compose.foundation.shape/CornerSize // androidx.compose.foundation.shape/CornerBasedShape.bottomEnd.<get-bottomEnd>|<get-bottomEnd>(){}[0]
    final val bottomStart // androidx.compose.foundation.shape/CornerBasedShape.bottomStart|{}bottomStart[0]
        final fun <get-bottomStart>(): androidx.compose.foundation.shape/CornerSize // androidx.compose.foundation.shape/CornerBasedShape.bottomStart.<get-bottomStart>|<get-bottomStart>(){}[0]
    final val topEnd // androidx.compose.foundation.shape/CornerBasedShape.topEnd|{}topEnd[0]
        final fun <get-topEnd>(): androidx.compose.foundation.shape/CornerSize // androidx.compose.foundation.shape/CornerBasedShape.topEnd.<get-topEnd>|<get-topEnd>(){}[0]
    final val topStart // androidx.compose.foundation.shape/CornerBasedShape.topStart|{}topStart[0]
        final fun <get-topStart>(): androidx.compose.foundation.shape/CornerSize // androidx.compose.foundation.shape/CornerBasedShape.topStart.<get-topStart>|<get-topStart>(){}[0]

    abstract fun copy(androidx.compose.foundation.shape/CornerSize = ..., androidx.compose.foundation.shape/CornerSize = ..., androidx.compose.foundation.shape/CornerSize = ..., androidx.compose.foundation.shape/CornerSize = ...): androidx.compose.foundation.shape/CornerBasedShape // androidx.compose.foundation.shape/CornerBasedShape.copy|copy(androidx.compose.foundation.shape.CornerSize;androidx.compose.foundation.shape.CornerSize;androidx.compose.foundation.shape.CornerSize;androidx.compose.foundation.shape.CornerSize){}[0]
    abstract fun createOutline(androidx.compose.ui.geometry/Size, kotlin/Float, kotlin/Float, kotlin/Float, kotlin/Float, androidx.compose.ui.unit/LayoutDirection): androidx.compose.ui.graphics/Outline // androidx.compose.foundation.shape/CornerBasedShape.createOutline|createOutline(androidx.compose.ui.geometry.Size;kotlin.Float;kotlin.Float;kotlin.Float;kotlin.Float;androidx.compose.ui.unit.LayoutDirection){}[0]
    final fun copy(androidx.compose.foundation.shape/CornerSize): androidx.compose.foundation.shape/CornerBasedShape // androidx.compose.foundation.shape/CornerBasedShape.copy|copy(androidx.compose.foundation.shape.CornerSize){}[0]
    final fun createOutline(androidx.compose.ui.geometry/Size, androidx.compose.ui.unit/LayoutDirection, androidx.compose.ui.unit/Density): androidx.compose.ui.graphics/Outline // androidx.compose.foundation.shape/CornerBasedShape.createOutline|createOutline(androidx.compose.ui.geometry.Size;androidx.compose.ui.unit.LayoutDirection;androidx.compose.ui.unit.Density){}[0]
}

abstract class androidx.compose.foundation.text.contextmenu.data/TextContextMenuComponent { // androidx.compose.foundation.text.contextmenu.data/TextContextMenuComponent|null[0]
    final val key // androidx.compose.foundation.text.contextmenu.data/TextContextMenuComponent.key|{}key[0]
        final fun <get-key>(): kotlin/Any // androidx.compose.foundation.text.contextmenu.data/TextContextMenuComponent.key.<get-key>|<get-key>(){}[0]
}

final class <#A: kotlin/Any?> androidx.compose.foundation.gestures/AnchoredDraggableState { // androidx.compose.foundation.gestures/AnchoredDraggableState|null[0]
    constructor <init>(#A) // androidx.compose.foundation.gestures/AnchoredDraggableState.<init>|<init>(1:0){}[0]
    constructor <init>(#A, androidx.compose.foundation.gestures/DraggableAnchors<#A>) // androidx.compose.foundation.gestures/AnchoredDraggableState.<init>|<init>(1:0;androidx.compose.foundation.gestures.DraggableAnchors<1:0>){}[0]
    constructor <init>(#A, androidx.compose.foundation.gestures/DraggableAnchors<#A>, kotlin/Function1<#A, kotlin/Boolean> = ...) // androidx.compose.foundation.gestures/AnchoredDraggableState.<init>|<init>(1:0;androidx.compose.foundation.gestures.DraggableAnchors<1:0>;kotlin.Function1<1:0,kotlin.Boolean>){}[0]
    constructor <init>(#A, kotlin/Function1<#A, kotlin/Boolean>) // androidx.compose.foundation.gestures/AnchoredDraggableState.<init>|<init>(1:0;kotlin.Function1<1:0,kotlin.Boolean>){}[0]

    final val isAnimationRunning // androidx.compose.foundation.gestures/AnchoredDraggableState.isAnimationRunning|{}isAnimationRunning[0]
        final fun <get-isAnimationRunning>(): kotlin/Boolean // androidx.compose.foundation.gestures/AnchoredDraggableState.isAnimationRunning.<get-isAnimationRunning>|<get-isAnimationRunning>(){}[0]
    final val progress // androidx.compose.foundation.gestures/AnchoredDraggableState.progress|{}progress[0]
        final fun <get-progress>(): kotlin/Float // androidx.compose.foundation.gestures/AnchoredDraggableState.progress.<get-progress>|<get-progress>(){}[0]
    final val targetValue // androidx.compose.foundation.gestures/AnchoredDraggableState.targetValue|{}targetValue[0]
        final fun <get-targetValue>(): #A // androidx.compose.foundation.gestures/AnchoredDraggableState.targetValue.<get-targetValue>|<get-targetValue>(){}[0]

    final var anchors // androidx.compose.foundation.gestures/AnchoredDraggableState.anchors|{}anchors[0]
        final fun <get-anchors>(): androidx.compose.foundation.gestures/DraggableAnchors<#A> // androidx.compose.foundation.gestures/AnchoredDraggableState.anchors.<get-anchors>|<get-anchors>(){}[0]
    final var currentValue // androidx.compose.foundation.gestures/AnchoredDraggableState.currentValue|{}currentValue[0]
        final fun <get-currentValue>(): #A // androidx.compose.foundation.gestures/AnchoredDraggableState.currentValue.<get-currentValue>|<get-currentValue>(){}[0]
    final var decayAnimationSpec // androidx.compose.foundation.gestures/AnchoredDraggableState.decayAnimationSpec|{}decayAnimationSpec[0]
        final fun <get-decayAnimationSpec>(): androidx.compose.animation.core/DecayAnimationSpec<kotlin/Float> // androidx.compose.foundation.gestures/AnchoredDraggableState.decayAnimationSpec.<get-decayAnimationSpec>|<get-decayAnimationSpec>(){}[0]
    final var lastVelocity // androidx.compose.foundation.gestures/AnchoredDraggableState.lastVelocity|{}lastVelocity[0]
        final fun <get-lastVelocity>(): kotlin/Float // androidx.compose.foundation.gestures/AnchoredDraggableState.lastVelocity.<get-lastVelocity>|<get-lastVelocity>(){}[0]
    final var offset // androidx.compose.foundation.gestures/AnchoredDraggableState.offset|{}offset[0]
        final fun <get-offset>(): kotlin/Float // androidx.compose.foundation.gestures/AnchoredDraggableState.offset.<get-offset>|<get-offset>(){}[0]
    final var settledValue // androidx.compose.foundation.gestures/AnchoredDraggableState.settledValue|{}settledValue[0]
        final fun <get-settledValue>(): #A // androidx.compose.foundation.gestures/AnchoredDraggableState.settledValue.<get-settledValue>|<get-settledValue>(){}[0]
    final var snapAnimationSpec // androidx.compose.foundation.gestures/AnchoredDraggableState.snapAnimationSpec|{}snapAnimationSpec[0]
        final fun <get-snapAnimationSpec>(): androidx.compose.animation.core/AnimationSpec<kotlin/Float> // androidx.compose.foundation.gestures/AnchoredDraggableState.snapAnimationSpec.<get-snapAnimationSpec>|<get-snapAnimationSpec>(){}[0]

    final fun dispatchRawDelta(kotlin/Float): kotlin/Float // androidx.compose.foundation.gestures/AnchoredDraggableState.dispatchRawDelta|dispatchRawDelta(kotlin.Float){}[0]
    final fun progress(#A, #A): kotlin/Float // androidx.compose.foundation.gestures/AnchoredDraggableState.progress|progress(1:0;1:0){}[0]
    final fun requireOffset(): kotlin/Float // androidx.compose.foundation.gestures/AnchoredDraggableState.requireOffset|requireOffset(){}[0]
    final fun updateAnchors(androidx.compose.foundation.gestures/DraggableAnchors<#A>, #A = ...) // androidx.compose.foundation.gestures/AnchoredDraggableState.updateAnchors|updateAnchors(androidx.compose.foundation.gestures.DraggableAnchors<1:0>;1:0){}[0]
    final suspend fun anchoredDrag(#A, androidx.compose.foundation/MutatePriority = ..., kotlin.coroutines/SuspendFunction3<androidx.compose.foundation.gestures/AnchoredDragScope, androidx.compose.foundation.gestures/DraggableAnchors<#A>, #A, kotlin/Unit>) // androidx.compose.foundation.gestures/AnchoredDraggableState.anchoredDrag|anchoredDrag(1:0;androidx.compose.foundation.MutatePriority;kotlin.coroutines.SuspendFunction3<androidx.compose.foundation.gestures.AnchoredDragScope,androidx.compose.foundation.gestures.DraggableAnchors<1:0>,1:0,kotlin.Unit>){}[0]
    final suspend fun anchoredDrag(androidx.compose.foundation/MutatePriority = ..., kotlin.coroutines/SuspendFunction2<androidx.compose.foundation.gestures/AnchoredDragScope, androidx.compose.foundation.gestures/DraggableAnchors<#A>, kotlin/Unit>) // androidx.compose.foundation.gestures/AnchoredDraggableState.anchoredDrag|anchoredDrag(androidx.compose.foundation.MutatePriority;kotlin.coroutines.SuspendFunction2<androidx.compose.foundation.gestures.AnchoredDragScope,androidx.compose.foundation.gestures.DraggableAnchors<1:0>,kotlin.Unit>){}[0]
    final suspend fun settle(androidx.compose.animation.core/AnimationSpec<kotlin/Float>) // androidx.compose.foundation.gestures/AnchoredDraggableState.settle|settle(androidx.compose.animation.core.AnimationSpec<kotlin.Float>){}[0]
    final suspend fun settle(kotlin/Float): kotlin/Float // androidx.compose.foundation.gestures/AnchoredDraggableState.settle|settle(kotlin.Float){}[0]

    final object Companion { // androidx.compose.foundation.gestures/AnchoredDraggableState.Companion|null[0]
        final fun <#A2: kotlin/Any> Saver(): androidx.compose.runtime.saveable/Saver<androidx.compose.foundation.gestures/AnchoredDraggableState<#A2>, #A2> // androidx.compose.foundation.gestures/AnchoredDraggableState.Companion.Saver|Saver(){0§<kotlin.Any>}[0]
        final fun <#A2: kotlin/Any> Saver(androidx.compose.animation.core/AnimationSpec<kotlin/Float>, androidx.compose.animation.core/DecayAnimationSpec<kotlin/Float>, kotlin/Function1<kotlin/Float, kotlin/Float>, kotlin/Function0<kotlin/Float>, kotlin/Function1<#A2, kotlin/Boolean> = ...): androidx.compose.runtime.saveable/Saver<androidx.compose.foundation.gestures/AnchoredDraggableState<#A2>, #A2> // androidx.compose.foundation.gestures/AnchoredDraggableState.Companion.Saver|Saver(androidx.compose.animation.core.AnimationSpec<kotlin.Float>;androidx.compose.animation.core.DecayAnimationSpec<kotlin.Float>;kotlin.Function1<kotlin.Float,kotlin.Float>;kotlin.Function0<kotlin.Float>;kotlin.Function1<0:0,kotlin.Boolean>){0§<kotlin.Any>}[0]
        final fun <#A2: kotlin/Any> Saver(kotlin/Function1<#A2, kotlin/Boolean> = ...): androidx.compose.runtime.saveable/Saver<androidx.compose.foundation.gestures/AnchoredDraggableState<#A2>, #A2> // androidx.compose.foundation.gestures/AnchoredDraggableState.Companion.Saver|Saver(kotlin.Function1<0:0,kotlin.Boolean>){0§<kotlin.Any>}[0]
    }
}

final class <#A: kotlin/Any?> androidx.compose.foundation.gestures/DraggableAnchorsConfig { // androidx.compose.foundation.gestures/DraggableAnchorsConfig|null[0]
    constructor <init>() // androidx.compose.foundation.gestures/DraggableAnchorsConfig.<init>|<init>(){}[0]

    final fun (#A).at(kotlin/Float) // androidx.compose.foundation.gestures/DraggableAnchorsConfig.at|at@1:0(kotlin.Float){}[0]
}

final class <#A: kotlin/Any?> androidx.compose.foundation.lazy.layout/MutableIntervalList : androidx.compose.foundation.lazy.layout/IntervalList<#A> { // androidx.compose.foundation.lazy.layout/MutableIntervalList|null[0]
    constructor <init>() // androidx.compose.foundation.lazy.layout/MutableIntervalList.<init>|<init>(){}[0]

    final var size // androidx.compose.foundation.lazy.layout/MutableIntervalList.size|{}size[0]
        final fun <get-size>(): kotlin/Int // androidx.compose.foundation.lazy.layout/MutableIntervalList.size.<get-size>|<get-size>(){}[0]

    final fun addInterval(kotlin/Int, #A) // androidx.compose.foundation.lazy.layout/MutableIntervalList.addInterval|addInterval(kotlin.Int;1:0){}[0]
    final fun forEach(kotlin/Int, kotlin/Int, kotlin/Function1<androidx.compose.foundation.lazy.layout/IntervalList.Interval<#A>, kotlin/Unit>) // androidx.compose.foundation.lazy.layout/MutableIntervalList.forEach|forEach(kotlin.Int;kotlin.Int;kotlin.Function1<androidx.compose.foundation.lazy.layout.IntervalList.Interval<1:0>,kotlin.Unit>){}[0]
    final fun get(kotlin/Int): androidx.compose.foundation.lazy.layout/IntervalList.Interval<#A> // androidx.compose.foundation.lazy.layout/MutableIntervalList.get|get(kotlin.Int){}[0]
}

final class androidx.compose.foundation.content/MediaType { // androidx.compose.foundation.content/MediaType|null[0]
    constructor <init>(kotlin/String) // androidx.compose.foundation.content/MediaType.<init>|<init>(kotlin.String){}[0]

    final val representation // androidx.compose.foundation.content/MediaType.representation|{}representation[0]
        final fun <get-representation>(): kotlin/String // androidx.compose.foundation.content/MediaType.representation.<get-representation>|<get-representation>(){}[0]

    final object Companion { // androidx.compose.foundation.content/MediaType.Companion|null[0]
        final val All // androidx.compose.foundation.content/MediaType.Companion.All|{}All[0]
            final fun <get-All>(): androidx.compose.foundation.content/MediaType // androidx.compose.foundation.content/MediaType.Companion.All.<get-All>|<get-All>(){}[0]
        final val HtmlText // androidx.compose.foundation.content/MediaType.Companion.HtmlText|{}HtmlText[0]
            final fun <get-HtmlText>(): androidx.compose.foundation.content/MediaType // androidx.compose.foundation.content/MediaType.Companion.HtmlText.<get-HtmlText>|<get-HtmlText>(){}[0]
        final val Image // androidx.compose.foundation.content/MediaType.Companion.Image|{}Image[0]
            final fun <get-Image>(): androidx.compose.foundation.content/MediaType // androidx.compose.foundation.content/MediaType.Companion.Image.<get-Image>|<get-Image>(){}[0]
        final val PlainText // androidx.compose.foundation.content/MediaType.Companion.PlainText|{}PlainText[0]
            final fun <get-PlainText>(): androidx.compose.foundation.content/MediaType // androidx.compose.foundation.content/MediaType.Companion.PlainText.<get-PlainText>|<get-PlainText>(){}[0]
        final val Text // androidx.compose.foundation.content/MediaType.Companion.Text|{}Text[0]
            final fun <get-Text>(): androidx.compose.foundation.content/MediaType // androidx.compose.foundation.content/MediaType.Companion.Text.<get-Text>|<get-Text>(){}[0]
    }
}

final class androidx.compose.foundation.gestures/GestureCancellationException : kotlin.coroutines.cancellation/CancellationException { // androidx.compose.foundation.gestures/GestureCancellationException|null[0]
    constructor <init>(kotlin/String? = ...) // androidx.compose.foundation.gestures/GestureCancellationException.<init>|<init>(kotlin.String?){}[0]
}

final class androidx.compose.foundation.lazy.grid/LazyGridState : androidx.compose.foundation.gestures/ScrollableState { // androidx.compose.foundation.lazy.grid/LazyGridState|null[0]
    constructor <init>(kotlin/Int = ..., kotlin/Int = ...) // androidx.compose.foundation.lazy.grid/LazyGridState.<init>|<init>(kotlin.Int;kotlin.Int){}[0]

    final val firstVisibleItemIndex // androidx.compose.foundation.lazy.grid/LazyGridState.firstVisibleItemIndex|{}firstVisibleItemIndex[0]
        final fun <get-firstVisibleItemIndex>(): kotlin/Int // androidx.compose.foundation.lazy.grid/LazyGridState.firstVisibleItemIndex.<get-firstVisibleItemIndex>|<get-firstVisibleItemIndex>(){}[0]
    final val firstVisibleItemScrollOffset // androidx.compose.foundation.lazy.grid/LazyGridState.firstVisibleItemScrollOffset|{}firstVisibleItemScrollOffset[0]
        final fun <get-firstVisibleItemScrollOffset>(): kotlin/Int // androidx.compose.foundation.lazy.grid/LazyGridState.firstVisibleItemScrollOffset.<get-firstVisibleItemScrollOffset>|<get-firstVisibleItemScrollOffset>(){}[0]
    final val interactionSource // androidx.compose.foundation.lazy.grid/LazyGridState.interactionSource|{}interactionSource[0]
        final fun <get-interactionSource>(): androidx.compose.foundation.interaction/InteractionSource // androidx.compose.foundation.lazy.grid/LazyGridState.interactionSource.<get-interactionSource>|<get-interactionSource>(){}[0]
    final val isScrollInProgress // androidx.compose.foundation.lazy.grid/LazyGridState.isScrollInProgress|{}isScrollInProgress[0]
        final fun <get-isScrollInProgress>(): kotlin/Boolean // androidx.compose.foundation.lazy.grid/LazyGridState.isScrollInProgress.<get-isScrollInProgress>|<get-isScrollInProgress>(){}[0]
    final val lastScrolledBackward // androidx.compose.foundation.lazy.grid/LazyGridState.lastScrolledBackward|{}lastScrolledBackward[0]
        final fun <get-lastScrolledBackward>(): kotlin/Boolean // androidx.compose.foundation.lazy.grid/LazyGridState.lastScrolledBackward.<get-lastScrolledBackward>|<get-lastScrolledBackward>(){}[0]
    final val lastScrolledForward // androidx.compose.foundation.lazy.grid/LazyGridState.lastScrolledForward|{}lastScrolledForward[0]
        final fun <get-lastScrolledForward>(): kotlin/Boolean // androidx.compose.foundation.lazy.grid/LazyGridState.lastScrolledForward.<get-lastScrolledForward>|<get-lastScrolledForward>(){}[0]
    final val layoutInfo // androidx.compose.foundation.lazy.grid/LazyGridState.layoutInfo|{}layoutInfo[0]
        final fun <get-layoutInfo>(): androidx.compose.foundation.lazy.grid/LazyGridLayoutInfo // androidx.compose.foundation.lazy.grid/LazyGridState.layoutInfo.<get-layoutInfo>|<get-layoutInfo>(){}[0]

    final var canScrollBackward // androidx.compose.foundation.lazy.grid/LazyGridState.canScrollBackward|{}canScrollBackward[0]
        final fun <get-canScrollBackward>(): kotlin/Boolean // androidx.compose.foundation.lazy.grid/LazyGridState.canScrollBackward.<get-canScrollBackward>|<get-canScrollBackward>(){}[0]
    final var canScrollForward // androidx.compose.foundation.lazy.grid/LazyGridState.canScrollForward|{}canScrollForward[0]
        final fun <get-canScrollForward>(): kotlin/Boolean // androidx.compose.foundation.lazy.grid/LazyGridState.canScrollForward.<get-canScrollForward>|<get-canScrollForward>(){}[0]

    final fun dispatchRawDelta(kotlin/Float): kotlin/Float // androidx.compose.foundation.lazy.grid/LazyGridState.dispatchRawDelta|dispatchRawDelta(kotlin.Float){}[0]
    final fun requestScrollToItem(kotlin/Int, kotlin/Int = ...) // androidx.compose.foundation.lazy.grid/LazyGridState.requestScrollToItem|requestScrollToItem(kotlin.Int;kotlin.Int){}[0]
    final suspend fun animateScrollToItem(kotlin/Int, kotlin/Int = ...) // androidx.compose.foundation.lazy.grid/LazyGridState.animateScrollToItem|animateScrollToItem(kotlin.Int;kotlin.Int){}[0]
    final suspend fun scroll(androidx.compose.foundation/MutatePriority, kotlin.coroutines/SuspendFunction1<androidx.compose.foundation.gestures/ScrollScope, kotlin/Unit>) // androidx.compose.foundation.lazy.grid/LazyGridState.scroll|scroll(androidx.compose.foundation.MutatePriority;kotlin.coroutines.SuspendFunction1<androidx.compose.foundation.gestures.ScrollScope,kotlin.Unit>){}[0]
    final suspend fun scrollToItem(kotlin/Int, kotlin/Int = ...) // androidx.compose.foundation.lazy.grid/LazyGridState.scrollToItem|scrollToItem(kotlin.Int;kotlin.Int){}[0]

    final object Companion { // androidx.compose.foundation.lazy.grid/LazyGridState.Companion|null[0]
        final val Saver // androidx.compose.foundation.lazy.grid/LazyGridState.Companion.Saver|{}Saver[0]
            final fun <get-Saver>(): androidx.compose.runtime.saveable/Saver<androidx.compose.foundation.lazy.grid/LazyGridState, *> // androidx.compose.foundation.lazy.grid/LazyGridState.Companion.Saver.<get-Saver>|<get-Saver>(){}[0]
    }
}

final class androidx.compose.foundation.lazy.layout/LazyLayoutPinnedItemList : kotlin.collections/List<androidx.compose.foundation.lazy.layout/LazyLayoutPinnedItemList.PinnedItem> { // androidx.compose.foundation.lazy.layout/LazyLayoutPinnedItemList|null[0]
    constructor <init>() // androidx.compose.foundation.lazy.layout/LazyLayoutPinnedItemList.<init>|<init>(){}[0]

    final val size // androidx.compose.foundation.lazy.layout/LazyLayoutPinnedItemList.size|{}size[0]
        final fun <get-size>(): kotlin/Int // androidx.compose.foundation.lazy.layout/LazyLayoutPinnedItemList.size.<get-size>|<get-size>(){}[0]

    final fun contains(androidx.compose.foundation.lazy.layout/LazyLayoutPinnedItemList.PinnedItem): kotlin/Boolean // androidx.compose.foundation.lazy.layout/LazyLayoutPinnedItemList.contains|contains(androidx.compose.foundation.lazy.layout.LazyLayoutPinnedItemList.PinnedItem){}[0]
    final fun containsAll(kotlin.collections/Collection<androidx.compose.foundation.lazy.layout/LazyLayoutPinnedItemList.PinnedItem>): kotlin/Boolean // androidx.compose.foundation.lazy.layout/LazyLayoutPinnedItemList.containsAll|containsAll(kotlin.collections.Collection<androidx.compose.foundation.lazy.layout.LazyLayoutPinnedItemList.PinnedItem>){}[0]
    final fun get(kotlin/Int): androidx.compose.foundation.lazy.layout/LazyLayoutPinnedItemList.PinnedItem // androidx.compose.foundation.lazy.layout/LazyLayoutPinnedItemList.get|get(kotlin.Int){}[0]
    final fun indexOf(androidx.compose.foundation.lazy.layout/LazyLayoutPinnedItemList.PinnedItem): kotlin/Int // androidx.compose.foundation.lazy.layout/LazyLayoutPinnedItemList.indexOf|indexOf(androidx.compose.foundation.lazy.layout.LazyLayoutPinnedItemList.PinnedItem){}[0]
    final fun isEmpty(): kotlin/Boolean // androidx.compose.foundation.lazy.layout/LazyLayoutPinnedItemList.isEmpty|isEmpty(){}[0]
    final fun iterator(): kotlin.collections/Iterator<androidx.compose.foundation.lazy.layout/LazyLayoutPinnedItemList.PinnedItem> // androidx.compose.foundation.lazy.layout/LazyLayoutPinnedItemList.iterator|iterator(){}[0]
    final fun lastIndexOf(androidx.compose.foundation.lazy.layout/LazyLayoutPinnedItemList.PinnedItem): kotlin/Int // androidx.compose.foundation.lazy.layout/LazyLayoutPinnedItemList.lastIndexOf|lastIndexOf(androidx.compose.foundation.lazy.layout.LazyLayoutPinnedItemList.PinnedItem){}[0]
    final fun listIterator(): kotlin.collections/ListIterator<androidx.compose.foundation.lazy.layout/LazyLayoutPinnedItemList.PinnedItem> // androidx.compose.foundation.lazy.layout/LazyLayoutPinnedItemList.listIterator|listIterator(){}[0]
    final fun listIterator(kotlin/Int): kotlin.collections/ListIterator<androidx.compose.foundation.lazy.layout/LazyLayoutPinnedItemList.PinnedItem> // androidx.compose.foundation.lazy.layout/LazyLayoutPinnedItemList.listIterator|listIterator(kotlin.Int){}[0]
    final fun subList(kotlin/Int, kotlin/Int): kotlin.collections/List<androidx.compose.foundation.lazy.layout/LazyLayoutPinnedItemList.PinnedItem> // androidx.compose.foundation.lazy.layout/LazyLayoutPinnedItemList.subList|subList(kotlin.Int;kotlin.Int){}[0]

    sealed interface PinnedItem { // androidx.compose.foundation.lazy.layout/LazyLayoutPinnedItemList.PinnedItem|null[0]
        abstract val index // androidx.compose.foundation.lazy.layout/LazyLayoutPinnedItemList.PinnedItem.index|{}index[0]
            abstract fun <get-index>(): kotlin/Int // androidx.compose.foundation.lazy.layout/LazyLayoutPinnedItemList.PinnedItem.index.<get-index>|<get-index>(){}[0]
        abstract val key // androidx.compose.foundation.lazy.layout/LazyLayoutPinnedItemList.PinnedItem.key|{}key[0]
            abstract fun <get-key>(): kotlin/Any? // androidx.compose.foundation.lazy.layout/LazyLayoutPinnedItemList.PinnedItem.key.<get-key>|<get-key>(){}[0]
    }
}

final class androidx.compose.foundation.lazy.layout/LazyLayoutPrefetchState { // androidx.compose.foundation.lazy.layout/LazyLayoutPrefetchState|null[0]
    constructor <init>() // androidx.compose.foundation.lazy.layout/LazyLayoutPrefetchState.<init>|<init>(){}[0]

    final fun schedulePrecomposition(kotlin/Int): androidx.compose.foundation.lazy.layout/LazyLayoutPrefetchState.PrefetchHandle // androidx.compose.foundation.lazy.layout/LazyLayoutPrefetchState.schedulePrecomposition|schedulePrecomposition(kotlin.Int){}[0]
    final fun schedulePrecompositionAndPremeasure(kotlin/Int, androidx.compose.ui.unit/Constraints, kotlin/Function1<androidx.compose.foundation.lazy.layout/LazyLayoutPrefetchState.PrefetchResultScope, kotlin/Unit>? = ...): androidx.compose.foundation.lazy.layout/LazyLayoutPrefetchState.PrefetchHandle // androidx.compose.foundation.lazy.layout/LazyLayoutPrefetchState.schedulePrecompositionAndPremeasure|schedulePrecompositionAndPremeasure(kotlin.Int;androidx.compose.ui.unit.Constraints;kotlin.Function1<androidx.compose.foundation.lazy.layout.LazyLayoutPrefetchState.PrefetchResultScope,kotlin.Unit>?){}[0]

    sealed interface PrefetchHandle { // androidx.compose.foundation.lazy.layout/LazyLayoutPrefetchState.PrefetchHandle|null[0]
        abstract fun cancel() // androidx.compose.foundation.lazy.layout/LazyLayoutPrefetchState.PrefetchHandle.cancel|cancel(){}[0]
        abstract fun markAsUrgent() // androidx.compose.foundation.lazy.layout/LazyLayoutPrefetchState.PrefetchHandle.markAsUrgent|markAsUrgent(){}[0]
    }

    sealed interface PrefetchResultScope { // androidx.compose.foundation.lazy.layout/LazyLayoutPrefetchState.PrefetchResultScope|null[0]
        abstract val index // androidx.compose.foundation.lazy.layout/LazyLayoutPrefetchState.PrefetchResultScope.index|{}index[0]
            abstract fun <get-index>(): kotlin/Int // androidx.compose.foundation.lazy.layout/LazyLayoutPrefetchState.PrefetchResultScope.index.<get-index>|<get-index>(){}[0]
        abstract val placeablesCount // androidx.compose.foundation.lazy.layout/LazyLayoutPrefetchState.PrefetchResultScope.placeablesCount|{}placeablesCount[0]
            abstract fun <get-placeablesCount>(): kotlin/Int // androidx.compose.foundation.lazy.layout/LazyLayoutPrefetchState.PrefetchResultScope.placeablesCount.<get-placeablesCount>|<get-placeablesCount>(){}[0]

        abstract fun getSize(kotlin/Int): androidx.compose.ui.unit/IntSize // androidx.compose.foundation.lazy.layout/LazyLayoutPrefetchState.PrefetchResultScope.getSize|getSize(kotlin.Int){}[0]
    }
}

final class androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridState : androidx.compose.foundation.gestures/ScrollableState { // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridState|null[0]
    constructor <init>(kotlin/Int = ..., kotlin/Int = ...) // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridState.<init>|<init>(kotlin.Int;kotlin.Int){}[0]

    final val firstVisibleItemIndex // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridState.firstVisibleItemIndex|{}firstVisibleItemIndex[0]
        final fun <get-firstVisibleItemIndex>(): kotlin/Int // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridState.firstVisibleItemIndex.<get-firstVisibleItemIndex>|<get-firstVisibleItemIndex>(){}[0]
    final val firstVisibleItemScrollOffset // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridState.firstVisibleItemScrollOffset|{}firstVisibleItemScrollOffset[0]
        final fun <get-firstVisibleItemScrollOffset>(): kotlin/Int // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridState.firstVisibleItemScrollOffset.<get-firstVisibleItemScrollOffset>|<get-firstVisibleItemScrollOffset>(){}[0]
    final val interactionSource // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridState.interactionSource|{}interactionSource[0]
        final fun <get-interactionSource>(): androidx.compose.foundation.interaction/InteractionSource // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridState.interactionSource.<get-interactionSource>|<get-interactionSource>(){}[0]
    final val isScrollInProgress // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridState.isScrollInProgress|{}isScrollInProgress[0]
        final fun <get-isScrollInProgress>(): kotlin/Boolean // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridState.isScrollInProgress.<get-isScrollInProgress>|<get-isScrollInProgress>(){}[0]
    final val lastScrolledBackward // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridState.lastScrolledBackward|{}lastScrolledBackward[0]
        final fun <get-lastScrolledBackward>(): kotlin/Boolean // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridState.lastScrolledBackward.<get-lastScrolledBackward>|<get-lastScrolledBackward>(){}[0]
    final val lastScrolledForward // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridState.lastScrolledForward|{}lastScrolledForward[0]
        final fun <get-lastScrolledForward>(): kotlin/Boolean // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridState.lastScrolledForward.<get-lastScrolledForward>|<get-lastScrolledForward>(){}[0]
    final val layoutInfo // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridState.layoutInfo|{}layoutInfo[0]
        final fun <get-layoutInfo>(): androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridLayoutInfo // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridState.layoutInfo.<get-layoutInfo>|<get-layoutInfo>(){}[0]

    final var canScrollBackward // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridState.canScrollBackward|{}canScrollBackward[0]
        final fun <get-canScrollBackward>(): kotlin/Boolean // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridState.canScrollBackward.<get-canScrollBackward>|<get-canScrollBackward>(){}[0]
    final var canScrollForward // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridState.canScrollForward|{}canScrollForward[0]
        final fun <get-canScrollForward>(): kotlin/Boolean // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridState.canScrollForward.<get-canScrollForward>|<get-canScrollForward>(){}[0]

    final fun dispatchRawDelta(kotlin/Float): kotlin/Float // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridState.dispatchRawDelta|dispatchRawDelta(kotlin.Float){}[0]
    final fun requestScrollToItem(kotlin/Int, kotlin/Int = ...) // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridState.requestScrollToItem|requestScrollToItem(kotlin.Int;kotlin.Int){}[0]
    final suspend fun animateScrollToItem(kotlin/Int, kotlin/Int = ...) // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridState.animateScrollToItem|animateScrollToItem(kotlin.Int;kotlin.Int){}[0]
    final suspend fun scroll(androidx.compose.foundation/MutatePriority, kotlin.coroutines/SuspendFunction1<androidx.compose.foundation.gestures/ScrollScope, kotlin/Unit>) // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridState.scroll|scroll(androidx.compose.foundation.MutatePriority;kotlin.coroutines.SuspendFunction1<androidx.compose.foundation.gestures.ScrollScope,kotlin.Unit>){}[0]
    final suspend fun scrollToItem(kotlin/Int, kotlin/Int = ...) // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridState.scrollToItem|scrollToItem(kotlin.Int;kotlin.Int){}[0]

    final object Companion { // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridState.Companion|null[0]
        final val Saver // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridState.Companion.Saver|{}Saver[0]
            final fun <get-Saver>(): androidx.compose.runtime.saveable/Saver<androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridState, kotlin/Any> // androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridState.Companion.Saver.<get-Saver>|<get-Saver>(){}[0]
    }
}

final class androidx.compose.foundation.lazy.staggeredgrid/StaggeredGridItemSpan { // androidx.compose.foundation.lazy.staggeredgrid/StaggeredGridItemSpan|null[0]
    final object Companion { // androidx.compose.foundation.lazy.staggeredgrid/StaggeredGridItemSpan.Companion|null[0]
        final val FullLine // androidx.compose.foundation.lazy.staggeredgrid/StaggeredGridItemSpan.Companion.FullLine|{}FullLine[0]
            final fun <get-FullLine>(): androidx.compose.foundation.lazy.staggeredgrid/StaggeredGridItemSpan // androidx.compose.foundation.lazy.staggeredgrid/StaggeredGridItemSpan.Companion.FullLine.<get-FullLine>|<get-FullLine>(){}[0]
        final val SingleLane // androidx.compose.foundation.lazy.staggeredgrid/StaggeredGridItemSpan.Companion.SingleLane|{}SingleLane[0]
            final fun <get-SingleLane>(): androidx.compose.foundation.lazy.staggeredgrid/StaggeredGridItemSpan // androidx.compose.foundation.lazy.staggeredgrid/StaggeredGridItemSpan.Companion.SingleLane.<get-SingleLane>|<get-SingleLane>(){}[0]
    }
}

final class androidx.compose.foundation.lazy/LazyListState : androidx.compose.foundation.gestures/ScrollableState { // androidx.compose.foundation.lazy/LazyListState|null[0]
    constructor <init>(kotlin/Int = ..., kotlin/Int = ...) // androidx.compose.foundation.lazy/LazyListState.<init>|<init>(kotlin.Int;kotlin.Int){}[0]

    final val firstVisibleItemIndex // androidx.compose.foundation.lazy/LazyListState.firstVisibleItemIndex|{}firstVisibleItemIndex[0]
        final fun <get-firstVisibleItemIndex>(): kotlin/Int // androidx.compose.foundation.lazy/LazyListState.firstVisibleItemIndex.<get-firstVisibleItemIndex>|<get-firstVisibleItemIndex>(){}[0]
    final val firstVisibleItemScrollOffset // androidx.compose.foundation.lazy/LazyListState.firstVisibleItemScrollOffset|{}firstVisibleItemScrollOffset[0]
        final fun <get-firstVisibleItemScrollOffset>(): kotlin/Int // androidx.compose.foundation.lazy/LazyListState.firstVisibleItemScrollOffset.<get-firstVisibleItemScrollOffset>|<get-firstVisibleItemScrollOffset>(){}[0]
    final val interactionSource // androidx.compose.foundation.lazy/LazyListState.interactionSource|{}interactionSource[0]
        final fun <get-interactionSource>(): androidx.compose.foundation.interaction/InteractionSource // androidx.compose.foundation.lazy/LazyListState.interactionSource.<get-interactionSource>|<get-interactionSource>(){}[0]
    final val isScrollInProgress // androidx.compose.foundation.lazy/LazyListState.isScrollInProgress|{}isScrollInProgress[0]
        final fun <get-isScrollInProgress>(): kotlin/Boolean // androidx.compose.foundation.lazy/LazyListState.isScrollInProgress.<get-isScrollInProgress>|<get-isScrollInProgress>(){}[0]
    final val lastScrolledBackward // androidx.compose.foundation.lazy/LazyListState.lastScrolledBackward|{}lastScrolledBackward[0]
        final fun <get-lastScrolledBackward>(): kotlin/Boolean // androidx.compose.foundation.lazy/LazyListState.lastScrolledBackward.<get-lastScrolledBackward>|<get-lastScrolledBackward>(){}[0]
    final val lastScrolledForward // androidx.compose.foundation.lazy/LazyListState.lastScrolledForward|{}lastScrolledForward[0]
        final fun <get-lastScrolledForward>(): kotlin/Boolean // androidx.compose.foundation.lazy/LazyListState.lastScrolledForward.<get-lastScrolledForward>|<get-lastScrolledForward>(){}[0]
    final val layoutInfo // androidx.compose.foundation.lazy/LazyListState.layoutInfo|{}layoutInfo[0]
        final fun <get-layoutInfo>(): androidx.compose.foundation.lazy/LazyListLayoutInfo // androidx.compose.foundation.lazy/LazyListState.layoutInfo.<get-layoutInfo>|<get-layoutInfo>(){}[0]

    final var canScrollBackward // androidx.compose.foundation.lazy/LazyListState.canScrollBackward|{}canScrollBackward[0]
        final fun <get-canScrollBackward>(): kotlin/Boolean // androidx.compose.foundation.lazy/LazyListState.canScrollBackward.<get-canScrollBackward>|<get-canScrollBackward>(){}[0]
    final var canScrollForward // androidx.compose.foundation.lazy/LazyListState.canScrollForward|{}canScrollForward[0]
        final fun <get-canScrollForward>(): kotlin/Boolean // androidx.compose.foundation.lazy/LazyListState.canScrollForward.<get-canScrollForward>|<get-canScrollForward>(){}[0]

    final fun dispatchRawDelta(kotlin/Float): kotlin/Float // androidx.compose.foundation.lazy/LazyListState.dispatchRawDelta|dispatchRawDelta(kotlin.Float){}[0]
    final fun requestScrollToItem(kotlin/Int, kotlin/Int = ...) // androidx.compose.foundation.lazy/LazyListState.requestScrollToItem|requestScrollToItem(kotlin.Int;kotlin.Int){}[0]
    final suspend fun animateScrollToItem(kotlin/Int, kotlin/Int = ...) // androidx.compose.foundation.lazy/LazyListState.animateScrollToItem|animateScrollToItem(kotlin.Int;kotlin.Int){}[0]
    final suspend fun scroll(androidx.compose.foundation/MutatePriority, kotlin.coroutines/SuspendFunction1<androidx.compose.foundation.gestures/ScrollScope, kotlin/Unit>) // androidx.compose.foundation.lazy/LazyListState.scroll|scroll(androidx.compose.foundation.MutatePriority;kotlin.coroutines.SuspendFunction1<androidx.compose.foundation.gestures.ScrollScope,kotlin.Unit>){}[0]
    final suspend fun scrollToItem(kotlin/Int, kotlin/Int = ...) // androidx.compose.foundation.lazy/LazyListState.scrollToItem|scrollToItem(kotlin.Int;kotlin.Int){}[0]

    final object Companion { // androidx.compose.foundation.lazy/LazyListState.Companion|null[0]
        final val Saver // androidx.compose.foundation.lazy/LazyListState.Companion.Saver|{}Saver[0]
            final fun <get-Saver>(): androidx.compose.runtime.saveable/Saver<androidx.compose.foundation.lazy/LazyListState, *> // androidx.compose.foundation.lazy/LazyListState.Companion.Saver.<get-Saver>|<get-Saver>(){}[0]
    }
}

final class androidx.compose.foundation.shape/AbsoluteCutCornerShape : androidx.compose.foundation.shape/CornerBasedShape { // androidx.compose.foundation.shape/AbsoluteCutCornerShape|null[0]
    constructor <init>(androidx.compose.foundation.shape/CornerSize, androidx.compose.foundation.shape/CornerSize, androidx.compose.foundation.shape/CornerSize, androidx.compose.foundation.shape/CornerSize) // androidx.compose.foundation.shape/AbsoluteCutCornerShape.<init>|<init>(androidx.compose.foundation.shape.CornerSize;androidx.compose.foundation.shape.CornerSize;androidx.compose.foundation.shape.CornerSize;androidx.compose.foundation.shape.CornerSize){}[0]

    final fun copy(androidx.compose.foundation.shape/CornerSize, androidx.compose.foundation.shape/CornerSize, androidx.compose.foundation.shape/CornerSize, androidx.compose.foundation.shape/CornerSize): androidx.compose.foundation.shape/AbsoluteCutCornerShape // androidx.compose.foundation.shape/AbsoluteCutCornerShape.copy|copy(androidx.compose.foundation.shape.CornerSize;androidx.compose.foundation.shape.CornerSize;androidx.compose.foundation.shape.CornerSize;androidx.compose.foundation.shape.CornerSize){}[0]
    final fun createOutline(androidx.compose.ui.geometry/Size, kotlin/Float, kotlin/Float, kotlin/Float, kotlin/Float, androidx.compose.ui.unit/LayoutDirection): androidx.compose.ui.graphics/Outline // androidx.compose.foundation.shape/AbsoluteCutCornerShape.createOutline|createOutline(androidx.compose.ui.geometry.Size;kotlin.Float;kotlin.Float;kotlin.Float;kotlin.Float;androidx.compose.ui.unit.LayoutDirection){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // androidx.compose.foundation.shape/AbsoluteCutCornerShape.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // androidx.compose.foundation.shape/AbsoluteCutCornerShape.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // androidx.compose.foundation.shape/AbsoluteCutCornerShape.toString|toString(){}[0]
}

final class androidx.compose.foundation.shape/AbsoluteRoundedCornerShape : androidx.compose.foundation.shape/CornerBasedShape { // androidx.compose.foundation.shape/AbsoluteRoundedCornerShape|null[0]
    constructor <init>(androidx.compose.foundation.shape/CornerSize, androidx.compose.foundation.shape/CornerSize, androidx.compose.foundation.shape/CornerSize, androidx.compose.foundation.shape/CornerSize) // androidx.compose.foundation.shape/AbsoluteRoundedCornerShape.<init>|<init>(androidx.compose.foundation.shape.CornerSize;androidx.compose.foundation.shape.CornerSize;androidx.compose.foundation.shape.CornerSize;androidx.compose.foundation.shape.CornerSize){}[0]

    final fun copy(androidx.compose.foundation.shape/CornerSize, androidx.compose.foundation.shape/CornerSize, androidx.compose.foundation.shape/CornerSize, androidx.compose.foundation.shape/CornerSize): androidx.compose.foundation.shape/AbsoluteRoundedCornerShape // androidx.compose.foundation.shape/AbsoluteRoundedCornerShape.copy|copy(androidx.compose.foundation.shape.CornerSize;androidx.compose.foundation.shape.CornerSize;androidx.compose.foundation.shape.CornerSize;androidx.compose.foundation.shape.CornerSize){}[0]
    final fun createOutline(androidx.compose.ui.geometry/Size, kotlin/Float, kotlin/Float, kotlin/Float, kotlin/Float, androidx.compose.ui.unit/LayoutDirection): androidx.compose.ui.graphics/Outline // androidx.compose.foundation.shape/AbsoluteRoundedCornerShape.createOutline|createOutline(androidx.compose.ui.geometry.Size;kotlin.Float;kotlin.Float;kotlin.Float;kotlin.Float;androidx.compose.ui.unit.LayoutDirection){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // androidx.compose.foundation.shape/AbsoluteRoundedCornerShape.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // androidx.compose.foundation.shape/AbsoluteRoundedCornerShape.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // androidx.compose.foundation.shape/AbsoluteRoundedCornerShape.toString|toString(){}[0]
}

final class androidx.compose.foundation.shape/CutCornerShape : androidx.compose.foundation.shape/CornerBasedShape { // androidx.compose.foundation.shape/CutCornerShape|null[0]
    constructor <init>(androidx.compose.foundation.shape/CornerSize, androidx.compose.foundation.shape/CornerSize, androidx.compose.foundation.shape/CornerSize, androidx.compose.foundation.shape/CornerSize) // androidx.compose.foundation.shape/CutCornerShape.<init>|<init>(androidx.compose.foundation.shape.CornerSize;androidx.compose.foundation.shape.CornerSize;androidx.compose.foundation.shape.CornerSize;androidx.compose.foundation.shape.CornerSize){}[0]

    final fun copy(androidx.compose.foundation.shape/CornerSize, androidx.compose.foundation.shape/CornerSize, androidx.compose.foundation.shape/CornerSize, androidx.compose.foundation.shape/CornerSize): androidx.compose.foundation.shape/CutCornerShape // androidx.compose.foundation.shape/CutCornerShape.copy|copy(androidx.compose.foundation.shape.CornerSize;androidx.compose.foundation.shape.CornerSize;androidx.compose.foundation.shape.CornerSize;androidx.compose.foundation.shape.CornerSize){}[0]
    final fun createOutline(androidx.compose.ui.geometry/Size, kotlin/Float, kotlin/Float, kotlin/Float, kotlin/Float, androidx.compose.ui.unit/LayoutDirection): androidx.compose.ui.graphics/Outline // androidx.compose.foundation.shape/CutCornerShape.createOutline|createOutline(androidx.compose.ui.geometry.Size;kotlin.Float;kotlin.Float;kotlin.Float;kotlin.Float;androidx.compose.ui.unit.LayoutDirection){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // androidx.compose.foundation.shape/CutCornerShape.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // androidx.compose.foundation.shape/CutCornerShape.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // androidx.compose.foundation.shape/CutCornerShape.toString|toString(){}[0]
}

final class androidx.compose.foundation.shape/GenericShape : androidx.compose.ui.graphics/Shape { // androidx.compose.foundation.shape/GenericShape|null[0]
    constructor <init>(kotlin/Function3<androidx.compose.ui.graphics/Path, androidx.compose.ui.geometry/Size, androidx.compose.ui.unit/LayoutDirection, kotlin/Unit>) // androidx.compose.foundation.shape/GenericShape.<init>|<init>(kotlin.Function3<androidx.compose.ui.graphics.Path,androidx.compose.ui.geometry.Size,androidx.compose.ui.unit.LayoutDirection,kotlin.Unit>){}[0]

    final fun createOutline(androidx.compose.ui.geometry/Size, androidx.compose.ui.unit/LayoutDirection, androidx.compose.ui.unit/Density): androidx.compose.ui.graphics/Outline // androidx.compose.foundation.shape/GenericShape.createOutline|createOutline(androidx.compose.ui.geometry.Size;androidx.compose.ui.unit.LayoutDirection;androidx.compose.ui.unit.Density){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // androidx.compose.foundation.shape/GenericShape.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // androidx.compose.foundation.shape/GenericShape.hashCode|hashCode(){}[0]
}

final class androidx.compose.foundation.shape/RoundedCornerShape : androidx.compose.foundation.shape/CornerBasedShape { // androidx.compose.foundation.shape/RoundedCornerShape|null[0]
    constructor <init>(androidx.compose.foundation.shape/CornerSize, androidx.compose.foundation.shape/CornerSize, androidx.compose.foundation.shape/CornerSize, androidx.compose.foundation.shape/CornerSize) // androidx.compose.foundation.shape/RoundedCornerShape.<init>|<init>(androidx.compose.foundation.shape.CornerSize;androidx.compose.foundation.shape.CornerSize;androidx.compose.foundation.shape.CornerSize;androidx.compose.foundation.shape.CornerSize){}[0]

    final fun copy(androidx.compose.foundation.shape/CornerSize, androidx.compose.foundation.shape/CornerSize, androidx.compose.foundation.shape/CornerSize, androidx.compose.foundation.shape/CornerSize): androidx.compose.foundation.shape/RoundedCornerShape // androidx.compose.foundation.shape/RoundedCornerShape.copy|copy(androidx.compose.foundation.shape.CornerSize;androidx.compose.foundation.shape.CornerSize;androidx.compose.foundation.shape.CornerSize;androidx.compose.foundation.shape.CornerSize){}[0]
    final fun createOutline(androidx.compose.ui.geometry/Size, kotlin/Float, kotlin/Float, kotlin/Float, kotlin/Float, androidx.compose.ui.unit/LayoutDirection): androidx.compose.ui.graphics/Outline // androidx.compose.foundation.shape/RoundedCornerShape.createOutline|createOutline(androidx.compose.ui.geometry.Size;kotlin.Float;kotlin.Float;kotlin.Float;kotlin.Float;androidx.compose.ui.unit.LayoutDirection){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // androidx.compose.foundation.shape/RoundedCornerShape.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // androidx.compose.foundation.shape/RoundedCornerShape.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // androidx.compose.foundation.shape/RoundedCornerShape.toString|toString(){}[0]
}

final class androidx.compose.foundation.text.contextmenu.builder/TextContextMenuBuilderScope { // androidx.compose.foundation.text.contextmenu.builder/TextContextMenuBuilderScope|null[0]
    final fun separator() // androidx.compose.foundation.text.contextmenu.builder/TextContextMenuBuilderScope.separator|separator(){}[0]
}

final class androidx.compose.foundation.text.contextmenu.data/TextContextMenuData { // androidx.compose.foundation.text.contextmenu.data/TextContextMenuData|null[0]
    constructor <init>(kotlin.collections/List<androidx.compose.foundation.text.contextmenu.data/TextContextMenuComponent>) // androidx.compose.foundation.text.contextmenu.data/TextContextMenuData.<init>|<init>(kotlin.collections.List<androidx.compose.foundation.text.contextmenu.data.TextContextMenuComponent>){}[0]

    final val components // androidx.compose.foundation.text.contextmenu.data/TextContextMenuData.components|{}components[0]
        final fun <get-components>(): kotlin.collections/List<androidx.compose.foundation.text.contextmenu.data/TextContextMenuComponent> // androidx.compose.foundation.text.contextmenu.data/TextContextMenuData.components.<get-components>|<get-components>(){}[0]

    final fun toString(): kotlin/String // androidx.compose.foundation.text.contextmenu.data/TextContextMenuData.toString|toString(){}[0]

    final object Companion { // androidx.compose.foundation.text.contextmenu.data/TextContextMenuData.Companion|null[0]
        final val Empty // androidx.compose.foundation.text.contextmenu.data/TextContextMenuData.Companion.Empty|{}Empty[0]
            final fun <get-Empty>(): androidx.compose.foundation.text.contextmenu.data/TextContextMenuData // androidx.compose.foundation.text.contextmenu.data/TextContextMenuData.Companion.Empty.<get-Empty>|<get-Empty>(){}[0]
    }
}

final class androidx.compose.foundation.text.input/TextFieldBuffer : kotlin.text/Appendable { // androidx.compose.foundation.text.input/TextFieldBuffer|null[0]
    final val hasSelection // androidx.compose.foundation.text.input/TextFieldBuffer.hasSelection|{}hasSelection[0]
        final fun <get-hasSelection>(): kotlin/Boolean // androidx.compose.foundation.text.input/TextFieldBuffer.hasSelection.<get-hasSelection>|<get-hasSelection>(){}[0]
    final val length // androidx.compose.foundation.text.input/TextFieldBuffer.length|{}length[0]
        final fun <get-length>(): kotlin/Int // androidx.compose.foundation.text.input/TextFieldBuffer.length.<get-length>|<get-length>(){}[0]
    final val originalSelection // androidx.compose.foundation.text.input/TextFieldBuffer.originalSelection|{}originalSelection[0]
        final fun <get-originalSelection>(): androidx.compose.ui.text/TextRange // androidx.compose.foundation.text.input/TextFieldBuffer.originalSelection.<get-originalSelection>|<get-originalSelection>(){}[0]
    final val originalText // androidx.compose.foundation.text.input/TextFieldBuffer.originalText|{}originalText[0]
        final fun <get-originalText>(): kotlin/CharSequence // androidx.compose.foundation.text.input/TextFieldBuffer.originalText.<get-originalText>|<get-originalText>(){}[0]

    final var selection // androidx.compose.foundation.text.input/TextFieldBuffer.selection|{}selection[0]
        final fun <get-selection>(): androidx.compose.ui.text/TextRange // androidx.compose.foundation.text.input/TextFieldBuffer.selection.<get-selection>|<get-selection>(){}[0]
        final fun <set-selection>(androidx.compose.ui.text/TextRange) // androidx.compose.foundation.text.input/TextFieldBuffer.selection.<set-selection>|<set-selection>(androidx.compose.ui.text.TextRange){}[0]

    final fun addStyle(androidx.compose.ui.text/ParagraphStyle, kotlin/Int, kotlin/Int) // androidx.compose.foundation.text.input/TextFieldBuffer.addStyle|addStyle(androidx.compose.ui.text.ParagraphStyle;kotlin.Int;kotlin.Int){}[0]
    final fun addStyle(androidx.compose.ui.text/SpanStyle, kotlin/Int, kotlin/Int) // androidx.compose.foundation.text.input/TextFieldBuffer.addStyle|addStyle(androidx.compose.ui.text.SpanStyle;kotlin.Int;kotlin.Int){}[0]
    final fun append(kotlin/Char): kotlin.text/Appendable // androidx.compose.foundation.text.input/TextFieldBuffer.append|append(kotlin.Char){}[0]
    final fun append(kotlin/CharSequence?): kotlin.text/Appendable // androidx.compose.foundation.text.input/TextFieldBuffer.append|append(kotlin.CharSequence?){}[0]
    final fun append(kotlin/CharSequence?, kotlin/Int, kotlin/Int): kotlin.text/Appendable // androidx.compose.foundation.text.input/TextFieldBuffer.append|append(kotlin.CharSequence?;kotlin.Int;kotlin.Int){}[0]
    final fun asCharSequence(): kotlin/CharSequence // androidx.compose.foundation.text.input/TextFieldBuffer.asCharSequence|asCharSequence(){}[0]
    final fun charAt(kotlin/Int): kotlin/Char // androidx.compose.foundation.text.input/TextFieldBuffer.charAt|charAt(kotlin.Int){}[0]
    final fun placeCursorAfterCharAt(kotlin/Int) // androidx.compose.foundation.text.input/TextFieldBuffer.placeCursorAfterCharAt|placeCursorAfterCharAt(kotlin.Int){}[0]
    final fun placeCursorBeforeCharAt(kotlin/Int) // androidx.compose.foundation.text.input/TextFieldBuffer.placeCursorBeforeCharAt|placeCursorBeforeCharAt(kotlin.Int){}[0]
    final fun replace(kotlin/Int, kotlin/Int, kotlin/CharSequence) // androidx.compose.foundation.text.input/TextFieldBuffer.replace|replace(kotlin.Int;kotlin.Int;kotlin.CharSequence){}[0]
    final fun revertAllChanges() // androidx.compose.foundation.text.input/TextFieldBuffer.revertAllChanges|revertAllChanges(){}[0]
    final fun toString(): kotlin/String // androidx.compose.foundation.text.input/TextFieldBuffer.toString|toString(){}[0]

    abstract interface ChangeList { // androidx.compose.foundation.text.input/TextFieldBuffer.ChangeList|null[0]
        abstract val changeCount // androidx.compose.foundation.text.input/TextFieldBuffer.ChangeList.changeCount|{}changeCount[0]
            abstract fun <get-changeCount>(): kotlin/Int // androidx.compose.foundation.text.input/TextFieldBuffer.ChangeList.changeCount.<get-changeCount>|<get-changeCount>(){}[0]

        abstract fun getOriginalRange(kotlin/Int): androidx.compose.ui.text/TextRange // androidx.compose.foundation.text.input/TextFieldBuffer.ChangeList.getOriginalRange|getOriginalRange(kotlin.Int){}[0]
        abstract fun getRange(kotlin/Int): androidx.compose.ui.text/TextRange // androidx.compose.foundation.text.input/TextFieldBuffer.ChangeList.getRange|getRange(kotlin.Int){}[0]
    }
}

final class androidx.compose.foundation.text.input/TextFieldState { // androidx.compose.foundation.text.input/TextFieldState|null[0]
    constructor <init>(kotlin/String = ..., androidx.compose.ui.text/TextRange = ...) // androidx.compose.foundation.text.input/TextFieldState.<init>|<init>(kotlin.String;androidx.compose.ui.text.TextRange){}[0]

    final val composition // androidx.compose.foundation.text.input/TextFieldState.composition|{}composition[0]
        final fun <get-composition>(): androidx.compose.ui.text/TextRange? // androidx.compose.foundation.text.input/TextFieldState.composition.<get-composition>|<get-composition>(){}[0]
    final val selection // androidx.compose.foundation.text.input/TextFieldState.selection|{}selection[0]
        final fun <get-selection>(): androidx.compose.ui.text/TextRange // androidx.compose.foundation.text.input/TextFieldState.selection.<get-selection>|<get-selection>(){}[0]
    final val text // androidx.compose.foundation.text.input/TextFieldState.text|{}text[0]
        final fun <get-text>(): kotlin/CharSequence // androidx.compose.foundation.text.input/TextFieldState.text.<get-text>|<get-text>(){}[0]

    final fun commitEdit(androidx.compose.foundation.text.input/TextFieldBuffer) // androidx.compose.foundation.text.input/TextFieldState.commitEdit|commitEdit(androidx.compose.foundation.text.input.TextFieldBuffer){}[0]
    final fun finishEditing() // androidx.compose.foundation.text.input/TextFieldState.finishEditing|finishEditing(){}[0]
    final fun startEdit(): androidx.compose.foundation.text.input/TextFieldBuffer // androidx.compose.foundation.text.input/TextFieldState.startEdit|startEdit(){}[0]
    final fun toString(): kotlin/String // androidx.compose.foundation.text.input/TextFieldState.toString|toString(){}[0]
    final inline fun edit(kotlin/Function1<androidx.compose.foundation.text.input/TextFieldBuffer, kotlin/Unit>) // androidx.compose.foundation.text.input/TextFieldState.edit|edit(kotlin.Function1<androidx.compose.foundation.text.input.TextFieldBuffer,kotlin.Unit>){}[0]

    final object Saver : androidx.compose.runtime.saveable/Saver<androidx.compose.foundation.text.input/TextFieldState, kotlin/Any> { // androidx.compose.foundation.text.input/TextFieldState.Saver|null[0]
        final fun (androidx.compose.runtime.saveable/SaverScope).save(androidx.compose.foundation.text.input/TextFieldState): kotlin/Any? // androidx.compose.foundation.text.input/TextFieldState.Saver.save|save@androidx.compose.runtime.saveable.SaverScope(androidx.compose.foundation.text.input.TextFieldState){}[0]
        final fun restore(kotlin/Any): androidx.compose.foundation.text.input/TextFieldState? // androidx.compose.foundation.text.input/TextFieldState.Saver.restore|restore(kotlin.Any){}[0]
    }
}

final class androidx.compose.foundation.text.input/UndoState { // androidx.compose.foundation.text.input/UndoState|null[0]
    final val canRedo // androidx.compose.foundation.text.input/UndoState.canRedo|{}canRedo[0]
        final fun <get-canRedo>(): kotlin/Boolean // androidx.compose.foundation.text.input/UndoState.canRedo.<get-canRedo>|<get-canRedo>(){}[0]
    final val canUndo // androidx.compose.foundation.text.input/UndoState.canUndo|{}canUndo[0]
        final fun <get-canUndo>(): kotlin/Boolean // androidx.compose.foundation.text.input/UndoState.canUndo.<get-canUndo>|<get-canUndo>(){}[0]

    final fun clearHistory() // androidx.compose.foundation.text.input/UndoState.clearHistory|clearHistory(){}[0]
    final fun redo() // androidx.compose.foundation.text.input/UndoState.redo|redo(){}[0]
    final fun undo() // androidx.compose.foundation.text.input/UndoState.undo|undo(){}[0]
}

final class androidx.compose.foundation.text.selection/TextSelectionColors { // androidx.compose.foundation.text.selection/TextSelectionColors|null[0]
    constructor <init>(androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color) // androidx.compose.foundation.text.selection/TextSelectionColors.<init>|<init>(androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color){}[0]

    final val backgroundColor // androidx.compose.foundation.text.selection/TextSelectionColors.backgroundColor|{}backgroundColor[0]
        final fun <get-backgroundColor>(): androidx.compose.ui.graphics/Color // androidx.compose.foundation.text.selection/TextSelectionColors.backgroundColor.<get-backgroundColor>|<get-backgroundColor>(){}[0]
    final val handleColor // androidx.compose.foundation.text.selection/TextSelectionColors.handleColor|{}handleColor[0]
        final fun <get-handleColor>(): androidx.compose.ui.graphics/Color // androidx.compose.foundation.text.selection/TextSelectionColors.handleColor.<get-handleColor>|<get-handleColor>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // androidx.compose.foundation.text.selection/TextSelectionColors.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // androidx.compose.foundation.text.selection/TextSelectionColors.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // androidx.compose.foundation.text.selection/TextSelectionColors.toString|toString(){}[0]
}

final class androidx.compose.foundation.text/InlineTextContent { // androidx.compose.foundation.text/InlineTextContent|null[0]
    constructor <init>(androidx.compose.ui.text/Placeholder, kotlin/Function3<kotlin/String, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>) // androidx.compose.foundation.text/InlineTextContent.<init>|<init>(androidx.compose.ui.text.Placeholder;kotlin.Function3<kotlin.String,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>){}[0]

    final val children // androidx.compose.foundation.text/InlineTextContent.children|{}children[0]
        final fun <get-children>(): kotlin/Function3<kotlin/String, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit> // androidx.compose.foundation.text/InlineTextContent.children.<get-children>|<get-children>(){}[0]
    final val placeholder // androidx.compose.foundation.text/InlineTextContent.placeholder|{}placeholder[0]
        final fun <get-placeholder>(): androidx.compose.ui.text/Placeholder // androidx.compose.foundation.text/InlineTextContent.placeholder.<get-placeholder>|<get-placeholder>(){}[0]
}

final class androidx.compose.foundation.text/KeyboardActions { // androidx.compose.foundation.text/KeyboardActions|null[0]
    constructor <init>(kotlin/Function1<androidx.compose.foundation.text/KeyboardActionScope, kotlin/Unit>? = ..., kotlin/Function1<androidx.compose.foundation.text/KeyboardActionScope, kotlin/Unit>? = ..., kotlin/Function1<androidx.compose.foundation.text/KeyboardActionScope, kotlin/Unit>? = ..., kotlin/Function1<androidx.compose.foundation.text/KeyboardActionScope, kotlin/Unit>? = ..., kotlin/Function1<androidx.compose.foundation.text/KeyboardActionScope, kotlin/Unit>? = ..., kotlin/Function1<androidx.compose.foundation.text/KeyboardActionScope, kotlin/Unit>? = ...) // androidx.compose.foundation.text/KeyboardActions.<init>|<init>(kotlin.Function1<androidx.compose.foundation.text.KeyboardActionScope,kotlin.Unit>?;kotlin.Function1<androidx.compose.foundation.text.KeyboardActionScope,kotlin.Unit>?;kotlin.Function1<androidx.compose.foundation.text.KeyboardActionScope,kotlin.Unit>?;kotlin.Function1<androidx.compose.foundation.text.KeyboardActionScope,kotlin.Unit>?;kotlin.Function1<androidx.compose.foundation.text.KeyboardActionScope,kotlin.Unit>?;kotlin.Function1<androidx.compose.foundation.text.KeyboardActionScope,kotlin.Unit>?){}[0]

    final val onDone // androidx.compose.foundation.text/KeyboardActions.onDone|{}onDone[0]
        final fun <get-onDone>(): kotlin/Function1<androidx.compose.foundation.text/KeyboardActionScope, kotlin/Unit>? // androidx.compose.foundation.text/KeyboardActions.onDone.<get-onDone>|<get-onDone>(){}[0]
    final val onGo // androidx.compose.foundation.text/KeyboardActions.onGo|{}onGo[0]
        final fun <get-onGo>(): kotlin/Function1<androidx.compose.foundation.text/KeyboardActionScope, kotlin/Unit>? // androidx.compose.foundation.text/KeyboardActions.onGo.<get-onGo>|<get-onGo>(){}[0]
    final val onNext // androidx.compose.foundation.text/KeyboardActions.onNext|{}onNext[0]
        final fun <get-onNext>(): kotlin/Function1<androidx.compose.foundation.text/KeyboardActionScope, kotlin/Unit>? // androidx.compose.foundation.text/KeyboardActions.onNext.<get-onNext>|<get-onNext>(){}[0]
    final val onPrevious // androidx.compose.foundation.text/KeyboardActions.onPrevious|{}onPrevious[0]
        final fun <get-onPrevious>(): kotlin/Function1<androidx.compose.foundation.text/KeyboardActionScope, kotlin/Unit>? // androidx.compose.foundation.text/KeyboardActions.onPrevious.<get-onPrevious>|<get-onPrevious>(){}[0]
    final val onSearch // androidx.compose.foundation.text/KeyboardActions.onSearch|{}onSearch[0]
        final fun <get-onSearch>(): kotlin/Function1<androidx.compose.foundation.text/KeyboardActionScope, kotlin/Unit>? // androidx.compose.foundation.text/KeyboardActions.onSearch.<get-onSearch>|<get-onSearch>(){}[0]
    final val onSend // androidx.compose.foundation.text/KeyboardActions.onSend|{}onSend[0]
        final fun <get-onSend>(): kotlin/Function1<androidx.compose.foundation.text/KeyboardActionScope, kotlin/Unit>? // androidx.compose.foundation.text/KeyboardActions.onSend.<get-onSend>|<get-onSend>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // androidx.compose.foundation.text/KeyboardActions.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // androidx.compose.foundation.text/KeyboardActions.hashCode|hashCode(){}[0]

    final object Companion { // androidx.compose.foundation.text/KeyboardActions.Companion|null[0]
        final val Default // androidx.compose.foundation.text/KeyboardActions.Companion.Default|{}Default[0]
            final fun <get-Default>(): androidx.compose.foundation.text/KeyboardActions // androidx.compose.foundation.text/KeyboardActions.Companion.Default.<get-Default>|<get-Default>(){}[0]
    }
}

final class androidx.compose.foundation.text/KeyboardOptions { // androidx.compose.foundation.text/KeyboardOptions|null[0]
    constructor <init>(androidx.compose.ui.text.input/KeyboardCapitalization = ..., kotlin/Boolean = ..., androidx.compose.ui.text.input/KeyboardType = ..., androidx.compose.ui.text.input/ImeAction = ...) // androidx.compose.foundation.text/KeyboardOptions.<init>|<init>(androidx.compose.ui.text.input.KeyboardCapitalization;kotlin.Boolean;androidx.compose.ui.text.input.KeyboardType;androidx.compose.ui.text.input.ImeAction){}[0]
    constructor <init>(androidx.compose.ui.text.input/KeyboardCapitalization = ..., kotlin/Boolean = ..., androidx.compose.ui.text.input/KeyboardType = ..., androidx.compose.ui.text.input/ImeAction = ..., androidx.compose.ui.text.input/PlatformImeOptions? = ...) // androidx.compose.foundation.text/KeyboardOptions.<init>|<init>(androidx.compose.ui.text.input.KeyboardCapitalization;kotlin.Boolean;androidx.compose.ui.text.input.KeyboardType;androidx.compose.ui.text.input.ImeAction;androidx.compose.ui.text.input.PlatformImeOptions?){}[0]
    constructor <init>(androidx.compose.ui.text.input/KeyboardCapitalization = ..., kotlin/Boolean, androidx.compose.ui.text.input/KeyboardType = ..., androidx.compose.ui.text.input/ImeAction = ..., androidx.compose.ui.text.input/PlatformImeOptions? = ..., kotlin/Boolean? = ..., androidx.compose.ui.text.intl/LocaleList? = ...) // androidx.compose.foundation.text/KeyboardOptions.<init>|<init>(androidx.compose.ui.text.input.KeyboardCapitalization;kotlin.Boolean;androidx.compose.ui.text.input.KeyboardType;androidx.compose.ui.text.input.ImeAction;androidx.compose.ui.text.input.PlatformImeOptions?;kotlin.Boolean?;androidx.compose.ui.text.intl.LocaleList?){}[0]
    constructor <init>(androidx.compose.ui.text.input/KeyboardCapitalization = ..., kotlin/Boolean? = ..., androidx.compose.ui.text.input/KeyboardType = ..., androidx.compose.ui.text.input/ImeAction = ..., androidx.compose.ui.text.input/PlatformImeOptions? = ..., kotlin/Boolean? = ..., androidx.compose.ui.text.intl/LocaleList? = ...) // androidx.compose.foundation.text/KeyboardOptions.<init>|<init>(androidx.compose.ui.text.input.KeyboardCapitalization;kotlin.Boolean?;androidx.compose.ui.text.input.KeyboardType;androidx.compose.ui.text.input.ImeAction;androidx.compose.ui.text.input.PlatformImeOptions?;kotlin.Boolean?;androidx.compose.ui.text.intl.LocaleList?){}[0]

    final val autoCorrect // androidx.compose.foundation.text/KeyboardOptions.autoCorrect|{}autoCorrect[0]
        final fun <get-autoCorrect>(): kotlin/Boolean // androidx.compose.foundation.text/KeyboardOptions.autoCorrect.<get-autoCorrect>|<get-autoCorrect>(){}[0]
    final val autoCorrectEnabled // androidx.compose.foundation.text/KeyboardOptions.autoCorrectEnabled|{}autoCorrectEnabled[0]
        final fun <get-autoCorrectEnabled>(): kotlin/Boolean? // androidx.compose.foundation.text/KeyboardOptions.autoCorrectEnabled.<get-autoCorrectEnabled>|<get-autoCorrectEnabled>(){}[0]
    final val capitalization // androidx.compose.foundation.text/KeyboardOptions.capitalization|{}capitalization[0]
        final fun <get-capitalization>(): androidx.compose.ui.text.input/KeyboardCapitalization // androidx.compose.foundation.text/KeyboardOptions.capitalization.<get-capitalization>|<get-capitalization>(){}[0]
    final val hintLocales // androidx.compose.foundation.text/KeyboardOptions.hintLocales|{}hintLocales[0]
        final fun <get-hintLocales>(): androidx.compose.ui.text.intl/LocaleList? // androidx.compose.foundation.text/KeyboardOptions.hintLocales.<get-hintLocales>|<get-hintLocales>(){}[0]
    final val imeAction // androidx.compose.foundation.text/KeyboardOptions.imeAction|{}imeAction[0]
        final fun <get-imeAction>(): androidx.compose.ui.text.input/ImeAction // androidx.compose.foundation.text/KeyboardOptions.imeAction.<get-imeAction>|<get-imeAction>(){}[0]
    final val keyboardType // androidx.compose.foundation.text/KeyboardOptions.keyboardType|{}keyboardType[0]
        final fun <get-keyboardType>(): androidx.compose.ui.text.input/KeyboardType // androidx.compose.foundation.text/KeyboardOptions.keyboardType.<get-keyboardType>|<get-keyboardType>(){}[0]
    final val platformImeOptions // androidx.compose.foundation.text/KeyboardOptions.platformImeOptions|{}platformImeOptions[0]
        final fun <get-platformImeOptions>(): androidx.compose.ui.text.input/PlatformImeOptions? // androidx.compose.foundation.text/KeyboardOptions.platformImeOptions.<get-platformImeOptions>|<get-platformImeOptions>(){}[0]
    final val shouldShowKeyboardOnFocus // androidx.compose.foundation.text/KeyboardOptions.shouldShowKeyboardOnFocus|{}shouldShowKeyboardOnFocus[0]
        final fun <get-shouldShowKeyboardOnFocus>(): kotlin/Boolean // androidx.compose.foundation.text/KeyboardOptions.shouldShowKeyboardOnFocus.<get-shouldShowKeyboardOnFocus>|<get-shouldShowKeyboardOnFocus>(){}[0]
    final val showKeyboardOnFocus // androidx.compose.foundation.text/KeyboardOptions.showKeyboardOnFocus|{}showKeyboardOnFocus[0]
        final fun <get-showKeyboardOnFocus>(): kotlin/Boolean? // androidx.compose.foundation.text/KeyboardOptions.showKeyboardOnFocus.<get-showKeyboardOnFocus>|<get-showKeyboardOnFocus>(){}[0]

    final fun copy(androidx.compose.ui.text.input/KeyboardCapitalization = ..., kotlin/Boolean = ..., androidx.compose.ui.text.input/KeyboardType = ..., androidx.compose.ui.text.input/ImeAction = ...): androidx.compose.foundation.text/KeyboardOptions // androidx.compose.foundation.text/KeyboardOptions.copy|copy(androidx.compose.ui.text.input.KeyboardCapitalization;kotlin.Boolean;androidx.compose.ui.text.input.KeyboardType;androidx.compose.ui.text.input.ImeAction){}[0]
    final fun copy(androidx.compose.ui.text.input/KeyboardCapitalization = ..., kotlin/Boolean = ..., androidx.compose.ui.text.input/KeyboardType = ..., androidx.compose.ui.text.input/ImeAction = ..., androidx.compose.ui.text.input/PlatformImeOptions? = ...): androidx.compose.foundation.text/KeyboardOptions // androidx.compose.foundation.text/KeyboardOptions.copy|copy(androidx.compose.ui.text.input.KeyboardCapitalization;kotlin.Boolean;androidx.compose.ui.text.input.KeyboardType;androidx.compose.ui.text.input.ImeAction;androidx.compose.ui.text.input.PlatformImeOptions?){}[0]
    final fun copy(androidx.compose.ui.text.input/KeyboardCapitalization = ..., kotlin/Boolean = ..., androidx.compose.ui.text.input/KeyboardType = ..., androidx.compose.ui.text.input/ImeAction = ..., androidx.compose.ui.text.input/PlatformImeOptions? = ..., kotlin/Boolean? = ..., androidx.compose.ui.text.intl/LocaleList? = ...): androidx.compose.foundation.text/KeyboardOptions // androidx.compose.foundation.text/KeyboardOptions.copy|copy(androidx.compose.ui.text.input.KeyboardCapitalization;kotlin.Boolean;androidx.compose.ui.text.input.KeyboardType;androidx.compose.ui.text.input.ImeAction;androidx.compose.ui.text.input.PlatformImeOptions?;kotlin.Boolean?;androidx.compose.ui.text.intl.LocaleList?){}[0]
    final fun copy(androidx.compose.ui.text.input/KeyboardCapitalization = ..., kotlin/Boolean? = ..., androidx.compose.ui.text.input/KeyboardType = ..., androidx.compose.ui.text.input/ImeAction = ..., androidx.compose.ui.text.input/PlatformImeOptions? = ..., kotlin/Boolean? = ..., androidx.compose.ui.text.intl/LocaleList? = ...): androidx.compose.foundation.text/KeyboardOptions // androidx.compose.foundation.text/KeyboardOptions.copy|copy(androidx.compose.ui.text.input.KeyboardCapitalization;kotlin.Boolean?;androidx.compose.ui.text.input.KeyboardType;androidx.compose.ui.text.input.ImeAction;androidx.compose.ui.text.input.PlatformImeOptions?;kotlin.Boolean?;androidx.compose.ui.text.intl.LocaleList?){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // androidx.compose.foundation.text/KeyboardOptions.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // androidx.compose.foundation.text/KeyboardOptions.hashCode|hashCode(){}[0]
    final fun merge(androidx.compose.foundation.text/KeyboardOptions?): androidx.compose.foundation.text/KeyboardOptions // androidx.compose.foundation.text/KeyboardOptions.merge|merge(androidx.compose.foundation.text.KeyboardOptions?){}[0]
    final fun toString(): kotlin/String // androidx.compose.foundation.text/KeyboardOptions.toString|toString(){}[0]

    final object Companion { // androidx.compose.foundation.text/KeyboardOptions.Companion|null[0]
        final val Default // androidx.compose.foundation.text/KeyboardOptions.Companion.Default|{}Default[0]
            final fun <get-Default>(): androidx.compose.foundation.text/KeyboardOptions // androidx.compose.foundation.text/KeyboardOptions.Companion.Default.<get-Default>|<get-Default>(){}[0]
    }
}

final class androidx.compose.foundation/BorderStroke { // androidx.compose.foundation/BorderStroke|null[0]
    constructor <init>(androidx.compose.ui.unit/Dp, androidx.compose.ui.graphics/Brush) // androidx.compose.foundation/BorderStroke.<init>|<init>(androidx.compose.ui.unit.Dp;androidx.compose.ui.graphics.Brush){}[0]

    final val brush // androidx.compose.foundation/BorderStroke.brush|{}brush[0]
        final fun <get-brush>(): androidx.compose.ui.graphics/Brush // androidx.compose.foundation/BorderStroke.brush.<get-brush>|<get-brush>(){}[0]
    final val width // androidx.compose.foundation/BorderStroke.width|{}width[0]
        final fun <get-width>(): androidx.compose.ui.unit/Dp // androidx.compose.foundation/BorderStroke.width.<get-width>|<get-width>(){}[0]

    final fun copy(androidx.compose.ui.unit/Dp = ..., androidx.compose.ui.graphics/Brush = ...): androidx.compose.foundation/BorderStroke // androidx.compose.foundation/BorderStroke.copy|copy(androidx.compose.ui.unit.Dp;androidx.compose.ui.graphics.Brush){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // androidx.compose.foundation/BorderStroke.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // androidx.compose.foundation/BorderStroke.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // androidx.compose.foundation/BorderStroke.toString|toString(){}[0]
}

final class androidx.compose.foundation/MutatorMutex { // androidx.compose.foundation/MutatorMutex|null[0]
    constructor <init>() // androidx.compose.foundation/MutatorMutex.<init>|<init>(){}[0]

    final fun tryLock(): kotlin/Boolean // androidx.compose.foundation/MutatorMutex.tryLock|tryLock(){}[0]
    final fun unlock() // androidx.compose.foundation/MutatorMutex.unlock|unlock(){}[0]
    final inline fun tryMutate(kotlin/Function0<kotlin/Unit>): kotlin/Boolean // androidx.compose.foundation/MutatorMutex.tryMutate|tryMutate(kotlin.Function0<kotlin.Unit>){}[0]
    final suspend fun <#A1: kotlin/Any?, #B1: kotlin/Any?> mutateWith(#A1, androidx.compose.foundation/MutatePriority = ..., kotlin.coroutines/SuspendFunction1<#A1, #B1>): #B1 // androidx.compose.foundation/MutatorMutex.mutateWith|mutateWith(0:0;androidx.compose.foundation.MutatePriority;kotlin.coroutines.SuspendFunction1<0:0,0:1>){0§<kotlin.Any?>;1§<kotlin.Any?>}[0]
    final suspend fun <#A1: kotlin/Any?> mutate(androidx.compose.foundation/MutatePriority = ..., kotlin.coroutines/SuspendFunction0<#A1>): #A1 // androidx.compose.foundation/MutatorMutex.mutate|mutate(androidx.compose.foundation.MutatePriority;kotlin.coroutines.SuspendFunction0<0:0>){0§<kotlin.Any?>}[0]
}

final class androidx.compose.foundation/ScrollState : androidx.compose.foundation.gestures/ScrollableState { // androidx.compose.foundation/ScrollState|null[0]
    constructor <init>(kotlin/Int) // androidx.compose.foundation/ScrollState.<init>|<init>(kotlin.Int){}[0]

    final val canScrollBackward // androidx.compose.foundation/ScrollState.canScrollBackward|{}canScrollBackward[0]
        final fun <get-canScrollBackward>(): kotlin/Boolean // androidx.compose.foundation/ScrollState.canScrollBackward.<get-canScrollBackward>|<get-canScrollBackward>(){}[0]
    final val canScrollForward // androidx.compose.foundation/ScrollState.canScrollForward|{}canScrollForward[0]
        final fun <get-canScrollForward>(): kotlin/Boolean // androidx.compose.foundation/ScrollState.canScrollForward.<get-canScrollForward>|<get-canScrollForward>(){}[0]
    final val interactionSource // androidx.compose.foundation/ScrollState.interactionSource|{}interactionSource[0]
        final fun <get-interactionSource>(): androidx.compose.foundation.interaction/InteractionSource // androidx.compose.foundation/ScrollState.interactionSource.<get-interactionSource>|<get-interactionSource>(){}[0]
    final val isScrollInProgress // androidx.compose.foundation/ScrollState.isScrollInProgress|{}isScrollInProgress[0]
        final fun <get-isScrollInProgress>(): kotlin/Boolean // androidx.compose.foundation/ScrollState.isScrollInProgress.<get-isScrollInProgress>|<get-isScrollInProgress>(){}[0]
    final val lastScrolledBackward // androidx.compose.foundation/ScrollState.lastScrolledBackward|{}lastScrolledBackward[0]
        final fun <get-lastScrolledBackward>(): kotlin/Boolean // androidx.compose.foundation/ScrollState.lastScrolledBackward.<get-lastScrolledBackward>|<get-lastScrolledBackward>(){}[0]
    final val lastScrolledForward // androidx.compose.foundation/ScrollState.lastScrolledForward|{}lastScrolledForward[0]
        final fun <get-lastScrolledForward>(): kotlin/Boolean // androidx.compose.foundation/ScrollState.lastScrolledForward.<get-lastScrolledForward>|<get-lastScrolledForward>(){}[0]

    final var maxValue // androidx.compose.foundation/ScrollState.maxValue|{}maxValue[0]
        final fun <get-maxValue>(): kotlin/Int // androidx.compose.foundation/ScrollState.maxValue.<get-maxValue>|<get-maxValue>(){}[0]
    final var value // androidx.compose.foundation/ScrollState.value|{}value[0]
        final fun <get-value>(): kotlin/Int // androidx.compose.foundation/ScrollState.value.<get-value>|<get-value>(){}[0]
    final var viewportSize // androidx.compose.foundation/ScrollState.viewportSize|{}viewportSize[0]
        final fun <get-viewportSize>(): kotlin/Int // androidx.compose.foundation/ScrollState.viewportSize.<get-viewportSize>|<get-viewportSize>(){}[0]

    final fun dispatchRawDelta(kotlin/Float): kotlin/Float // androidx.compose.foundation/ScrollState.dispatchRawDelta|dispatchRawDelta(kotlin.Float){}[0]
    final suspend fun animateScrollTo(kotlin/Int, androidx.compose.animation.core/AnimationSpec<kotlin/Float> = ...) // androidx.compose.foundation/ScrollState.animateScrollTo|animateScrollTo(kotlin.Int;androidx.compose.animation.core.AnimationSpec<kotlin.Float>){}[0]
    final suspend fun scroll(androidx.compose.foundation/MutatePriority, kotlin.coroutines/SuspendFunction1<androidx.compose.foundation.gestures/ScrollScope, kotlin/Unit>) // androidx.compose.foundation/ScrollState.scroll|scroll(androidx.compose.foundation.MutatePriority;kotlin.coroutines.SuspendFunction1<androidx.compose.foundation.gestures.ScrollScope,kotlin.Unit>){}[0]
    final suspend fun scrollTo(kotlin/Int): kotlin/Float // androidx.compose.foundation/ScrollState.scrollTo|scrollTo(kotlin.Int){}[0]

    final object Companion { // androidx.compose.foundation/ScrollState.Companion|null[0]
        final val Saver // androidx.compose.foundation/ScrollState.Companion.Saver|{}Saver[0]
            final fun <get-Saver>(): androidx.compose.runtime.saveable/Saver<androidx.compose.foundation/ScrollState, *> // androidx.compose.foundation/ScrollState.Companion.Saver.<get-Saver>|<get-Saver>(){}[0]
    }
}

final value class androidx.compose.foundation.lazy.grid/GridItemSpan { // androidx.compose.foundation.lazy.grid/GridItemSpan|null[0]
    final val currentLineSpan // androidx.compose.foundation.lazy.grid/GridItemSpan.currentLineSpan|{}currentLineSpan[0]
        final fun <get-currentLineSpan>(): kotlin/Int // androidx.compose.foundation.lazy.grid/GridItemSpan.currentLineSpan.<get-currentLineSpan>|<get-currentLineSpan>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // androidx.compose.foundation.lazy.grid/GridItemSpan.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // androidx.compose.foundation.lazy.grid/GridItemSpan.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // androidx.compose.foundation.lazy.grid/GridItemSpan.toString|toString(){}[0]
}

final value class androidx.compose.foundation.text.input/TextObfuscationMode { // androidx.compose.foundation.text.input/TextObfuscationMode|null[0]
    final val value // androidx.compose.foundation.text.input/TextObfuscationMode.value|{}value[0]
        final fun <get-value>(): kotlin/Int // androidx.compose.foundation.text.input/TextObfuscationMode.value.<get-value>|<get-value>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // androidx.compose.foundation.text.input/TextObfuscationMode.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // androidx.compose.foundation.text.input/TextObfuscationMode.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // androidx.compose.foundation.text.input/TextObfuscationMode.toString|toString(){}[0]

    final object Companion { // androidx.compose.foundation.text.input/TextObfuscationMode.Companion|null[0]
        final val Hidden // androidx.compose.foundation.text.input/TextObfuscationMode.Companion.Hidden|{}Hidden[0]
            final fun <get-Hidden>(): androidx.compose.foundation.text.input/TextObfuscationMode // androidx.compose.foundation.text.input/TextObfuscationMode.Companion.Hidden.<get-Hidden>|<get-Hidden>(){}[0]
        final val RevealLastTyped // androidx.compose.foundation.text.input/TextObfuscationMode.Companion.RevealLastTyped|{}RevealLastTyped[0]
            final fun <get-RevealLastTyped>(): androidx.compose.foundation.text.input/TextObfuscationMode // androidx.compose.foundation.text.input/TextObfuscationMode.Companion.RevealLastTyped.<get-RevealLastTyped>|<get-RevealLastTyped>(){}[0]
        final val Visible // androidx.compose.foundation.text.input/TextObfuscationMode.Companion.Visible|{}Visible[0]
            final fun <get-Visible>(): androidx.compose.foundation.text.input/TextObfuscationMode // androidx.compose.foundation.text.input/TextObfuscationMode.Companion.Visible.<get-Visible>|<get-Visible>(){}[0]
    }
}

final value class androidx.compose.foundation/MarqueeAnimationMode { // androidx.compose.foundation/MarqueeAnimationMode|null[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // androidx.compose.foundation/MarqueeAnimationMode.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // androidx.compose.foundation/MarqueeAnimationMode.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // androidx.compose.foundation/MarqueeAnimationMode.toString|toString(){}[0]

    final object Companion { // androidx.compose.foundation/MarqueeAnimationMode.Companion|null[0]
        final val Immediately // androidx.compose.foundation/MarqueeAnimationMode.Companion.Immediately|{}Immediately[0]
            final fun <get-Immediately>(): androidx.compose.foundation/MarqueeAnimationMode // androidx.compose.foundation/MarqueeAnimationMode.Companion.Immediately.<get-Immediately>|<get-Immediately>(){}[0]
        final val WhileFocused // androidx.compose.foundation/MarqueeAnimationMode.Companion.WhileFocused|{}WhileFocused[0]
            final fun <get-WhileFocused>(): androidx.compose.foundation/MarqueeAnimationMode // androidx.compose.foundation/MarqueeAnimationMode.Companion.WhileFocused.<get-WhileFocused>|<get-WhileFocused>(){}[0]
    }
}

final object androidx.compose.foundation.gestures/AnchoredDraggableDefaults { // androidx.compose.foundation.gestures/AnchoredDraggableDefaults|null[0]
    final val DecayAnimationSpec // androidx.compose.foundation.gestures/AnchoredDraggableDefaults.DecayAnimationSpec|{}DecayAnimationSpec[0]
        final fun <get-DecayAnimationSpec>(): androidx.compose.animation.core/DecayAnimationSpec<kotlin/Float> // androidx.compose.foundation.gestures/AnchoredDraggableDefaults.DecayAnimationSpec.<get-DecayAnimationSpec>|<get-DecayAnimationSpec>(){}[0]
    final val PositionalThreshold // androidx.compose.foundation.gestures/AnchoredDraggableDefaults.PositionalThreshold|{}PositionalThreshold[0]
        final fun <get-PositionalThreshold>(): kotlin/Function1<kotlin/Float, kotlin/Float> // androidx.compose.foundation.gestures/AnchoredDraggableDefaults.PositionalThreshold.<get-PositionalThreshold>|<get-PositionalThreshold>(){}[0]
    final val SnapAnimationSpec // androidx.compose.foundation.gestures/AnchoredDraggableDefaults.SnapAnimationSpec|{}SnapAnimationSpec[0]
        final fun <get-SnapAnimationSpec>(): androidx.compose.animation.core/AnimationSpec<kotlin/Float> // androidx.compose.foundation.gestures/AnchoredDraggableDefaults.SnapAnimationSpec.<get-SnapAnimationSpec>|<get-SnapAnimationSpec>(){}[0]

    final fun <#A1: kotlin/Any?> flingBehavior(androidx.compose.foundation.gestures/AnchoredDraggableState<#A1>, kotlin/Function1<kotlin/Float, kotlin/Float>?, androidx.compose.animation.core/AnimationSpec<kotlin/Float>?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int): androidx.compose.foundation.gestures/TargetedFlingBehavior // androidx.compose.foundation.gestures/AnchoredDraggableDefaults.flingBehavior|flingBehavior(androidx.compose.foundation.gestures.AnchoredDraggableState<0:0>;kotlin.Function1<kotlin.Float,kotlin.Float>?;androidx.compose.animation.core.AnimationSpec<kotlin.Float>?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){0§<kotlin.Any?>}[0]
}

final object androidx.compose.foundation.gestures/ScrollableDefaults { // androidx.compose.foundation.gestures/ScrollableDefaults|null[0]
    final fun flingBehavior(androidx.compose.runtime/Composer?, kotlin/Int): androidx.compose.foundation.gestures/FlingBehavior // androidx.compose.foundation.gestures/ScrollableDefaults.flingBehavior|flingBehavior(androidx.compose.runtime.Composer?;kotlin.Int){}[0]
    final fun overscrollEffect(androidx.compose.runtime/Composer?, kotlin/Int): androidx.compose.foundation/OverscrollEffect // androidx.compose.foundation.gestures/ScrollableDefaults.overscrollEffect|overscrollEffect(androidx.compose.runtime.Composer?;kotlin.Int){}[0]
    final fun reverseDirection(androidx.compose.ui.unit/LayoutDirection, androidx.compose.foundation.gestures/Orientation, kotlin/Boolean): kotlin/Boolean // androidx.compose.foundation.gestures/ScrollableDefaults.reverseDirection|reverseDirection(androidx.compose.ui.unit.LayoutDirection;androidx.compose.foundation.gestures.Orientation;kotlin.Boolean){}[0]
}

final object androidx.compose.foundation.pager/PagerDefaults { // androidx.compose.foundation.pager/PagerDefaults|null[0]
    final const val BeyondViewportPageCount // androidx.compose.foundation.pager/PagerDefaults.BeyondViewportPageCount|{}BeyondViewportPageCount[0]
        final fun <get-BeyondViewportPageCount>(): kotlin/Int // androidx.compose.foundation.pager/PagerDefaults.BeyondViewportPageCount.<get-BeyondViewportPageCount>|<get-BeyondViewportPageCount>(){}[0]

    final fun flingBehavior(androidx.compose.foundation.pager/PagerState, androidx.compose.foundation.pager/PagerSnapDistance?, androidx.compose.animation.core/DecayAnimationSpec<kotlin/Float>?, androidx.compose.animation.core/AnimationSpec<kotlin/Float>?, kotlin/Float, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int): androidx.compose.foundation.gestures/TargetedFlingBehavior // androidx.compose.foundation.pager/PagerDefaults.flingBehavior|flingBehavior(androidx.compose.foundation.pager.PagerState;androidx.compose.foundation.pager.PagerSnapDistance?;androidx.compose.animation.core.DecayAnimationSpec<kotlin.Float>?;androidx.compose.animation.core.AnimationSpec<kotlin.Float>?;kotlin.Float;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
    final fun pageNestedScrollConnection(androidx.compose.foundation.pager/PagerState, androidx.compose.foundation.gestures/Orientation, androidx.compose.runtime/Composer?, kotlin/Int): androidx.compose.ui.input.nestedscroll/NestedScrollConnection // androidx.compose.foundation.pager/PagerDefaults.pageNestedScrollConnection|pageNestedScrollConnection(androidx.compose.foundation.pager.PagerState;androidx.compose.foundation.gestures.Orientation;androidx.compose.runtime.Composer?;kotlin.Int){}[0]
}

final object androidx.compose.foundation.text.contextmenu.data/TextContextMenuKeys { // androidx.compose.foundation.text.contextmenu.data/TextContextMenuKeys|null[0]
    final val AutofillKey // androidx.compose.foundation.text.contextmenu.data/TextContextMenuKeys.AutofillKey|{}AutofillKey[0]
        final fun <get-AutofillKey>(): kotlin/Any // androidx.compose.foundation.text.contextmenu.data/TextContextMenuKeys.AutofillKey.<get-AutofillKey>|<get-AutofillKey>(){}[0]
    final val CopyKey // androidx.compose.foundation.text.contextmenu.data/TextContextMenuKeys.CopyKey|{}CopyKey[0]
        final fun <get-CopyKey>(): kotlin/Any // androidx.compose.foundation.text.contextmenu.data/TextContextMenuKeys.CopyKey.<get-CopyKey>|<get-CopyKey>(){}[0]
    final val CutKey // androidx.compose.foundation.text.contextmenu.data/TextContextMenuKeys.CutKey|{}CutKey[0]
        final fun <get-CutKey>(): kotlin/Any // androidx.compose.foundation.text.contextmenu.data/TextContextMenuKeys.CutKey.<get-CutKey>|<get-CutKey>(){}[0]
    final val PasteKey // androidx.compose.foundation.text.contextmenu.data/TextContextMenuKeys.PasteKey|{}PasteKey[0]
        final fun <get-PasteKey>(): kotlin/Any // androidx.compose.foundation.text.contextmenu.data/TextContextMenuKeys.PasteKey.<get-PasteKey>|<get-PasteKey>(){}[0]
    final val SelectAllKey // androidx.compose.foundation.text.contextmenu.data/TextContextMenuKeys.SelectAllKey|{}SelectAllKey[0]
        final fun <get-SelectAllKey>(): kotlin/Any // androidx.compose.foundation.text.contextmenu.data/TextContextMenuKeys.SelectAllKey.<get-SelectAllKey>|<get-SelectAllKey>(){}[0]
}

final object androidx.compose.foundation.text.contextmenu.data/TextContextMenuSeparator : androidx.compose.foundation.text.contextmenu.data/TextContextMenuComponent // androidx.compose.foundation.text.contextmenu.data/TextContextMenuSeparator|null[0]

final object androidx.compose.foundation.text/TextAutoSizeDefaults { // androidx.compose.foundation.text/TextAutoSizeDefaults|null[0]
    final val MaxFontSize // androidx.compose.foundation.text/TextAutoSizeDefaults.MaxFontSize|{}MaxFontSize[0]
        final fun <get-MaxFontSize>(): androidx.compose.ui.unit/TextUnit // androidx.compose.foundation.text/TextAutoSizeDefaults.MaxFontSize.<get-MaxFontSize>|<get-MaxFontSize>(){}[0]
    final val MinFontSize // androidx.compose.foundation.text/TextAutoSizeDefaults.MinFontSize|{}MinFontSize[0]
        final fun <get-MinFontSize>(): androidx.compose.ui.unit/TextUnit // androidx.compose.foundation.text/TextAutoSizeDefaults.MinFontSize.<get-MinFontSize>|<get-MinFontSize>(){}[0]
}

final object androidx.compose.foundation/MarqueeDefaults { // androidx.compose.foundation/MarqueeDefaults|null[0]
    final val Iterations // androidx.compose.foundation/MarqueeDefaults.Iterations|{}Iterations[0]
        final fun <get-Iterations>(): kotlin/Int // androidx.compose.foundation/MarqueeDefaults.Iterations.<get-Iterations>|<get-Iterations>(){}[0]
    final val RepeatDelayMillis // androidx.compose.foundation/MarqueeDefaults.RepeatDelayMillis|{}RepeatDelayMillis[0]
        final fun <get-RepeatDelayMillis>(): kotlin/Int // androidx.compose.foundation/MarqueeDefaults.RepeatDelayMillis.<get-RepeatDelayMillis>|<get-RepeatDelayMillis>(){}[0]
    final val Spacing // androidx.compose.foundation/MarqueeDefaults.Spacing|{}Spacing[0]
        final fun <get-Spacing>(): androidx.compose.foundation/MarqueeSpacing // androidx.compose.foundation/MarqueeDefaults.Spacing.<get-Spacing>|<get-Spacing>(){}[0]
    final val Velocity // androidx.compose.foundation/MarqueeDefaults.Velocity|{}Velocity[0]
        final fun <get-Velocity>(): androidx.compose.ui.unit/Dp // androidx.compose.foundation/MarqueeDefaults.Velocity.<get-Velocity>|<get-Velocity>(){}[0]
}

final val androidx.compose.foundation.content.internal/androidx_compose_foundation_content_internal_DynamicReceiveContentConfiguration$stableprop // androidx.compose.foundation.content.internal/androidx_compose_foundation_content_internal_DynamicReceiveContentConfiguration$stableprop|#static{}androidx_compose_foundation_content_internal_DynamicReceiveContentConfiguration$stableprop[0]
final val androidx.compose.foundation.content.internal/androidx_compose_foundation_content_internal_ReceiveContentConfiguration$stableprop // androidx.compose.foundation.content.internal/androidx_compose_foundation_content_internal_ReceiveContentConfiguration$stableprop|#static{}androidx_compose_foundation_content_internal_ReceiveContentConfiguration$stableprop[0]
final val androidx.compose.foundation.content/androidx_compose_foundation_content_MediaType$stableprop // androidx.compose.foundation.content/androidx_compose_foundation_content_MediaType$stableprop|#static{}androidx_compose_foundation_content_MediaType$stableprop[0]
final val androidx.compose.foundation.content/androidx_compose_foundation_content_PlatformTransferableContent$stableprop // androidx.compose.foundation.content/androidx_compose_foundation_content_PlatformTransferableContent$stableprop|#static{}androidx_compose_foundation_content_PlatformTransferableContent$stableprop[0]
final val androidx.compose.foundation.content/androidx_compose_foundation_content_ReceiveContentElement$stableprop // androidx.compose.foundation.content/androidx_compose_foundation_content_ReceiveContentElement$stableprop|#static{}androidx_compose_foundation_content_ReceiveContentElement$stableprop[0]
final val androidx.compose.foundation.content/androidx_compose_foundation_content_ReceiveContentNode$stableprop // androidx.compose.foundation.content/androidx_compose_foundation_content_ReceiveContentNode$stableprop|#static{}androidx_compose_foundation_content_ReceiveContentNode$stableprop[0]
final val androidx.compose.foundation.content/androidx_compose_foundation_content_TransferableContent$stableprop // androidx.compose.foundation.content/androidx_compose_foundation_content_TransferableContent$stableprop|#static{}androidx_compose_foundation_content_TransferableContent$stableprop[0]
final val androidx.compose.foundation.contextmenu/androidx_compose_foundation_contextmenu_ContextMenuPopupPositionProvider$stableprop // androidx.compose.foundation.contextmenu/androidx_compose_foundation_contextmenu_ContextMenuPopupPositionProvider$stableprop|#static{}androidx_compose_foundation_contextmenu_ContextMenuPopupPositionProvider$stableprop[0]
final val androidx.compose.foundation.draganddrop/androidx_compose_foundation_draganddrop_CacheDrawScopeDragShadowCallback$stableprop // androidx.compose.foundation.draganddrop/androidx_compose_foundation_draganddrop_CacheDrawScopeDragShadowCallback$stableprop|#static{}androidx_compose_foundation_draganddrop_CacheDrawScopeDragShadowCallback$stableprop[0]
final val androidx.compose.foundation.draganddrop/androidx_compose_foundation_draganddrop_DragAndDropSourceDefaults$stableprop // androidx.compose.foundation.draganddrop/androidx_compose_foundation_draganddrop_DragAndDropSourceDefaults$stableprop|#static{}androidx_compose_foundation_draganddrop_DragAndDropSourceDefaults$stableprop[0]
final val androidx.compose.foundation.draganddrop/androidx_compose_foundation_draganddrop_DragAndDropSourceNode$stableprop // androidx.compose.foundation.draganddrop/androidx_compose_foundation_draganddrop_DragAndDropSourceNode$stableprop|#static{}androidx_compose_foundation_draganddrop_DragAndDropSourceNode$stableprop[0]
final val androidx.compose.foundation.gestures.snapping/androidx_compose_foundation_gestures_snapping_SnapFlingBehavior$stableprop // androidx.compose.foundation.gestures.snapping/androidx_compose_foundation_gestures_snapping_SnapFlingBehavior$stableprop|#static{}androidx_compose_foundation_gestures_snapping_SnapFlingBehavior$stableprop[0]
final val androidx.compose.foundation.gestures.snapping/androidx_compose_foundation_gestures_snapping_SnapPosition_Center$stableprop // androidx.compose.foundation.gestures.snapping/androidx_compose_foundation_gestures_snapping_SnapPosition_Center$stableprop|#static{}androidx_compose_foundation_gestures_snapping_SnapPosition_Center$stableprop[0]
final val androidx.compose.foundation.gestures.snapping/androidx_compose_foundation_gestures_snapping_SnapPosition_End$stableprop // androidx.compose.foundation.gestures.snapping/androidx_compose_foundation_gestures_snapping_SnapPosition_End$stableprop|#static{}androidx_compose_foundation_gestures_snapping_SnapPosition_End$stableprop[0]
final val androidx.compose.foundation.gestures.snapping/androidx_compose_foundation_gestures_snapping_SnapPosition_Start$stableprop // androidx.compose.foundation.gestures.snapping/androidx_compose_foundation_gestures_snapping_SnapPosition_Start$stableprop|#static{}androidx_compose_foundation_gestures_snapping_SnapPosition_Start$stableprop[0]
final val androidx.compose.foundation.gestures/LocalBringIntoViewSpec // androidx.compose.foundation.gestures/LocalBringIntoViewSpec|{}LocalBringIntoViewSpec[0]
    final fun <get-LocalBringIntoViewSpec>(): androidx.compose.runtime/ProvidableCompositionLocal<androidx.compose.foundation.gestures/BringIntoViewSpec> // androidx.compose.foundation.gestures/LocalBringIntoViewSpec.<get-LocalBringIntoViewSpec>|<get-LocalBringIntoViewSpec>(){}[0]
final val androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_AnchoredDragFinishedSignal$stableprop // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_AnchoredDragFinishedSignal$stableprop|#static{}androidx_compose_foundation_gestures_AnchoredDragFinishedSignal$stableprop[0]
final val androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_AnchoredDraggableDefaults$stableprop // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_AnchoredDraggableDefaults$stableprop|#static{}androidx_compose_foundation_gestures_AnchoredDraggableDefaults$stableprop[0]
final val androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_AnchoredDraggableState$stableprop // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_AnchoredDraggableState$stableprop|#static{}androidx_compose_foundation_gestures_AnchoredDraggableState$stableprop[0]
final val androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_BringIntoViewRequestPriorityQueue$stableprop // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_BringIntoViewRequestPriorityQueue$stableprop|#static{}androidx_compose_foundation_gestures_BringIntoViewRequestPriorityQueue$stableprop[0]
final val androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_ContentInViewNode$stableprop // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_ContentInViewNode$stableprop|#static{}androidx_compose_foundation_gestures_ContentInViewNode$stableprop[0]
final val androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_ContentInViewNode_Request$stableprop // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_ContentInViewNode_Request$stableprop|#static{}androidx_compose_foundation_gestures_ContentInViewNode_Request$stableprop[0]
final val androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_DefaultFlingBehavior$stableprop // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_DefaultFlingBehavior$stableprop|#static{}androidx_compose_foundation_gestures_DefaultFlingBehavior$stableprop[0]
final val androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_DragEvent$stableprop // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_DragEvent$stableprop|#static{}androidx_compose_foundation_gestures_DragEvent$stableprop[0]
final val androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_DragEvent_DragCancelled$stableprop // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_DragEvent_DragCancelled$stableprop|#static{}androidx_compose_foundation_gestures_DragEvent_DragCancelled$stableprop[0]
final val androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_DragEvent_DragDelta$stableprop // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_DragEvent_DragDelta$stableprop|#static{}androidx_compose_foundation_gestures_DragEvent_DragDelta$stableprop[0]
final val androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_DragEvent_DragStarted$stableprop // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_DragEvent_DragStarted$stableprop|#static{}androidx_compose_foundation_gestures_DragEvent_DragStarted$stableprop[0]
final val androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_DragEvent_DragStopped$stableprop // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_DragEvent_DragStopped$stableprop|#static{}androidx_compose_foundation_gestures_DragEvent_DragStopped$stableprop[0]
final val androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_DragGestureNode$stableprop // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_DragGestureNode$stableprop|#static{}androidx_compose_foundation_gestures_DragGestureNode$stableprop[0]
final val androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_Draggable2DElement$stableprop // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_Draggable2DElement$stableprop|#static{}androidx_compose_foundation_gestures_Draggable2DElement$stableprop[0]
final val androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_Draggable2DNode$stableprop // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_Draggable2DNode$stableprop|#static{}androidx_compose_foundation_gestures_Draggable2DNode$stableprop[0]
final val androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_DraggableAnchorsConfig$stableprop // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_DraggableAnchorsConfig$stableprop|#static{}androidx_compose_foundation_gestures_DraggableAnchorsConfig$stableprop[0]
final val androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_DraggableElement$stableprop // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_DraggableElement$stableprop|#static{}androidx_compose_foundation_gestures_DraggableElement$stableprop[0]
final val androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_DraggableNode$stableprop // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_DraggableNode$stableprop|#static{}androidx_compose_foundation_gestures_DraggableNode$stableprop[0]
final val androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_FlingCancellationException$stableprop // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_FlingCancellationException$stableprop|#static{}androidx_compose_foundation_gestures_FlingCancellationException$stableprop[0]
final val androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_GestureCancellationException$stableprop // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_GestureCancellationException$stableprop|#static{}androidx_compose_foundation_gestures_GestureCancellationException$stableprop[0]
final val androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_LongPressResult$stableprop // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_LongPressResult$stableprop|#static{}androidx_compose_foundation_gestures_LongPressResult$stableprop[0]
final val androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_LongPressResult_Canceled$stableprop // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_LongPressResult_Canceled$stableprop|#static{}androidx_compose_foundation_gestures_LongPressResult_Canceled$stableprop[0]
final val androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_LongPressResult_Released$stableprop // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_LongPressResult_Released$stableprop|#static{}androidx_compose_foundation_gestures_LongPressResult_Released$stableprop[0]
final val androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_LongPressResult_Success$stableprop // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_LongPressResult_Success$stableprop|#static{}androidx_compose_foundation_gestures_LongPressResult_Success$stableprop[0]
final val androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_MouseWheelScrollingLogic$stableprop // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_MouseWheelScrollingLogic$stableprop|#static{}androidx_compose_foundation_gestures_MouseWheelScrollingLogic$stableprop[0]
final val androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_PressGestureScopeImpl$stableprop // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_PressGestureScopeImpl$stableprop|#static{}androidx_compose_foundation_gestures_PressGestureScopeImpl$stableprop[0]
final val androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_Scrollable2DNode$stableprop // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_Scrollable2DNode$stableprop|#static{}androidx_compose_foundation_gestures_Scrollable2DNode$stableprop[0]
final val androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_ScrollableContainerNode$stableprop // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_ScrollableContainerNode$stableprop|#static{}androidx_compose_foundation_gestures_ScrollableContainerNode$stableprop[0]
final val androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_ScrollableDefaults$stableprop // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_ScrollableDefaults$stableprop|#static{}androidx_compose_foundation_gestures_ScrollableDefaults$stableprop[0]
final val androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_ScrollableNestedScrollConnection$stableprop // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_ScrollableNestedScrollConnection$stableprop|#static{}androidx_compose_foundation_gestures_ScrollableNestedScrollConnection$stableprop[0]
final val androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_ScrollableNode$stableprop // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_ScrollableNode$stableprop|#static{}androidx_compose_foundation_gestures_ScrollableNode$stableprop[0]
final val androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_ScrollingLogic$stableprop // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_ScrollingLogic$stableprop|#static{}androidx_compose_foundation_gestures_ScrollingLogic$stableprop[0]
final val androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_TouchSlopDetector$stableprop // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_TouchSlopDetector$stableprop|#static{}androidx_compose_foundation_gestures_TouchSlopDetector$stableprop[0]
final val androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_TransformEvent_TransformDelta$stableprop // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_TransformEvent_TransformDelta$stableprop|#static{}androidx_compose_foundation_gestures_TransformEvent_TransformDelta$stableprop[0]
final val androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_TransformEvent_TransformStarted$stableprop // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_TransformEvent_TransformStarted$stableprop|#static{}androidx_compose_foundation_gestures_TransformEvent_TransformStarted$stableprop[0]
final val androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_TransformEvent_TransformStopped$stableprop // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_TransformEvent_TransformStopped$stableprop|#static{}androidx_compose_foundation_gestures_TransformEvent_TransformStopped$stableprop[0]
final val androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_UpdatableAnimationState$stableprop // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_UpdatableAnimationState$stableprop|#static{}androidx_compose_foundation_gestures_UpdatableAnimationState$stableprop[0]
final val androidx.compose.foundation.interaction/androidx_compose_foundation_interaction_DragInteraction_Cancel$stableprop // androidx.compose.foundation.interaction/androidx_compose_foundation_interaction_DragInteraction_Cancel$stableprop|#static{}androidx_compose_foundation_interaction_DragInteraction_Cancel$stableprop[0]
final val androidx.compose.foundation.interaction/androidx_compose_foundation_interaction_DragInteraction_Start$stableprop // androidx.compose.foundation.interaction/androidx_compose_foundation_interaction_DragInteraction_Start$stableprop|#static{}androidx_compose_foundation_interaction_DragInteraction_Start$stableprop[0]
final val androidx.compose.foundation.interaction/androidx_compose_foundation_interaction_DragInteraction_Stop$stableprop // androidx.compose.foundation.interaction/androidx_compose_foundation_interaction_DragInteraction_Stop$stableprop|#static{}androidx_compose_foundation_interaction_DragInteraction_Stop$stableprop[0]
final val androidx.compose.foundation.interaction/androidx_compose_foundation_interaction_FocusInteraction_Focus$stableprop // androidx.compose.foundation.interaction/androidx_compose_foundation_interaction_FocusInteraction_Focus$stableprop|#static{}androidx_compose_foundation_interaction_FocusInteraction_Focus$stableprop[0]
final val androidx.compose.foundation.interaction/androidx_compose_foundation_interaction_FocusInteraction_Unfocus$stableprop // androidx.compose.foundation.interaction/androidx_compose_foundation_interaction_FocusInteraction_Unfocus$stableprop|#static{}androidx_compose_foundation_interaction_FocusInteraction_Unfocus$stableprop[0]
final val androidx.compose.foundation.interaction/androidx_compose_foundation_interaction_HoverInteraction_Enter$stableprop // androidx.compose.foundation.interaction/androidx_compose_foundation_interaction_HoverInteraction_Enter$stableprop|#static{}androidx_compose_foundation_interaction_HoverInteraction_Enter$stableprop[0]
final val androidx.compose.foundation.interaction/androidx_compose_foundation_interaction_HoverInteraction_Exit$stableprop // androidx.compose.foundation.interaction/androidx_compose_foundation_interaction_HoverInteraction_Exit$stableprop|#static{}androidx_compose_foundation_interaction_HoverInteraction_Exit$stableprop[0]
final val androidx.compose.foundation.interaction/androidx_compose_foundation_interaction_PressInteraction_Cancel$stableprop // androidx.compose.foundation.interaction/androidx_compose_foundation_interaction_PressInteraction_Cancel$stableprop|#static{}androidx_compose_foundation_interaction_PressInteraction_Cancel$stableprop[0]
final val androidx.compose.foundation.interaction/androidx_compose_foundation_interaction_PressInteraction_Press$stableprop // androidx.compose.foundation.interaction/androidx_compose_foundation_interaction_PressInteraction_Press$stableprop|#static{}androidx_compose_foundation_interaction_PressInteraction_Press$stableprop[0]
final val androidx.compose.foundation.interaction/androidx_compose_foundation_interaction_PressInteraction_Release$stableprop // androidx.compose.foundation.interaction/androidx_compose_foundation_interaction_PressInteraction_Release$stableprop|#static{}androidx_compose_foundation_interaction_PressInteraction_Release$stableprop[0]
final val androidx.compose.foundation.internal/androidx_compose_foundation_internal_PlatformOptimizedCancellationException$stableprop // androidx.compose.foundation.internal/androidx_compose_foundation_internal_PlatformOptimizedCancellationException$stableprop|#static{}androidx_compose_foundation_internal_PlatformOptimizedCancellationException$stableprop[0]
final val androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_GridCells_Adaptive$stableprop // androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_GridCells_Adaptive$stableprop|#static{}androidx_compose_foundation_lazy_grid_GridCells_Adaptive$stableprop[0]
final val androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_GridCells_Fixed$stableprop // androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_GridCells_Fixed$stableprop|#static{}androidx_compose_foundation_lazy_grid_GridCells_Fixed$stableprop[0]
final val androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_GridCells_FixedSize$stableprop // androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_GridCells_FixedSize$stableprop|#static{}androidx_compose_foundation_lazy_grid_GridCells_FixedSize$stableprop[0]
final val androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridBeyondBoundsState$stableprop // androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridBeyondBoundsState$stableprop|#static{}androidx_compose_foundation_lazy_grid_LazyGridBeyondBoundsState$stableprop[0]
final val androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridCacheWindowPrefetchStrategy$stableprop // androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridCacheWindowPrefetchStrategy$stableprop|#static{}androidx_compose_foundation_lazy_grid_LazyGridCacheWindowPrefetchStrategy$stableprop[0]
final val androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridInterval$stableprop // androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridInterval$stableprop|#static{}androidx_compose_foundation_lazy_grid_LazyGridInterval$stableprop[0]
final val androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridIntervalContent$stableprop // androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridIntervalContent$stableprop|#static{}androidx_compose_foundation_lazy_grid_LazyGridIntervalContent$stableprop[0]
final val androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridItemScopeImpl$stableprop // androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridItemScopeImpl$stableprop|#static{}androidx_compose_foundation_lazy_grid_LazyGridItemScopeImpl$stableprop[0]
final val androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridMeasureResult$stableprop // androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridMeasureResult$stableprop|#static{}androidx_compose_foundation_lazy_grid_LazyGridMeasureResult$stableprop[0]
final val androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridMeasuredItem$stableprop // androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridMeasuredItem$stableprop|#static{}androidx_compose_foundation_lazy_grid_LazyGridMeasuredItem$stableprop[0]
final val androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridMeasuredItemProvider$stableprop // androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridMeasuredItemProvider$stableprop|#static{}androidx_compose_foundation_lazy_grid_LazyGridMeasuredItemProvider$stableprop[0]
final val androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridMeasuredLine$stableprop // androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridMeasuredLine$stableprop|#static{}androidx_compose_foundation_lazy_grid_LazyGridMeasuredLine$stableprop[0]
final val androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridMeasuredLineProvider$stableprop // androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridMeasuredLineProvider$stableprop|#static{}androidx_compose_foundation_lazy_grid_LazyGridMeasuredLineProvider$stableprop[0]
final val androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridPrefetchResultScopeImpl$stableprop // androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridPrefetchResultScopeImpl$stableprop|#static{}androidx_compose_foundation_lazy_grid_LazyGridPrefetchResultScopeImpl$stableprop[0]
final val androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridScrollPosition$stableprop // androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridScrollPosition$stableprop|#static{}androidx_compose_foundation_lazy_grid_LazyGridScrollPosition$stableprop[0]
final val androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridSlots$stableprop // androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridSlots$stableprop|#static{}androidx_compose_foundation_lazy_grid_LazyGridSlots$stableprop[0]
final val androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridSpanLayoutProvider$stableprop // androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridSpanLayoutProvider$stableprop|#static{}androidx_compose_foundation_lazy_grid_LazyGridSpanLayoutProvider$stableprop[0]
final val androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridSpanLayoutProvider_LineConfiguration$stableprop // androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridSpanLayoutProvider_LineConfiguration$stableprop|#static{}androidx_compose_foundation_lazy_grid_LazyGridSpanLayoutProvider_LineConfiguration$stableprop[0]
final val androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridState$stableprop // androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridState$stableprop|#static{}androidx_compose_foundation_lazy_grid_LazyGridState$stableprop[0]
final val androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_Averages$stableprop // androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_Averages$stableprop|#static{}androidx_compose_foundation_lazy_layout_Averages$stableprop[0]
final val androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_AwaitFirstLayoutModifier$stableprop // androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_AwaitFirstLayoutModifier$stableprop|#static{}androidx_compose_foundation_lazy_layout_AwaitFirstLayoutModifier$stableprop[0]
final val androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_CacheWindowLogic$stableprop // androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_CacheWindowLogic$stableprop|#static{}androidx_compose_foundation_lazy_layout_CacheWindowLogic$stableprop[0]
final val androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_IntervalList_Interval$stableprop // androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_IntervalList_Interval$stableprop|#static{}androidx_compose_foundation_lazy_layout_IntervalList_Interval$stableprop[0]
final val androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutAnimateItemElement$stableprop // androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutAnimateItemElement$stableprop|#static{}androidx_compose_foundation_lazy_layout_LazyLayoutAnimateItemElement$stableprop[0]
final val androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutAnimationSpecsNode$stableprop // androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutAnimationSpecsNode$stableprop|#static{}androidx_compose_foundation_lazy_layout_LazyLayoutAnimationSpecsNode$stableprop[0]
final val androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutBeyondBoundsInfo$stableprop // androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutBeyondBoundsInfo$stableprop|#static{}androidx_compose_foundation_lazy_layout_LazyLayoutBeyondBoundsInfo$stableprop[0]
final val androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutBeyondBoundsInfo_Interval$stableprop // androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutBeyondBoundsInfo_Interval$stableprop|#static{}androidx_compose_foundation_lazy_layout_LazyLayoutBeyondBoundsInfo_Interval$stableprop[0]
final val androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutBeyondBoundsModifierNode$stableprop // androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutBeyondBoundsModifierNode$stableprop|#static{}androidx_compose_foundation_lazy_layout_LazyLayoutBeyondBoundsModifierNode$stableprop[0]
final val androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutIntervalContent$stableprop // androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutIntervalContent$stableprop|#static{}androidx_compose_foundation_lazy_layout_LazyLayoutIntervalContent$stableprop[0]
final val androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutItemAnimation$stableprop // androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutItemAnimation$stableprop|#static{}androidx_compose_foundation_lazy_layout_LazyLayoutItemAnimation$stableprop[0]
final val androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutItemAnimator$stableprop // androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutItemAnimator$stableprop|#static{}androidx_compose_foundation_lazy_layout_LazyLayoutItemAnimator$stableprop[0]
final val androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutItemContentFactory$stableprop // androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutItemContentFactory$stableprop|#static{}androidx_compose_foundation_lazy_layout_LazyLayoutItemContentFactory$stableprop[0]
final val androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutMeasureScopeImpl$stableprop // androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutMeasureScopeImpl$stableprop|#static{}androidx_compose_foundation_lazy_layout_LazyLayoutMeasureScopeImpl$stableprop[0]
final val androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutMeasuredItemProvider$stableprop // androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutMeasuredItemProvider$stableprop|#static{}androidx_compose_foundation_lazy_layout_LazyLayoutMeasuredItemProvider$stableprop[0]
final val androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutNearestRangeState$stableprop // androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutNearestRangeState$stableprop|#static{}androidx_compose_foundation_lazy_layout_LazyLayoutNearestRangeState$stableprop[0]
final val androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutPinnedItemList$stableprop // androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutPinnedItemList$stableprop|#static{}androidx_compose_foundation_lazy_layout_LazyLayoutPinnedItemList$stableprop[0]
final val androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutPrefetchState$stableprop // androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutPrefetchState$stableprop|#static{}androidx_compose_foundation_lazy_layout_LazyLayoutPrefetchState$stableprop[0]
final val androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutScrollDeltaBetweenPasses$stableprop // androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutScrollDeltaBetweenPasses$stableprop|#static{}androidx_compose_foundation_lazy_layout_LazyLayoutScrollDeltaBetweenPasses$stableprop[0]
final val androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_MutableIntervalList$stableprop // androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_MutableIntervalList$stableprop|#static{}androidx_compose_foundation_lazy_layout_MutableIntervalList$stableprop[0]
final val androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_NearestRangeKeyIndexMap$stableprop // androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_NearestRangeKeyIndexMap$stableprop|#static{}androidx_compose_foundation_lazy_layout_NearestRangeKeyIndexMap$stableprop[0]
final val androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_PrefetchHandleProvider$stableprop // androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_PrefetchHandleProvider$stableprop|#static{}androidx_compose_foundation_lazy_layout_PrefetchHandleProvider$stableprop[0]
final val androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_PrefetchMetrics$stableprop // androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_PrefetchMetrics$stableprop|#static{}androidx_compose_foundation_lazy_layout_PrefetchMetrics$stableprop[0]
final val androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridBeyondBoundsState$stableprop // androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridBeyondBoundsState$stableprop|#static{}androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridBeyondBoundsState$stableprop[0]
final val androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridInterval$stableprop // androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridInterval$stableprop|#static{}androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridInterval$stableprop[0]
final val androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridIntervalContent$stableprop // androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridIntervalContent$stableprop|#static{}androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridIntervalContent$stableprop[0]
final val androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridItemScopeImpl$stableprop // androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridItemScopeImpl$stableprop|#static{}androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridItemScopeImpl$stableprop[0]
final val androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridLaneInfo$stableprop // androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridLaneInfo$stableprop|#static{}androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridLaneInfo$stableprop[0]
final val androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridMeasureContext$stableprop // androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridMeasureContext$stableprop|#static{}androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridMeasureContext$stableprop[0]
final val androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridMeasureProvider$stableprop // androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridMeasureProvider$stableprop|#static{}androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridMeasureProvider$stableprop[0]
final val androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridMeasureResult$stableprop // androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridMeasureResult$stableprop|#static{}androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridMeasureResult$stableprop[0]
final val androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridMeasuredItem$stableprop // androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridMeasuredItem$stableprop|#static{}androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridMeasuredItem$stableprop[0]
final val androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridScrollPosition$stableprop // androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridScrollPosition$stableprop|#static{}androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridScrollPosition$stableprop[0]
final val androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridSlots$stableprop // androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridSlots$stableprop|#static{}androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridSlots$stableprop[0]
final val androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridSpanProvider$stableprop // androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridSpanProvider$stableprop|#static{}androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridSpanProvider$stableprop[0]
final val androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridState$stableprop // androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridState$stableprop|#static{}androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridState$stableprop[0]
final val androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_StaggeredGridCells_Adaptive$stableprop // androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_StaggeredGridCells_Adaptive$stableprop|#static{}androidx_compose_foundation_lazy_staggeredgrid_StaggeredGridCells_Adaptive$stableprop[0]
final val androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_StaggeredGridCells_Fixed$stableprop // androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_StaggeredGridCells_Fixed$stableprop|#static{}androidx_compose_foundation_lazy_staggeredgrid_StaggeredGridCells_Fixed$stableprop[0]
final val androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_StaggeredGridCells_FixedSize$stableprop // androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_StaggeredGridCells_FixedSize$stableprop|#static{}androidx_compose_foundation_lazy_staggeredgrid_StaggeredGridCells_FixedSize$stableprop[0]
final val androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_StaggeredGridItemSpan$stableprop // androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_StaggeredGridItemSpan$stableprop|#static{}androidx_compose_foundation_lazy_staggeredgrid_StaggeredGridItemSpan$stableprop[0]
final val androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyItemScopeImpl$stableprop // androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyItemScopeImpl$stableprop|#static{}androidx_compose_foundation_lazy_LazyItemScopeImpl$stableprop[0]
final val androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyListBeyondBoundsState$stableprop // androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyListBeyondBoundsState$stableprop|#static{}androidx_compose_foundation_lazy_LazyListBeyondBoundsState$stableprop[0]
final val androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyListCacheWindowScope$stableprop // androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyListCacheWindowScope$stableprop|#static{}androidx_compose_foundation_lazy_LazyListCacheWindowScope$stableprop[0]
final val androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyListCacheWindowStrategy$stableprop // androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyListCacheWindowStrategy$stableprop|#static{}androidx_compose_foundation_lazy_LazyListCacheWindowStrategy$stableprop[0]
final val androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyListInterval$stableprop // androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyListInterval$stableprop|#static{}androidx_compose_foundation_lazy_LazyListInterval$stableprop[0]
final val androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyListIntervalContent$stableprop // androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyListIntervalContent$stableprop|#static{}androidx_compose_foundation_lazy_LazyListIntervalContent$stableprop[0]
final val androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyListMeasureResult$stableprop // androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyListMeasureResult$stableprop|#static{}androidx_compose_foundation_lazy_LazyListMeasureResult$stableprop[0]
final val androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyListMeasuredItem$stableprop // androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyListMeasuredItem$stableprop|#static{}androidx_compose_foundation_lazy_LazyListMeasuredItem$stableprop[0]
final val androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyListMeasuredItemProvider$stableprop // androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyListMeasuredItemProvider$stableprop|#static{}androidx_compose_foundation_lazy_LazyListMeasuredItemProvider$stableprop[0]
final val androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyListPrefetchResultScopeImpl$stableprop // androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyListPrefetchResultScopeImpl$stableprop|#static{}androidx_compose_foundation_lazy_LazyListPrefetchResultScopeImpl$stableprop[0]
final val androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyListScrollPosition$stableprop // androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyListScrollPosition$stableprop|#static{}androidx_compose_foundation_lazy_LazyListScrollPosition$stableprop[0]
final val androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyListState$stableprop // androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyListState$stableprop|#static{}androidx_compose_foundation_lazy_LazyListState$stableprop[0]
final val androidx.compose.foundation.pager/androidx_compose_foundation_pager_MeasuredPage$stableprop // androidx.compose.foundation.pager/androidx_compose_foundation_pager_MeasuredPage$stableprop|#static{}androidx_compose_foundation_pager_MeasuredPage$stableprop[0]
final val androidx.compose.foundation.pager/androidx_compose_foundation_pager_PageSize_Fill$stableprop // androidx.compose.foundation.pager/androidx_compose_foundation_pager_PageSize_Fill$stableprop|#static{}androidx_compose_foundation_pager_PageSize_Fill$stableprop[0]
final val androidx.compose.foundation.pager/androidx_compose_foundation_pager_PageSize_Fixed$stableprop // androidx.compose.foundation.pager/androidx_compose_foundation_pager_PageSize_Fixed$stableprop|#static{}androidx_compose_foundation_pager_PageSize_Fixed$stableprop[0]
final val androidx.compose.foundation.pager/androidx_compose_foundation_pager_PagerBeyondBoundsState$stableprop // androidx.compose.foundation.pager/androidx_compose_foundation_pager_PagerBeyondBoundsState$stableprop|#static{}androidx_compose_foundation_pager_PagerBeyondBoundsState$stableprop[0]
final val androidx.compose.foundation.pager/androidx_compose_foundation_pager_PagerDebugConfig$stableprop // androidx.compose.foundation.pager/androidx_compose_foundation_pager_PagerDebugConfig$stableprop|#static{}androidx_compose_foundation_pager_PagerDebugConfig$stableprop[0]
final val androidx.compose.foundation.pager/androidx_compose_foundation_pager_PagerDefaults$stableprop // androidx.compose.foundation.pager/androidx_compose_foundation_pager_PagerDefaults$stableprop|#static{}androidx_compose_foundation_pager_PagerDefaults$stableprop[0]
final val androidx.compose.foundation.pager/androidx_compose_foundation_pager_PagerIntervalContent$stableprop // androidx.compose.foundation.pager/androidx_compose_foundation_pager_PagerIntervalContent$stableprop|#static{}androidx_compose_foundation_pager_PagerIntervalContent$stableprop[0]
final val androidx.compose.foundation.pager/androidx_compose_foundation_pager_PagerLazyLayoutItemProvider$stableprop // androidx.compose.foundation.pager/androidx_compose_foundation_pager_PagerLazyLayoutItemProvider$stableprop|#static{}androidx_compose_foundation_pager_PagerLazyLayoutItemProvider$stableprop[0]
final val androidx.compose.foundation.pager/androidx_compose_foundation_pager_PagerMeasureResult$stableprop // androidx.compose.foundation.pager/androidx_compose_foundation_pager_PagerMeasureResult$stableprop|#static{}androidx_compose_foundation_pager_PagerMeasureResult$stableprop[0]
final val androidx.compose.foundation.pager/androidx_compose_foundation_pager_PagerScopeImpl$stableprop // androidx.compose.foundation.pager/androidx_compose_foundation_pager_PagerScopeImpl$stableprop|#static{}androidx_compose_foundation_pager_PagerScopeImpl$stableprop[0]
final val androidx.compose.foundation.pager/androidx_compose_foundation_pager_PagerScrollPosition$stableprop // androidx.compose.foundation.pager/androidx_compose_foundation_pager_PagerScrollPosition$stableprop|#static{}androidx_compose_foundation_pager_PagerScrollPosition$stableprop[0]
final val androidx.compose.foundation.pager/androidx_compose_foundation_pager_PagerSnapDistanceMaxPages$stableprop // androidx.compose.foundation.pager/androidx_compose_foundation_pager_PagerSnapDistanceMaxPages$stableprop|#static{}androidx_compose_foundation_pager_PagerSnapDistanceMaxPages$stableprop[0]
final val androidx.compose.foundation.pager/androidx_compose_foundation_pager_PagerState$stableprop // androidx.compose.foundation.pager/androidx_compose_foundation_pager_PagerState$stableprop|#static{}androidx_compose_foundation_pager_PagerState$stableprop[0]
final val androidx.compose.foundation.platform/androidx_compose_foundation_platform_SynchronizedObject$stableprop // androidx.compose.foundation.platform/androidx_compose_foundation_platform_SynchronizedObject$stableprop|#static{}androidx_compose_foundation_platform_SynchronizedObject$stableprop[0]
final val androidx.compose.foundation.relocation/androidx_compose_foundation_relocation_BringIntoViewRequesterNode$stableprop // androidx.compose.foundation.relocation/androidx_compose_foundation_relocation_BringIntoViewRequesterNode$stableprop|#static{}androidx_compose_foundation_relocation_BringIntoViewRequesterNode$stableprop[0]
final val androidx.compose.foundation.relocation/androidx_compose_foundation_relocation_BringIntoViewResponderNode$stableprop // androidx.compose.foundation.relocation/androidx_compose_foundation_relocation_BringIntoViewResponderNode$stableprop|#static{}androidx_compose_foundation_relocation_BringIntoViewResponderNode$stableprop[0]
final val androidx.compose.foundation.shape/CircleShape // androidx.compose.foundation.shape/CircleShape|{}CircleShape[0]
    final fun <get-CircleShape>(): androidx.compose.foundation.shape/RoundedCornerShape // androidx.compose.foundation.shape/CircleShape.<get-CircleShape>|<get-CircleShape>(){}[0]
final val androidx.compose.foundation.shape/ZeroCornerSize // androidx.compose.foundation.shape/ZeroCornerSize|{}ZeroCornerSize[0]
    final fun <get-ZeroCornerSize>(): androidx.compose.foundation.shape/CornerSize // androidx.compose.foundation.shape/ZeroCornerSize.<get-ZeroCornerSize>|<get-ZeroCornerSize>(){}[0]
final val androidx.compose.foundation.shape/androidx_compose_foundation_shape_AbsoluteCutCornerShape$stableprop // androidx.compose.foundation.shape/androidx_compose_foundation_shape_AbsoluteCutCornerShape$stableprop|#static{}androidx_compose_foundation_shape_AbsoluteCutCornerShape$stableprop[0]
final val androidx.compose.foundation.shape/androidx_compose_foundation_shape_AbsoluteRoundedCornerShape$stableprop // androidx.compose.foundation.shape/androidx_compose_foundation_shape_AbsoluteRoundedCornerShape$stableprop|#static{}androidx_compose_foundation_shape_AbsoluteRoundedCornerShape$stableprop[0]
final val androidx.compose.foundation.shape/androidx_compose_foundation_shape_CornerBasedShape$stableprop // androidx.compose.foundation.shape/androidx_compose_foundation_shape_CornerBasedShape$stableprop|#static{}androidx_compose_foundation_shape_CornerBasedShape$stableprop[0]
final val androidx.compose.foundation.shape/androidx_compose_foundation_shape_CutCornerShape$stableprop // androidx.compose.foundation.shape/androidx_compose_foundation_shape_CutCornerShape$stableprop|#static{}androidx_compose_foundation_shape_CutCornerShape$stableprop[0]
final val androidx.compose.foundation.shape/androidx_compose_foundation_shape_GenericShape$stableprop // androidx.compose.foundation.shape/androidx_compose_foundation_shape_GenericShape$stableprop|#static{}androidx_compose_foundation_shape_GenericShape$stableprop[0]
final val androidx.compose.foundation.shape/androidx_compose_foundation_shape_RoundedCornerShape$stableprop // androidx.compose.foundation.shape/androidx_compose_foundation_shape_RoundedCornerShape$stableprop|#static{}androidx_compose_foundation_shape_RoundedCornerShape$stableprop[0]
final val androidx.compose.foundation.text.contextmenu.builder/androidx_compose_foundation_text_contextmenu_builder_TextContextMenuBuilderScope$stableprop // androidx.compose.foundation.text.contextmenu.builder/androidx_compose_foundation_text_contextmenu_builder_TextContextMenuBuilderScope$stableprop|#static{}androidx_compose_foundation_text_contextmenu_builder_TextContextMenuBuilderScope$stableprop[0]
final val androidx.compose.foundation.text.contextmenu.data/androidx_compose_foundation_text_contextmenu_data_TextContextMenuComponent$stableprop // androidx.compose.foundation.text.contextmenu.data/androidx_compose_foundation_text_contextmenu_data_TextContextMenuComponent$stableprop|#static{}androidx_compose_foundation_text_contextmenu_data_TextContextMenuComponent$stableprop[0]
final val androidx.compose.foundation.text.contextmenu.data/androidx_compose_foundation_text_contextmenu_data_TextContextMenuData$stableprop // androidx.compose.foundation.text.contextmenu.data/androidx_compose_foundation_text_contextmenu_data_TextContextMenuData$stableprop|#static{}androidx_compose_foundation_text_contextmenu_data_TextContextMenuData$stableprop[0]
final val androidx.compose.foundation.text.contextmenu.data/androidx_compose_foundation_text_contextmenu_data_TextContextMenuKeys$stableprop // androidx.compose.foundation.text.contextmenu.data/androidx_compose_foundation_text_contextmenu_data_TextContextMenuKeys$stableprop|#static{}androidx_compose_foundation_text_contextmenu_data_TextContextMenuKeys$stableprop[0]
final val androidx.compose.foundation.text.contextmenu.data/androidx_compose_foundation_text_contextmenu_data_TextContextMenuSeparator$stableprop // androidx.compose.foundation.text.contextmenu.data/androidx_compose_foundation_text_contextmenu_data_TextContextMenuSeparator$stableprop|#static{}androidx_compose_foundation_text_contextmenu_data_TextContextMenuSeparator$stableprop[0]
final val androidx.compose.foundation.text.contextmenu.modifier/androidx_compose_foundation_text_contextmenu_modifier_AddTextContextMenuDataComponentsNode$stableprop // androidx.compose.foundation.text.contextmenu.modifier/androidx_compose_foundation_text_contextmenu_modifier_AddTextContextMenuDataComponentsNode$stableprop|#static{}androidx_compose_foundation_text_contextmenu_modifier_AddTextContextMenuDataComponentsNode$stableprop[0]
final val androidx.compose.foundation.text.contextmenu.modifier/androidx_compose_foundation_text_contextmenu_modifier_TextContextMenuToolbarHandlerNode$stableprop // androidx.compose.foundation.text.contextmenu.modifier/androidx_compose_foundation_text_contextmenu_modifier_TextContextMenuToolbarHandlerNode$stableprop|#static{}androidx_compose_foundation_text_contextmenu_modifier_TextContextMenuToolbarHandlerNode$stableprop[0]
final val androidx.compose.foundation.text.contextmenu.modifier/androidx_compose_foundation_text_contextmenu_modifier_ToolbarRequester$stableprop // androidx.compose.foundation.text.contextmenu.modifier/androidx_compose_foundation_text_contextmenu_modifier_ToolbarRequester$stableprop|#static{}androidx_compose_foundation_text_contextmenu_modifier_ToolbarRequester$stableprop[0]
final val androidx.compose.foundation.text.contextmenu.modifier/androidx_compose_foundation_text_contextmenu_modifier_ToolbarRequesterImpl$stableprop // androidx.compose.foundation.text.contextmenu.modifier/androidx_compose_foundation_text_contextmenu_modifier_ToolbarRequesterImpl$stableprop|#static{}androidx_compose_foundation_text_contextmenu_modifier_ToolbarRequesterImpl$stableprop[0]
final val androidx.compose.foundation.text.contextmenu.provider/LocalTextContextMenuDropdownProvider // androidx.compose.foundation.text.contextmenu.provider/LocalTextContextMenuDropdownProvider|{}LocalTextContextMenuDropdownProvider[0]
    final fun <get-LocalTextContextMenuDropdownProvider>(): androidx.compose.runtime/ProvidableCompositionLocal<androidx.compose.foundation.text.contextmenu.provider/TextContextMenuProvider?> // androidx.compose.foundation.text.contextmenu.provider/LocalTextContextMenuDropdownProvider.<get-LocalTextContextMenuDropdownProvider>|<get-LocalTextContextMenuDropdownProvider>(){}[0]
final val androidx.compose.foundation.text.contextmenu.provider/LocalTextContextMenuToolbarProvider // androidx.compose.foundation.text.contextmenu.provider/LocalTextContextMenuToolbarProvider|{}LocalTextContextMenuToolbarProvider[0]
    final fun <get-LocalTextContextMenuToolbarProvider>(): androidx.compose.runtime/ProvidableCompositionLocal<androidx.compose.foundation.text.contextmenu.provider/TextContextMenuProvider?> // androidx.compose.foundation.text.contextmenu.provider/LocalTextContextMenuToolbarProvider.<get-LocalTextContextMenuToolbarProvider>|<get-LocalTextContextMenuToolbarProvider>(){}[0]
final val androidx.compose.foundation.text.contextmenu.provider/androidx_compose_foundation_text_contextmenu_provider_BasicTextContextMenuProvider$stableprop // androidx.compose.foundation.text.contextmenu.provider/androidx_compose_foundation_text_contextmenu_provider_BasicTextContextMenuProvider$stableprop|#static{}androidx_compose_foundation_text_contextmenu_provider_BasicTextContextMenuProvider$stableprop[0]
final val androidx.compose.foundation.text.handwriting/androidx_compose_foundation_text_handwriting_StylusHandwritingNode$stableprop // androidx.compose.foundation.text.handwriting/androidx_compose_foundation_text_handwriting_StylusHandwritingNode$stableprop|#static{}androidx_compose_foundation_text_handwriting_StylusHandwritingNode$stableprop[0]
final val androidx.compose.foundation.text.input.internal.selection/androidx_compose_foundation_text_input_internal_selection_SelectionMovementDeletionContext$stableprop // androidx.compose.foundation.text.input.internal.selection/androidx_compose_foundation_text_input_internal_selection_SelectionMovementDeletionContext$stableprop|#static{}androidx_compose_foundation_text_input_internal_selection_SelectionMovementDeletionContext$stableprop[0]
final val androidx.compose.foundation.text.input.internal.selection/androidx_compose_foundation_text_input_internal_selection_TextFieldHandleState$stableprop // androidx.compose.foundation.text.input.internal.selection/androidx_compose_foundation_text_input_internal_selection_TextFieldHandleState$stableprop|#static{}androidx_compose_foundation_text_input_internal_selection_TextFieldHandleState$stableprop[0]
final val androidx.compose.foundation.text.input.internal.selection/androidx_compose_foundation_text_input_internal_selection_TextFieldMagnifierNode$stableprop // androidx.compose.foundation.text.input.internal.selection/androidx_compose_foundation_text_input_internal_selection_TextFieldMagnifierNode$stableprop|#static{}androidx_compose_foundation_text_input_internal_selection_TextFieldMagnifierNode$stableprop[0]
final val androidx.compose.foundation.text.input.internal.selection/androidx_compose_foundation_text_input_internal_selection_TextFieldPreparedSelectionState$stableprop // androidx.compose.foundation.text.input.internal.selection/androidx_compose_foundation_text_input_internal_selection_TextFieldPreparedSelectionState$stableprop|#static{}androidx_compose_foundation_text_input_internal_selection_TextFieldPreparedSelectionState$stableprop[0]
final val androidx.compose.foundation.text.input.internal.selection/androidx_compose_foundation_text_input_internal_selection_TextFieldSelectionState$stableprop // androidx.compose.foundation.text.input.internal.selection/androidx_compose_foundation_text_input_internal_selection_TextFieldSelectionState$stableprop|#static{}androidx_compose_foundation_text_input_internal_selection_TextFieldSelectionState$stableprop[0]
final val androidx.compose.foundation.text.input.internal.undo/androidx_compose_foundation_text_input_internal_undo_TextUndoOperation$stableprop // androidx.compose.foundation.text.input.internal.undo/androidx_compose_foundation_text_input_internal_undo_TextUndoOperation$stableprop|#static{}androidx_compose_foundation_text_input_internal_undo_TextUndoOperation$stableprop[0]
final val androidx.compose.foundation.text.input.internal.undo/androidx_compose_foundation_text_input_internal_undo_UndoManager$stableprop // androidx.compose.foundation.text.input.internal.undo/androidx_compose_foundation_text_input_internal_undo_UndoManager$stableprop|#static{}androidx_compose_foundation_text_input_internal_undo_UndoManager$stableprop[0]
final val androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_ChangeTracker$stableprop // androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_ChangeTracker$stableprop|#static{}androidx_compose_foundation_text_input_internal_ChangeTracker$stableprop[0]
final val androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_CoreTextFieldSemanticsModifier$stableprop // androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_CoreTextFieldSemanticsModifier$stableprop|#static{}androidx_compose_foundation_text_input_internal_CoreTextFieldSemanticsModifier$stableprop[0]
final val androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_CoreTextFieldSemanticsModifierNode$stableprop // androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_CoreTextFieldSemanticsModifierNode$stableprop|#static{}androidx_compose_foundation_text_input_internal_CoreTextFieldSemanticsModifierNode$stableprop[0]
final val androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_CursorAnimationState$stableprop // androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_CursorAnimationState$stableprop|#static{}androidx_compose_foundation_text_input_internal_CursorAnimationState$stableprop[0]
final val androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_LegacyAdaptingPlatformTextInputModifierNode$stableprop // androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_LegacyAdaptingPlatformTextInputModifierNode$stableprop|#static{}androidx_compose_foundation_text_input_internal_LegacyAdaptingPlatformTextInputModifierNode$stableprop[0]
final val androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_LegacyPlatformTextInputServiceAdapter$stableprop // androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_LegacyPlatformTextInputServiceAdapter$stableprop|#static{}androidx_compose_foundation_text_input_internal_LegacyPlatformTextInputServiceAdapter$stableprop[0]
final val androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_OffsetMappingCalculator$stableprop // androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_OffsetMappingCalculator$stableprop|#static{}androidx_compose_foundation_text_input_internal_OffsetMappingCalculator$stableprop[0]
final val androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_PartialGapBuffer$stableprop // androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_PartialGapBuffer$stableprop|#static{}androidx_compose_foundation_text_input_internal_PartialGapBuffer$stableprop[0]
final val androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_SelectionWedgeAffinity$stableprop // androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_SelectionWedgeAffinity$stableprop|#static{}androidx_compose_foundation_text_input_internal_SelectionWedgeAffinity$stableprop[0]
final val androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_SingleLineCodepointTransformation$stableprop // androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_SingleLineCodepointTransformation$stableprop|#static{}androidx_compose_foundation_text_input_internal_SingleLineCodepointTransformation$stableprop[0]
final val androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_TextFieldCoreModifier$stableprop // androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_TextFieldCoreModifier$stableprop|#static{}androidx_compose_foundation_text_input_internal_TextFieldCoreModifier$stableprop[0]
final val androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_TextFieldCoreModifierNode$stableprop // androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_TextFieldCoreModifierNode$stableprop|#static{}androidx_compose_foundation_text_input_internal_TextFieldCoreModifierNode$stableprop[0]
final val androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_TextFieldDecoratorModifier$stableprop // androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_TextFieldDecoratorModifier$stableprop|#static{}androidx_compose_foundation_text_input_internal_TextFieldDecoratorModifier$stableprop[0]
final val androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_TextFieldDecoratorModifierNode$stableprop // androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_TextFieldDecoratorModifierNode$stableprop|#static{}androidx_compose_foundation_text_input_internal_TextFieldDecoratorModifierNode$stableprop[0]
final val androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_TextFieldKeyEventHandler$stableprop // androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_TextFieldKeyEventHandler$stableprop|#static{}androidx_compose_foundation_text_input_internal_TextFieldKeyEventHandler$stableprop[0]
final val androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_TextFieldLayoutStateCache$stableprop // androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_TextFieldLayoutStateCache$stableprop|#static{}androidx_compose_foundation_text_input_internal_TextFieldLayoutStateCache$stableprop[0]
final val androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_TextFieldTextLayoutModifier$stableprop // androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_TextFieldTextLayoutModifier$stableprop|#static{}androidx_compose_foundation_text_input_internal_TextFieldTextLayoutModifier$stableprop[0]
final val androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_TextFieldTextLayoutModifierNode$stableprop // androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_TextFieldTextLayoutModifierNode$stableprop|#static{}androidx_compose_foundation_text_input_internal_TextFieldTextLayoutModifierNode$stableprop[0]
final val androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_TextLayoutState$stableprop // androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_TextLayoutState$stableprop|#static{}androidx_compose_foundation_text_input_internal_TextLayoutState$stableprop[0]
final val androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_TransformedTextFieldState$stableprop // androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_TransformedTextFieldState$stableprop|#static{}androidx_compose_foundation_text_input_internal_TransformedTextFieldState$stableprop[0]
final val androidx.compose.foundation.text.input/androidx_compose_foundation_text_input_TextFieldBuffer$stableprop // androidx.compose.foundation.text.input/androidx_compose_foundation_text_input_TextFieldBuffer$stableprop|#static{}androidx_compose_foundation_text_input_TextFieldBuffer$stableprop[0]
final val androidx.compose.foundation.text.input/androidx_compose_foundation_text_input_TextFieldCharSequence$stableprop // androidx.compose.foundation.text.input/androidx_compose_foundation_text_input_TextFieldCharSequence$stableprop|#static{}androidx_compose_foundation_text_input_TextFieldCharSequence$stableprop[0]
final val androidx.compose.foundation.text.input/androidx_compose_foundation_text_input_TextFieldLineLimits_MultiLine$stableprop // androidx.compose.foundation.text.input/androidx_compose_foundation_text_input_TextFieldLineLimits_MultiLine$stableprop|#static{}androidx_compose_foundation_text_input_TextFieldLineLimits_MultiLine$stableprop[0]
final val androidx.compose.foundation.text.input/androidx_compose_foundation_text_input_TextFieldLineLimits_SingleLine$stableprop // androidx.compose.foundation.text.input/androidx_compose_foundation_text_input_TextFieldLineLimits_SingleLine$stableprop|#static{}androidx_compose_foundation_text_input_TextFieldLineLimits_SingleLine$stableprop[0]
final val androidx.compose.foundation.text.input/androidx_compose_foundation_text_input_TextFieldState$stableprop // androidx.compose.foundation.text.input/androidx_compose_foundation_text_input_TextFieldState$stableprop|#static{}androidx_compose_foundation_text_input_TextFieldState$stableprop[0]
final val androidx.compose.foundation.text.input/androidx_compose_foundation_text_input_TextFieldState_Saver$stableprop // androidx.compose.foundation.text.input/androidx_compose_foundation_text_input_TextFieldState_Saver$stableprop|#static{}androidx_compose_foundation_text_input_TextFieldState_Saver$stableprop[0]
final val androidx.compose.foundation.text.input/androidx_compose_foundation_text_input_TextUndoManager$stableprop // androidx.compose.foundation.text.input/androidx_compose_foundation_text_input_TextUndoManager$stableprop|#static{}androidx_compose_foundation_text_input_TextUndoManager$stableprop[0]
final val androidx.compose.foundation.text.input/androidx_compose_foundation_text_input_TextUndoManager_Companion_Saver$stableprop // androidx.compose.foundation.text.input/androidx_compose_foundation_text_input_TextUndoManager_Companion_Saver$stableprop|#static{}androidx_compose_foundation_text_input_TextUndoManager_Companion_Saver$stableprop[0]
final val androidx.compose.foundation.text.input/androidx_compose_foundation_text_input_UndoState$stableprop // androidx.compose.foundation.text.input/androidx_compose_foundation_text_input_UndoState$stableprop|#static{}androidx_compose_foundation_text_input_UndoState$stableprop[0]
final val androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_MinLinesConstrainer$stableprop // androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_MinLinesConstrainer$stableprop|#static{}androidx_compose_foundation_text_modifiers_MinLinesConstrainer$stableprop[0]
final val androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_MultiParagraphLayoutCache$stableprop // androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_MultiParagraphLayoutCache$stableprop|#static{}androidx_compose_foundation_text_modifiers_MultiParagraphLayoutCache$stableprop[0]
final val androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_ParagraphLayoutCache$stableprop // androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_ParagraphLayoutCache$stableprop|#static{}androidx_compose_foundation_text_modifiers_ParagraphLayoutCache$stableprop[0]
final val androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_SelectableTextAnnotatedStringElement$stableprop // androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_SelectableTextAnnotatedStringElement$stableprop|#static{}androidx_compose_foundation_text_modifiers_SelectableTextAnnotatedStringElement$stableprop[0]
final val androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_SelectableTextAnnotatedStringNode$stableprop // androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_SelectableTextAnnotatedStringNode$stableprop|#static{}androidx_compose_foundation_text_modifiers_SelectableTextAnnotatedStringNode$stableprop[0]
final val androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_SelectionController$stableprop // androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_SelectionController$stableprop|#static{}androidx_compose_foundation_text_modifiers_SelectionController$stableprop[0]
final val androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_SimpleTextAutoSizeLayoutScope$stableprop // androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_SimpleTextAutoSizeLayoutScope$stableprop|#static{}androidx_compose_foundation_text_modifiers_SimpleTextAutoSizeLayoutScope$stableprop[0]
final val androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_StaticTextSelectionParams$stableprop // androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_StaticTextSelectionParams$stableprop|#static{}androidx_compose_foundation_text_modifiers_StaticTextSelectionParams$stableprop[0]
final val androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_TextAnnotatedStringElement$stableprop // androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_TextAnnotatedStringElement$stableprop|#static{}androidx_compose_foundation_text_modifiers_TextAnnotatedStringElement$stableprop[0]
final val androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_TextAnnotatedStringNode$stableprop // androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_TextAnnotatedStringNode$stableprop|#static{}androidx_compose_foundation_text_modifiers_TextAnnotatedStringNode$stableprop[0]
final val androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_TextAnnotatedStringNode_TextSubstitutionValue$stableprop // androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_TextAnnotatedStringNode_TextSubstitutionValue$stableprop|#static{}androidx_compose_foundation_text_modifiers_TextAnnotatedStringNode_TextSubstitutionValue$stableprop[0]
final val androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_TextStringSimpleElement$stableprop // androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_TextStringSimpleElement$stableprop|#static{}androidx_compose_foundation_text_modifiers_TextStringSimpleElement$stableprop[0]
final val androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_TextStringSimpleNode$stableprop // androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_TextStringSimpleNode$stableprop|#static{}androidx_compose_foundation_text_modifiers_TextStringSimpleNode$stableprop[0]
final val androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_TextStringSimpleNode_TextSubstitutionValue$stableprop // androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_TextStringSimpleNode_TextSubstitutionValue$stableprop|#static{}androidx_compose_foundation_text_modifiers_TextStringSimpleNode_TextSubstitutionValue$stableprop[0]
final val androidx.compose.foundation.text.selection/LocalTextSelectionColors // androidx.compose.foundation.text.selection/LocalTextSelectionColors|{}LocalTextSelectionColors[0]
    final fun <get-LocalTextSelectionColors>(): androidx.compose.runtime/ProvidableCompositionLocal<androidx.compose.foundation.text.selection/TextSelectionColors> // androidx.compose.foundation.text.selection/LocalTextSelectionColors.<get-LocalTextSelectionColors>|<get-LocalTextSelectionColors>(){}[0]
final val androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_BaseTextPreparedSelection$stableprop // androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_BaseTextPreparedSelection$stableprop|#static{}androidx_compose_foundation_text_selection_BaseTextPreparedSelection$stableprop[0]
final val androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_HandlePositionProvider$stableprop // androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_HandlePositionProvider$stableprop|#static{}androidx_compose_foundation_text_selection_HandlePositionProvider$stableprop[0]
final val androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_MultiWidgetSelectionDelegate$stableprop // androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_MultiWidgetSelectionDelegate$stableprop|#static{}androidx_compose_foundation_text_selection_MultiWidgetSelectionDelegate$stableprop[0]
final val androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_SelectableInfo$stableprop // androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_SelectableInfo$stableprop|#static{}androidx_compose_foundation_text_selection_SelectableInfo$stableprop[0]
final val androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_Selection$stableprop // androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_Selection$stableprop|#static{}androidx_compose_foundation_text_selection_Selection$stableprop[0]
final val androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_SelectionHandleInfo$stableprop // androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_SelectionHandleInfo$stableprop|#static{}androidx_compose_foundation_text_selection_SelectionHandleInfo$stableprop[0]
final val androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_SelectionLayoutBuilder$stableprop // androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_SelectionLayoutBuilder$stableprop|#static{}androidx_compose_foundation_text_selection_SelectionLayoutBuilder$stableprop[0]
final val androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_SelectionManager$stableprop // androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_SelectionManager$stableprop|#static{}androidx_compose_foundation_text_selection_SelectionManager$stableprop[0]
final val androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_SelectionRegistrarImpl$stableprop // androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_SelectionRegistrarImpl$stableprop|#static{}androidx_compose_foundation_text_selection_SelectionRegistrarImpl$stableprop[0]
final val androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_Selection_AnchorInfo$stableprop // androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_Selection_AnchorInfo$stableprop|#static{}androidx_compose_foundation_text_selection_Selection_AnchorInfo$stableprop[0]
final val androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_TextFieldPreparedSelection$stableprop // androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_TextFieldPreparedSelection$stableprop|#static{}androidx_compose_foundation_text_selection_TextFieldPreparedSelection$stableprop[0]
final val androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_TextFieldSelectionManager$stableprop // androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_TextFieldSelectionManager$stableprop|#static{}androidx_compose_foundation_text_selection_TextFieldSelectionManager$stableprop[0]
final val androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_TextPreparedSelection$stableprop // androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_TextPreparedSelection$stableprop|#static{}androidx_compose_foundation_text_selection_TextPreparedSelection$stableprop[0]
final val androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_TextPreparedSelectionState$stableprop // androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_TextPreparedSelectionState$stableprop|#static{}androidx_compose_foundation_text_selection_TextPreparedSelectionState$stableprop[0]
final val androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_TextSelectionColors$stableprop // androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_TextSelectionColors$stableprop|#static{}androidx_compose_foundation_text_selection_TextSelectionColors$stableprop[0]
final val androidx.compose.foundation.text/LocalAutofillHighlightColor // androidx.compose.foundation.text/LocalAutofillHighlightColor|{}LocalAutofillHighlightColor[0]
    final fun <get-LocalAutofillHighlightColor>(): androidx.compose.runtime/ProvidableCompositionLocal<androidx.compose.ui.graphics/Color> // androidx.compose.foundation.text/LocalAutofillHighlightColor.<get-LocalAutofillHighlightColor>|<get-LocalAutofillHighlightColor>(){}[0]
final val androidx.compose.foundation.text/androidx_compose_foundation_text_DeadKeyCombiner$stableprop // androidx.compose.foundation.text/androidx_compose_foundation_text_DeadKeyCombiner$stableprop|#static{}androidx_compose_foundation_text_DeadKeyCombiner$stableprop[0]
final val androidx.compose.foundation.text/androidx_compose_foundation_text_InlineTextContent$stableprop // androidx.compose.foundation.text/androidx_compose_foundation_text_InlineTextContent$stableprop|#static{}androidx_compose_foundation_text_InlineTextContent$stableprop[0]
final val androidx.compose.foundation.text/androidx_compose_foundation_text_KeyboardActionRunner$stableprop // androidx.compose.foundation.text/androidx_compose_foundation_text_KeyboardActionRunner$stableprop|#static{}androidx_compose_foundation_text_KeyboardActionRunner$stableprop[0]
final val androidx.compose.foundation.text/androidx_compose_foundation_text_KeyboardActions$stableprop // androidx.compose.foundation.text/androidx_compose_foundation_text_KeyboardActions$stableprop|#static{}androidx_compose_foundation_text_KeyboardActions$stableprop[0]
final val androidx.compose.foundation.text/androidx_compose_foundation_text_KeyboardOptions$stableprop // androidx.compose.foundation.text/androidx_compose_foundation_text_KeyboardOptions$stableprop|#static{}androidx_compose_foundation_text_KeyboardOptions$stableprop[0]
final val androidx.compose.foundation.text/androidx_compose_foundation_text_LegacyTextFieldState$stableprop // androidx.compose.foundation.text/androidx_compose_foundation_text_LegacyTextFieldState$stableprop|#static{}androidx_compose_foundation_text_LegacyTextFieldState$stableprop[0]
final val androidx.compose.foundation.text/androidx_compose_foundation_text_LinkStateInteractionSourceObserver$stableprop // androidx.compose.foundation.text/androidx_compose_foundation_text_LinkStateInteractionSourceObserver$stableprop|#static{}androidx_compose_foundation_text_LinkStateInteractionSourceObserver$stableprop[0]
final val androidx.compose.foundation.text/androidx_compose_foundation_text_MappedKeys$stableprop // androidx.compose.foundation.text/androidx_compose_foundation_text_MappedKeys$stableprop|#static{}androidx_compose_foundation_text_MappedKeys$stableprop[0]
final val androidx.compose.foundation.text/androidx_compose_foundation_text_PasswordInputTransformation$stableprop // androidx.compose.foundation.text/androidx_compose_foundation_text_PasswordInputTransformation$stableprop|#static{}androidx_compose_foundation_text_PasswordInputTransformation$stableprop[0]
final val androidx.compose.foundation.text/androidx_compose_foundation_text_SecureTextFieldController$stableprop // androidx.compose.foundation.text/androidx_compose_foundation_text_SecureTextFieldController$stableprop|#static{}androidx_compose_foundation_text_SecureTextFieldController$stableprop[0]
final val androidx.compose.foundation.text/androidx_compose_foundation_text_TextAutoSizeDefaults$stableprop // androidx.compose.foundation.text/androidx_compose_foundation_text_TextAutoSizeDefaults$stableprop|#static{}androidx_compose_foundation_text_TextAutoSizeDefaults$stableprop[0]
final val androidx.compose.foundation.text/androidx_compose_foundation_text_TextDelegate$stableprop // androidx.compose.foundation.text/androidx_compose_foundation_text_TextDelegate$stableprop|#static{}androidx_compose_foundation_text_TextDelegate$stableprop[0]
final val androidx.compose.foundation.text/androidx_compose_foundation_text_TextFieldDelegate$stableprop // androidx.compose.foundation.text/androidx_compose_foundation_text_TextFieldDelegate$stableprop|#static{}androidx_compose_foundation_text_TextFieldDelegate$stableprop[0]
final val androidx.compose.foundation.text/androidx_compose_foundation_text_TextFieldKeyInput$stableprop // androidx.compose.foundation.text/androidx_compose_foundation_text_TextFieldKeyInput$stableprop|#static{}androidx_compose_foundation_text_TextFieldKeyInput$stableprop[0]
final val androidx.compose.foundation.text/androidx_compose_foundation_text_TextFieldScrollerPosition$stableprop // androidx.compose.foundation.text/androidx_compose_foundation_text_TextFieldScrollerPosition$stableprop|#static{}androidx_compose_foundation_text_TextFieldScrollerPosition$stableprop[0]
final val androidx.compose.foundation.text/androidx_compose_foundation_text_TextLayoutResultProxy$stableprop // androidx.compose.foundation.text/androidx_compose_foundation_text_TextLayoutResultProxy$stableprop|#static{}androidx_compose_foundation_text_TextLayoutResultProxy$stableprop[0]
final val androidx.compose.foundation.text/androidx_compose_foundation_text_TextLinkScope$stableprop // androidx.compose.foundation.text/androidx_compose_foundation_text_TextLinkScope$stableprop|#static{}androidx_compose_foundation_text_TextLinkScope$stableprop[0]
final val androidx.compose.foundation.text/androidx_compose_foundation_text_TextRangeLayoutMeasureResult$stableprop // androidx.compose.foundation.text/androidx_compose_foundation_text_TextRangeLayoutMeasureResult$stableprop|#static{}androidx_compose_foundation_text_TextRangeLayoutMeasureResult$stableprop[0]
final val androidx.compose.foundation.text/androidx_compose_foundation_text_TextRangeLayoutMeasureScope$stableprop // androidx.compose.foundation.text/androidx_compose_foundation_text_TextRangeLayoutMeasureScope$stableprop|#static{}androidx_compose_foundation_text_TextRangeLayoutMeasureScope$stableprop[0]
final val androidx.compose.foundation.text/androidx_compose_foundation_text_TextRangeLayoutModifier$stableprop // androidx.compose.foundation.text/androidx_compose_foundation_text_TextRangeLayoutModifier$stableprop|#static{}androidx_compose_foundation_text_TextRangeLayoutModifier$stableprop[0]
final val androidx.compose.foundation.text/androidx_compose_foundation_text_UndoManager$stableprop // androidx.compose.foundation.text/androidx_compose_foundation_text_UndoManager$stableprop|#static{}androidx_compose_foundation_text_UndoManager$stableprop[0]
final val androidx.compose.foundation.text/isTypedEvent // androidx.compose.foundation.text/isTypedEvent|@androidx.compose.ui.input.key.KeyEvent{}isTypedEvent[0]
    final fun (androidx.compose.ui.input.key/KeyEvent).<get-isTypedEvent>(): kotlin/Boolean // androidx.compose.foundation.text/isTypedEvent.<get-isTypedEvent>|<get-isTypedEvent>@androidx.compose.ui.input.key.KeyEvent(){}[0]
final val androidx.compose.foundation/LocalIndication // androidx.compose.foundation/LocalIndication|{}LocalIndication[0]
    final fun <get-LocalIndication>(): androidx.compose.runtime/ProvidableCompositionLocal<androidx.compose.foundation/Indication> // androidx.compose.foundation/LocalIndication.<get-LocalIndication>|<get-LocalIndication>(){}[0]
final val androidx.compose.foundation/LocalOverscrollFactory // androidx.compose.foundation/LocalOverscrollFactory|{}LocalOverscrollFactory[0]
    final fun <get-LocalOverscrollFactory>(): androidx.compose.runtime/ProvidableCompositionLocal<androidx.compose.foundation/OverscrollFactory?> // androidx.compose.foundation/LocalOverscrollFactory.<get-LocalOverscrollFactory>|<get-LocalOverscrollFactory>(){}[0]
final val androidx.compose.foundation/androidx_compose_foundation_AbstractClickableNode$stableprop // androidx.compose.foundation/androidx_compose_foundation_AbstractClickableNode$stableprop|#static{}androidx_compose_foundation_AbstractClickableNode$stableprop[0]
final val androidx.compose.foundation/androidx_compose_foundation_AtomicLong$stableprop // androidx.compose.foundation/androidx_compose_foundation_AtomicLong$stableprop|#static{}androidx_compose_foundation_AtomicLong$stableprop[0]
final val androidx.compose.foundation/androidx_compose_foundation_AtomicReference$stableprop // androidx.compose.foundation/androidx_compose_foundation_AtomicReference$stableprop|#static{}androidx_compose_foundation_AtomicReference$stableprop[0]
final val androidx.compose.foundation/androidx_compose_foundation_BasicTooltipDefaults$stableprop // androidx.compose.foundation/androidx_compose_foundation_BasicTooltipDefaults$stableprop|#static{}androidx_compose_foundation_BasicTooltipDefaults$stableprop[0]
final val androidx.compose.foundation/androidx_compose_foundation_BasicTooltipStrings$stableprop // androidx.compose.foundation/androidx_compose_foundation_BasicTooltipStrings$stableprop|#static{}androidx_compose_foundation_BasicTooltipStrings$stableprop[0]
final val androidx.compose.foundation/androidx_compose_foundation_BorderModifierNode$stableprop // androidx.compose.foundation/androidx_compose_foundation_BorderModifierNode$stableprop|#static{}androidx_compose_foundation_BorderModifierNode$stableprop[0]
final val androidx.compose.foundation/androidx_compose_foundation_BorderModifierNodeElement$stableprop // androidx.compose.foundation/androidx_compose_foundation_BorderModifierNodeElement$stableprop|#static{}androidx_compose_foundation_BorderModifierNodeElement$stableprop[0]
final val androidx.compose.foundation/androidx_compose_foundation_BorderStroke$stableprop // androidx.compose.foundation/androidx_compose_foundation_BorderStroke$stableprop|#static{}androidx_compose_foundation_BorderStroke$stableprop[0]
final val androidx.compose.foundation/androidx_compose_foundation_ClickableNode$stableprop // androidx.compose.foundation/androidx_compose_foundation_ClickableNode$stableprop|#static{}androidx_compose_foundation_ClickableNode$stableprop[0]
final val androidx.compose.foundation/androidx_compose_foundation_CombinedClickableNode_DoubleKeyClickState$stableprop // androidx.compose.foundation/androidx_compose_foundation_CombinedClickableNode_DoubleKeyClickState$stableprop|#static{}androidx_compose_foundation_CombinedClickableNode_DoubleKeyClickState$stableprop[0]
final val androidx.compose.foundation/androidx_compose_foundation_ComposeFoundationFlags$stableprop // androidx.compose.foundation/androidx_compose_foundation_ComposeFoundationFlags$stableprop|#static{}androidx_compose_foundation_ComposeFoundationFlags$stableprop[0]
final val androidx.compose.foundation/androidx_compose_foundation_FocusableNode$stableprop // androidx.compose.foundation/androidx_compose_foundation_FocusableNode$stableprop|#static{}androidx_compose_foundation_FocusableNode$stableprop[0]
final val androidx.compose.foundation/androidx_compose_foundation_FocusedBoundsObserverNode$stableprop // androidx.compose.foundation/androidx_compose_foundation_FocusedBoundsObserverNode$stableprop|#static{}androidx_compose_foundation_FocusedBoundsObserverNode$stableprop[0]
final val androidx.compose.foundation/androidx_compose_foundation_MarqueeDefaults$stableprop // androidx.compose.foundation/androidx_compose_foundation_MarqueeDefaults$stableprop|#static{}androidx_compose_foundation_MarqueeDefaults$stableprop[0]
final val androidx.compose.foundation/androidx_compose_foundation_MutationInterruptedException$stableprop // androidx.compose.foundation/androidx_compose_foundation_MutationInterruptedException$stableprop|#static{}androidx_compose_foundation_MutationInterruptedException$stableprop[0]
final val androidx.compose.foundation/androidx_compose_foundation_MutatorMutex$stableprop // androidx.compose.foundation/androidx_compose_foundation_MutatorMutex$stableprop|#static{}androidx_compose_foundation_MutatorMutex$stableprop[0]
final val androidx.compose.foundation/androidx_compose_foundation_ScrollNode$stableprop // androidx.compose.foundation/androidx_compose_foundation_ScrollNode$stableprop|#static{}androidx_compose_foundation_ScrollNode$stableprop[0]
final val androidx.compose.foundation/androidx_compose_foundation_ScrollState$stableprop // androidx.compose.foundation/androidx_compose_foundation_ScrollState$stableprop|#static{}androidx_compose_foundation_ScrollState$stableprop[0]
final val androidx.compose.foundation/androidx_compose_foundation_ScrollingLayoutElement$stableprop // androidx.compose.foundation/androidx_compose_foundation_ScrollingLayoutElement$stableprop|#static{}androidx_compose_foundation_ScrollingLayoutElement$stableprop[0]

final fun (androidx.compose.foundation.interaction/InteractionSource).androidx.compose.foundation.interaction/collectIsDraggedAsState(androidx.compose.runtime/Composer?, kotlin/Int): androidx.compose.runtime/State<kotlin/Boolean> // androidx.compose.foundation.interaction/collectIsDraggedAsState|collectIsDraggedAsState@androidx.compose.foundation.interaction.InteractionSource(androidx.compose.runtime.Composer?;kotlin.Int){}[0]
final fun (androidx.compose.foundation.interaction/InteractionSource).androidx.compose.foundation.interaction/collectIsFocusedAsState(androidx.compose.runtime/Composer?, kotlin/Int): androidx.compose.runtime/State<kotlin/Boolean> // androidx.compose.foundation.interaction/collectIsFocusedAsState|collectIsFocusedAsState@androidx.compose.foundation.interaction.InteractionSource(androidx.compose.runtime.Composer?;kotlin.Int){}[0]
final fun (androidx.compose.foundation.interaction/InteractionSource).androidx.compose.foundation.interaction/collectIsHoveredAsState(androidx.compose.runtime/Composer?, kotlin/Int): androidx.compose.runtime/State<kotlin/Boolean> // androidx.compose.foundation.interaction/collectIsHoveredAsState|collectIsHoveredAsState@androidx.compose.foundation.interaction.InteractionSource(androidx.compose.runtime.Composer?;kotlin.Int){}[0]
final fun (androidx.compose.foundation.interaction/InteractionSource).androidx.compose.foundation.interaction/collectIsPressedAsState(androidx.compose.runtime/Composer?, kotlin/Int): androidx.compose.runtime/State<kotlin/Boolean> // androidx.compose.foundation.interaction/collectIsPressedAsState|collectIsPressedAsState@androidx.compose.foundation.interaction.InteractionSource(androidx.compose.runtime.Composer?;kotlin.Int){}[0]
final fun (androidx.compose.foundation.text.input/InputTransformation).androidx.compose.foundation.text.input/allCaps(androidx.compose.ui.text.intl/Locale): androidx.compose.foundation.text.input/InputTransformation // androidx.compose.foundation.text.input/allCaps|allCaps@androidx.compose.foundation.text.input.InputTransformation(androidx.compose.ui.text.intl.Locale){}[0]
final fun (androidx.compose.foundation.text.input/InputTransformation).androidx.compose.foundation.text.input/byValue(kotlin/Function2<kotlin/CharSequence, kotlin/CharSequence, kotlin/CharSequence>): androidx.compose.foundation.text.input/InputTransformation // androidx.compose.foundation.text.input/byValue|byValue@androidx.compose.foundation.text.input.InputTransformation(kotlin.Function2<kotlin.CharSequence,kotlin.CharSequence,kotlin.CharSequence>){}[0]
final fun (androidx.compose.foundation.text.input/InputTransformation).androidx.compose.foundation.text.input/maxLength(kotlin/Int): androidx.compose.foundation.text.input/InputTransformation // androidx.compose.foundation.text.input/maxLength|maxLength@androidx.compose.foundation.text.input.InputTransformation(kotlin.Int){}[0]
final fun (androidx.compose.foundation.text.input/InputTransformation).androidx.compose.foundation.text.input/then(androidx.compose.foundation.text.input/InputTransformation): androidx.compose.foundation.text.input/InputTransformation // androidx.compose.foundation.text.input/then|then@androidx.compose.foundation.text.input.InputTransformation(androidx.compose.foundation.text.input.InputTransformation){}[0]
final fun (androidx.compose.foundation.text.input/TextFieldBuffer).androidx.compose.foundation.text.input/delete(kotlin/Int, kotlin/Int) // androidx.compose.foundation.text.input/delete|delete@androidx.compose.foundation.text.input.TextFieldBuffer(kotlin.Int;kotlin.Int){}[0]
final fun (androidx.compose.foundation.text.input/TextFieldBuffer).androidx.compose.foundation.text.input/insert(kotlin/Int, kotlin/String) // androidx.compose.foundation.text.input/insert|insert@androidx.compose.foundation.text.input.TextFieldBuffer(kotlin.Int;kotlin.String){}[0]
final fun (androidx.compose.foundation.text.input/TextFieldBuffer).androidx.compose.foundation.text.input/placeCursorAtEnd() // androidx.compose.foundation.text.input/placeCursorAtEnd|placeCursorAtEnd@androidx.compose.foundation.text.input.TextFieldBuffer(){}[0]
final fun (androidx.compose.foundation.text.input/TextFieldBuffer).androidx.compose.foundation.text.input/selectAll() // androidx.compose.foundation.text.input/selectAll|selectAll@androidx.compose.foundation.text.input.TextFieldBuffer(){}[0]
final fun (androidx.compose.foundation.text.input/TextFieldState).androidx.compose.foundation.text.input/clearText() // androidx.compose.foundation.text.input/clearText|clearText@androidx.compose.foundation.text.input.TextFieldState(){}[0]
final fun (androidx.compose.foundation.text.input/TextFieldState).androidx.compose.foundation.text.input/setTextAndPlaceCursorAtEnd(kotlin/String) // androidx.compose.foundation.text.input/setTextAndPlaceCursorAtEnd|setTextAndPlaceCursorAtEnd@androidx.compose.foundation.text.input.TextFieldState(kotlin.String){}[0]
final fun (androidx.compose.foundation.text.input/TextFieldState).androidx.compose.foundation.text.input/setTextAndSelectAll(kotlin/String) // androidx.compose.foundation.text.input/setTextAndSelectAll|setTextAndSelectAll@androidx.compose.foundation.text.input.TextFieldState(kotlin.String){}[0]
final fun (androidx.compose.foundation.text.input/TextFieldState).androidx.compose.foundation.text.input/toTextFieldBuffer(): androidx.compose.foundation.text.input/TextFieldBuffer // androidx.compose.foundation.text.input/toTextFieldBuffer|toTextFieldBuffer@androidx.compose.foundation.text.input.TextFieldState(){}[0]
final fun (androidx.compose.foundation/OverscrollEffect).androidx.compose.foundation/withoutEventHandling(): androidx.compose.foundation/OverscrollEffect // androidx.compose.foundation/withoutEventHandling|withoutEventHandling@androidx.compose.foundation.OverscrollEffect(){}[0]
final fun (androidx.compose.foundation/OverscrollEffect).androidx.compose.foundation/withoutVisualEffect(): androidx.compose.foundation/OverscrollEffect // androidx.compose.foundation/withoutVisualEffect|withoutVisualEffect@androidx.compose.foundation.OverscrollEffect(){}[0]
final fun (androidx.compose.ui.input.pointer/PointerEvent).androidx.compose.foundation.gestures/calculateCentroid(kotlin/Boolean = ...): androidx.compose.ui.geometry/Offset // androidx.compose.foundation.gestures/calculateCentroid|calculateCentroid@androidx.compose.ui.input.pointer.PointerEvent(kotlin.Boolean){}[0]
final fun (androidx.compose.ui.input.pointer/PointerEvent).androidx.compose.foundation.gestures/calculateCentroidSize(kotlin/Boolean = ...): kotlin/Float // androidx.compose.foundation.gestures/calculateCentroidSize|calculateCentroidSize@androidx.compose.ui.input.pointer.PointerEvent(kotlin.Boolean){}[0]
final fun (androidx.compose.ui.input.pointer/PointerEvent).androidx.compose.foundation.gestures/calculatePan(): androidx.compose.ui.geometry/Offset // androidx.compose.foundation.gestures/calculatePan|calculatePan@androidx.compose.ui.input.pointer.PointerEvent(){}[0]
final fun (androidx.compose.ui.input.pointer/PointerEvent).androidx.compose.foundation.gestures/calculateRotation(): kotlin/Float // androidx.compose.foundation.gestures/calculateRotation|calculateRotation@androidx.compose.ui.input.pointer.PointerEvent(){}[0]
final fun (androidx.compose.ui.input.pointer/PointerEvent).androidx.compose.foundation.gestures/calculateZoom(): kotlin/Float // androidx.compose.foundation.gestures/calculateZoom|calculateZoom@androidx.compose.ui.input.pointer.PointerEvent(){}[0]
final fun (androidx.compose.ui.text/AnnotatedString.Builder).androidx.compose.foundation.text/appendInlineContent(kotlin/String, kotlin/String = ...) // androidx.compose.foundation.text/appendInlineContent|appendInlineContent@androidx.compose.ui.text.AnnotatedString.Builder(kotlin.String;kotlin.String){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation.draganddrop/dragAndDropSource(kotlin/Function1<androidx.compose.ui.geometry/Offset, androidx.compose.ui.draganddrop/DragAndDropTransferData?>): androidx.compose.ui/Modifier // androidx.compose.foundation.draganddrop/dragAndDropSource|dragAndDropSource@androidx.compose.ui.Modifier(kotlin.Function1<androidx.compose.ui.geometry.Offset,androidx.compose.ui.draganddrop.DragAndDropTransferData?>){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation.draganddrop/dragAndDropSource(kotlin/Function1<androidx.compose.ui.graphics.drawscope/DrawScope, kotlin/Unit>, kotlin/Function1<androidx.compose.ui.geometry/Offset, androidx.compose.ui.draganddrop/DragAndDropTransferData?>): androidx.compose.ui/Modifier // androidx.compose.foundation.draganddrop/dragAndDropSource|dragAndDropSource@androidx.compose.ui.Modifier(kotlin.Function1<androidx.compose.ui.graphics.drawscope.DrawScope,kotlin.Unit>;kotlin.Function1<androidx.compose.ui.geometry.Offset,androidx.compose.ui.draganddrop.DragAndDropTransferData?>){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation.draganddrop/dragAndDropTarget(kotlin/Function1<androidx.compose.ui.draganddrop/DragAndDropEvent, kotlin/Boolean>, androidx.compose.ui.draganddrop/DragAndDropTarget): androidx.compose.ui/Modifier // androidx.compose.foundation.draganddrop/dragAndDropTarget|dragAndDropTarget@androidx.compose.ui.Modifier(kotlin.Function1<androidx.compose.ui.draganddrop.DragAndDropEvent,kotlin.Boolean>;androidx.compose.ui.draganddrop.DragAndDropTarget){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation.gestures/draggable(androidx.compose.foundation.gestures/DraggableState, androidx.compose.foundation.gestures/Orientation, kotlin/Boolean = ..., androidx.compose.foundation.interaction/MutableInteractionSource? = ..., kotlin/Boolean = ..., kotlin.coroutines/SuspendFunction2<kotlinx.coroutines/CoroutineScope, androidx.compose.ui.geometry/Offset, kotlin/Unit> = ..., kotlin.coroutines/SuspendFunction2<kotlinx.coroutines/CoroutineScope, kotlin/Float, kotlin/Unit> = ..., kotlin/Boolean = ...): androidx.compose.ui/Modifier // androidx.compose.foundation.gestures/draggable|draggable@androidx.compose.ui.Modifier(androidx.compose.foundation.gestures.DraggableState;androidx.compose.foundation.gestures.Orientation;kotlin.Boolean;androidx.compose.foundation.interaction.MutableInteractionSource?;kotlin.Boolean;kotlin.coroutines.SuspendFunction2<kotlinx.coroutines.CoroutineScope,androidx.compose.ui.geometry.Offset,kotlin.Unit>;kotlin.coroutines.SuspendFunction2<kotlinx.coroutines.CoroutineScope,kotlin.Float,kotlin.Unit>;kotlin.Boolean){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation.gestures/draggable2D(androidx.compose.foundation.gestures/Draggable2DState, kotlin/Boolean = ..., androidx.compose.foundation.interaction/MutableInteractionSource? = ..., kotlin/Boolean = ..., kotlin/Function1<androidx.compose.ui.geometry/Offset, kotlin/Unit> = ..., kotlin/Function1<androidx.compose.ui.unit/Velocity, kotlin/Unit> = ..., kotlin/Boolean = ...): androidx.compose.ui/Modifier // androidx.compose.foundation.gestures/draggable2D|draggable2D@androidx.compose.ui.Modifier(androidx.compose.foundation.gestures.Draggable2DState;kotlin.Boolean;androidx.compose.foundation.interaction.MutableInteractionSource?;kotlin.Boolean;kotlin.Function1<androidx.compose.ui.geometry.Offset,kotlin.Unit>;kotlin.Function1<androidx.compose.ui.unit.Velocity,kotlin.Unit>;kotlin.Boolean){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation.gestures/scrollable(androidx.compose.foundation.gestures/ScrollableState, androidx.compose.foundation.gestures/Orientation, androidx.compose.foundation/OverscrollEffect?, kotlin/Boolean = ..., kotlin/Boolean = ..., androidx.compose.foundation.gestures/FlingBehavior? = ..., androidx.compose.foundation.interaction/MutableInteractionSource? = ..., androidx.compose.foundation.gestures/BringIntoViewSpec? = ...): androidx.compose.ui/Modifier // androidx.compose.foundation.gestures/scrollable|scrollable@androidx.compose.ui.Modifier(androidx.compose.foundation.gestures.ScrollableState;androidx.compose.foundation.gestures.Orientation;androidx.compose.foundation.OverscrollEffect?;kotlin.Boolean;kotlin.Boolean;androidx.compose.foundation.gestures.FlingBehavior?;androidx.compose.foundation.interaction.MutableInteractionSource?;androidx.compose.foundation.gestures.BringIntoViewSpec?){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation.gestures/scrollable(androidx.compose.foundation.gestures/ScrollableState, androidx.compose.foundation.gestures/Orientation, kotlin/Boolean = ..., kotlin/Boolean = ..., androidx.compose.foundation.gestures/FlingBehavior? = ..., androidx.compose.foundation.interaction/MutableInteractionSource? = ...): androidx.compose.ui/Modifier // androidx.compose.foundation.gestures/scrollable|scrollable@androidx.compose.ui.Modifier(androidx.compose.foundation.gestures.ScrollableState;androidx.compose.foundation.gestures.Orientation;kotlin.Boolean;kotlin.Boolean;androidx.compose.foundation.gestures.FlingBehavior?;androidx.compose.foundation.interaction.MutableInteractionSource?){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation.gestures/scrollable2D(androidx.compose.foundation.gestures/Scrollable2DState, kotlin/Boolean = ..., androidx.compose.foundation/OverscrollEffect? = ..., androidx.compose.foundation.gestures/FlingBehavior? = ..., androidx.compose.foundation.interaction/MutableInteractionSource? = ...): androidx.compose.ui/Modifier // androidx.compose.foundation.gestures/scrollable2D|scrollable2D@androidx.compose.ui.Modifier(androidx.compose.foundation.gestures.Scrollable2DState;kotlin.Boolean;androidx.compose.foundation.OverscrollEffect?;androidx.compose.foundation.gestures.FlingBehavior?;androidx.compose.foundation.interaction.MutableInteractionSource?){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation.gestures/transformable(androidx.compose.foundation.gestures/TransformableState, kotlin/Boolean = ..., kotlin/Boolean = ...): androidx.compose.ui/Modifier // androidx.compose.foundation.gestures/transformable|transformable@androidx.compose.ui.Modifier(androidx.compose.foundation.gestures.TransformableState;kotlin.Boolean;kotlin.Boolean){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation.gestures/transformable(androidx.compose.foundation.gestures/TransformableState, kotlin/Function1<androidx.compose.ui.geometry/Offset, kotlin/Boolean>, kotlin/Boolean = ..., kotlin/Boolean = ...): androidx.compose.ui/Modifier // androidx.compose.foundation.gestures/transformable|transformable@androidx.compose.ui.Modifier(androidx.compose.foundation.gestures.TransformableState;kotlin.Function1<androidx.compose.ui.geometry.Offset,kotlin.Boolean>;kotlin.Boolean;kotlin.Boolean){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation.relocation/bringIntoViewRequester(androidx.compose.foundation.relocation/BringIntoViewRequester): androidx.compose.ui/Modifier // androidx.compose.foundation.relocation/bringIntoViewRequester|bringIntoViewRequester@androidx.compose.ui.Modifier(androidx.compose.foundation.relocation.BringIntoViewRequester){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation.relocation/bringIntoViewResponder(androidx.compose.foundation.relocation/BringIntoViewResponder): androidx.compose.ui/Modifier // androidx.compose.foundation.relocation/bringIntoViewResponder|bringIntoViewResponder@androidx.compose.ui.Modifier(androidx.compose.foundation.relocation.BringIntoViewResponder){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation.selection/selectable(kotlin/Boolean, androidx.compose.foundation.interaction/MutableInteractionSource?, androidx.compose.foundation/Indication?, kotlin/Boolean = ..., androidx.compose.ui.semantics/Role? = ..., kotlin/Function0<kotlin/Unit>): androidx.compose.ui/Modifier // androidx.compose.foundation.selection/selectable|selectable@androidx.compose.ui.Modifier(kotlin.Boolean;androidx.compose.foundation.interaction.MutableInteractionSource?;androidx.compose.foundation.Indication?;kotlin.Boolean;androidx.compose.ui.semantics.Role?;kotlin.Function0<kotlin.Unit>){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation.selection/selectable(kotlin/Boolean, kotlin/Boolean = ..., androidx.compose.ui.semantics/Role? = ..., androidx.compose.foundation.interaction/MutableInteractionSource? = ..., kotlin/Function0<kotlin/Unit>): androidx.compose.ui/Modifier // androidx.compose.foundation.selection/selectable|selectable@androidx.compose.ui.Modifier(kotlin.Boolean;kotlin.Boolean;androidx.compose.ui.semantics.Role?;androidx.compose.foundation.interaction.MutableInteractionSource?;kotlin.Function0<kotlin.Unit>){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation.selection/selectable(kotlin/Boolean, kotlin/Boolean = ..., androidx.compose.ui.semantics/Role? = ..., kotlin/Function0<kotlin/Unit>): androidx.compose.ui/Modifier // androidx.compose.foundation.selection/selectable|selectable@androidx.compose.ui.Modifier(kotlin.Boolean;kotlin.Boolean;androidx.compose.ui.semantics.Role?;kotlin.Function0<kotlin.Unit>){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation.selection/selectableGroup(): androidx.compose.ui/Modifier // androidx.compose.foundation.selection/selectableGroup|selectableGroup@androidx.compose.ui.Modifier(){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation.selection/toggleable(kotlin/Boolean, androidx.compose.foundation.interaction/MutableInteractionSource?, androidx.compose.foundation/Indication?, kotlin/Boolean = ..., androidx.compose.ui.semantics/Role? = ..., kotlin/Function1<kotlin/Boolean, kotlin/Unit>): androidx.compose.ui/Modifier // androidx.compose.foundation.selection/toggleable|toggleable@androidx.compose.ui.Modifier(kotlin.Boolean;androidx.compose.foundation.interaction.MutableInteractionSource?;androidx.compose.foundation.Indication?;kotlin.Boolean;androidx.compose.ui.semantics.Role?;kotlin.Function1<kotlin.Boolean,kotlin.Unit>){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation.selection/toggleable(kotlin/Boolean, kotlin/Boolean = ..., androidx.compose.ui.semantics/Role? = ..., androidx.compose.foundation.interaction/MutableInteractionSource? = ..., kotlin/Function1<kotlin/Boolean, kotlin/Unit>): androidx.compose.ui/Modifier // androidx.compose.foundation.selection/toggleable|toggleable@androidx.compose.ui.Modifier(kotlin.Boolean;kotlin.Boolean;androidx.compose.ui.semantics.Role?;androidx.compose.foundation.interaction.MutableInteractionSource?;kotlin.Function1<kotlin.Boolean,kotlin.Unit>){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation.selection/toggleable(kotlin/Boolean, kotlin/Boolean = ..., androidx.compose.ui.semantics/Role? = ..., kotlin/Function1<kotlin/Boolean, kotlin/Unit>): androidx.compose.ui/Modifier // androidx.compose.foundation.selection/toggleable|toggleable@androidx.compose.ui.Modifier(kotlin.Boolean;kotlin.Boolean;androidx.compose.ui.semantics.Role?;kotlin.Function1<kotlin.Boolean,kotlin.Unit>){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation.selection/triStateToggleable(androidx.compose.ui.state/ToggleableState, androidx.compose.foundation.interaction/MutableInteractionSource?, androidx.compose.foundation/Indication?, kotlin/Boolean = ..., androidx.compose.ui.semantics/Role? = ..., kotlin/Function0<kotlin/Unit>): androidx.compose.ui/Modifier // androidx.compose.foundation.selection/triStateToggleable|triStateToggleable@androidx.compose.ui.Modifier(androidx.compose.ui.state.ToggleableState;androidx.compose.foundation.interaction.MutableInteractionSource?;androidx.compose.foundation.Indication?;kotlin.Boolean;androidx.compose.ui.semantics.Role?;kotlin.Function0<kotlin.Unit>){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation.selection/triStateToggleable(androidx.compose.ui.state/ToggleableState, kotlin/Boolean = ..., androidx.compose.ui.semantics/Role? = ..., androidx.compose.foundation.interaction/MutableInteractionSource? = ..., kotlin/Function0<kotlin/Unit>): androidx.compose.ui/Modifier // androidx.compose.foundation.selection/triStateToggleable|triStateToggleable@androidx.compose.ui.Modifier(androidx.compose.ui.state.ToggleableState;kotlin.Boolean;androidx.compose.ui.semantics.Role?;androidx.compose.foundation.interaction.MutableInteractionSource?;kotlin.Function0<kotlin.Unit>){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation.selection/triStateToggleable(androidx.compose.ui.state/ToggleableState, kotlin/Boolean = ..., androidx.compose.ui.semantics/Role? = ..., kotlin/Function0<kotlin/Unit>): androidx.compose.ui/Modifier // androidx.compose.foundation.selection/triStateToggleable|triStateToggleable@androidx.compose.ui.Modifier(androidx.compose.ui.state.ToggleableState;kotlin.Boolean;androidx.compose.ui.semantics.Role?;kotlin.Function0<kotlin.Unit>){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation.text.contextmenu.modifier/appendTextContextMenuComponents(kotlin/Function1<androidx.compose.foundation.text.contextmenu.builder/TextContextMenuBuilderScope, kotlin/Unit>): androidx.compose.ui/Modifier // androidx.compose.foundation.text.contextmenu.modifier/appendTextContextMenuComponents|appendTextContextMenuComponents@androidx.compose.ui.Modifier(kotlin.Function1<androidx.compose.foundation.text.contextmenu.builder.TextContextMenuBuilderScope,kotlin.Unit>){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation.text.contextmenu.modifier/filterTextContextMenuComponents(kotlin/Function1<androidx.compose.foundation.text.contextmenu.data/TextContextMenuComponent, kotlin/Boolean>): androidx.compose.ui/Modifier // androidx.compose.foundation.text.contextmenu.modifier/filterTextContextMenuComponents|filterTextContextMenuComponents@androidx.compose.ui.Modifier(kotlin.Function1<androidx.compose.foundation.text.contextmenu.data.TextContextMenuComponent,kotlin.Boolean>){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation/background(androidx.compose.ui.graphics/Brush, androidx.compose.ui.graphics/Shape = ..., kotlin/Float = ...): androidx.compose.ui/Modifier // androidx.compose.foundation/background|background@androidx.compose.ui.Modifier(androidx.compose.ui.graphics.Brush;androidx.compose.ui.graphics.Shape;kotlin.Float){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation/background(androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Shape = ...): androidx.compose.ui/Modifier // androidx.compose.foundation/background|background@androidx.compose.ui.Modifier(androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Shape){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation/basicMarquee(kotlin/Int = ..., androidx.compose.foundation/MarqueeAnimationMode = ..., kotlin/Int = ..., kotlin/Int = ..., androidx.compose.foundation/MarqueeSpacing = ..., androidx.compose.ui.unit/Dp = ...): androidx.compose.ui/Modifier // androidx.compose.foundation/basicMarquee|basicMarquee@androidx.compose.ui.Modifier(kotlin.Int;androidx.compose.foundation.MarqueeAnimationMode;kotlin.Int;kotlin.Int;androidx.compose.foundation.MarqueeSpacing;androidx.compose.ui.unit.Dp){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation/border(androidx.compose.foundation/BorderStroke, androidx.compose.ui.graphics/Shape = ...): androidx.compose.ui/Modifier // androidx.compose.foundation/border|border@androidx.compose.ui.Modifier(androidx.compose.foundation.BorderStroke;androidx.compose.ui.graphics.Shape){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation/border(androidx.compose.ui.unit/Dp, androidx.compose.ui.graphics/Brush, androidx.compose.ui.graphics/Shape): androidx.compose.ui/Modifier // androidx.compose.foundation/border|border@androidx.compose.ui.Modifier(androidx.compose.ui.unit.Dp;androidx.compose.ui.graphics.Brush;androidx.compose.ui.graphics.Shape){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation/border(androidx.compose.ui.unit/Dp, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Shape = ...): androidx.compose.ui/Modifier // androidx.compose.foundation/border|border@androidx.compose.ui.Modifier(androidx.compose.ui.unit.Dp;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Shape){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation/clickable(androidx.compose.foundation.interaction/MutableInteractionSource?, androidx.compose.foundation/Indication?, kotlin/Boolean = ..., kotlin/String? = ..., androidx.compose.ui.semantics/Role? = ..., kotlin/Function0<kotlin/Unit>): androidx.compose.ui/Modifier // androidx.compose.foundation/clickable|clickable@androidx.compose.ui.Modifier(androidx.compose.foundation.interaction.MutableInteractionSource?;androidx.compose.foundation.Indication?;kotlin.Boolean;kotlin.String?;androidx.compose.ui.semantics.Role?;kotlin.Function0<kotlin.Unit>){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation/clickable(kotlin/Boolean = ..., kotlin/String? = ..., androidx.compose.ui.semantics/Role? = ..., androidx.compose.foundation.interaction/MutableInteractionSource? = ..., kotlin/Function0<kotlin/Unit>): androidx.compose.ui/Modifier // androidx.compose.foundation/clickable|clickable@androidx.compose.ui.Modifier(kotlin.Boolean;kotlin.String?;androidx.compose.ui.semantics.Role?;androidx.compose.foundation.interaction.MutableInteractionSource?;kotlin.Function0<kotlin.Unit>){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation/clickable(kotlin/Boolean = ..., kotlin/String? = ..., androidx.compose.ui.semantics/Role? = ..., kotlin/Function0<kotlin/Unit>): androidx.compose.ui/Modifier // androidx.compose.foundation/clickable|clickable@androidx.compose.ui.Modifier(kotlin.Boolean;kotlin.String?;androidx.compose.ui.semantics.Role?;kotlin.Function0<kotlin.Unit>){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation/clipScrollableContainer(androidx.compose.foundation.gestures/Orientation): androidx.compose.ui/Modifier // androidx.compose.foundation/clipScrollableContainer|clipScrollableContainer@androidx.compose.ui.Modifier(androidx.compose.foundation.gestures.Orientation){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation/combinedClickable(androidx.compose.foundation.interaction/MutableInteractionSource?, androidx.compose.foundation/Indication?, kotlin/Boolean = ..., kotlin/String? = ..., androidx.compose.ui.semantics/Role? = ..., kotlin/String? = ..., kotlin/Function0<kotlin/Unit>? = ..., kotlin/Function0<kotlin/Unit>? = ..., kotlin/Boolean = ..., kotlin/Function0<kotlin/Unit>): androidx.compose.ui/Modifier // androidx.compose.foundation/combinedClickable|combinedClickable@androidx.compose.ui.Modifier(androidx.compose.foundation.interaction.MutableInteractionSource?;androidx.compose.foundation.Indication?;kotlin.Boolean;kotlin.String?;androidx.compose.ui.semantics.Role?;kotlin.String?;kotlin.Function0<kotlin.Unit>?;kotlin.Function0<kotlin.Unit>?;kotlin.Boolean;kotlin.Function0<kotlin.Unit>){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation/combinedClickable(androidx.compose.foundation.interaction/MutableInteractionSource?, androidx.compose.foundation/Indication?, kotlin/Boolean = ..., kotlin/String? = ..., androidx.compose.ui.semantics/Role? = ..., kotlin/String? = ..., kotlin/Function0<kotlin/Unit>? = ..., kotlin/Function0<kotlin/Unit>? = ..., kotlin/Function0<kotlin/Unit>): androidx.compose.ui/Modifier // androidx.compose.foundation/combinedClickable|combinedClickable@androidx.compose.ui.Modifier(androidx.compose.foundation.interaction.MutableInteractionSource?;androidx.compose.foundation.Indication?;kotlin.Boolean;kotlin.String?;androidx.compose.ui.semantics.Role?;kotlin.String?;kotlin.Function0<kotlin.Unit>?;kotlin.Function0<kotlin.Unit>?;kotlin.Function0<kotlin.Unit>){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation/combinedClickable(kotlin/Boolean = ..., kotlin/String? = ..., androidx.compose.ui.semantics/Role? = ..., kotlin/String? = ..., kotlin/Function0<kotlin/Unit>? = ..., kotlin/Function0<kotlin/Unit>? = ..., kotlin/Boolean = ..., androidx.compose.foundation.interaction/MutableInteractionSource? = ..., kotlin/Function0<kotlin/Unit>): androidx.compose.ui/Modifier // androidx.compose.foundation/combinedClickable|combinedClickable@androidx.compose.ui.Modifier(kotlin.Boolean;kotlin.String?;androidx.compose.ui.semantics.Role?;kotlin.String?;kotlin.Function0<kotlin.Unit>?;kotlin.Function0<kotlin.Unit>?;kotlin.Boolean;androidx.compose.foundation.interaction.MutableInteractionSource?;kotlin.Function0<kotlin.Unit>){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation/combinedClickable(kotlin/Boolean = ..., kotlin/String? = ..., androidx.compose.ui.semantics/Role? = ..., kotlin/String? = ..., kotlin/Function0<kotlin/Unit>? = ..., kotlin/Function0<kotlin/Unit>? = ..., kotlin/Boolean = ..., kotlin/Function0<kotlin/Unit>): androidx.compose.ui/Modifier // androidx.compose.foundation/combinedClickable|combinedClickable@androidx.compose.ui.Modifier(kotlin.Boolean;kotlin.String?;androidx.compose.ui.semantics.Role?;kotlin.String?;kotlin.Function0<kotlin.Unit>?;kotlin.Function0<kotlin.Unit>?;kotlin.Boolean;kotlin.Function0<kotlin.Unit>){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation/combinedClickable(kotlin/Boolean = ..., kotlin/String? = ..., androidx.compose.ui.semantics/Role? = ..., kotlin/String? = ..., kotlin/Function0<kotlin/Unit>? = ..., kotlin/Function0<kotlin/Unit>? = ..., kotlin/Function0<kotlin/Unit>): androidx.compose.ui/Modifier // androidx.compose.foundation/combinedClickable|combinedClickable@androidx.compose.ui.Modifier(kotlin.Boolean;kotlin.String?;androidx.compose.ui.semantics.Role?;kotlin.String?;kotlin.Function0<kotlin.Unit>?;kotlin.Function0<kotlin.Unit>?;kotlin.Function0<kotlin.Unit>){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation/focusGroup(): androidx.compose.ui/Modifier // androidx.compose.foundation/focusGroup|focusGroup@androidx.compose.ui.Modifier(){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation/focusable(kotlin/Boolean = ..., androidx.compose.foundation.interaction/MutableInteractionSource? = ...): androidx.compose.ui/Modifier // androidx.compose.foundation/focusable|focusable@androidx.compose.ui.Modifier(kotlin.Boolean;androidx.compose.foundation.interaction.MutableInteractionSource?){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation/horizontalScroll(androidx.compose.foundation/ScrollState, androidx.compose.foundation/OverscrollEffect?, kotlin/Boolean = ..., androidx.compose.foundation.gestures/FlingBehavior? = ..., kotlin/Boolean = ...): androidx.compose.ui/Modifier // androidx.compose.foundation/horizontalScroll|horizontalScroll@androidx.compose.ui.Modifier(androidx.compose.foundation.ScrollState;androidx.compose.foundation.OverscrollEffect?;kotlin.Boolean;androidx.compose.foundation.gestures.FlingBehavior?;kotlin.Boolean){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation/horizontalScroll(androidx.compose.foundation/ScrollState, kotlin/Boolean = ..., androidx.compose.foundation.gestures/FlingBehavior? = ..., kotlin/Boolean = ...): androidx.compose.ui/Modifier // androidx.compose.foundation/horizontalScroll|horizontalScroll@androidx.compose.ui.Modifier(androidx.compose.foundation.ScrollState;kotlin.Boolean;androidx.compose.foundation.gestures.FlingBehavior?;kotlin.Boolean){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation/hoverable(androidx.compose.foundation.interaction/MutableInteractionSource, kotlin/Boolean = ...): androidx.compose.ui/Modifier // androidx.compose.foundation/hoverable|hoverable@androidx.compose.ui.Modifier(androidx.compose.foundation.interaction.MutableInteractionSource;kotlin.Boolean){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation/indication(androidx.compose.foundation.interaction/InteractionSource, androidx.compose.foundation/Indication?): androidx.compose.ui/Modifier // androidx.compose.foundation/indication|indication@androidx.compose.ui.Modifier(androidx.compose.foundation.interaction.InteractionSource;androidx.compose.foundation.Indication?){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation/onFocusedBoundsChanged(kotlin/Function1<androidx.compose.ui.layout/LayoutCoordinates?, kotlin/Unit>): androidx.compose.ui/Modifier // androidx.compose.foundation/onFocusedBoundsChanged|onFocusedBoundsChanged@androidx.compose.ui.Modifier(kotlin.Function1<androidx.compose.ui.layout.LayoutCoordinates?,kotlin.Unit>){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation/overscroll(androidx.compose.foundation/OverscrollEffect?): androidx.compose.ui/Modifier // androidx.compose.foundation/overscroll|overscroll@androidx.compose.ui.Modifier(androidx.compose.foundation.OverscrollEffect?){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation/progressSemantics(): androidx.compose.ui/Modifier // androidx.compose.foundation/progressSemantics|progressSemantics@androidx.compose.ui.Modifier(){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation/progressSemantics(kotlin/Float, kotlin.ranges/ClosedFloatingPointRange<kotlin/Float> = ..., kotlin/Int = ...): androidx.compose.ui/Modifier // androidx.compose.foundation/progressSemantics|progressSemantics@androidx.compose.ui.Modifier(kotlin.Float;kotlin.ranges.ClosedFloatingPointRange<kotlin.Float>;kotlin.Int){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation/verticalScroll(androidx.compose.foundation/ScrollState, androidx.compose.foundation/OverscrollEffect?, kotlin/Boolean = ..., androidx.compose.foundation.gestures/FlingBehavior? = ..., kotlin/Boolean = ...): androidx.compose.ui/Modifier // androidx.compose.foundation/verticalScroll|verticalScroll@androidx.compose.ui.Modifier(androidx.compose.foundation.ScrollState;androidx.compose.foundation.OverscrollEffect?;kotlin.Boolean;androidx.compose.foundation.gestures.FlingBehavior?;kotlin.Boolean){}[0]
final fun (androidx.compose.ui/Modifier).androidx.compose.foundation/verticalScroll(androidx.compose.foundation/ScrollState, kotlin/Boolean = ..., androidx.compose.foundation.gestures/FlingBehavior? = ..., kotlin/Boolean = ...): androidx.compose.ui/Modifier // androidx.compose.foundation/verticalScroll|verticalScroll@androidx.compose.ui.Modifier(androidx.compose.foundation.ScrollState;kotlin.Boolean;androidx.compose.foundation.gestures.FlingBehavior?;kotlin.Boolean){}[0]
final fun <#A: kotlin/Any> androidx.compose.foundation.gestures/DraggableAnchors(kotlin/Function1<androidx.compose.foundation.gestures/DraggableAnchorsConfig<#A>, kotlin/Unit>): androidx.compose.foundation.gestures/DraggableAnchors<#A> // androidx.compose.foundation.gestures/DraggableAnchors|DraggableAnchors(kotlin.Function1<androidx.compose.foundation.gestures.DraggableAnchorsConfig<0:0>,kotlin.Unit>){0§<kotlin.Any>}[0]
final fun <#A: kotlin/Any?> (androidx.compose.ui/Modifier).androidx.compose.foundation.gestures/anchoredDraggable(androidx.compose.foundation.gestures/AnchoredDraggableState<#A>, androidx.compose.foundation.gestures/Orientation, kotlin/Boolean = ..., androidx.compose.foundation.interaction/MutableInteractionSource? = ..., androidx.compose.foundation/OverscrollEffect? = ..., androidx.compose.foundation.gestures/FlingBehavior? = ...): androidx.compose.ui/Modifier // androidx.compose.foundation.gestures/anchoredDraggable|anchoredDraggable@androidx.compose.ui.Modifier(androidx.compose.foundation.gestures.AnchoredDraggableState<0:0>;androidx.compose.foundation.gestures.Orientation;kotlin.Boolean;androidx.compose.foundation.interaction.MutableInteractionSource?;androidx.compose.foundation.OverscrollEffect?;androidx.compose.foundation.gestures.FlingBehavior?){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> (androidx.compose.ui/Modifier).androidx.compose.foundation.gestures/anchoredDraggable(androidx.compose.foundation.gestures/AnchoredDraggableState<#A>, androidx.compose.foundation.gestures/Orientation, kotlin/Boolean = ..., androidx.compose.foundation.interaction/MutableInteractionSource? = ..., androidx.compose.foundation/OverscrollEffect? = ..., kotlin/Boolean = ..., androidx.compose.foundation.gestures/FlingBehavior? = ...): androidx.compose.ui/Modifier // androidx.compose.foundation.gestures/anchoredDraggable|anchoredDraggable@androidx.compose.ui.Modifier(androidx.compose.foundation.gestures.AnchoredDraggableState<0:0>;androidx.compose.foundation.gestures.Orientation;kotlin.Boolean;androidx.compose.foundation.interaction.MutableInteractionSource?;androidx.compose.foundation.OverscrollEffect?;kotlin.Boolean;androidx.compose.foundation.gestures.FlingBehavior?){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> (androidx.compose.ui/Modifier).androidx.compose.foundation.gestures/anchoredDraggable(androidx.compose.foundation.gestures/AnchoredDraggableState<#A>, kotlin/Boolean, androidx.compose.foundation.gestures/Orientation, kotlin/Boolean = ..., androidx.compose.foundation.interaction/MutableInteractionSource? = ..., androidx.compose.foundation/OverscrollEffect? = ..., androidx.compose.foundation.gestures/FlingBehavior? = ...): androidx.compose.ui/Modifier // androidx.compose.foundation.gestures/anchoredDraggable|anchoredDraggable@androidx.compose.ui.Modifier(androidx.compose.foundation.gestures.AnchoredDraggableState<0:0>;kotlin.Boolean;androidx.compose.foundation.gestures.Orientation;kotlin.Boolean;androidx.compose.foundation.interaction.MutableInteractionSource?;androidx.compose.foundation.OverscrollEffect?;androidx.compose.foundation.gestures.FlingBehavior?){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> (androidx.compose.ui/Modifier).androidx.compose.foundation.gestures/anchoredDraggable(androidx.compose.foundation.gestures/AnchoredDraggableState<#A>, kotlin/Boolean, androidx.compose.foundation.gestures/Orientation, kotlin/Boolean = ..., androidx.compose.foundation.interaction/MutableInteractionSource? = ..., androidx.compose.foundation/OverscrollEffect? = ..., kotlin/Boolean = ..., androidx.compose.foundation.gestures/FlingBehavior? = ...): androidx.compose.ui/Modifier // androidx.compose.foundation.gestures/anchoredDraggable|anchoredDraggable@androidx.compose.ui.Modifier(androidx.compose.foundation.gestures.AnchoredDraggableState<0:0>;kotlin.Boolean;androidx.compose.foundation.gestures.Orientation;kotlin.Boolean;androidx.compose.foundation.interaction.MutableInteractionSource?;androidx.compose.foundation.OverscrollEffect?;kotlin.Boolean;androidx.compose.foundation.gestures.FlingBehavior?){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.compose.foundation.gestures/AnchoredDraggableState(#A, androidx.compose.foundation.gestures/DraggableAnchors<#A>, kotlin/Function1<kotlin/Float, kotlin/Float>, kotlin/Function0<kotlin/Float>, androidx.compose.animation.core/AnimationSpec<kotlin/Float>, androidx.compose.animation.core/DecayAnimationSpec<kotlin/Float>, kotlin/Function1<#A, kotlin/Boolean> = ...): androidx.compose.foundation.gestures/AnchoredDraggableState<#A> // androidx.compose.foundation.gestures/AnchoredDraggableState|AnchoredDraggableState(0:0;androidx.compose.foundation.gestures.DraggableAnchors<0:0>;kotlin.Function1<kotlin.Float,kotlin.Float>;kotlin.Function0<kotlin.Float>;androidx.compose.animation.core.AnimationSpec<kotlin.Float>;androidx.compose.animation.core.DecayAnimationSpec<kotlin.Float>;kotlin.Function1<0:0,kotlin.Boolean>){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> androidx.compose.foundation.gestures/AnchoredDraggableState(#A, kotlin/Function1<kotlin/Float, kotlin/Float>, kotlin/Function0<kotlin/Float>, androidx.compose.animation.core/AnimationSpec<kotlin/Float>, androidx.compose.animation.core/DecayAnimationSpec<kotlin/Float>, kotlin/Function1<#A, kotlin/Boolean> = ...): androidx.compose.foundation.gestures/AnchoredDraggableState<#A> // androidx.compose.foundation.gestures/AnchoredDraggableState|AnchoredDraggableState(0:0;kotlin.Function1<kotlin.Float,kotlin.Float>;kotlin.Function0<kotlin.Float>;androidx.compose.animation.core.AnimationSpec<kotlin.Float>;androidx.compose.animation.core.DecayAnimationSpec<kotlin.Float>;kotlin.Function1<0:0,kotlin.Boolean>){0§<kotlin.Any?>}[0]
final fun androidx.compose.foundation.content.internal/androidx_compose_foundation_content_internal_DynamicReceiveContentConfiguration$stableprop_getter(): kotlin/Int // androidx.compose.foundation.content.internal/androidx_compose_foundation_content_internal_DynamicReceiveContentConfiguration$stableprop_getter|androidx_compose_foundation_content_internal_DynamicReceiveContentConfiguration$stableprop_getter(){}[0]
final fun androidx.compose.foundation.content.internal/androidx_compose_foundation_content_internal_ReceiveContentConfiguration$stableprop_getter(): kotlin/Int // androidx.compose.foundation.content.internal/androidx_compose_foundation_content_internal_ReceiveContentConfiguration$stableprop_getter|androidx_compose_foundation_content_internal_ReceiveContentConfiguration$stableprop_getter(){}[0]
final fun androidx.compose.foundation.content/androidx_compose_foundation_content_MediaType$stableprop_getter(): kotlin/Int // androidx.compose.foundation.content/androidx_compose_foundation_content_MediaType$stableprop_getter|androidx_compose_foundation_content_MediaType$stableprop_getter(){}[0]
final fun androidx.compose.foundation.content/androidx_compose_foundation_content_PlatformTransferableContent$stableprop_getter(): kotlin/Int // androidx.compose.foundation.content/androidx_compose_foundation_content_PlatformTransferableContent$stableprop_getter|androidx_compose_foundation_content_PlatformTransferableContent$stableprop_getter(){}[0]
final fun androidx.compose.foundation.content/androidx_compose_foundation_content_ReceiveContentElement$stableprop_getter(): kotlin/Int // androidx.compose.foundation.content/androidx_compose_foundation_content_ReceiveContentElement$stableprop_getter|androidx_compose_foundation_content_ReceiveContentElement$stableprop_getter(){}[0]
final fun androidx.compose.foundation.content/androidx_compose_foundation_content_ReceiveContentNode$stableprop_getter(): kotlin/Int // androidx.compose.foundation.content/androidx_compose_foundation_content_ReceiveContentNode$stableprop_getter|androidx_compose_foundation_content_ReceiveContentNode$stableprop_getter(){}[0]
final fun androidx.compose.foundation.content/androidx_compose_foundation_content_TransferableContent$stableprop_getter(): kotlin/Int // androidx.compose.foundation.content/androidx_compose_foundation_content_TransferableContent$stableprop_getter|androidx_compose_foundation_content_TransferableContent$stableprop_getter(){}[0]
final fun androidx.compose.foundation.contextmenu/androidx_compose_foundation_contextmenu_ContextMenuPopupPositionProvider$stableprop_getter(): kotlin/Int // androidx.compose.foundation.contextmenu/androidx_compose_foundation_contextmenu_ContextMenuPopupPositionProvider$stableprop_getter|androidx_compose_foundation_contextmenu_ContextMenuPopupPositionProvider$stableprop_getter(){}[0]
final fun androidx.compose.foundation.draganddrop/androidx_compose_foundation_draganddrop_CacheDrawScopeDragShadowCallback$stableprop_getter(): kotlin/Int // androidx.compose.foundation.draganddrop/androidx_compose_foundation_draganddrop_CacheDrawScopeDragShadowCallback$stableprop_getter|androidx_compose_foundation_draganddrop_CacheDrawScopeDragShadowCallback$stableprop_getter(){}[0]
final fun androidx.compose.foundation.draganddrop/androidx_compose_foundation_draganddrop_DragAndDropSourceDefaults$stableprop_getter(): kotlin/Int // androidx.compose.foundation.draganddrop/androidx_compose_foundation_draganddrop_DragAndDropSourceDefaults$stableprop_getter|androidx_compose_foundation_draganddrop_DragAndDropSourceDefaults$stableprop_getter(){}[0]
final fun androidx.compose.foundation.draganddrop/androidx_compose_foundation_draganddrop_DragAndDropSourceNode$stableprop_getter(): kotlin/Int // androidx.compose.foundation.draganddrop/androidx_compose_foundation_draganddrop_DragAndDropSourceNode$stableprop_getter|androidx_compose_foundation_draganddrop_DragAndDropSourceNode$stableprop_getter(){}[0]
final fun androidx.compose.foundation.gestures.snapping/SnapLayoutInfoProvider(androidx.compose.foundation.lazy.grid/LazyGridState, androidx.compose.foundation.gestures.snapping/SnapPosition = ...): androidx.compose.foundation.gestures.snapping/SnapLayoutInfoProvider // androidx.compose.foundation.gestures.snapping/SnapLayoutInfoProvider|SnapLayoutInfoProvider(androidx.compose.foundation.lazy.grid.LazyGridState;androidx.compose.foundation.gestures.snapping.SnapPosition){}[0]
final fun androidx.compose.foundation.gestures.snapping/SnapLayoutInfoProvider(androidx.compose.foundation.lazy/LazyListState, androidx.compose.foundation.gestures.snapping/SnapPosition = ...): androidx.compose.foundation.gestures.snapping/SnapLayoutInfoProvider // androidx.compose.foundation.gestures.snapping/SnapLayoutInfoProvider|SnapLayoutInfoProvider(androidx.compose.foundation.lazy.LazyListState;androidx.compose.foundation.gestures.snapping.SnapPosition){}[0]
final fun androidx.compose.foundation.gestures.snapping/androidx_compose_foundation_gestures_snapping_SnapFlingBehavior$stableprop_getter(): kotlin/Int // androidx.compose.foundation.gestures.snapping/androidx_compose_foundation_gestures_snapping_SnapFlingBehavior$stableprop_getter|androidx_compose_foundation_gestures_snapping_SnapFlingBehavior$stableprop_getter(){}[0]
final fun androidx.compose.foundation.gestures.snapping/androidx_compose_foundation_gestures_snapping_SnapPosition_Center$stableprop_getter(): kotlin/Int // androidx.compose.foundation.gestures.snapping/androidx_compose_foundation_gestures_snapping_SnapPosition_Center$stableprop_getter|androidx_compose_foundation_gestures_snapping_SnapPosition_Center$stableprop_getter(){}[0]
final fun androidx.compose.foundation.gestures.snapping/androidx_compose_foundation_gestures_snapping_SnapPosition_End$stableprop_getter(): kotlin/Int // androidx.compose.foundation.gestures.snapping/androidx_compose_foundation_gestures_snapping_SnapPosition_End$stableprop_getter|androidx_compose_foundation_gestures_snapping_SnapPosition_End$stableprop_getter(){}[0]
final fun androidx.compose.foundation.gestures.snapping/androidx_compose_foundation_gestures_snapping_SnapPosition_Start$stableprop_getter(): kotlin/Int // androidx.compose.foundation.gestures.snapping/androidx_compose_foundation_gestures_snapping_SnapPosition_Start$stableprop_getter|androidx_compose_foundation_gestures_snapping_SnapPosition_Start$stableprop_getter(){}[0]
final fun androidx.compose.foundation.gestures.snapping/rememberSnapFlingBehavior(androidx.compose.foundation.gestures.snapping/SnapLayoutInfoProvider, androidx.compose.runtime/Composer?, kotlin/Int): androidx.compose.foundation.gestures/TargetedFlingBehavior // androidx.compose.foundation.gestures.snapping/rememberSnapFlingBehavior|rememberSnapFlingBehavior(androidx.compose.foundation.gestures.snapping.SnapLayoutInfoProvider;androidx.compose.runtime.Composer?;kotlin.Int){}[0]
final fun androidx.compose.foundation.gestures.snapping/rememberSnapFlingBehavior(androidx.compose.foundation.lazy.grid/LazyGridState, androidx.compose.foundation.gestures.snapping/SnapPosition?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int): androidx.compose.foundation.gestures/FlingBehavior // androidx.compose.foundation.gestures.snapping/rememberSnapFlingBehavior|rememberSnapFlingBehavior(androidx.compose.foundation.lazy.grid.LazyGridState;androidx.compose.foundation.gestures.snapping.SnapPosition?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.gestures.snapping/rememberSnapFlingBehavior(androidx.compose.foundation.lazy/LazyListState, androidx.compose.foundation.gestures.snapping/SnapPosition?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int): androidx.compose.foundation.gestures/FlingBehavior // androidx.compose.foundation.gestures.snapping/rememberSnapFlingBehavior|rememberSnapFlingBehavior(androidx.compose.foundation.lazy.LazyListState;androidx.compose.foundation.gestures.snapping.SnapPosition?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.gestures.snapping/snapFlingBehavior(androidx.compose.foundation.gestures.snapping/SnapLayoutInfoProvider, androidx.compose.animation.core/DecayAnimationSpec<kotlin/Float>, androidx.compose.animation.core/AnimationSpec<kotlin/Float>): androidx.compose.foundation.gestures/TargetedFlingBehavior // androidx.compose.foundation.gestures.snapping/snapFlingBehavior|snapFlingBehavior(androidx.compose.foundation.gestures.snapping.SnapLayoutInfoProvider;androidx.compose.animation.core.DecayAnimationSpec<kotlin.Float>;androidx.compose.animation.core.AnimationSpec<kotlin.Float>){}[0]
final fun androidx.compose.foundation.gestures/Draggable2DState(kotlin/Function1<androidx.compose.ui.geometry/Offset, kotlin/Unit>): androidx.compose.foundation.gestures/Draggable2DState // androidx.compose.foundation.gestures/Draggable2DState|Draggable2DState(kotlin.Function1<androidx.compose.ui.geometry.Offset,kotlin.Unit>){}[0]
final fun androidx.compose.foundation.gestures/DraggableState(kotlin/Function1<kotlin/Float, kotlin/Unit>): androidx.compose.foundation.gestures/DraggableState // androidx.compose.foundation.gestures/DraggableState|DraggableState(kotlin.Function1<kotlin.Float,kotlin.Unit>){}[0]
final fun androidx.compose.foundation.gestures/Scrollable2DState(kotlin/Function1<androidx.compose.ui.geometry/Offset, androidx.compose.ui.geometry/Offset>): androidx.compose.foundation.gestures/Scrollable2DState // androidx.compose.foundation.gestures/Scrollable2DState|Scrollable2DState(kotlin.Function1<androidx.compose.ui.geometry.Offset,androidx.compose.ui.geometry.Offset>){}[0]
final fun androidx.compose.foundation.gestures/ScrollableState(kotlin/Function1<kotlin/Float, kotlin/Float>): androidx.compose.foundation.gestures/ScrollableState // androidx.compose.foundation.gestures/ScrollableState|ScrollableState(kotlin.Function1<kotlin.Float,kotlin.Float>){}[0]
final fun androidx.compose.foundation.gestures/TransformableState(kotlin/Function3<kotlin/Float, androidx.compose.ui.geometry/Offset, kotlin/Float, kotlin/Unit>): androidx.compose.foundation.gestures/TransformableState // androidx.compose.foundation.gestures/TransformableState|TransformableState(kotlin.Function3<kotlin.Float,androidx.compose.ui.geometry.Offset,kotlin.Float,kotlin.Unit>){}[0]
final fun androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_AnchoredDragFinishedSignal$stableprop_getter(): kotlin/Int // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_AnchoredDragFinishedSignal$stableprop_getter|androidx_compose_foundation_gestures_AnchoredDragFinishedSignal$stableprop_getter(){}[0]
final fun androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_AnchoredDraggableDefaults$stableprop_getter(): kotlin/Int // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_AnchoredDraggableDefaults$stableprop_getter|androidx_compose_foundation_gestures_AnchoredDraggableDefaults$stableprop_getter(){}[0]
final fun androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_AnchoredDraggableState$stableprop_getter(): kotlin/Int // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_AnchoredDraggableState$stableprop_getter|androidx_compose_foundation_gestures_AnchoredDraggableState$stableprop_getter(){}[0]
final fun androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_BringIntoViewRequestPriorityQueue$stableprop_getter(): kotlin/Int // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_BringIntoViewRequestPriorityQueue$stableprop_getter|androidx_compose_foundation_gestures_BringIntoViewRequestPriorityQueue$stableprop_getter(){}[0]
final fun androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_ContentInViewNode$stableprop_getter(): kotlin/Int // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_ContentInViewNode$stableprop_getter|androidx_compose_foundation_gestures_ContentInViewNode$stableprop_getter(){}[0]
final fun androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_ContentInViewNode_Request$stableprop_getter(): kotlin/Int // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_ContentInViewNode_Request$stableprop_getter|androidx_compose_foundation_gestures_ContentInViewNode_Request$stableprop_getter(){}[0]
final fun androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_DefaultFlingBehavior$stableprop_getter(): kotlin/Int // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_DefaultFlingBehavior$stableprop_getter|androidx_compose_foundation_gestures_DefaultFlingBehavior$stableprop_getter(){}[0]
final fun androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_DragEvent$stableprop_getter(): kotlin/Int // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_DragEvent$stableprop_getter|androidx_compose_foundation_gestures_DragEvent$stableprop_getter(){}[0]
final fun androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_DragEvent_DragCancelled$stableprop_getter(): kotlin/Int // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_DragEvent_DragCancelled$stableprop_getter|androidx_compose_foundation_gestures_DragEvent_DragCancelled$stableprop_getter(){}[0]
final fun androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_DragEvent_DragDelta$stableprop_getter(): kotlin/Int // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_DragEvent_DragDelta$stableprop_getter|androidx_compose_foundation_gestures_DragEvent_DragDelta$stableprop_getter(){}[0]
final fun androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_DragEvent_DragStarted$stableprop_getter(): kotlin/Int // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_DragEvent_DragStarted$stableprop_getter|androidx_compose_foundation_gestures_DragEvent_DragStarted$stableprop_getter(){}[0]
final fun androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_DragEvent_DragStopped$stableprop_getter(): kotlin/Int // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_DragEvent_DragStopped$stableprop_getter|androidx_compose_foundation_gestures_DragEvent_DragStopped$stableprop_getter(){}[0]
final fun androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_DragGestureNode$stableprop_getter(): kotlin/Int // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_DragGestureNode$stableprop_getter|androidx_compose_foundation_gestures_DragGestureNode$stableprop_getter(){}[0]
final fun androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_Draggable2DElement$stableprop_getter(): kotlin/Int // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_Draggable2DElement$stableprop_getter|androidx_compose_foundation_gestures_Draggable2DElement$stableprop_getter(){}[0]
final fun androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_Draggable2DNode$stableprop_getter(): kotlin/Int // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_Draggable2DNode$stableprop_getter|androidx_compose_foundation_gestures_Draggable2DNode$stableprop_getter(){}[0]
final fun androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_DraggableAnchorsConfig$stableprop_getter(): kotlin/Int // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_DraggableAnchorsConfig$stableprop_getter|androidx_compose_foundation_gestures_DraggableAnchorsConfig$stableprop_getter(){}[0]
final fun androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_DraggableElement$stableprop_getter(): kotlin/Int // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_DraggableElement$stableprop_getter|androidx_compose_foundation_gestures_DraggableElement$stableprop_getter(){}[0]
final fun androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_DraggableNode$stableprop_getter(): kotlin/Int // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_DraggableNode$stableprop_getter|androidx_compose_foundation_gestures_DraggableNode$stableprop_getter(){}[0]
final fun androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_FlingCancellationException$stableprop_getter(): kotlin/Int // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_FlingCancellationException$stableprop_getter|androidx_compose_foundation_gestures_FlingCancellationException$stableprop_getter(){}[0]
final fun androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_GestureCancellationException$stableprop_getter(): kotlin/Int // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_GestureCancellationException$stableprop_getter|androidx_compose_foundation_gestures_GestureCancellationException$stableprop_getter(){}[0]
final fun androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_LongPressResult$stableprop_getter(): kotlin/Int // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_LongPressResult$stableprop_getter|androidx_compose_foundation_gestures_LongPressResult$stableprop_getter(){}[0]
final fun androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_LongPressResult_Canceled$stableprop_getter(): kotlin/Int // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_LongPressResult_Canceled$stableprop_getter|androidx_compose_foundation_gestures_LongPressResult_Canceled$stableprop_getter(){}[0]
final fun androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_LongPressResult_Released$stableprop_getter(): kotlin/Int // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_LongPressResult_Released$stableprop_getter|androidx_compose_foundation_gestures_LongPressResult_Released$stableprop_getter(){}[0]
final fun androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_LongPressResult_Success$stableprop_getter(): kotlin/Int // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_LongPressResult_Success$stableprop_getter|androidx_compose_foundation_gestures_LongPressResult_Success$stableprop_getter(){}[0]
final fun androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_MouseWheelScrollingLogic$stableprop_getter(): kotlin/Int // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_MouseWheelScrollingLogic$stableprop_getter|androidx_compose_foundation_gestures_MouseWheelScrollingLogic$stableprop_getter(){}[0]
final fun androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_PressGestureScopeImpl$stableprop_getter(): kotlin/Int // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_PressGestureScopeImpl$stableprop_getter|androidx_compose_foundation_gestures_PressGestureScopeImpl$stableprop_getter(){}[0]
final fun androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_Scrollable2DNode$stableprop_getter(): kotlin/Int // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_Scrollable2DNode$stableprop_getter|androidx_compose_foundation_gestures_Scrollable2DNode$stableprop_getter(){}[0]
final fun androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_ScrollableContainerNode$stableprop_getter(): kotlin/Int // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_ScrollableContainerNode$stableprop_getter|androidx_compose_foundation_gestures_ScrollableContainerNode$stableprop_getter(){}[0]
final fun androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_ScrollableDefaults$stableprop_getter(): kotlin/Int // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_ScrollableDefaults$stableprop_getter|androidx_compose_foundation_gestures_ScrollableDefaults$stableprop_getter(){}[0]
final fun androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_ScrollableNestedScrollConnection$stableprop_getter(): kotlin/Int // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_ScrollableNestedScrollConnection$stableprop_getter|androidx_compose_foundation_gestures_ScrollableNestedScrollConnection$stableprop_getter(){}[0]
final fun androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_ScrollableNode$stableprop_getter(): kotlin/Int // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_ScrollableNode$stableprop_getter|androidx_compose_foundation_gestures_ScrollableNode$stableprop_getter(){}[0]
final fun androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_ScrollingLogic$stableprop_getter(): kotlin/Int // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_ScrollingLogic$stableprop_getter|androidx_compose_foundation_gestures_ScrollingLogic$stableprop_getter(){}[0]
final fun androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_TouchSlopDetector$stableprop_getter(): kotlin/Int // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_TouchSlopDetector$stableprop_getter|androidx_compose_foundation_gestures_TouchSlopDetector$stableprop_getter(){}[0]
final fun androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_TransformEvent_TransformDelta$stableprop_getter(): kotlin/Int // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_TransformEvent_TransformDelta$stableprop_getter|androidx_compose_foundation_gestures_TransformEvent_TransformDelta$stableprop_getter(){}[0]
final fun androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_TransformEvent_TransformStarted$stableprop_getter(): kotlin/Int // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_TransformEvent_TransformStarted$stableprop_getter|androidx_compose_foundation_gestures_TransformEvent_TransformStarted$stableprop_getter(){}[0]
final fun androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_TransformEvent_TransformStopped$stableprop_getter(): kotlin/Int // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_TransformEvent_TransformStopped$stableprop_getter|androidx_compose_foundation_gestures_TransformEvent_TransformStopped$stableprop_getter(){}[0]
final fun androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_UpdatableAnimationState$stableprop_getter(): kotlin/Int // androidx.compose.foundation.gestures/androidx_compose_foundation_gestures_UpdatableAnimationState$stableprop_getter|androidx_compose_foundation_gestures_UpdatableAnimationState$stableprop_getter(){}[0]
final fun androidx.compose.foundation.gestures/rememberDraggable2DState(kotlin/Function1<androidx.compose.ui.geometry/Offset, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int): androidx.compose.foundation.gestures/Draggable2DState // androidx.compose.foundation.gestures/rememberDraggable2DState|rememberDraggable2DState(kotlin.Function1<androidx.compose.ui.geometry.Offset,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int){}[0]
final fun androidx.compose.foundation.gestures/rememberDraggableState(kotlin/Function1<kotlin/Float, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int): androidx.compose.foundation.gestures/DraggableState // androidx.compose.foundation.gestures/rememberDraggableState|rememberDraggableState(kotlin.Function1<kotlin.Float,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int){}[0]
final fun androidx.compose.foundation.gestures/rememberScrollable2DState(kotlin/Function1<androidx.compose.ui.geometry/Offset, androidx.compose.ui.geometry/Offset>, androidx.compose.runtime/Composer?, kotlin/Int): androidx.compose.foundation.gestures/Scrollable2DState // androidx.compose.foundation.gestures/rememberScrollable2DState|rememberScrollable2DState(kotlin.Function1<androidx.compose.ui.geometry.Offset,androidx.compose.ui.geometry.Offset>;androidx.compose.runtime.Composer?;kotlin.Int){}[0]
final fun androidx.compose.foundation.gestures/rememberScrollableState(kotlin/Function1<kotlin/Float, kotlin/Float>, androidx.compose.runtime/Composer?, kotlin/Int): androidx.compose.foundation.gestures/ScrollableState // androidx.compose.foundation.gestures/rememberScrollableState|rememberScrollableState(kotlin.Function1<kotlin.Float,kotlin.Float>;androidx.compose.runtime.Composer?;kotlin.Int){}[0]
final fun androidx.compose.foundation.gestures/rememberTransformableState(kotlin/Function3<kotlin/Float, androidx.compose.ui.geometry/Offset, kotlin/Float, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int): androidx.compose.foundation.gestures/TransformableState // androidx.compose.foundation.gestures/rememberTransformableState|rememberTransformableState(kotlin.Function3<kotlin.Float,androidx.compose.ui.geometry.Offset,kotlin.Float,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int){}[0]
final fun androidx.compose.foundation.interaction/MutableInteractionSource(): androidx.compose.foundation.interaction/MutableInteractionSource // androidx.compose.foundation.interaction/MutableInteractionSource|MutableInteractionSource(){}[0]
final fun androidx.compose.foundation.interaction/androidx_compose_foundation_interaction_DragInteraction_Cancel$stableprop_getter(): kotlin/Int // androidx.compose.foundation.interaction/androidx_compose_foundation_interaction_DragInteraction_Cancel$stableprop_getter|androidx_compose_foundation_interaction_DragInteraction_Cancel$stableprop_getter(){}[0]
final fun androidx.compose.foundation.interaction/androidx_compose_foundation_interaction_DragInteraction_Start$stableprop_getter(): kotlin/Int // androidx.compose.foundation.interaction/androidx_compose_foundation_interaction_DragInteraction_Start$stableprop_getter|androidx_compose_foundation_interaction_DragInteraction_Start$stableprop_getter(){}[0]
final fun androidx.compose.foundation.interaction/androidx_compose_foundation_interaction_DragInteraction_Stop$stableprop_getter(): kotlin/Int // androidx.compose.foundation.interaction/androidx_compose_foundation_interaction_DragInteraction_Stop$stableprop_getter|androidx_compose_foundation_interaction_DragInteraction_Stop$stableprop_getter(){}[0]
final fun androidx.compose.foundation.interaction/androidx_compose_foundation_interaction_FocusInteraction_Focus$stableprop_getter(): kotlin/Int // androidx.compose.foundation.interaction/androidx_compose_foundation_interaction_FocusInteraction_Focus$stableprop_getter|androidx_compose_foundation_interaction_FocusInteraction_Focus$stableprop_getter(){}[0]
final fun androidx.compose.foundation.interaction/androidx_compose_foundation_interaction_FocusInteraction_Unfocus$stableprop_getter(): kotlin/Int // androidx.compose.foundation.interaction/androidx_compose_foundation_interaction_FocusInteraction_Unfocus$stableprop_getter|androidx_compose_foundation_interaction_FocusInteraction_Unfocus$stableprop_getter(){}[0]
final fun androidx.compose.foundation.interaction/androidx_compose_foundation_interaction_HoverInteraction_Enter$stableprop_getter(): kotlin/Int // androidx.compose.foundation.interaction/androidx_compose_foundation_interaction_HoverInteraction_Enter$stableprop_getter|androidx_compose_foundation_interaction_HoverInteraction_Enter$stableprop_getter(){}[0]
final fun androidx.compose.foundation.interaction/androidx_compose_foundation_interaction_HoverInteraction_Exit$stableprop_getter(): kotlin/Int // androidx.compose.foundation.interaction/androidx_compose_foundation_interaction_HoverInteraction_Exit$stableprop_getter|androidx_compose_foundation_interaction_HoverInteraction_Exit$stableprop_getter(){}[0]
final fun androidx.compose.foundation.interaction/androidx_compose_foundation_interaction_PressInteraction_Cancel$stableprop_getter(): kotlin/Int // androidx.compose.foundation.interaction/androidx_compose_foundation_interaction_PressInteraction_Cancel$stableprop_getter|androidx_compose_foundation_interaction_PressInteraction_Cancel$stableprop_getter(){}[0]
final fun androidx.compose.foundation.interaction/androidx_compose_foundation_interaction_PressInteraction_Press$stableprop_getter(): kotlin/Int // androidx.compose.foundation.interaction/androidx_compose_foundation_interaction_PressInteraction_Press$stableprop_getter|androidx_compose_foundation_interaction_PressInteraction_Press$stableprop_getter(){}[0]
final fun androidx.compose.foundation.interaction/androidx_compose_foundation_interaction_PressInteraction_Release$stableprop_getter(): kotlin/Int // androidx.compose.foundation.interaction/androidx_compose_foundation_interaction_PressInteraction_Release$stableprop_getter|androidx_compose_foundation_interaction_PressInteraction_Release$stableprop_getter(){}[0]
final fun androidx.compose.foundation.internal/androidx_compose_foundation_internal_PlatformOptimizedCancellationException$stableprop_getter(): kotlin/Int // androidx.compose.foundation.internal/androidx_compose_foundation_internal_PlatformOptimizedCancellationException$stableprop_getter|androidx_compose_foundation_internal_PlatformOptimizedCancellationException$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.grid/GridItemSpan(kotlin/Int): androidx.compose.foundation.lazy.grid/GridItemSpan // androidx.compose.foundation.lazy.grid/GridItemSpan|GridItemSpan(kotlin.Int){}[0]
final fun androidx.compose.foundation.lazy.grid/LazyHorizontalGrid(androidx.compose.foundation.lazy.grid/GridCells, androidx.compose.ui/Modifier?, androidx.compose.foundation.lazy.grid/LazyGridState?, androidx.compose.foundation.layout/PaddingValues?, kotlin/Boolean, androidx.compose.foundation.layout/Arrangement.Horizontal?, androidx.compose.foundation.layout/Arrangement.Vertical?, androidx.compose.foundation.gestures/FlingBehavior?, kotlin/Boolean, androidx.compose.foundation/OverscrollEffect?, kotlin/Function1<androidx.compose.foundation.lazy.grid/LazyGridScope, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int, kotlin/Int) // androidx.compose.foundation.lazy.grid/LazyHorizontalGrid|LazyHorizontalGrid(androidx.compose.foundation.lazy.grid.GridCells;androidx.compose.ui.Modifier?;androidx.compose.foundation.lazy.grid.LazyGridState?;androidx.compose.foundation.layout.PaddingValues?;kotlin.Boolean;androidx.compose.foundation.layout.Arrangement.Horizontal?;androidx.compose.foundation.layout.Arrangement.Vertical?;androidx.compose.foundation.gestures.FlingBehavior?;kotlin.Boolean;androidx.compose.foundation.OverscrollEffect?;kotlin.Function1<androidx.compose.foundation.lazy.grid.LazyGridScope,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.lazy.grid/LazyHorizontalGrid(androidx.compose.foundation.lazy.grid/GridCells, androidx.compose.ui/Modifier?, androidx.compose.foundation.lazy.grid/LazyGridState?, androidx.compose.foundation.layout/PaddingValues?, kotlin/Boolean, androidx.compose.foundation.layout/Arrangement.Horizontal?, androidx.compose.foundation.layout/Arrangement.Vertical?, androidx.compose.foundation.gestures/FlingBehavior?, kotlin/Boolean, kotlin/Function1<androidx.compose.foundation.lazy.grid/LazyGridScope, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // androidx.compose.foundation.lazy.grid/LazyHorizontalGrid|LazyHorizontalGrid(androidx.compose.foundation.lazy.grid.GridCells;androidx.compose.ui.Modifier?;androidx.compose.foundation.lazy.grid.LazyGridState?;androidx.compose.foundation.layout.PaddingValues?;kotlin.Boolean;androidx.compose.foundation.layout.Arrangement.Horizontal?;androidx.compose.foundation.layout.Arrangement.Vertical?;androidx.compose.foundation.gestures.FlingBehavior?;kotlin.Boolean;kotlin.Function1<androidx.compose.foundation.lazy.grid.LazyGridScope,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.lazy.grid/LazyLayoutScrollScope(androidx.compose.foundation.lazy.grid/LazyGridState, androidx.compose.foundation.gestures/ScrollScope): androidx.compose.foundation.lazy.layout/LazyLayoutScrollScope // androidx.compose.foundation.lazy.grid/LazyLayoutScrollScope|LazyLayoutScrollScope(androidx.compose.foundation.lazy.grid.LazyGridState;androidx.compose.foundation.gestures.ScrollScope){}[0]
final fun androidx.compose.foundation.lazy.grid/LazyVerticalGrid(androidx.compose.foundation.lazy.grid/GridCells, androidx.compose.ui/Modifier?, androidx.compose.foundation.lazy.grid/LazyGridState?, androidx.compose.foundation.layout/PaddingValues?, kotlin/Boolean, androidx.compose.foundation.layout/Arrangement.Vertical?, androidx.compose.foundation.layout/Arrangement.Horizontal?, androidx.compose.foundation.gestures/FlingBehavior?, kotlin/Boolean, androidx.compose.foundation/OverscrollEffect?, kotlin/Function1<androidx.compose.foundation.lazy.grid/LazyGridScope, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int, kotlin/Int) // androidx.compose.foundation.lazy.grid/LazyVerticalGrid|LazyVerticalGrid(androidx.compose.foundation.lazy.grid.GridCells;androidx.compose.ui.Modifier?;androidx.compose.foundation.lazy.grid.LazyGridState?;androidx.compose.foundation.layout.PaddingValues?;kotlin.Boolean;androidx.compose.foundation.layout.Arrangement.Vertical?;androidx.compose.foundation.layout.Arrangement.Horizontal?;androidx.compose.foundation.gestures.FlingBehavior?;kotlin.Boolean;androidx.compose.foundation.OverscrollEffect?;kotlin.Function1<androidx.compose.foundation.lazy.grid.LazyGridScope,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.lazy.grid/LazyVerticalGrid(androidx.compose.foundation.lazy.grid/GridCells, androidx.compose.ui/Modifier?, androidx.compose.foundation.lazy.grid/LazyGridState?, androidx.compose.foundation.layout/PaddingValues?, kotlin/Boolean, androidx.compose.foundation.layout/Arrangement.Vertical?, androidx.compose.foundation.layout/Arrangement.Horizontal?, androidx.compose.foundation.gestures/FlingBehavior?, kotlin/Boolean, kotlin/Function1<androidx.compose.foundation.lazy.grid/LazyGridScope, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // androidx.compose.foundation.lazy.grid/LazyVerticalGrid|LazyVerticalGrid(androidx.compose.foundation.lazy.grid.GridCells;androidx.compose.ui.Modifier?;androidx.compose.foundation.lazy.grid.LazyGridState?;androidx.compose.foundation.layout.PaddingValues?;kotlin.Boolean;androidx.compose.foundation.layout.Arrangement.Vertical?;androidx.compose.foundation.layout.Arrangement.Horizontal?;androidx.compose.foundation.gestures.FlingBehavior?;kotlin.Boolean;kotlin.Function1<androidx.compose.foundation.lazy.grid.LazyGridScope,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_GridCells_Adaptive$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_GridCells_Adaptive$stableprop_getter|androidx_compose_foundation_lazy_grid_GridCells_Adaptive$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_GridCells_Fixed$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_GridCells_Fixed$stableprop_getter|androidx_compose_foundation_lazy_grid_GridCells_Fixed$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_GridCells_FixedSize$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_GridCells_FixedSize$stableprop_getter|androidx_compose_foundation_lazy_grid_GridCells_FixedSize$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridBeyondBoundsState$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridBeyondBoundsState$stableprop_getter|androidx_compose_foundation_lazy_grid_LazyGridBeyondBoundsState$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridCacheWindowPrefetchStrategy$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridCacheWindowPrefetchStrategy$stableprop_getter|androidx_compose_foundation_lazy_grid_LazyGridCacheWindowPrefetchStrategy$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridInterval$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridInterval$stableprop_getter|androidx_compose_foundation_lazy_grid_LazyGridInterval$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridIntervalContent$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridIntervalContent$stableprop_getter|androidx_compose_foundation_lazy_grid_LazyGridIntervalContent$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridItemScopeImpl$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridItemScopeImpl$stableprop_getter|androidx_compose_foundation_lazy_grid_LazyGridItemScopeImpl$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridMeasureResult$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridMeasureResult$stableprop_getter|androidx_compose_foundation_lazy_grid_LazyGridMeasureResult$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridMeasuredItem$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridMeasuredItem$stableprop_getter|androidx_compose_foundation_lazy_grid_LazyGridMeasuredItem$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridMeasuredItemProvider$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridMeasuredItemProvider$stableprop_getter|androidx_compose_foundation_lazy_grid_LazyGridMeasuredItemProvider$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridMeasuredLine$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridMeasuredLine$stableprop_getter|androidx_compose_foundation_lazy_grid_LazyGridMeasuredLine$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridMeasuredLineProvider$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridMeasuredLineProvider$stableprop_getter|androidx_compose_foundation_lazy_grid_LazyGridMeasuredLineProvider$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridPrefetchResultScopeImpl$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridPrefetchResultScopeImpl$stableprop_getter|androidx_compose_foundation_lazy_grid_LazyGridPrefetchResultScopeImpl$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridScrollPosition$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridScrollPosition$stableprop_getter|androidx_compose_foundation_lazy_grid_LazyGridScrollPosition$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridSlots$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridSlots$stableprop_getter|androidx_compose_foundation_lazy_grid_LazyGridSlots$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridSpanLayoutProvider$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridSpanLayoutProvider$stableprop_getter|androidx_compose_foundation_lazy_grid_LazyGridSpanLayoutProvider$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridSpanLayoutProvider_LineConfiguration$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridSpanLayoutProvider_LineConfiguration$stableprop_getter|androidx_compose_foundation_lazy_grid_LazyGridSpanLayoutProvider_LineConfiguration$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridState$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.grid/androidx_compose_foundation_lazy_grid_LazyGridState$stableprop_getter|androidx_compose_foundation_lazy_grid_LazyGridState$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.grid/rememberLazyGridState(kotlin/Int, kotlin/Int, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int): androidx.compose.foundation.lazy.grid/LazyGridState // androidx.compose.foundation.lazy.grid/rememberLazyGridState|rememberLazyGridState(kotlin.Int;kotlin.Int;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.lazy.layout/LazyLayout(kotlin/Function0<androidx.compose.foundation.lazy.layout/LazyLayoutItemProvider>, androidx.compose.ui/Modifier?, androidx.compose.foundation.lazy.layout/LazyLayoutPrefetchState?, androidx.compose.foundation.lazy.layout/LazyLayoutMeasurePolicy, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // androidx.compose.foundation.lazy.layout/LazyLayout|LazyLayout(kotlin.Function0<androidx.compose.foundation.lazy.layout.LazyLayoutItemProvider>;androidx.compose.ui.Modifier?;androidx.compose.foundation.lazy.layout.LazyLayoutPrefetchState?;androidx.compose.foundation.lazy.layout.LazyLayoutMeasurePolicy;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.lazy.layout/LazyLayoutPinnableItem(kotlin/Any?, kotlin/Int, androidx.compose.foundation.lazy.layout/LazyLayoutPinnedItemList, kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int) // androidx.compose.foundation.lazy.layout/LazyLayoutPinnableItem|LazyLayoutPinnableItem(kotlin.Any?;kotlin.Int;androidx.compose.foundation.lazy.layout.LazyLayoutPinnedItemList;kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int){}[0]
final fun androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_Averages$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_Averages$stableprop_getter|androidx_compose_foundation_lazy_layout_Averages$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_AwaitFirstLayoutModifier$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_AwaitFirstLayoutModifier$stableprop_getter|androidx_compose_foundation_lazy_layout_AwaitFirstLayoutModifier$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_CacheWindowLogic$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_CacheWindowLogic$stableprop_getter|androidx_compose_foundation_lazy_layout_CacheWindowLogic$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_IntervalList_Interval$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_IntervalList_Interval$stableprop_getter|androidx_compose_foundation_lazy_layout_IntervalList_Interval$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutAnimateItemElement$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutAnimateItemElement$stableprop_getter|androidx_compose_foundation_lazy_layout_LazyLayoutAnimateItemElement$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutAnimationSpecsNode$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutAnimationSpecsNode$stableprop_getter|androidx_compose_foundation_lazy_layout_LazyLayoutAnimationSpecsNode$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutBeyondBoundsInfo$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutBeyondBoundsInfo$stableprop_getter|androidx_compose_foundation_lazy_layout_LazyLayoutBeyondBoundsInfo$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutBeyondBoundsInfo_Interval$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutBeyondBoundsInfo_Interval$stableprop_getter|androidx_compose_foundation_lazy_layout_LazyLayoutBeyondBoundsInfo_Interval$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutBeyondBoundsModifierNode$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutBeyondBoundsModifierNode$stableprop_getter|androidx_compose_foundation_lazy_layout_LazyLayoutBeyondBoundsModifierNode$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutIntervalContent$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutIntervalContent$stableprop_getter|androidx_compose_foundation_lazy_layout_LazyLayoutIntervalContent$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutItemAnimation$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutItemAnimation$stableprop_getter|androidx_compose_foundation_lazy_layout_LazyLayoutItemAnimation$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutItemAnimator$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutItemAnimator$stableprop_getter|androidx_compose_foundation_lazy_layout_LazyLayoutItemAnimator$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutItemContentFactory$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutItemContentFactory$stableprop_getter|androidx_compose_foundation_lazy_layout_LazyLayoutItemContentFactory$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutMeasureScopeImpl$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutMeasureScopeImpl$stableprop_getter|androidx_compose_foundation_lazy_layout_LazyLayoutMeasureScopeImpl$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutMeasuredItemProvider$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutMeasuredItemProvider$stableprop_getter|androidx_compose_foundation_lazy_layout_LazyLayoutMeasuredItemProvider$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutNearestRangeState$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutNearestRangeState$stableprop_getter|androidx_compose_foundation_lazy_layout_LazyLayoutNearestRangeState$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutPinnedItemList$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutPinnedItemList$stableprop_getter|androidx_compose_foundation_lazy_layout_LazyLayoutPinnedItemList$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutPrefetchState$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutPrefetchState$stableprop_getter|androidx_compose_foundation_lazy_layout_LazyLayoutPrefetchState$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutScrollDeltaBetweenPasses$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_LazyLayoutScrollDeltaBetweenPasses$stableprop_getter|androidx_compose_foundation_lazy_layout_LazyLayoutScrollDeltaBetweenPasses$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_MutableIntervalList$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_MutableIntervalList$stableprop_getter|androidx_compose_foundation_lazy_layout_MutableIntervalList$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_NearestRangeKeyIndexMap$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_NearestRangeKeyIndexMap$stableprop_getter|androidx_compose_foundation_lazy_layout_NearestRangeKeyIndexMap$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_PrefetchHandleProvider$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_PrefetchHandleProvider$stableprop_getter|androidx_compose_foundation_lazy_layout_PrefetchHandleProvider$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_PrefetchMetrics$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.layout/androidx_compose_foundation_lazy_layout_PrefetchMetrics$stableprop_getter|androidx_compose_foundation_lazy_layout_PrefetchMetrics$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.layout/getDefaultLazyLayoutKey(kotlin/Int): kotlin/Any // androidx.compose.foundation.lazy.layout/getDefaultLazyLayoutKey|getDefaultLazyLayoutKey(kotlin.Int){}[0]
final fun androidx.compose.foundation.lazy.staggeredgrid/LazyHorizontalStaggeredGrid(androidx.compose.foundation.lazy.staggeredgrid/StaggeredGridCells, androidx.compose.ui/Modifier?, androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridState?, androidx.compose.foundation.layout/PaddingValues?, kotlin/Boolean, androidx.compose.foundation.layout/Arrangement.Vertical?, androidx.compose.ui.unit/Dp, androidx.compose.foundation.gestures/FlingBehavior?, kotlin/Boolean, androidx.compose.foundation/OverscrollEffect?, kotlin/Function1<androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridScope, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int, kotlin/Int) // androidx.compose.foundation.lazy.staggeredgrid/LazyHorizontalStaggeredGrid|LazyHorizontalStaggeredGrid(androidx.compose.foundation.lazy.staggeredgrid.StaggeredGridCells;androidx.compose.ui.Modifier?;androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState?;androidx.compose.foundation.layout.PaddingValues?;kotlin.Boolean;androidx.compose.foundation.layout.Arrangement.Vertical?;androidx.compose.ui.unit.Dp;androidx.compose.foundation.gestures.FlingBehavior?;kotlin.Boolean;androidx.compose.foundation.OverscrollEffect?;kotlin.Function1<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScope,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.lazy.staggeredgrid/LazyHorizontalStaggeredGrid(androidx.compose.foundation.lazy.staggeredgrid/StaggeredGridCells, androidx.compose.ui/Modifier?, androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridState?, androidx.compose.foundation.layout/PaddingValues?, kotlin/Boolean, androidx.compose.foundation.layout/Arrangement.Vertical?, androidx.compose.ui.unit/Dp, androidx.compose.foundation.gestures/FlingBehavior?, kotlin/Boolean, kotlin/Function1<androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridScope, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // androidx.compose.foundation.lazy.staggeredgrid/LazyHorizontalStaggeredGrid|LazyHorizontalStaggeredGrid(androidx.compose.foundation.lazy.staggeredgrid.StaggeredGridCells;androidx.compose.ui.Modifier?;androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState?;androidx.compose.foundation.layout.PaddingValues?;kotlin.Boolean;androidx.compose.foundation.layout.Arrangement.Vertical?;androidx.compose.ui.unit.Dp;androidx.compose.foundation.gestures.FlingBehavior?;kotlin.Boolean;kotlin.Function1<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScope,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.lazy.staggeredgrid/LazyLayoutScrollScope(androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridState, androidx.compose.foundation.gestures/ScrollScope): androidx.compose.foundation.lazy.layout/LazyLayoutScrollScope // androidx.compose.foundation.lazy.staggeredgrid/LazyLayoutScrollScope|LazyLayoutScrollScope(androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState;androidx.compose.foundation.gestures.ScrollScope){}[0]
final fun androidx.compose.foundation.lazy.staggeredgrid/LazyVerticalStaggeredGrid(androidx.compose.foundation.lazy.staggeredgrid/StaggeredGridCells, androidx.compose.ui/Modifier?, androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridState?, androidx.compose.foundation.layout/PaddingValues?, kotlin/Boolean, androidx.compose.ui.unit/Dp, androidx.compose.foundation.layout/Arrangement.Horizontal?, androidx.compose.foundation.gestures/FlingBehavior?, kotlin/Boolean, androidx.compose.foundation/OverscrollEffect?, kotlin/Function1<androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridScope, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int, kotlin/Int) // androidx.compose.foundation.lazy.staggeredgrid/LazyVerticalStaggeredGrid|LazyVerticalStaggeredGrid(androidx.compose.foundation.lazy.staggeredgrid.StaggeredGridCells;androidx.compose.ui.Modifier?;androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState?;androidx.compose.foundation.layout.PaddingValues?;kotlin.Boolean;androidx.compose.ui.unit.Dp;androidx.compose.foundation.layout.Arrangement.Horizontal?;androidx.compose.foundation.gestures.FlingBehavior?;kotlin.Boolean;androidx.compose.foundation.OverscrollEffect?;kotlin.Function1<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScope,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.lazy.staggeredgrid/LazyVerticalStaggeredGrid(androidx.compose.foundation.lazy.staggeredgrid/StaggeredGridCells, androidx.compose.ui/Modifier?, androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridState?, androidx.compose.foundation.layout/PaddingValues?, kotlin/Boolean, androidx.compose.ui.unit/Dp, androidx.compose.foundation.layout/Arrangement.Horizontal?, androidx.compose.foundation.gestures/FlingBehavior?, kotlin/Boolean, kotlin/Function1<androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridScope, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // androidx.compose.foundation.lazy.staggeredgrid/LazyVerticalStaggeredGrid|LazyVerticalStaggeredGrid(androidx.compose.foundation.lazy.staggeredgrid.StaggeredGridCells;androidx.compose.ui.Modifier?;androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridState?;androidx.compose.foundation.layout.PaddingValues?;kotlin.Boolean;androidx.compose.ui.unit.Dp;androidx.compose.foundation.layout.Arrangement.Horizontal?;androidx.compose.foundation.gestures.FlingBehavior?;kotlin.Boolean;kotlin.Function1<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScope,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridBeyondBoundsState$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridBeyondBoundsState$stableprop_getter|androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridBeyondBoundsState$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridInterval$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridInterval$stableprop_getter|androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridInterval$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridIntervalContent$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridIntervalContent$stableprop_getter|androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridIntervalContent$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridItemScopeImpl$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridItemScopeImpl$stableprop_getter|androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridItemScopeImpl$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridLaneInfo$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridLaneInfo$stableprop_getter|androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridLaneInfo$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridMeasureContext$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridMeasureContext$stableprop_getter|androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridMeasureContext$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridMeasureProvider$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridMeasureProvider$stableprop_getter|androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridMeasureProvider$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridMeasureResult$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridMeasureResult$stableprop_getter|androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridMeasureResult$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridMeasuredItem$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridMeasuredItem$stableprop_getter|androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridMeasuredItem$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridScrollPosition$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridScrollPosition$stableprop_getter|androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridScrollPosition$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridSlots$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridSlots$stableprop_getter|androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridSlots$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridSpanProvider$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridSpanProvider$stableprop_getter|androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridSpanProvider$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridState$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridState$stableprop_getter|androidx_compose_foundation_lazy_staggeredgrid_LazyStaggeredGridState$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_StaggeredGridCells_Adaptive$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_StaggeredGridCells_Adaptive$stableprop_getter|androidx_compose_foundation_lazy_staggeredgrid_StaggeredGridCells_Adaptive$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_StaggeredGridCells_Fixed$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_StaggeredGridCells_Fixed$stableprop_getter|androidx_compose_foundation_lazy_staggeredgrid_StaggeredGridCells_Fixed$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_StaggeredGridCells_FixedSize$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_StaggeredGridCells_FixedSize$stableprop_getter|androidx_compose_foundation_lazy_staggeredgrid_StaggeredGridCells_FixedSize$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_StaggeredGridItemSpan$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy.staggeredgrid/androidx_compose_foundation_lazy_staggeredgrid_StaggeredGridItemSpan$stableprop_getter|androidx_compose_foundation_lazy_staggeredgrid_StaggeredGridItemSpan$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy.staggeredgrid/rememberLazyStaggeredGridState(kotlin/Int, kotlin/Int, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int): androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridState // androidx.compose.foundation.lazy.staggeredgrid/rememberLazyStaggeredGridState|rememberLazyStaggeredGridState(kotlin.Int;kotlin.Int;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.lazy/LazyColumn(androidx.compose.ui/Modifier?, androidx.compose.foundation.lazy/LazyListState?, androidx.compose.foundation.layout/PaddingValues?, kotlin/Boolean, androidx.compose.foundation.layout/Arrangement.Vertical?, androidx.compose.ui/Alignment.Horizontal?, androidx.compose.foundation.gestures/FlingBehavior?, kotlin/Boolean, androidx.compose.foundation/OverscrollEffect?, kotlin/Function1<androidx.compose.foundation.lazy/LazyListScope, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // androidx.compose.foundation.lazy/LazyColumn|LazyColumn(androidx.compose.ui.Modifier?;androidx.compose.foundation.lazy.LazyListState?;androidx.compose.foundation.layout.PaddingValues?;kotlin.Boolean;androidx.compose.foundation.layout.Arrangement.Vertical?;androidx.compose.ui.Alignment.Horizontal?;androidx.compose.foundation.gestures.FlingBehavior?;kotlin.Boolean;androidx.compose.foundation.OverscrollEffect?;kotlin.Function1<androidx.compose.foundation.lazy.LazyListScope,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.lazy/LazyColumn(androidx.compose.ui/Modifier?, androidx.compose.foundation.lazy/LazyListState?, androidx.compose.foundation.layout/PaddingValues?, kotlin/Boolean, androidx.compose.foundation.layout/Arrangement.Vertical?, androidx.compose.ui/Alignment.Horizontal?, androidx.compose.foundation.gestures/FlingBehavior?, kotlin/Boolean, kotlin/Function1<androidx.compose.foundation.lazy/LazyListScope, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // androidx.compose.foundation.lazy/LazyColumn|LazyColumn(androidx.compose.ui.Modifier?;androidx.compose.foundation.lazy.LazyListState?;androidx.compose.foundation.layout.PaddingValues?;kotlin.Boolean;androidx.compose.foundation.layout.Arrangement.Vertical?;androidx.compose.ui.Alignment.Horizontal?;androidx.compose.foundation.gestures.FlingBehavior?;kotlin.Boolean;kotlin.Function1<androidx.compose.foundation.lazy.LazyListScope,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.lazy/LazyColumn(androidx.compose.ui/Modifier?, androidx.compose.foundation.lazy/LazyListState?, androidx.compose.foundation.layout/PaddingValues?, kotlin/Boolean, androidx.compose.foundation.layout/Arrangement.Vertical?, androidx.compose.ui/Alignment.Horizontal?, androidx.compose.foundation.gestures/FlingBehavior?, kotlin/Function1<androidx.compose.foundation.lazy/LazyListScope, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // androidx.compose.foundation.lazy/LazyColumn|LazyColumn(androidx.compose.ui.Modifier?;androidx.compose.foundation.lazy.LazyListState?;androidx.compose.foundation.layout.PaddingValues?;kotlin.Boolean;androidx.compose.foundation.layout.Arrangement.Vertical?;androidx.compose.ui.Alignment.Horizontal?;androidx.compose.foundation.gestures.FlingBehavior?;kotlin.Function1<androidx.compose.foundation.lazy.LazyListScope,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.lazy/LazyLayoutScrollScope(androidx.compose.foundation.lazy/LazyListState, androidx.compose.foundation.gestures/ScrollScope): androidx.compose.foundation.lazy.layout/LazyLayoutScrollScope // androidx.compose.foundation.lazy/LazyLayoutScrollScope|LazyLayoutScrollScope(androidx.compose.foundation.lazy.LazyListState;androidx.compose.foundation.gestures.ScrollScope){}[0]
final fun androidx.compose.foundation.lazy/LazyRow(androidx.compose.ui/Modifier?, androidx.compose.foundation.lazy/LazyListState?, androidx.compose.foundation.layout/PaddingValues?, kotlin/Boolean, androidx.compose.foundation.layout/Arrangement.Horizontal?, androidx.compose.ui/Alignment.Vertical?, androidx.compose.foundation.gestures/FlingBehavior?, kotlin/Boolean, androidx.compose.foundation/OverscrollEffect?, kotlin/Function1<androidx.compose.foundation.lazy/LazyListScope, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // androidx.compose.foundation.lazy/LazyRow|LazyRow(androidx.compose.ui.Modifier?;androidx.compose.foundation.lazy.LazyListState?;androidx.compose.foundation.layout.PaddingValues?;kotlin.Boolean;androidx.compose.foundation.layout.Arrangement.Horizontal?;androidx.compose.ui.Alignment.Vertical?;androidx.compose.foundation.gestures.FlingBehavior?;kotlin.Boolean;androidx.compose.foundation.OverscrollEffect?;kotlin.Function1<androidx.compose.foundation.lazy.LazyListScope,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.lazy/LazyRow(androidx.compose.ui/Modifier?, androidx.compose.foundation.lazy/LazyListState?, androidx.compose.foundation.layout/PaddingValues?, kotlin/Boolean, androidx.compose.foundation.layout/Arrangement.Horizontal?, androidx.compose.ui/Alignment.Vertical?, androidx.compose.foundation.gestures/FlingBehavior?, kotlin/Boolean, kotlin/Function1<androidx.compose.foundation.lazy/LazyListScope, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // androidx.compose.foundation.lazy/LazyRow|LazyRow(androidx.compose.ui.Modifier?;androidx.compose.foundation.lazy.LazyListState?;androidx.compose.foundation.layout.PaddingValues?;kotlin.Boolean;androidx.compose.foundation.layout.Arrangement.Horizontal?;androidx.compose.ui.Alignment.Vertical?;androidx.compose.foundation.gestures.FlingBehavior?;kotlin.Boolean;kotlin.Function1<androidx.compose.foundation.lazy.LazyListScope,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.lazy/LazyRow(androidx.compose.ui/Modifier?, androidx.compose.foundation.lazy/LazyListState?, androidx.compose.foundation.layout/PaddingValues?, kotlin/Boolean, androidx.compose.foundation.layout/Arrangement.Horizontal?, androidx.compose.ui/Alignment.Vertical?, androidx.compose.foundation.gestures/FlingBehavior?, kotlin/Function1<androidx.compose.foundation.lazy/LazyListScope, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // androidx.compose.foundation.lazy/LazyRow|LazyRow(androidx.compose.ui.Modifier?;androidx.compose.foundation.lazy.LazyListState?;androidx.compose.foundation.layout.PaddingValues?;kotlin.Boolean;androidx.compose.foundation.layout.Arrangement.Horizontal?;androidx.compose.ui.Alignment.Vertical?;androidx.compose.foundation.gestures.FlingBehavior?;kotlin.Function1<androidx.compose.foundation.lazy.LazyListScope,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyItemScopeImpl$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyItemScopeImpl$stableprop_getter|androidx_compose_foundation_lazy_LazyItemScopeImpl$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyListBeyondBoundsState$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyListBeyondBoundsState$stableprop_getter|androidx_compose_foundation_lazy_LazyListBeyondBoundsState$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyListCacheWindowScope$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyListCacheWindowScope$stableprop_getter|androidx_compose_foundation_lazy_LazyListCacheWindowScope$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyListCacheWindowStrategy$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyListCacheWindowStrategy$stableprop_getter|androidx_compose_foundation_lazy_LazyListCacheWindowStrategy$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyListInterval$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyListInterval$stableprop_getter|androidx_compose_foundation_lazy_LazyListInterval$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyListIntervalContent$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyListIntervalContent$stableprop_getter|androidx_compose_foundation_lazy_LazyListIntervalContent$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyListMeasureResult$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyListMeasureResult$stableprop_getter|androidx_compose_foundation_lazy_LazyListMeasureResult$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyListMeasuredItem$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyListMeasuredItem$stableprop_getter|androidx_compose_foundation_lazy_LazyListMeasuredItem$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyListMeasuredItemProvider$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyListMeasuredItemProvider$stableprop_getter|androidx_compose_foundation_lazy_LazyListMeasuredItemProvider$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyListPrefetchResultScopeImpl$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyListPrefetchResultScopeImpl$stableprop_getter|androidx_compose_foundation_lazy_LazyListPrefetchResultScopeImpl$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyListScrollPosition$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyListScrollPosition$stableprop_getter|androidx_compose_foundation_lazy_LazyListScrollPosition$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyListState$stableprop_getter(): kotlin/Int // androidx.compose.foundation.lazy/androidx_compose_foundation_lazy_LazyListState$stableprop_getter|androidx_compose_foundation_lazy_LazyListState$stableprop_getter(){}[0]
final fun androidx.compose.foundation.lazy/rememberLazyListState(kotlin/Int, kotlin/Int, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int): androidx.compose.foundation.lazy/LazyListState // androidx.compose.foundation.lazy/rememberLazyListState|rememberLazyListState(kotlin.Int;kotlin.Int;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.pager/HorizontalPager(androidx.compose.foundation.pager/PagerState, androidx.compose.ui/Modifier?, androidx.compose.foundation.layout/PaddingValues?, androidx.compose.foundation.pager/PageSize?, kotlin/Int, androidx.compose.ui.unit/Dp, androidx.compose.ui/Alignment.Vertical?, androidx.compose.foundation.gestures/TargetedFlingBehavior?, kotlin/Boolean, kotlin/Boolean, kotlin/Function1<kotlin/Int, kotlin/Any>?, androidx.compose.ui.input.nestedscroll/NestedScrollConnection?, androidx.compose.foundation.gestures.snapping/SnapPosition?, androidx.compose.foundation/OverscrollEffect?, kotlin/Function4<androidx.compose.foundation.pager/PagerScope, kotlin/Int, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int, kotlin/Int) // androidx.compose.foundation.pager/HorizontalPager|HorizontalPager(androidx.compose.foundation.pager.PagerState;androidx.compose.ui.Modifier?;androidx.compose.foundation.layout.PaddingValues?;androidx.compose.foundation.pager.PageSize?;kotlin.Int;androidx.compose.ui.unit.Dp;androidx.compose.ui.Alignment.Vertical?;androidx.compose.foundation.gestures.TargetedFlingBehavior?;kotlin.Boolean;kotlin.Boolean;kotlin.Function1<kotlin.Int,kotlin.Any>?;androidx.compose.ui.input.nestedscroll.NestedScrollConnection?;androidx.compose.foundation.gestures.snapping.SnapPosition?;androidx.compose.foundation.OverscrollEffect?;kotlin.Function4<androidx.compose.foundation.pager.PagerScope,kotlin.Int,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.pager/HorizontalPager(androidx.compose.foundation.pager/PagerState, androidx.compose.ui/Modifier?, androidx.compose.foundation.layout/PaddingValues?, androidx.compose.foundation.pager/PageSize?, kotlin/Int, androidx.compose.ui.unit/Dp, androidx.compose.ui/Alignment.Vertical?, androidx.compose.foundation.gestures/TargetedFlingBehavior?, kotlin/Boolean, kotlin/Boolean, kotlin/Function1<kotlin/Int, kotlin/Any>?, androidx.compose.ui.input.nestedscroll/NestedScrollConnection?, androidx.compose.foundation.gestures.snapping/SnapPosition?, kotlin/Function4<androidx.compose.foundation.pager/PagerScope, kotlin/Int, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int, kotlin/Int) // androidx.compose.foundation.pager/HorizontalPager|HorizontalPager(androidx.compose.foundation.pager.PagerState;androidx.compose.ui.Modifier?;androidx.compose.foundation.layout.PaddingValues?;androidx.compose.foundation.pager.PageSize?;kotlin.Int;androidx.compose.ui.unit.Dp;androidx.compose.ui.Alignment.Vertical?;androidx.compose.foundation.gestures.TargetedFlingBehavior?;kotlin.Boolean;kotlin.Boolean;kotlin.Function1<kotlin.Int,kotlin.Any>?;androidx.compose.ui.input.nestedscroll.NestedScrollConnection?;androidx.compose.foundation.gestures.snapping.SnapPosition?;kotlin.Function4<androidx.compose.foundation.pager.PagerScope,kotlin.Int,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.pager/LazyLayoutScrollScope(androidx.compose.foundation.pager/PagerState, androidx.compose.foundation.gestures/ScrollScope): androidx.compose.foundation.lazy.layout/LazyLayoutScrollScope // androidx.compose.foundation.pager/LazyLayoutScrollScope|LazyLayoutScrollScope(androidx.compose.foundation.pager.PagerState;androidx.compose.foundation.gestures.ScrollScope){}[0]
final fun androidx.compose.foundation.pager/PagerState(kotlin/Int = ..., kotlin/Float = ..., kotlin/Function0<kotlin/Int>): androidx.compose.foundation.pager/PagerState // androidx.compose.foundation.pager/PagerState|PagerState(kotlin.Int;kotlin.Float;kotlin.Function0<kotlin.Int>){}[0]
final fun androidx.compose.foundation.pager/VerticalPager(androidx.compose.foundation.pager/PagerState, androidx.compose.ui/Modifier?, androidx.compose.foundation.layout/PaddingValues?, androidx.compose.foundation.pager/PageSize?, kotlin/Int, androidx.compose.ui.unit/Dp, androidx.compose.ui/Alignment.Horizontal?, androidx.compose.foundation.gestures/TargetedFlingBehavior?, kotlin/Boolean, kotlin/Boolean, kotlin/Function1<kotlin/Int, kotlin/Any>?, androidx.compose.ui.input.nestedscroll/NestedScrollConnection?, androidx.compose.foundation.gestures.snapping/SnapPosition?, androidx.compose.foundation/OverscrollEffect?, kotlin/Function4<androidx.compose.foundation.pager/PagerScope, kotlin/Int, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int, kotlin/Int) // androidx.compose.foundation.pager/VerticalPager|VerticalPager(androidx.compose.foundation.pager.PagerState;androidx.compose.ui.Modifier?;androidx.compose.foundation.layout.PaddingValues?;androidx.compose.foundation.pager.PageSize?;kotlin.Int;androidx.compose.ui.unit.Dp;androidx.compose.ui.Alignment.Horizontal?;androidx.compose.foundation.gestures.TargetedFlingBehavior?;kotlin.Boolean;kotlin.Boolean;kotlin.Function1<kotlin.Int,kotlin.Any>?;androidx.compose.ui.input.nestedscroll.NestedScrollConnection?;androidx.compose.foundation.gestures.snapping.SnapPosition?;androidx.compose.foundation.OverscrollEffect?;kotlin.Function4<androidx.compose.foundation.pager.PagerScope,kotlin.Int,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.pager/VerticalPager(androidx.compose.foundation.pager/PagerState, androidx.compose.ui/Modifier?, androidx.compose.foundation.layout/PaddingValues?, androidx.compose.foundation.pager/PageSize?, kotlin/Int, androidx.compose.ui.unit/Dp, androidx.compose.ui/Alignment.Horizontal?, androidx.compose.foundation.gestures/TargetedFlingBehavior?, kotlin/Boolean, kotlin/Boolean, kotlin/Function1<kotlin/Int, kotlin/Any>?, androidx.compose.ui.input.nestedscroll/NestedScrollConnection?, androidx.compose.foundation.gestures.snapping/SnapPosition?, kotlin/Function4<androidx.compose.foundation.pager/PagerScope, kotlin/Int, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int, kotlin/Int) // androidx.compose.foundation.pager/VerticalPager|VerticalPager(androidx.compose.foundation.pager.PagerState;androidx.compose.ui.Modifier?;androidx.compose.foundation.layout.PaddingValues?;androidx.compose.foundation.pager.PageSize?;kotlin.Int;androidx.compose.ui.unit.Dp;androidx.compose.ui.Alignment.Horizontal?;androidx.compose.foundation.gestures.TargetedFlingBehavior?;kotlin.Boolean;kotlin.Boolean;kotlin.Function1<kotlin.Int,kotlin.Any>?;androidx.compose.ui.input.nestedscroll.NestedScrollConnection?;androidx.compose.foundation.gestures.snapping.SnapPosition?;kotlin.Function4<androidx.compose.foundation.pager.PagerScope,kotlin.Int,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.pager/androidx_compose_foundation_pager_MeasuredPage$stableprop_getter(): kotlin/Int // androidx.compose.foundation.pager/androidx_compose_foundation_pager_MeasuredPage$stableprop_getter|androidx_compose_foundation_pager_MeasuredPage$stableprop_getter(){}[0]
final fun androidx.compose.foundation.pager/androidx_compose_foundation_pager_PageSize_Fill$stableprop_getter(): kotlin/Int // androidx.compose.foundation.pager/androidx_compose_foundation_pager_PageSize_Fill$stableprop_getter|androidx_compose_foundation_pager_PageSize_Fill$stableprop_getter(){}[0]
final fun androidx.compose.foundation.pager/androidx_compose_foundation_pager_PageSize_Fixed$stableprop_getter(): kotlin/Int // androidx.compose.foundation.pager/androidx_compose_foundation_pager_PageSize_Fixed$stableprop_getter|androidx_compose_foundation_pager_PageSize_Fixed$stableprop_getter(){}[0]
final fun androidx.compose.foundation.pager/androidx_compose_foundation_pager_PagerBeyondBoundsState$stableprop_getter(): kotlin/Int // androidx.compose.foundation.pager/androidx_compose_foundation_pager_PagerBeyondBoundsState$stableprop_getter|androidx_compose_foundation_pager_PagerBeyondBoundsState$stableprop_getter(){}[0]
final fun androidx.compose.foundation.pager/androidx_compose_foundation_pager_PagerDebugConfig$stableprop_getter(): kotlin/Int // androidx.compose.foundation.pager/androidx_compose_foundation_pager_PagerDebugConfig$stableprop_getter|androidx_compose_foundation_pager_PagerDebugConfig$stableprop_getter(){}[0]
final fun androidx.compose.foundation.pager/androidx_compose_foundation_pager_PagerDefaults$stableprop_getter(): kotlin/Int // androidx.compose.foundation.pager/androidx_compose_foundation_pager_PagerDefaults$stableprop_getter|androidx_compose_foundation_pager_PagerDefaults$stableprop_getter(){}[0]
final fun androidx.compose.foundation.pager/androidx_compose_foundation_pager_PagerIntervalContent$stableprop_getter(): kotlin/Int // androidx.compose.foundation.pager/androidx_compose_foundation_pager_PagerIntervalContent$stableprop_getter|androidx_compose_foundation_pager_PagerIntervalContent$stableprop_getter(){}[0]
final fun androidx.compose.foundation.pager/androidx_compose_foundation_pager_PagerLazyLayoutItemProvider$stableprop_getter(): kotlin/Int // androidx.compose.foundation.pager/androidx_compose_foundation_pager_PagerLazyLayoutItemProvider$stableprop_getter|androidx_compose_foundation_pager_PagerLazyLayoutItemProvider$stableprop_getter(){}[0]
final fun androidx.compose.foundation.pager/androidx_compose_foundation_pager_PagerMeasureResult$stableprop_getter(): kotlin/Int // androidx.compose.foundation.pager/androidx_compose_foundation_pager_PagerMeasureResult$stableprop_getter|androidx_compose_foundation_pager_PagerMeasureResult$stableprop_getter(){}[0]
final fun androidx.compose.foundation.pager/androidx_compose_foundation_pager_PagerScopeImpl$stableprop_getter(): kotlin/Int // androidx.compose.foundation.pager/androidx_compose_foundation_pager_PagerScopeImpl$stableprop_getter|androidx_compose_foundation_pager_PagerScopeImpl$stableprop_getter(){}[0]
final fun androidx.compose.foundation.pager/androidx_compose_foundation_pager_PagerScrollPosition$stableprop_getter(): kotlin/Int // androidx.compose.foundation.pager/androidx_compose_foundation_pager_PagerScrollPosition$stableprop_getter|androidx_compose_foundation_pager_PagerScrollPosition$stableprop_getter(){}[0]
final fun androidx.compose.foundation.pager/androidx_compose_foundation_pager_PagerSnapDistanceMaxPages$stableprop_getter(): kotlin/Int // androidx.compose.foundation.pager/androidx_compose_foundation_pager_PagerSnapDistanceMaxPages$stableprop_getter|androidx_compose_foundation_pager_PagerSnapDistanceMaxPages$stableprop_getter(){}[0]
final fun androidx.compose.foundation.pager/androidx_compose_foundation_pager_PagerState$stableprop_getter(): kotlin/Int // androidx.compose.foundation.pager/androidx_compose_foundation_pager_PagerState$stableprop_getter|androidx_compose_foundation_pager_PagerState$stableprop_getter(){}[0]
final fun androidx.compose.foundation.pager/rememberPagerState(kotlin/Int, kotlin/Float, kotlin/Function0<kotlin/Int>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int): androidx.compose.foundation.pager/PagerState // androidx.compose.foundation.pager/rememberPagerState|rememberPagerState(kotlin.Int;kotlin.Float;kotlin.Function0<kotlin.Int>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.platform/androidx_compose_foundation_platform_SynchronizedObject$stableprop_getter(): kotlin/Int // androidx.compose.foundation.platform/androidx_compose_foundation_platform_SynchronizedObject$stableprop_getter|androidx_compose_foundation_platform_SynchronizedObject$stableprop_getter(){}[0]
final fun androidx.compose.foundation.relocation/BringIntoViewRequester(): androidx.compose.foundation.relocation/BringIntoViewRequester // androidx.compose.foundation.relocation/BringIntoViewRequester|BringIntoViewRequester(){}[0]
final fun androidx.compose.foundation.relocation/androidx_compose_foundation_relocation_BringIntoViewRequesterNode$stableprop_getter(): kotlin/Int // androidx.compose.foundation.relocation/androidx_compose_foundation_relocation_BringIntoViewRequesterNode$stableprop_getter|androidx_compose_foundation_relocation_BringIntoViewRequesterNode$stableprop_getter(){}[0]
final fun androidx.compose.foundation.relocation/androidx_compose_foundation_relocation_BringIntoViewResponderNode$stableprop_getter(): kotlin/Int // androidx.compose.foundation.relocation/androidx_compose_foundation_relocation_BringIntoViewResponderNode$stableprop_getter|androidx_compose_foundation_relocation_BringIntoViewResponderNode$stableprop_getter(){}[0]
final fun androidx.compose.foundation.shape/AbsoluteCutCornerShape(androidx.compose.foundation.shape/CornerSize): androidx.compose.foundation.shape/AbsoluteCutCornerShape // androidx.compose.foundation.shape/AbsoluteCutCornerShape|AbsoluteCutCornerShape(androidx.compose.foundation.shape.CornerSize){}[0]
final fun androidx.compose.foundation.shape/AbsoluteCutCornerShape(androidx.compose.ui.unit/Dp = ..., androidx.compose.ui.unit/Dp = ..., androidx.compose.ui.unit/Dp = ..., androidx.compose.ui.unit/Dp = ...): androidx.compose.foundation.shape/AbsoluteCutCornerShape // androidx.compose.foundation.shape/AbsoluteCutCornerShape|AbsoluteCutCornerShape(androidx.compose.ui.unit.Dp;androidx.compose.ui.unit.Dp;androidx.compose.ui.unit.Dp;androidx.compose.ui.unit.Dp){}[0]
final fun androidx.compose.foundation.shape/AbsoluteCutCornerShape(androidx.compose.ui.unit/Dp): androidx.compose.foundation.shape/AbsoluteCutCornerShape // androidx.compose.foundation.shape/AbsoluteCutCornerShape|AbsoluteCutCornerShape(androidx.compose.ui.unit.Dp){}[0]
final fun androidx.compose.foundation.shape/AbsoluteCutCornerShape(kotlin/Float = ..., kotlin/Float = ..., kotlin/Float = ..., kotlin/Float = ...): androidx.compose.foundation.shape/AbsoluteCutCornerShape // androidx.compose.foundation.shape/AbsoluteCutCornerShape|AbsoluteCutCornerShape(kotlin.Float;kotlin.Float;kotlin.Float;kotlin.Float){}[0]
final fun androidx.compose.foundation.shape/AbsoluteCutCornerShape(kotlin/Float): androidx.compose.foundation.shape/AbsoluteCutCornerShape // androidx.compose.foundation.shape/AbsoluteCutCornerShape|AbsoluteCutCornerShape(kotlin.Float){}[0]
final fun androidx.compose.foundation.shape/AbsoluteCutCornerShape(kotlin/Int = ..., kotlin/Int = ..., kotlin/Int = ..., kotlin/Int = ...): androidx.compose.foundation.shape/AbsoluteCutCornerShape // androidx.compose.foundation.shape/AbsoluteCutCornerShape|AbsoluteCutCornerShape(kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.shape/AbsoluteCutCornerShape(kotlin/Int): androidx.compose.foundation.shape/AbsoluteCutCornerShape // androidx.compose.foundation.shape/AbsoluteCutCornerShape|AbsoluteCutCornerShape(kotlin.Int){}[0]
final fun androidx.compose.foundation.shape/AbsoluteRoundedCornerShape(androidx.compose.foundation.shape/CornerSize): androidx.compose.foundation.shape/AbsoluteRoundedCornerShape // androidx.compose.foundation.shape/AbsoluteRoundedCornerShape|AbsoluteRoundedCornerShape(androidx.compose.foundation.shape.CornerSize){}[0]
final fun androidx.compose.foundation.shape/AbsoluteRoundedCornerShape(androidx.compose.ui.unit/Dp = ..., androidx.compose.ui.unit/Dp = ..., androidx.compose.ui.unit/Dp = ..., androidx.compose.ui.unit/Dp = ...): androidx.compose.foundation.shape/AbsoluteRoundedCornerShape // androidx.compose.foundation.shape/AbsoluteRoundedCornerShape|AbsoluteRoundedCornerShape(androidx.compose.ui.unit.Dp;androidx.compose.ui.unit.Dp;androidx.compose.ui.unit.Dp;androidx.compose.ui.unit.Dp){}[0]
final fun androidx.compose.foundation.shape/AbsoluteRoundedCornerShape(androidx.compose.ui.unit/Dp): androidx.compose.foundation.shape/AbsoluteRoundedCornerShape // androidx.compose.foundation.shape/AbsoluteRoundedCornerShape|AbsoluteRoundedCornerShape(androidx.compose.ui.unit.Dp){}[0]
final fun androidx.compose.foundation.shape/AbsoluteRoundedCornerShape(kotlin/Float = ..., kotlin/Float = ..., kotlin/Float = ..., kotlin/Float = ...): androidx.compose.foundation.shape/AbsoluteRoundedCornerShape // androidx.compose.foundation.shape/AbsoluteRoundedCornerShape|AbsoluteRoundedCornerShape(kotlin.Float;kotlin.Float;kotlin.Float;kotlin.Float){}[0]
final fun androidx.compose.foundation.shape/AbsoluteRoundedCornerShape(kotlin/Float): androidx.compose.foundation.shape/AbsoluteRoundedCornerShape // androidx.compose.foundation.shape/AbsoluteRoundedCornerShape|AbsoluteRoundedCornerShape(kotlin.Float){}[0]
final fun androidx.compose.foundation.shape/AbsoluteRoundedCornerShape(kotlin/Int = ..., kotlin/Int = ..., kotlin/Int = ..., kotlin/Int = ...): androidx.compose.foundation.shape/AbsoluteRoundedCornerShape // androidx.compose.foundation.shape/AbsoluteRoundedCornerShape|AbsoluteRoundedCornerShape(kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.shape/AbsoluteRoundedCornerShape(kotlin/Int): androidx.compose.foundation.shape/AbsoluteRoundedCornerShape // androidx.compose.foundation.shape/AbsoluteRoundedCornerShape|AbsoluteRoundedCornerShape(kotlin.Int){}[0]
final fun androidx.compose.foundation.shape/CornerSize(androidx.compose.ui.unit/Dp): androidx.compose.foundation.shape/CornerSize // androidx.compose.foundation.shape/CornerSize|CornerSize(androidx.compose.ui.unit.Dp){}[0]
final fun androidx.compose.foundation.shape/CornerSize(kotlin/Float): androidx.compose.foundation.shape/CornerSize // androidx.compose.foundation.shape/CornerSize|CornerSize(kotlin.Float){}[0]
final fun androidx.compose.foundation.shape/CornerSize(kotlin/Int): androidx.compose.foundation.shape/CornerSize // androidx.compose.foundation.shape/CornerSize|CornerSize(kotlin.Int){}[0]
final fun androidx.compose.foundation.shape/CutCornerShape(androidx.compose.foundation.shape/CornerSize): androidx.compose.foundation.shape/CutCornerShape // androidx.compose.foundation.shape/CutCornerShape|CutCornerShape(androidx.compose.foundation.shape.CornerSize){}[0]
final fun androidx.compose.foundation.shape/CutCornerShape(androidx.compose.ui.unit/Dp = ..., androidx.compose.ui.unit/Dp = ..., androidx.compose.ui.unit/Dp = ..., androidx.compose.ui.unit/Dp = ...): androidx.compose.foundation.shape/CutCornerShape // androidx.compose.foundation.shape/CutCornerShape|CutCornerShape(androidx.compose.ui.unit.Dp;androidx.compose.ui.unit.Dp;androidx.compose.ui.unit.Dp;androidx.compose.ui.unit.Dp){}[0]
final fun androidx.compose.foundation.shape/CutCornerShape(androidx.compose.ui.unit/Dp): androidx.compose.foundation.shape/CutCornerShape // androidx.compose.foundation.shape/CutCornerShape|CutCornerShape(androidx.compose.ui.unit.Dp){}[0]
final fun androidx.compose.foundation.shape/CutCornerShape(kotlin/Float = ..., kotlin/Float = ..., kotlin/Float = ..., kotlin/Float = ...): androidx.compose.foundation.shape/CutCornerShape // androidx.compose.foundation.shape/CutCornerShape|CutCornerShape(kotlin.Float;kotlin.Float;kotlin.Float;kotlin.Float){}[0]
final fun androidx.compose.foundation.shape/CutCornerShape(kotlin/Float): androidx.compose.foundation.shape/CutCornerShape // androidx.compose.foundation.shape/CutCornerShape|CutCornerShape(kotlin.Float){}[0]
final fun androidx.compose.foundation.shape/CutCornerShape(kotlin/Int = ..., kotlin/Int = ..., kotlin/Int = ..., kotlin/Int = ...): androidx.compose.foundation.shape/CutCornerShape // androidx.compose.foundation.shape/CutCornerShape|CutCornerShape(kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.shape/CutCornerShape(kotlin/Int): androidx.compose.foundation.shape/CutCornerShape // androidx.compose.foundation.shape/CutCornerShape|CutCornerShape(kotlin.Int){}[0]
final fun androidx.compose.foundation.shape/RoundedCornerShape(androidx.compose.foundation.shape/CornerSize): androidx.compose.foundation.shape/RoundedCornerShape // androidx.compose.foundation.shape/RoundedCornerShape|RoundedCornerShape(androidx.compose.foundation.shape.CornerSize){}[0]
final fun androidx.compose.foundation.shape/RoundedCornerShape(androidx.compose.ui.unit/Dp = ..., androidx.compose.ui.unit/Dp = ..., androidx.compose.ui.unit/Dp = ..., androidx.compose.ui.unit/Dp = ...): androidx.compose.foundation.shape/RoundedCornerShape // androidx.compose.foundation.shape/RoundedCornerShape|RoundedCornerShape(androidx.compose.ui.unit.Dp;androidx.compose.ui.unit.Dp;androidx.compose.ui.unit.Dp;androidx.compose.ui.unit.Dp){}[0]
final fun androidx.compose.foundation.shape/RoundedCornerShape(androidx.compose.ui.unit/Dp): androidx.compose.foundation.shape/RoundedCornerShape // androidx.compose.foundation.shape/RoundedCornerShape|RoundedCornerShape(androidx.compose.ui.unit.Dp){}[0]
final fun androidx.compose.foundation.shape/RoundedCornerShape(kotlin/Float = ..., kotlin/Float = ..., kotlin/Float = ..., kotlin/Float = ...): androidx.compose.foundation.shape/RoundedCornerShape // androidx.compose.foundation.shape/RoundedCornerShape|RoundedCornerShape(kotlin.Float;kotlin.Float;kotlin.Float;kotlin.Float){}[0]
final fun androidx.compose.foundation.shape/RoundedCornerShape(kotlin/Float): androidx.compose.foundation.shape/RoundedCornerShape // androidx.compose.foundation.shape/RoundedCornerShape|RoundedCornerShape(kotlin.Float){}[0]
final fun androidx.compose.foundation.shape/RoundedCornerShape(kotlin/Int = ..., kotlin/Int = ..., kotlin/Int = ..., kotlin/Int = ...): androidx.compose.foundation.shape/RoundedCornerShape // androidx.compose.foundation.shape/RoundedCornerShape|RoundedCornerShape(kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.shape/RoundedCornerShape(kotlin/Int): androidx.compose.foundation.shape/RoundedCornerShape // androidx.compose.foundation.shape/RoundedCornerShape|RoundedCornerShape(kotlin.Int){}[0]
final fun androidx.compose.foundation.shape/androidx_compose_foundation_shape_AbsoluteCutCornerShape$stableprop_getter(): kotlin/Int // androidx.compose.foundation.shape/androidx_compose_foundation_shape_AbsoluteCutCornerShape$stableprop_getter|androidx_compose_foundation_shape_AbsoluteCutCornerShape$stableprop_getter(){}[0]
final fun androidx.compose.foundation.shape/androidx_compose_foundation_shape_AbsoluteRoundedCornerShape$stableprop_getter(): kotlin/Int // androidx.compose.foundation.shape/androidx_compose_foundation_shape_AbsoluteRoundedCornerShape$stableprop_getter|androidx_compose_foundation_shape_AbsoluteRoundedCornerShape$stableprop_getter(){}[0]
final fun androidx.compose.foundation.shape/androidx_compose_foundation_shape_CornerBasedShape$stableprop_getter(): kotlin/Int // androidx.compose.foundation.shape/androidx_compose_foundation_shape_CornerBasedShape$stableprop_getter|androidx_compose_foundation_shape_CornerBasedShape$stableprop_getter(){}[0]
final fun androidx.compose.foundation.shape/androidx_compose_foundation_shape_CutCornerShape$stableprop_getter(): kotlin/Int // androidx.compose.foundation.shape/androidx_compose_foundation_shape_CutCornerShape$stableprop_getter|androidx_compose_foundation_shape_CutCornerShape$stableprop_getter(){}[0]
final fun androidx.compose.foundation.shape/androidx_compose_foundation_shape_GenericShape$stableprop_getter(): kotlin/Int // androidx.compose.foundation.shape/androidx_compose_foundation_shape_GenericShape$stableprop_getter|androidx_compose_foundation_shape_GenericShape$stableprop_getter(){}[0]
final fun androidx.compose.foundation.shape/androidx_compose_foundation_shape_RoundedCornerShape$stableprop_getter(): kotlin/Int // androidx.compose.foundation.shape/androidx_compose_foundation_shape_RoundedCornerShape$stableprop_getter|androidx_compose_foundation_shape_RoundedCornerShape$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.contextmenu.builder/androidx_compose_foundation_text_contextmenu_builder_TextContextMenuBuilderScope$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.contextmenu.builder/androidx_compose_foundation_text_contextmenu_builder_TextContextMenuBuilderScope$stableprop_getter|androidx_compose_foundation_text_contextmenu_builder_TextContextMenuBuilderScope$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.contextmenu.data/androidx_compose_foundation_text_contextmenu_data_TextContextMenuComponent$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.contextmenu.data/androidx_compose_foundation_text_contextmenu_data_TextContextMenuComponent$stableprop_getter|androidx_compose_foundation_text_contextmenu_data_TextContextMenuComponent$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.contextmenu.data/androidx_compose_foundation_text_contextmenu_data_TextContextMenuData$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.contextmenu.data/androidx_compose_foundation_text_contextmenu_data_TextContextMenuData$stableprop_getter|androidx_compose_foundation_text_contextmenu_data_TextContextMenuData$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.contextmenu.data/androidx_compose_foundation_text_contextmenu_data_TextContextMenuKeys$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.contextmenu.data/androidx_compose_foundation_text_contextmenu_data_TextContextMenuKeys$stableprop_getter|androidx_compose_foundation_text_contextmenu_data_TextContextMenuKeys$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.contextmenu.data/androidx_compose_foundation_text_contextmenu_data_TextContextMenuSeparator$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.contextmenu.data/androidx_compose_foundation_text_contextmenu_data_TextContextMenuSeparator$stableprop_getter|androidx_compose_foundation_text_contextmenu_data_TextContextMenuSeparator$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.contextmenu.modifier/androidx_compose_foundation_text_contextmenu_modifier_AddTextContextMenuDataComponentsNode$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.contextmenu.modifier/androidx_compose_foundation_text_contextmenu_modifier_AddTextContextMenuDataComponentsNode$stableprop_getter|androidx_compose_foundation_text_contextmenu_modifier_AddTextContextMenuDataComponentsNode$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.contextmenu.modifier/androidx_compose_foundation_text_contextmenu_modifier_TextContextMenuToolbarHandlerNode$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.contextmenu.modifier/androidx_compose_foundation_text_contextmenu_modifier_TextContextMenuToolbarHandlerNode$stableprop_getter|androidx_compose_foundation_text_contextmenu_modifier_TextContextMenuToolbarHandlerNode$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.contextmenu.modifier/androidx_compose_foundation_text_contextmenu_modifier_ToolbarRequester$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.contextmenu.modifier/androidx_compose_foundation_text_contextmenu_modifier_ToolbarRequester$stableprop_getter|androidx_compose_foundation_text_contextmenu_modifier_ToolbarRequester$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.contextmenu.modifier/androidx_compose_foundation_text_contextmenu_modifier_ToolbarRequesterImpl$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.contextmenu.modifier/androidx_compose_foundation_text_contextmenu_modifier_ToolbarRequesterImpl$stableprop_getter|androidx_compose_foundation_text_contextmenu_modifier_ToolbarRequesterImpl$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.contextmenu.provider/androidx_compose_foundation_text_contextmenu_provider_BasicTextContextMenuProvider$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.contextmenu.provider/androidx_compose_foundation_text_contextmenu_provider_BasicTextContextMenuProvider$stableprop_getter|androidx_compose_foundation_text_contextmenu_provider_BasicTextContextMenuProvider$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.handwriting/androidx_compose_foundation_text_handwriting_StylusHandwritingNode$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.handwriting/androidx_compose_foundation_text_handwriting_StylusHandwritingNode$stableprop_getter|androidx_compose_foundation_text_handwriting_StylusHandwritingNode$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.input.internal.selection/androidx_compose_foundation_text_input_internal_selection_SelectionMovementDeletionContext$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.input.internal.selection/androidx_compose_foundation_text_input_internal_selection_SelectionMovementDeletionContext$stableprop_getter|androidx_compose_foundation_text_input_internal_selection_SelectionMovementDeletionContext$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.input.internal.selection/androidx_compose_foundation_text_input_internal_selection_TextFieldHandleState$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.input.internal.selection/androidx_compose_foundation_text_input_internal_selection_TextFieldHandleState$stableprop_getter|androidx_compose_foundation_text_input_internal_selection_TextFieldHandleState$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.input.internal.selection/androidx_compose_foundation_text_input_internal_selection_TextFieldMagnifierNode$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.input.internal.selection/androidx_compose_foundation_text_input_internal_selection_TextFieldMagnifierNode$stableprop_getter|androidx_compose_foundation_text_input_internal_selection_TextFieldMagnifierNode$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.input.internal.selection/androidx_compose_foundation_text_input_internal_selection_TextFieldPreparedSelectionState$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.input.internal.selection/androidx_compose_foundation_text_input_internal_selection_TextFieldPreparedSelectionState$stableprop_getter|androidx_compose_foundation_text_input_internal_selection_TextFieldPreparedSelectionState$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.input.internal.selection/androidx_compose_foundation_text_input_internal_selection_TextFieldSelectionState$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.input.internal.selection/androidx_compose_foundation_text_input_internal_selection_TextFieldSelectionState$stableprop_getter|androidx_compose_foundation_text_input_internal_selection_TextFieldSelectionState$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.input.internal.undo/androidx_compose_foundation_text_input_internal_undo_TextUndoOperation$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.input.internal.undo/androidx_compose_foundation_text_input_internal_undo_TextUndoOperation$stableprop_getter|androidx_compose_foundation_text_input_internal_undo_TextUndoOperation$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.input.internal.undo/androidx_compose_foundation_text_input_internal_undo_UndoManager$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.input.internal.undo/androidx_compose_foundation_text_input_internal_undo_UndoManager$stableprop_getter|androidx_compose_foundation_text_input_internal_undo_UndoManager$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_ChangeTracker$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_ChangeTracker$stableprop_getter|androidx_compose_foundation_text_input_internal_ChangeTracker$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_CoreTextFieldSemanticsModifier$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_CoreTextFieldSemanticsModifier$stableprop_getter|androidx_compose_foundation_text_input_internal_CoreTextFieldSemanticsModifier$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_CoreTextFieldSemanticsModifierNode$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_CoreTextFieldSemanticsModifierNode$stableprop_getter|androidx_compose_foundation_text_input_internal_CoreTextFieldSemanticsModifierNode$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_CursorAnimationState$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_CursorAnimationState$stableprop_getter|androidx_compose_foundation_text_input_internal_CursorAnimationState$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_LegacyAdaptingPlatformTextInputModifierNode$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_LegacyAdaptingPlatformTextInputModifierNode$stableprop_getter|androidx_compose_foundation_text_input_internal_LegacyAdaptingPlatformTextInputModifierNode$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_LegacyPlatformTextInputServiceAdapter$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_LegacyPlatformTextInputServiceAdapter$stableprop_getter|androidx_compose_foundation_text_input_internal_LegacyPlatformTextInputServiceAdapter$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_OffsetMappingCalculator$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_OffsetMappingCalculator$stableprop_getter|androidx_compose_foundation_text_input_internal_OffsetMappingCalculator$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_PartialGapBuffer$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_PartialGapBuffer$stableprop_getter|androidx_compose_foundation_text_input_internal_PartialGapBuffer$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_SelectionWedgeAffinity$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_SelectionWedgeAffinity$stableprop_getter|androidx_compose_foundation_text_input_internal_SelectionWedgeAffinity$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_SingleLineCodepointTransformation$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_SingleLineCodepointTransformation$stableprop_getter|androidx_compose_foundation_text_input_internal_SingleLineCodepointTransformation$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_TextFieldCoreModifier$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_TextFieldCoreModifier$stableprop_getter|androidx_compose_foundation_text_input_internal_TextFieldCoreModifier$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_TextFieldCoreModifierNode$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_TextFieldCoreModifierNode$stableprop_getter|androidx_compose_foundation_text_input_internal_TextFieldCoreModifierNode$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_TextFieldDecoratorModifier$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_TextFieldDecoratorModifier$stableprop_getter|androidx_compose_foundation_text_input_internal_TextFieldDecoratorModifier$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_TextFieldDecoratorModifierNode$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_TextFieldDecoratorModifierNode$stableprop_getter|androidx_compose_foundation_text_input_internal_TextFieldDecoratorModifierNode$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_TextFieldKeyEventHandler$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_TextFieldKeyEventHandler$stableprop_getter|androidx_compose_foundation_text_input_internal_TextFieldKeyEventHandler$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_TextFieldLayoutStateCache$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_TextFieldLayoutStateCache$stableprop_getter|androidx_compose_foundation_text_input_internal_TextFieldLayoutStateCache$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_TextFieldTextLayoutModifier$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_TextFieldTextLayoutModifier$stableprop_getter|androidx_compose_foundation_text_input_internal_TextFieldTextLayoutModifier$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_TextFieldTextLayoutModifierNode$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_TextFieldTextLayoutModifierNode$stableprop_getter|androidx_compose_foundation_text_input_internal_TextFieldTextLayoutModifierNode$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_TextLayoutState$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_TextLayoutState$stableprop_getter|androidx_compose_foundation_text_input_internal_TextLayoutState$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_TransformedTextFieldState$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.input.internal/androidx_compose_foundation_text_input_internal_TransformedTextFieldState$stableprop_getter|androidx_compose_foundation_text_input_internal_TransformedTextFieldState$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.input/androidx_compose_foundation_text_input_TextFieldBuffer$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.input/androidx_compose_foundation_text_input_TextFieldBuffer$stableprop_getter|androidx_compose_foundation_text_input_TextFieldBuffer$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.input/androidx_compose_foundation_text_input_TextFieldCharSequence$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.input/androidx_compose_foundation_text_input_TextFieldCharSequence$stableprop_getter|androidx_compose_foundation_text_input_TextFieldCharSequence$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.input/androidx_compose_foundation_text_input_TextFieldLineLimits_MultiLine$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.input/androidx_compose_foundation_text_input_TextFieldLineLimits_MultiLine$stableprop_getter|androidx_compose_foundation_text_input_TextFieldLineLimits_MultiLine$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.input/androidx_compose_foundation_text_input_TextFieldLineLimits_SingleLine$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.input/androidx_compose_foundation_text_input_TextFieldLineLimits_SingleLine$stableprop_getter|androidx_compose_foundation_text_input_TextFieldLineLimits_SingleLine$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.input/androidx_compose_foundation_text_input_TextFieldState$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.input/androidx_compose_foundation_text_input_TextFieldState$stableprop_getter|androidx_compose_foundation_text_input_TextFieldState$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.input/androidx_compose_foundation_text_input_TextFieldState_Saver$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.input/androidx_compose_foundation_text_input_TextFieldState_Saver$stableprop_getter|androidx_compose_foundation_text_input_TextFieldState_Saver$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.input/androidx_compose_foundation_text_input_TextUndoManager$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.input/androidx_compose_foundation_text_input_TextUndoManager$stableprop_getter|androidx_compose_foundation_text_input_TextUndoManager$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.input/androidx_compose_foundation_text_input_TextUndoManager_Companion_Saver$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.input/androidx_compose_foundation_text_input_TextUndoManager_Companion_Saver$stableprop_getter|androidx_compose_foundation_text_input_TextUndoManager_Companion_Saver$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.input/androidx_compose_foundation_text_input_UndoState$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.input/androidx_compose_foundation_text_input_UndoState$stableprop_getter|androidx_compose_foundation_text_input_UndoState$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.input/rememberTextFieldState(kotlin/String?, androidx.compose.ui.text/TextRange, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int): androidx.compose.foundation.text.input/TextFieldState // androidx.compose.foundation.text.input/rememberTextFieldState|rememberTextFieldState(kotlin.String?;androidx.compose.ui.text.TextRange;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_MinLinesConstrainer$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_MinLinesConstrainer$stableprop_getter|androidx_compose_foundation_text_modifiers_MinLinesConstrainer$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_MultiParagraphLayoutCache$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_MultiParagraphLayoutCache$stableprop_getter|androidx_compose_foundation_text_modifiers_MultiParagraphLayoutCache$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_ParagraphLayoutCache$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_ParagraphLayoutCache$stableprop_getter|androidx_compose_foundation_text_modifiers_ParagraphLayoutCache$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_SelectableTextAnnotatedStringElement$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_SelectableTextAnnotatedStringElement$stableprop_getter|androidx_compose_foundation_text_modifiers_SelectableTextAnnotatedStringElement$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_SelectableTextAnnotatedStringNode$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_SelectableTextAnnotatedStringNode$stableprop_getter|androidx_compose_foundation_text_modifiers_SelectableTextAnnotatedStringNode$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_SelectionController$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_SelectionController$stableprop_getter|androidx_compose_foundation_text_modifiers_SelectionController$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_SimpleTextAutoSizeLayoutScope$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_SimpleTextAutoSizeLayoutScope$stableprop_getter|androidx_compose_foundation_text_modifiers_SimpleTextAutoSizeLayoutScope$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_StaticTextSelectionParams$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_StaticTextSelectionParams$stableprop_getter|androidx_compose_foundation_text_modifiers_StaticTextSelectionParams$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_TextAnnotatedStringElement$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_TextAnnotatedStringElement$stableprop_getter|androidx_compose_foundation_text_modifiers_TextAnnotatedStringElement$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_TextAnnotatedStringNode$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_TextAnnotatedStringNode$stableprop_getter|androidx_compose_foundation_text_modifiers_TextAnnotatedStringNode$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_TextAnnotatedStringNode_TextSubstitutionValue$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_TextAnnotatedStringNode_TextSubstitutionValue$stableprop_getter|androidx_compose_foundation_text_modifiers_TextAnnotatedStringNode_TextSubstitutionValue$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_TextStringSimpleElement$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_TextStringSimpleElement$stableprop_getter|androidx_compose_foundation_text_modifiers_TextStringSimpleElement$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_TextStringSimpleNode$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_TextStringSimpleNode$stableprop_getter|androidx_compose_foundation_text_modifiers_TextStringSimpleNode$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_TextStringSimpleNode_TextSubstitutionValue$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.modifiers/androidx_compose_foundation_text_modifiers_TextStringSimpleNode_TextSubstitutionValue$stableprop_getter|androidx_compose_foundation_text_modifiers_TextStringSimpleNode_TextSubstitutionValue$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.selection/DisableSelection(kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int) // androidx.compose.foundation.text.selection/DisableSelection|DisableSelection(kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int){}[0]
final fun androidx.compose.foundation.text.selection/SelectionContainer(androidx.compose.ui/Modifier?, kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // androidx.compose.foundation.text.selection/SelectionContainer|SelectionContainer(androidx.compose.ui.Modifier?;kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_BaseTextPreparedSelection$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_BaseTextPreparedSelection$stableprop_getter|androidx_compose_foundation_text_selection_BaseTextPreparedSelection$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_HandlePositionProvider$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_HandlePositionProvider$stableprop_getter|androidx_compose_foundation_text_selection_HandlePositionProvider$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_MultiWidgetSelectionDelegate$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_MultiWidgetSelectionDelegate$stableprop_getter|androidx_compose_foundation_text_selection_MultiWidgetSelectionDelegate$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_SelectableInfo$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_SelectableInfo$stableprop_getter|androidx_compose_foundation_text_selection_SelectableInfo$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_Selection$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_Selection$stableprop_getter|androidx_compose_foundation_text_selection_Selection$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_SelectionHandleInfo$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_SelectionHandleInfo$stableprop_getter|androidx_compose_foundation_text_selection_SelectionHandleInfo$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_SelectionLayoutBuilder$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_SelectionLayoutBuilder$stableprop_getter|androidx_compose_foundation_text_selection_SelectionLayoutBuilder$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_SelectionManager$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_SelectionManager$stableprop_getter|androidx_compose_foundation_text_selection_SelectionManager$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_SelectionRegistrarImpl$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_SelectionRegistrarImpl$stableprop_getter|androidx_compose_foundation_text_selection_SelectionRegistrarImpl$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_Selection_AnchorInfo$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_Selection_AnchorInfo$stableprop_getter|androidx_compose_foundation_text_selection_Selection_AnchorInfo$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_TextFieldPreparedSelection$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_TextFieldPreparedSelection$stableprop_getter|androidx_compose_foundation_text_selection_TextFieldPreparedSelection$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_TextFieldSelectionManager$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_TextFieldSelectionManager$stableprop_getter|androidx_compose_foundation_text_selection_TextFieldSelectionManager$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_TextPreparedSelection$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_TextPreparedSelection$stableprop_getter|androidx_compose_foundation_text_selection_TextPreparedSelection$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_TextPreparedSelectionState$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_TextPreparedSelectionState$stableprop_getter|androidx_compose_foundation_text_selection_TextPreparedSelectionState$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_TextSelectionColors$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text.selection/androidx_compose_foundation_text_selection_TextSelectionColors$stableprop_getter|androidx_compose_foundation_text_selection_TextSelectionColors$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text/BasicSecureTextField(androidx.compose.foundation.text.input/TextFieldState, androidx.compose.ui/Modifier?, kotlin/Boolean, androidx.compose.foundation.text.input/InputTransformation?, androidx.compose.ui.text/TextStyle?, androidx.compose.foundation.text/KeyboardOptions?, androidx.compose.foundation.text.input/KeyboardActionHandler?, kotlin/Function2<androidx.compose.ui.unit/Density, kotlin/Function0<androidx.compose.ui.text/TextLayoutResult?>, kotlin/Unit>?, androidx.compose.foundation.interaction/MutableInteractionSource?, androidx.compose.ui.graphics/Brush?, androidx.compose.foundation.text.input/TextFieldDecorator?, androidx.compose.foundation.text.input/TextObfuscationMode, kotlin/Char, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int, kotlin/Int) // androidx.compose.foundation.text/BasicSecureTextField|BasicSecureTextField(androidx.compose.foundation.text.input.TextFieldState;androidx.compose.ui.Modifier?;kotlin.Boolean;androidx.compose.foundation.text.input.InputTransformation?;androidx.compose.ui.text.TextStyle?;androidx.compose.foundation.text.KeyboardOptions?;androidx.compose.foundation.text.input.KeyboardActionHandler?;kotlin.Function2<androidx.compose.ui.unit.Density,kotlin.Function0<androidx.compose.ui.text.TextLayoutResult?>,kotlin.Unit>?;androidx.compose.foundation.interaction.MutableInteractionSource?;androidx.compose.ui.graphics.Brush?;androidx.compose.foundation.text.input.TextFieldDecorator?;androidx.compose.foundation.text.input.TextObfuscationMode;kotlin.Char;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.text/BasicSecureTextField(androidx.compose.foundation.text.input/TextFieldState, androidx.compose.ui/Modifier?, kotlin/Boolean, kotlin/Boolean, androidx.compose.foundation.text.input/InputTransformation?, androidx.compose.ui.text/TextStyle?, androidx.compose.foundation.text/KeyboardOptions?, androidx.compose.foundation.text.input/KeyboardActionHandler?, kotlin/Function2<androidx.compose.ui.unit/Density, kotlin/Function0<androidx.compose.ui.text/TextLayoutResult?>, kotlin/Unit>?, androidx.compose.foundation.interaction/MutableInteractionSource?, androidx.compose.ui.graphics/Brush?, androidx.compose.foundation.text.input/TextFieldDecorator?, androidx.compose.foundation.text.input/TextObfuscationMode, kotlin/Char, androidx.compose.foundation/ScrollState?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int, kotlin/Int) // androidx.compose.foundation.text/BasicSecureTextField|BasicSecureTextField(androidx.compose.foundation.text.input.TextFieldState;androidx.compose.ui.Modifier?;kotlin.Boolean;kotlin.Boolean;androidx.compose.foundation.text.input.InputTransformation?;androidx.compose.ui.text.TextStyle?;androidx.compose.foundation.text.KeyboardOptions?;androidx.compose.foundation.text.input.KeyboardActionHandler?;kotlin.Function2<androidx.compose.ui.unit.Density,kotlin.Function0<androidx.compose.ui.text.TextLayoutResult?>,kotlin.Unit>?;androidx.compose.foundation.interaction.MutableInteractionSource?;androidx.compose.ui.graphics.Brush?;androidx.compose.foundation.text.input.TextFieldDecorator?;androidx.compose.foundation.text.input.TextObfuscationMode;kotlin.Char;androidx.compose.foundation.ScrollState?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.text/BasicSecureTextField(androidx.compose.foundation.text.input/TextFieldState, androidx.compose.ui/Modifier?, kotlin/Boolean, kotlin/Boolean, androidx.compose.foundation.text.input/InputTransformation?, androidx.compose.ui.text/TextStyle?, androidx.compose.foundation.text/KeyboardOptions?, androidx.compose.foundation.text.input/KeyboardActionHandler?, kotlin/Function2<androidx.compose.ui.unit/Density, kotlin/Function0<androidx.compose.ui.text/TextLayoutResult?>, kotlin/Unit>?, androidx.compose.foundation.interaction/MutableInteractionSource?, androidx.compose.ui.graphics/Brush?, androidx.compose.foundation.text.input/TextFieldDecorator?, androidx.compose.foundation.text.input/TextObfuscationMode, kotlin/Char, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int, kotlin/Int) // androidx.compose.foundation.text/BasicSecureTextField|BasicSecureTextField(androidx.compose.foundation.text.input.TextFieldState;androidx.compose.ui.Modifier?;kotlin.Boolean;kotlin.Boolean;androidx.compose.foundation.text.input.InputTransformation?;androidx.compose.ui.text.TextStyle?;androidx.compose.foundation.text.KeyboardOptions?;androidx.compose.foundation.text.input.KeyboardActionHandler?;kotlin.Function2<androidx.compose.ui.unit.Density,kotlin.Function0<androidx.compose.ui.text.TextLayoutResult?>,kotlin.Unit>?;androidx.compose.foundation.interaction.MutableInteractionSource?;androidx.compose.ui.graphics.Brush?;androidx.compose.foundation.text.input.TextFieldDecorator?;androidx.compose.foundation.text.input.TextObfuscationMode;kotlin.Char;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.text/BasicText(androidx.compose.ui.text/AnnotatedString, androidx.compose.ui/Modifier?, androidx.compose.ui.text/TextStyle?, kotlin/Function1<androidx.compose.ui.text/TextLayoutResult, kotlin/Unit>?, androidx.compose.ui.text.style/TextOverflow, kotlin/Boolean, kotlin/Int, kotlin.collections/Map<kotlin/String, androidx.compose.foundation.text/InlineTextContent>?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // androidx.compose.foundation.text/BasicText|BasicText(androidx.compose.ui.text.AnnotatedString;androidx.compose.ui.Modifier?;androidx.compose.ui.text.TextStyle?;kotlin.Function1<androidx.compose.ui.text.TextLayoutResult,kotlin.Unit>?;androidx.compose.ui.text.style.TextOverflow;kotlin.Boolean;kotlin.Int;kotlin.collections.Map<kotlin.String,androidx.compose.foundation.text.InlineTextContent>?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.text/BasicText(androidx.compose.ui.text/AnnotatedString, androidx.compose.ui/Modifier?, androidx.compose.ui.text/TextStyle?, kotlin/Function1<androidx.compose.ui.text/TextLayoutResult, kotlin/Unit>?, androidx.compose.ui.text.style/TextOverflow, kotlin/Boolean, kotlin/Int, kotlin/Int, kotlin.collections/Map<kotlin/String, androidx.compose.foundation.text/InlineTextContent>?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // androidx.compose.foundation.text/BasicText|BasicText(androidx.compose.ui.text.AnnotatedString;androidx.compose.ui.Modifier?;androidx.compose.ui.text.TextStyle?;kotlin.Function1<androidx.compose.ui.text.TextLayoutResult,kotlin.Unit>?;androidx.compose.ui.text.style.TextOverflow;kotlin.Boolean;kotlin.Int;kotlin.Int;kotlin.collections.Map<kotlin.String,androidx.compose.foundation.text.InlineTextContent>?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.text/BasicText(androidx.compose.ui.text/AnnotatedString, androidx.compose.ui/Modifier?, androidx.compose.ui.text/TextStyle?, kotlin/Function1<androidx.compose.ui.text/TextLayoutResult, kotlin/Unit>?, androidx.compose.ui.text.style/TextOverflow, kotlin/Boolean, kotlin/Int, kotlin/Int, kotlin.collections/Map<kotlin/String, androidx.compose.foundation.text/InlineTextContent>?, androidx.compose.ui.graphics/ColorProducer?, androidx.compose.foundation.text/TextAutoSize?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int, kotlin/Int) // androidx.compose.foundation.text/BasicText|BasicText(androidx.compose.ui.text.AnnotatedString;androidx.compose.ui.Modifier?;androidx.compose.ui.text.TextStyle?;kotlin.Function1<androidx.compose.ui.text.TextLayoutResult,kotlin.Unit>?;androidx.compose.ui.text.style.TextOverflow;kotlin.Boolean;kotlin.Int;kotlin.Int;kotlin.collections.Map<kotlin.String,androidx.compose.foundation.text.InlineTextContent>?;androidx.compose.ui.graphics.ColorProducer?;androidx.compose.foundation.text.TextAutoSize?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.text/BasicText(androidx.compose.ui.text/AnnotatedString, androidx.compose.ui/Modifier?, androidx.compose.ui.text/TextStyle?, kotlin/Function1<androidx.compose.ui.text/TextLayoutResult, kotlin/Unit>?, androidx.compose.ui.text.style/TextOverflow, kotlin/Boolean, kotlin/Int, kotlin/Int, kotlin.collections/Map<kotlin/String, androidx.compose.foundation.text/InlineTextContent>?, androidx.compose.ui.graphics/ColorProducer?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // androidx.compose.foundation.text/BasicText|BasicText(androidx.compose.ui.text.AnnotatedString;androidx.compose.ui.Modifier?;androidx.compose.ui.text.TextStyle?;kotlin.Function1<androidx.compose.ui.text.TextLayoutResult,kotlin.Unit>?;androidx.compose.ui.text.style.TextOverflow;kotlin.Boolean;kotlin.Int;kotlin.Int;kotlin.collections.Map<kotlin.String,androidx.compose.foundation.text.InlineTextContent>?;androidx.compose.ui.graphics.ColorProducer?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.text/BasicText(kotlin/String, androidx.compose.ui/Modifier?, androidx.compose.ui.text/TextStyle?, kotlin/Function1<androidx.compose.ui.text/TextLayoutResult, kotlin/Unit>?, androidx.compose.ui.text.style/TextOverflow, kotlin/Boolean, kotlin/Int, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // androidx.compose.foundation.text/BasicText|BasicText(kotlin.String;androidx.compose.ui.Modifier?;androidx.compose.ui.text.TextStyle?;kotlin.Function1<androidx.compose.ui.text.TextLayoutResult,kotlin.Unit>?;androidx.compose.ui.text.style.TextOverflow;kotlin.Boolean;kotlin.Int;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.text/BasicText(kotlin/String, androidx.compose.ui/Modifier?, androidx.compose.ui.text/TextStyle?, kotlin/Function1<androidx.compose.ui.text/TextLayoutResult, kotlin/Unit>?, androidx.compose.ui.text.style/TextOverflow, kotlin/Boolean, kotlin/Int, kotlin/Int, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // androidx.compose.foundation.text/BasicText|BasicText(kotlin.String;androidx.compose.ui.Modifier?;androidx.compose.ui.text.TextStyle?;kotlin.Function1<androidx.compose.ui.text.TextLayoutResult,kotlin.Unit>?;androidx.compose.ui.text.style.TextOverflow;kotlin.Boolean;kotlin.Int;kotlin.Int;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.text/BasicText(kotlin/String, androidx.compose.ui/Modifier?, androidx.compose.ui.text/TextStyle?, kotlin/Function1<androidx.compose.ui.text/TextLayoutResult, kotlin/Unit>?, androidx.compose.ui.text.style/TextOverflow, kotlin/Boolean, kotlin/Int, kotlin/Int, androidx.compose.ui.graphics/ColorProducer?, androidx.compose.foundation.text/TextAutoSize?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // androidx.compose.foundation.text/BasicText|BasicText(kotlin.String;androidx.compose.ui.Modifier?;androidx.compose.ui.text.TextStyle?;kotlin.Function1<androidx.compose.ui.text.TextLayoutResult,kotlin.Unit>?;androidx.compose.ui.text.style.TextOverflow;kotlin.Boolean;kotlin.Int;kotlin.Int;androidx.compose.ui.graphics.ColorProducer?;androidx.compose.foundation.text.TextAutoSize?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.text/BasicText(kotlin/String, androidx.compose.ui/Modifier?, androidx.compose.ui.text/TextStyle?, kotlin/Function1<androidx.compose.ui.text/TextLayoutResult, kotlin/Unit>?, androidx.compose.ui.text.style/TextOverflow, kotlin/Boolean, kotlin/Int, kotlin/Int, androidx.compose.ui.graphics/ColorProducer?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // androidx.compose.foundation.text/BasicText|BasicText(kotlin.String;androidx.compose.ui.Modifier?;androidx.compose.ui.text.TextStyle?;kotlin.Function1<androidx.compose.ui.text.TextLayoutResult,kotlin.Unit>?;androidx.compose.ui.text.style.TextOverflow;kotlin.Boolean;kotlin.Int;kotlin.Int;androidx.compose.ui.graphics.ColorProducer?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.text/BasicTextField(androidx.compose.foundation.text.input/TextFieldState, androidx.compose.ui/Modifier?, kotlin/Boolean, kotlin/Boolean, androidx.compose.foundation.text.input/InputTransformation?, androidx.compose.ui.text/TextStyle?, androidx.compose.foundation.text/KeyboardOptions?, androidx.compose.foundation.text.input/KeyboardActionHandler?, androidx.compose.foundation.text.input/TextFieldLineLimits?, kotlin/Function2<androidx.compose.ui.unit/Density, kotlin/Function0<androidx.compose.ui.text/TextLayoutResult?>, kotlin/Unit>?, androidx.compose.foundation.interaction/MutableInteractionSource?, androidx.compose.ui.graphics/Brush?, androidx.compose.foundation.text.input/OutputTransformation?, androidx.compose.foundation.text.input/TextFieldDecorator?, androidx.compose.foundation/ScrollState?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int, kotlin/Int) // androidx.compose.foundation.text/BasicTextField|BasicTextField(androidx.compose.foundation.text.input.TextFieldState;androidx.compose.ui.Modifier?;kotlin.Boolean;kotlin.Boolean;androidx.compose.foundation.text.input.InputTransformation?;androidx.compose.ui.text.TextStyle?;androidx.compose.foundation.text.KeyboardOptions?;androidx.compose.foundation.text.input.KeyboardActionHandler?;androidx.compose.foundation.text.input.TextFieldLineLimits?;kotlin.Function2<androidx.compose.ui.unit.Density,kotlin.Function0<androidx.compose.ui.text.TextLayoutResult?>,kotlin.Unit>?;androidx.compose.foundation.interaction.MutableInteractionSource?;androidx.compose.ui.graphics.Brush?;androidx.compose.foundation.text.input.OutputTransformation?;androidx.compose.foundation.text.input.TextFieldDecorator?;androidx.compose.foundation.ScrollState?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.text/BasicTextField(androidx.compose.ui.text.input/TextFieldValue, kotlin/Function1<androidx.compose.ui.text.input/TextFieldValue, kotlin/Unit>, androidx.compose.ui/Modifier?, kotlin/Boolean, kotlin/Boolean, androidx.compose.ui.text/TextStyle?, androidx.compose.foundation.text/KeyboardOptions?, androidx.compose.foundation.text/KeyboardActions?, kotlin/Boolean, kotlin/Int, androidx.compose.ui.text.input/VisualTransformation?, kotlin/Function1<androidx.compose.ui.text/TextLayoutResult, kotlin/Unit>?, androidx.compose.foundation.interaction/MutableInteractionSource?, androidx.compose.ui.graphics/Brush?, kotlin/Function3<kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int, kotlin/Int) // androidx.compose.foundation.text/BasicTextField|BasicTextField(androidx.compose.ui.text.input.TextFieldValue;kotlin.Function1<androidx.compose.ui.text.input.TextFieldValue,kotlin.Unit>;androidx.compose.ui.Modifier?;kotlin.Boolean;kotlin.Boolean;androidx.compose.ui.text.TextStyle?;androidx.compose.foundation.text.KeyboardOptions?;androidx.compose.foundation.text.KeyboardActions?;kotlin.Boolean;kotlin.Int;androidx.compose.ui.text.input.VisualTransformation?;kotlin.Function1<androidx.compose.ui.text.TextLayoutResult,kotlin.Unit>?;androidx.compose.foundation.interaction.MutableInteractionSource?;androidx.compose.ui.graphics.Brush?;kotlin.Function3<kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.text/BasicTextField(androidx.compose.ui.text.input/TextFieldValue, kotlin/Function1<androidx.compose.ui.text.input/TextFieldValue, kotlin/Unit>, androidx.compose.ui/Modifier?, kotlin/Boolean, kotlin/Boolean, androidx.compose.ui.text/TextStyle?, androidx.compose.foundation.text/KeyboardOptions?, androidx.compose.foundation.text/KeyboardActions?, kotlin/Boolean, kotlin/Int, kotlin/Int, androidx.compose.ui.text.input/VisualTransformation?, kotlin/Function1<androidx.compose.ui.text/TextLayoutResult, kotlin/Unit>?, androidx.compose.foundation.interaction/MutableInteractionSource?, androidx.compose.ui.graphics/Brush?, kotlin/Function3<kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int, kotlin/Int) // androidx.compose.foundation.text/BasicTextField|BasicTextField(androidx.compose.ui.text.input.TextFieldValue;kotlin.Function1<androidx.compose.ui.text.input.TextFieldValue,kotlin.Unit>;androidx.compose.ui.Modifier?;kotlin.Boolean;kotlin.Boolean;androidx.compose.ui.text.TextStyle?;androidx.compose.foundation.text.KeyboardOptions?;androidx.compose.foundation.text.KeyboardActions?;kotlin.Boolean;kotlin.Int;kotlin.Int;androidx.compose.ui.text.input.VisualTransformation?;kotlin.Function1<androidx.compose.ui.text.TextLayoutResult,kotlin.Unit>?;androidx.compose.foundation.interaction.MutableInteractionSource?;androidx.compose.ui.graphics.Brush?;kotlin.Function3<kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.text/BasicTextField(kotlin/String, kotlin/Function1<kotlin/String, kotlin/Unit>, androidx.compose.ui/Modifier?, kotlin/Boolean, kotlin/Boolean, androidx.compose.ui.text/TextStyle?, androidx.compose.foundation.text/KeyboardOptions?, androidx.compose.foundation.text/KeyboardActions?, kotlin/Boolean, kotlin/Int, androidx.compose.ui.text.input/VisualTransformation?, kotlin/Function1<androidx.compose.ui.text/TextLayoutResult, kotlin/Unit>?, androidx.compose.foundation.interaction/MutableInteractionSource?, androidx.compose.ui.graphics/Brush?, kotlin/Function3<kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int, kotlin/Int) // androidx.compose.foundation.text/BasicTextField|BasicTextField(kotlin.String;kotlin.Function1<kotlin.String,kotlin.Unit>;androidx.compose.ui.Modifier?;kotlin.Boolean;kotlin.Boolean;androidx.compose.ui.text.TextStyle?;androidx.compose.foundation.text.KeyboardOptions?;androidx.compose.foundation.text.KeyboardActions?;kotlin.Boolean;kotlin.Int;androidx.compose.ui.text.input.VisualTransformation?;kotlin.Function1<androidx.compose.ui.text.TextLayoutResult,kotlin.Unit>?;androidx.compose.foundation.interaction.MutableInteractionSource?;androidx.compose.ui.graphics.Brush?;kotlin.Function3<kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.text/BasicTextField(kotlin/String, kotlin/Function1<kotlin/String, kotlin/Unit>, androidx.compose.ui/Modifier?, kotlin/Boolean, kotlin/Boolean, androidx.compose.ui.text/TextStyle?, androidx.compose.foundation.text/KeyboardOptions?, androidx.compose.foundation.text/KeyboardActions?, kotlin/Boolean, kotlin/Int, kotlin/Int, androidx.compose.ui.text.input/VisualTransformation?, kotlin/Function1<androidx.compose.ui.text/TextLayoutResult, kotlin/Unit>?, androidx.compose.foundation.interaction/MutableInteractionSource?, androidx.compose.ui.graphics/Brush?, kotlin/Function3<kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int, kotlin/Int) // androidx.compose.foundation.text/BasicTextField|BasicTextField(kotlin.String;kotlin.Function1<kotlin.String,kotlin.Unit>;androidx.compose.ui.Modifier?;kotlin.Boolean;kotlin.Boolean;androidx.compose.ui.text.TextStyle?;androidx.compose.foundation.text.KeyboardOptions?;androidx.compose.foundation.text.KeyboardActions?;kotlin.Boolean;kotlin.Int;kotlin.Int;androidx.compose.ui.text.input.VisualTransformation?;kotlin.Function1<androidx.compose.ui.text.TextLayoutResult,kotlin.Unit>?;androidx.compose.foundation.interaction.MutableInteractionSource?;androidx.compose.ui.graphics.Brush?;kotlin.Function3<kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.text/ClickableText(androidx.compose.ui.text/AnnotatedString, androidx.compose.ui/Modifier?, androidx.compose.ui.text/TextStyle?, kotlin/Boolean, androidx.compose.ui.text.style/TextOverflow, kotlin/Int, kotlin/Function1<androidx.compose.ui.text/TextLayoutResult, kotlin/Unit>?, kotlin/Function1<kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // androidx.compose.foundation.text/ClickableText|ClickableText(androidx.compose.ui.text.AnnotatedString;androidx.compose.ui.Modifier?;androidx.compose.ui.text.TextStyle?;kotlin.Boolean;androidx.compose.ui.text.style.TextOverflow;kotlin.Int;kotlin.Function1<androidx.compose.ui.text.TextLayoutResult,kotlin.Unit>?;kotlin.Function1<kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation.text/KeyboardActions(kotlin/Function1<androidx.compose.foundation.text/KeyboardActionScope, kotlin/Unit>): androidx.compose.foundation.text/KeyboardActions // androidx.compose.foundation.text/KeyboardActions|KeyboardActions(kotlin.Function1<androidx.compose.foundation.text.KeyboardActionScope,kotlin.Unit>){}[0]
final fun androidx.compose.foundation.text/androidx_compose_foundation_text_DeadKeyCombiner$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text/androidx_compose_foundation_text_DeadKeyCombiner$stableprop_getter|androidx_compose_foundation_text_DeadKeyCombiner$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text/androidx_compose_foundation_text_InlineTextContent$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text/androidx_compose_foundation_text_InlineTextContent$stableprop_getter|androidx_compose_foundation_text_InlineTextContent$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text/androidx_compose_foundation_text_KeyboardActionRunner$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text/androidx_compose_foundation_text_KeyboardActionRunner$stableprop_getter|androidx_compose_foundation_text_KeyboardActionRunner$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text/androidx_compose_foundation_text_KeyboardActions$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text/androidx_compose_foundation_text_KeyboardActions$stableprop_getter|androidx_compose_foundation_text_KeyboardActions$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text/androidx_compose_foundation_text_KeyboardOptions$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text/androidx_compose_foundation_text_KeyboardOptions$stableprop_getter|androidx_compose_foundation_text_KeyboardOptions$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text/androidx_compose_foundation_text_LegacyTextFieldState$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text/androidx_compose_foundation_text_LegacyTextFieldState$stableprop_getter|androidx_compose_foundation_text_LegacyTextFieldState$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text/androidx_compose_foundation_text_LinkStateInteractionSourceObserver$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text/androidx_compose_foundation_text_LinkStateInteractionSourceObserver$stableprop_getter|androidx_compose_foundation_text_LinkStateInteractionSourceObserver$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text/androidx_compose_foundation_text_MappedKeys$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text/androidx_compose_foundation_text_MappedKeys$stableprop_getter|androidx_compose_foundation_text_MappedKeys$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text/androidx_compose_foundation_text_PasswordInputTransformation$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text/androidx_compose_foundation_text_PasswordInputTransformation$stableprop_getter|androidx_compose_foundation_text_PasswordInputTransformation$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text/androidx_compose_foundation_text_SecureTextFieldController$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text/androidx_compose_foundation_text_SecureTextFieldController$stableprop_getter|androidx_compose_foundation_text_SecureTextFieldController$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text/androidx_compose_foundation_text_TextAutoSizeDefaults$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text/androidx_compose_foundation_text_TextAutoSizeDefaults$stableprop_getter|androidx_compose_foundation_text_TextAutoSizeDefaults$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text/androidx_compose_foundation_text_TextDelegate$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text/androidx_compose_foundation_text_TextDelegate$stableprop_getter|androidx_compose_foundation_text_TextDelegate$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text/androidx_compose_foundation_text_TextFieldDelegate$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text/androidx_compose_foundation_text_TextFieldDelegate$stableprop_getter|androidx_compose_foundation_text_TextFieldDelegate$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text/androidx_compose_foundation_text_TextFieldKeyInput$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text/androidx_compose_foundation_text_TextFieldKeyInput$stableprop_getter|androidx_compose_foundation_text_TextFieldKeyInput$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text/androidx_compose_foundation_text_TextFieldScrollerPosition$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text/androidx_compose_foundation_text_TextFieldScrollerPosition$stableprop_getter|androidx_compose_foundation_text_TextFieldScrollerPosition$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text/androidx_compose_foundation_text_TextLayoutResultProxy$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text/androidx_compose_foundation_text_TextLayoutResultProxy$stableprop_getter|androidx_compose_foundation_text_TextLayoutResultProxy$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text/androidx_compose_foundation_text_TextLinkScope$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text/androidx_compose_foundation_text_TextLinkScope$stableprop_getter|androidx_compose_foundation_text_TextLinkScope$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text/androidx_compose_foundation_text_TextRangeLayoutMeasureResult$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text/androidx_compose_foundation_text_TextRangeLayoutMeasureResult$stableprop_getter|androidx_compose_foundation_text_TextRangeLayoutMeasureResult$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text/androidx_compose_foundation_text_TextRangeLayoutMeasureScope$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text/androidx_compose_foundation_text_TextRangeLayoutMeasureScope$stableprop_getter|androidx_compose_foundation_text_TextRangeLayoutMeasureScope$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text/androidx_compose_foundation_text_TextRangeLayoutModifier$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text/androidx_compose_foundation_text_TextRangeLayoutModifier$stableprop_getter|androidx_compose_foundation_text_TextRangeLayoutModifier$stableprop_getter(){}[0]
final fun androidx.compose.foundation.text/androidx_compose_foundation_text_UndoManager$stableprop_getter(): kotlin/Int // androidx.compose.foundation.text/androidx_compose_foundation_text_UndoManager$stableprop_getter|androidx_compose_foundation_text_UndoManager$stableprop_getter(){}[0]
final fun androidx.compose.foundation/BorderStroke(androidx.compose.ui.unit/Dp, androidx.compose.ui.graphics/Color): androidx.compose.foundation/BorderStroke // androidx.compose.foundation/BorderStroke|BorderStroke(androidx.compose.ui.unit.Dp;androidx.compose.ui.graphics.Color){}[0]
final fun androidx.compose.foundation/Canvas(androidx.compose.ui/Modifier, kotlin/Function1<androidx.compose.ui.graphics.drawscope/DrawScope, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int) // androidx.compose.foundation/Canvas|Canvas(androidx.compose.ui.Modifier;kotlin.Function1<androidx.compose.ui.graphics.drawscope.DrawScope,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int){}[0]
final fun androidx.compose.foundation/Canvas(androidx.compose.ui/Modifier, kotlin/String, kotlin/Function1<androidx.compose.ui.graphics.drawscope/DrawScope, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int) // androidx.compose.foundation/Canvas|Canvas(androidx.compose.ui.Modifier;kotlin.String;kotlin.Function1<androidx.compose.ui.graphics.drawscope.DrawScope,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int){}[0]
final fun androidx.compose.foundation/Image(androidx.compose.ui.graphics.painter/Painter, kotlin/String?, androidx.compose.ui/Modifier?, androidx.compose.ui/Alignment?, androidx.compose.ui.layout/ContentScale?, kotlin/Float, androidx.compose.ui.graphics/ColorFilter?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // androidx.compose.foundation/Image|Image(androidx.compose.ui.graphics.painter.Painter;kotlin.String?;androidx.compose.ui.Modifier?;androidx.compose.ui.Alignment?;androidx.compose.ui.layout.ContentScale?;kotlin.Float;androidx.compose.ui.graphics.ColorFilter?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation/Image(androidx.compose.ui.graphics.vector/ImageVector, kotlin/String?, androidx.compose.ui/Modifier?, androidx.compose.ui/Alignment?, androidx.compose.ui.layout/ContentScale?, kotlin/Float, androidx.compose.ui.graphics/ColorFilter?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // androidx.compose.foundation/Image|Image(androidx.compose.ui.graphics.vector.ImageVector;kotlin.String?;androidx.compose.ui.Modifier?;androidx.compose.ui.Alignment?;androidx.compose.ui.layout.ContentScale?;kotlin.Float;androidx.compose.ui.graphics.ColorFilter?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation/Image(androidx.compose.ui.graphics/ImageBitmap, kotlin/String?, androidx.compose.ui/Modifier?, androidx.compose.ui/Alignment?, androidx.compose.ui.layout/ContentScale?, kotlin/Float, androidx.compose.ui.graphics/ColorFilter?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // androidx.compose.foundation/Image|Image(androidx.compose.ui.graphics.ImageBitmap;kotlin.String?;androidx.compose.ui.Modifier?;androidx.compose.ui.Alignment?;androidx.compose.ui.layout.ContentScale?;kotlin.Float;androidx.compose.ui.graphics.ColorFilter?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation/Image(androidx.compose.ui.graphics/ImageBitmap, kotlin/String?, androidx.compose.ui/Modifier?, androidx.compose.ui/Alignment?, androidx.compose.ui.layout/ContentScale?, kotlin/Float, androidx.compose.ui.graphics/ColorFilter?, androidx.compose.ui.graphics/FilterQuality, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // androidx.compose.foundation/Image|Image(androidx.compose.ui.graphics.ImageBitmap;kotlin.String?;androidx.compose.ui.Modifier?;androidx.compose.ui.Alignment?;androidx.compose.ui.layout.ContentScale?;kotlin.Float;androidx.compose.ui.graphics.ColorFilter?;androidx.compose.ui.graphics.FilterQuality;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.foundation/MarqueeSpacing(androidx.compose.ui.unit/Dp): androidx.compose.foundation/MarqueeSpacing // androidx.compose.foundation/MarqueeSpacing|MarqueeSpacing(androidx.compose.ui.unit.Dp){}[0]
final fun androidx.compose.foundation/androidx_compose_foundation_AbstractClickableNode$stableprop_getter(): kotlin/Int // androidx.compose.foundation/androidx_compose_foundation_AbstractClickableNode$stableprop_getter|androidx_compose_foundation_AbstractClickableNode$stableprop_getter(){}[0]
final fun androidx.compose.foundation/androidx_compose_foundation_AtomicLong$stableprop_getter(): kotlin/Int // androidx.compose.foundation/androidx_compose_foundation_AtomicLong$stableprop_getter|androidx_compose_foundation_AtomicLong$stableprop_getter(){}[0]
final fun androidx.compose.foundation/androidx_compose_foundation_AtomicReference$stableprop_getter(): kotlin/Int // androidx.compose.foundation/androidx_compose_foundation_AtomicReference$stableprop_getter|androidx_compose_foundation_AtomicReference$stableprop_getter(){}[0]
final fun androidx.compose.foundation/androidx_compose_foundation_BasicTooltipDefaults$stableprop_getter(): kotlin/Int // androidx.compose.foundation/androidx_compose_foundation_BasicTooltipDefaults$stableprop_getter|androidx_compose_foundation_BasicTooltipDefaults$stableprop_getter(){}[0]
final fun androidx.compose.foundation/androidx_compose_foundation_BasicTooltipStrings$stableprop_getter(): kotlin/Int // androidx.compose.foundation/androidx_compose_foundation_BasicTooltipStrings$stableprop_getter|androidx_compose_foundation_BasicTooltipStrings$stableprop_getter(){}[0]
final fun androidx.compose.foundation/androidx_compose_foundation_BorderModifierNode$stableprop_getter(): kotlin/Int // androidx.compose.foundation/androidx_compose_foundation_BorderModifierNode$stableprop_getter|androidx_compose_foundation_BorderModifierNode$stableprop_getter(){}[0]
final fun androidx.compose.foundation/androidx_compose_foundation_BorderModifierNodeElement$stableprop_getter(): kotlin/Int // androidx.compose.foundation/androidx_compose_foundation_BorderModifierNodeElement$stableprop_getter|androidx_compose_foundation_BorderModifierNodeElement$stableprop_getter(){}[0]
final fun androidx.compose.foundation/androidx_compose_foundation_BorderStroke$stableprop_getter(): kotlin/Int // androidx.compose.foundation/androidx_compose_foundation_BorderStroke$stableprop_getter|androidx_compose_foundation_BorderStroke$stableprop_getter(){}[0]
final fun androidx.compose.foundation/androidx_compose_foundation_ClickableNode$stableprop_getter(): kotlin/Int // androidx.compose.foundation/androidx_compose_foundation_ClickableNode$stableprop_getter|androidx_compose_foundation_ClickableNode$stableprop_getter(){}[0]
final fun androidx.compose.foundation/androidx_compose_foundation_CombinedClickableNode_DoubleKeyClickState$stableprop_getter(): kotlin/Int // androidx.compose.foundation/androidx_compose_foundation_CombinedClickableNode_DoubleKeyClickState$stableprop_getter|androidx_compose_foundation_CombinedClickableNode_DoubleKeyClickState$stableprop_getter(){}[0]
final fun androidx.compose.foundation/androidx_compose_foundation_ComposeFoundationFlags$stableprop_getter(): kotlin/Int // androidx.compose.foundation/androidx_compose_foundation_ComposeFoundationFlags$stableprop_getter|androidx_compose_foundation_ComposeFoundationFlags$stableprop_getter(){}[0]
final fun androidx.compose.foundation/androidx_compose_foundation_FocusableNode$stableprop_getter(): kotlin/Int // androidx.compose.foundation/androidx_compose_foundation_FocusableNode$stableprop_getter|androidx_compose_foundation_FocusableNode$stableprop_getter(){}[0]
final fun androidx.compose.foundation/androidx_compose_foundation_FocusedBoundsObserverNode$stableprop_getter(): kotlin/Int // androidx.compose.foundation/androidx_compose_foundation_FocusedBoundsObserverNode$stableprop_getter|androidx_compose_foundation_FocusedBoundsObserverNode$stableprop_getter(){}[0]
final fun androidx.compose.foundation/androidx_compose_foundation_MarqueeDefaults$stableprop_getter(): kotlin/Int // androidx.compose.foundation/androidx_compose_foundation_MarqueeDefaults$stableprop_getter|androidx_compose_foundation_MarqueeDefaults$stableprop_getter(){}[0]
final fun androidx.compose.foundation/androidx_compose_foundation_MutationInterruptedException$stableprop_getter(): kotlin/Int // androidx.compose.foundation/androidx_compose_foundation_MutationInterruptedException$stableprop_getter|androidx_compose_foundation_MutationInterruptedException$stableprop_getter(){}[0]
final fun androidx.compose.foundation/androidx_compose_foundation_MutatorMutex$stableprop_getter(): kotlin/Int // androidx.compose.foundation/androidx_compose_foundation_MutatorMutex$stableprop_getter|androidx_compose_foundation_MutatorMutex$stableprop_getter(){}[0]
final fun androidx.compose.foundation/androidx_compose_foundation_ScrollNode$stableprop_getter(): kotlin/Int // androidx.compose.foundation/androidx_compose_foundation_ScrollNode$stableprop_getter|androidx_compose_foundation_ScrollNode$stableprop_getter(){}[0]
final fun androidx.compose.foundation/androidx_compose_foundation_ScrollState$stableprop_getter(): kotlin/Int // androidx.compose.foundation/androidx_compose_foundation_ScrollState$stableprop_getter|androidx_compose_foundation_ScrollState$stableprop_getter(){}[0]
final fun androidx.compose.foundation/androidx_compose_foundation_ScrollingLayoutElement$stableprop_getter(): kotlin/Int // androidx.compose.foundation/androidx_compose_foundation_ScrollingLayoutElement$stableprop_getter|androidx_compose_foundation_ScrollingLayoutElement$stableprop_getter(){}[0]
final fun androidx.compose.foundation/checkScrollableContainerConstraints(androidx.compose.ui.unit/Constraints, androidx.compose.foundation.gestures/Orientation) // androidx.compose.foundation/checkScrollableContainerConstraints|checkScrollableContainerConstraints(androidx.compose.ui.unit.Constraints;androidx.compose.foundation.gestures.Orientation){}[0]
final fun androidx.compose.foundation/isSystemInDarkTheme(androidx.compose.runtime/Composer?, kotlin/Int): kotlin/Boolean // androidx.compose.foundation/isSystemInDarkTheme|isSystemInDarkTheme(androidx.compose.runtime.Composer?;kotlin.Int){}[0]
final fun androidx.compose.foundation/rememberOverscrollEffect(androidx.compose.runtime/Composer?, kotlin/Int): androidx.compose.foundation/OverscrollEffect? // androidx.compose.foundation/rememberOverscrollEffect|rememberOverscrollEffect(androidx.compose.runtime.Composer?;kotlin.Int){}[0]
final fun androidx.compose.foundation/rememberScrollState(kotlin/Int, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int): androidx.compose.foundation/ScrollState // androidx.compose.foundation/rememberScrollState|rememberScrollState(kotlin.Int;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final inline fun <#A: kotlin/Any?> (androidx.compose.foundation.gestures/DraggableAnchors<#A>).androidx.compose.foundation.gestures/forEach(kotlin/Function2<#A, kotlin/Float, kotlin/Unit>) // androidx.compose.foundation.gestures/forEach|forEach@androidx.compose.foundation.gestures.DraggableAnchors<0:0>(kotlin.Function2<0:0,kotlin.Float,kotlin.Unit>){0§<kotlin.Any?>}[0]
final inline fun <#A: kotlin/Any?> (androidx.compose.foundation.lazy.grid/LazyGridScope).androidx.compose.foundation.lazy.grid/items(kotlin.collections/List<#A>, noinline kotlin/Function1<#A, kotlin/Any>? = ..., noinline kotlin/Function2<androidx.compose.foundation.lazy.grid/LazyGridItemSpanScope, #A, androidx.compose.foundation.lazy.grid/GridItemSpan>? = ..., noinline kotlin/Function1<#A, kotlin/Any?> = ..., crossinline kotlin/Function4<androidx.compose.foundation.lazy.grid/LazyGridItemScope, #A, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>) // androidx.compose.foundation.lazy.grid/items|items@androidx.compose.foundation.lazy.grid.LazyGridScope(kotlin.collections.List<0:0>;kotlin.Function1<0:0,kotlin.Any>?;kotlin.Function2<androidx.compose.foundation.lazy.grid.LazyGridItemSpanScope,0:0,androidx.compose.foundation.lazy.grid.GridItemSpan>?;kotlin.Function1<0:0,kotlin.Any?>;kotlin.Function4<androidx.compose.foundation.lazy.grid.LazyGridItemScope,0:0,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>){0§<kotlin.Any?>}[0]
final inline fun <#A: kotlin/Any?> (androidx.compose.foundation.lazy.grid/LazyGridScope).androidx.compose.foundation.lazy.grid/items(kotlin/Array<#A>, noinline kotlin/Function1<#A, kotlin/Any>? = ..., noinline kotlin/Function2<androidx.compose.foundation.lazy.grid/LazyGridItemSpanScope, #A, androidx.compose.foundation.lazy.grid/GridItemSpan>? = ..., noinline kotlin/Function1<#A, kotlin/Any?> = ..., crossinline kotlin/Function4<androidx.compose.foundation.lazy.grid/LazyGridItemScope, #A, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>) // androidx.compose.foundation.lazy.grid/items|items@androidx.compose.foundation.lazy.grid.LazyGridScope(kotlin.Array<0:0>;kotlin.Function1<0:0,kotlin.Any>?;kotlin.Function2<androidx.compose.foundation.lazy.grid.LazyGridItemSpanScope,0:0,androidx.compose.foundation.lazy.grid.GridItemSpan>?;kotlin.Function1<0:0,kotlin.Any?>;kotlin.Function4<androidx.compose.foundation.lazy.grid.LazyGridItemScope,0:0,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>){0§<kotlin.Any?>}[0]
final inline fun <#A: kotlin/Any?> (androidx.compose.foundation.lazy.grid/LazyGridScope).androidx.compose.foundation.lazy.grid/itemsIndexed(kotlin.collections/List<#A>, noinline kotlin/Function2<kotlin/Int, #A, kotlin/Any>? = ..., noinline kotlin/Function3<androidx.compose.foundation.lazy.grid/LazyGridItemSpanScope, kotlin/Int, #A, androidx.compose.foundation.lazy.grid/GridItemSpan>? = ..., crossinline kotlin/Function2<kotlin/Int, #A, kotlin/Any?> = ..., crossinline kotlin/Function5<androidx.compose.foundation.lazy.grid/LazyGridItemScope, kotlin/Int, #A, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>) // androidx.compose.foundation.lazy.grid/itemsIndexed|itemsIndexed@androidx.compose.foundation.lazy.grid.LazyGridScope(kotlin.collections.List<0:0>;kotlin.Function2<kotlin.Int,0:0,kotlin.Any>?;kotlin.Function3<androidx.compose.foundation.lazy.grid.LazyGridItemSpanScope,kotlin.Int,0:0,androidx.compose.foundation.lazy.grid.GridItemSpan>?;kotlin.Function2<kotlin.Int,0:0,kotlin.Any?>;kotlin.Function5<androidx.compose.foundation.lazy.grid.LazyGridItemScope,kotlin.Int,0:0,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>){0§<kotlin.Any?>}[0]
final inline fun <#A: kotlin/Any?> (androidx.compose.foundation.lazy.grid/LazyGridScope).androidx.compose.foundation.lazy.grid/itemsIndexed(kotlin/Array<#A>, noinline kotlin/Function2<kotlin/Int, #A, kotlin/Any>? = ..., noinline kotlin/Function3<androidx.compose.foundation.lazy.grid/LazyGridItemSpanScope, kotlin/Int, #A, androidx.compose.foundation.lazy.grid/GridItemSpan>? = ..., crossinline kotlin/Function2<kotlin/Int, #A, kotlin/Any?> = ..., crossinline kotlin/Function5<androidx.compose.foundation.lazy.grid/LazyGridItemScope, kotlin/Int, #A, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>) // androidx.compose.foundation.lazy.grid/itemsIndexed|itemsIndexed@androidx.compose.foundation.lazy.grid.LazyGridScope(kotlin.Array<0:0>;kotlin.Function2<kotlin.Int,0:0,kotlin.Any>?;kotlin.Function3<androidx.compose.foundation.lazy.grid.LazyGridItemSpanScope,kotlin.Int,0:0,androidx.compose.foundation.lazy.grid.GridItemSpan>?;kotlin.Function2<kotlin.Int,0:0,kotlin.Any?>;kotlin.Function5<androidx.compose.foundation.lazy.grid.LazyGridItemScope,kotlin.Int,0:0,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>){0§<kotlin.Any?>}[0]
final inline fun <#A: kotlin/Any?> (androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridScope).androidx.compose.foundation.lazy.staggeredgrid/items(kotlin.collections/List<#A>, noinline kotlin/Function1<#A, kotlin/Any>? = ..., crossinline kotlin/Function1<#A, kotlin/Any?> = ..., noinline kotlin/Function1<#A, androidx.compose.foundation.lazy.staggeredgrid/StaggeredGridItemSpan>? = ..., crossinline kotlin/Function4<androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridItemScope, #A, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>) // androidx.compose.foundation.lazy.staggeredgrid/items|items@androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScope(kotlin.collections.List<0:0>;kotlin.Function1<0:0,kotlin.Any>?;kotlin.Function1<0:0,kotlin.Any?>;kotlin.Function1<0:0,androidx.compose.foundation.lazy.staggeredgrid.StaggeredGridItemSpan>?;kotlin.Function4<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridItemScope,0:0,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>){0§<kotlin.Any?>}[0]
final inline fun <#A: kotlin/Any?> (androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridScope).androidx.compose.foundation.lazy.staggeredgrid/items(kotlin/Array<#A>, noinline kotlin/Function1<#A, kotlin/Any>? = ..., crossinline kotlin/Function1<#A, kotlin/Any?> = ..., noinline kotlin/Function1<#A, androidx.compose.foundation.lazy.staggeredgrid/StaggeredGridItemSpan>? = ..., crossinline kotlin/Function4<androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridItemScope, #A, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>) // androidx.compose.foundation.lazy.staggeredgrid/items|items@androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScope(kotlin.Array<0:0>;kotlin.Function1<0:0,kotlin.Any>?;kotlin.Function1<0:0,kotlin.Any?>;kotlin.Function1<0:0,androidx.compose.foundation.lazy.staggeredgrid.StaggeredGridItemSpan>?;kotlin.Function4<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridItemScope,0:0,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>){0§<kotlin.Any?>}[0]
final inline fun <#A: kotlin/Any?> (androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridScope).androidx.compose.foundation.lazy.staggeredgrid/itemsIndexed(kotlin.collections/List<#A>, noinline kotlin/Function2<kotlin/Int, #A, kotlin/Any>? = ..., crossinline kotlin/Function2<kotlin/Int, #A, kotlin/Any?> = ..., noinline kotlin/Function2<kotlin/Int, #A, androidx.compose.foundation.lazy.staggeredgrid/StaggeredGridItemSpan>? = ..., crossinline kotlin/Function5<androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridItemScope, kotlin/Int, #A, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>) // androidx.compose.foundation.lazy.staggeredgrid/itemsIndexed|itemsIndexed@androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScope(kotlin.collections.List<0:0>;kotlin.Function2<kotlin.Int,0:0,kotlin.Any>?;kotlin.Function2<kotlin.Int,0:0,kotlin.Any?>;kotlin.Function2<kotlin.Int,0:0,androidx.compose.foundation.lazy.staggeredgrid.StaggeredGridItemSpan>?;kotlin.Function5<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridItemScope,kotlin.Int,0:0,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>){0§<kotlin.Any?>}[0]
final inline fun <#A: kotlin/Any?> (androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridScope).androidx.compose.foundation.lazy.staggeredgrid/itemsIndexed(kotlin/Array<#A>, noinline kotlin/Function2<kotlin/Int, #A, kotlin/Any>? = ..., crossinline kotlin/Function2<kotlin/Int, #A, kotlin/Any?> = ..., noinline kotlin/Function2<kotlin/Int, #A, androidx.compose.foundation.lazy.staggeredgrid/StaggeredGridItemSpan>? = ..., crossinline kotlin/Function5<androidx.compose.foundation.lazy.staggeredgrid/LazyStaggeredGridItemScope, kotlin/Int, #A, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>) // androidx.compose.foundation.lazy.staggeredgrid/itemsIndexed|itemsIndexed@androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridScope(kotlin.Array<0:0>;kotlin.Function2<kotlin.Int,0:0,kotlin.Any>?;kotlin.Function2<kotlin.Int,0:0,kotlin.Any?>;kotlin.Function2<kotlin.Int,0:0,androidx.compose.foundation.lazy.staggeredgrid.StaggeredGridItemSpan>?;kotlin.Function5<androidx.compose.foundation.lazy.staggeredgrid.LazyStaggeredGridItemScope,kotlin.Int,0:0,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>){0§<kotlin.Any?>}[0]
final inline fun <#A: kotlin/Any?> (androidx.compose.foundation.lazy/LazyListScope).androidx.compose.foundation.lazy/items(kotlin.collections/List<#A>, noinline kotlin/Function1<#A, kotlin/Any>? = ..., crossinline kotlin/Function4<androidx.compose.foundation.lazy/LazyItemScope, #A, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>) // androidx.compose.foundation.lazy/items|items@androidx.compose.foundation.lazy.LazyListScope(kotlin.collections.List<0:0>;kotlin.Function1<0:0,kotlin.Any>?;kotlin.Function4<androidx.compose.foundation.lazy.LazyItemScope,0:0,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>){0§<kotlin.Any?>}[0]
final inline fun <#A: kotlin/Any?> (androidx.compose.foundation.lazy/LazyListScope).androidx.compose.foundation.lazy/items(kotlin.collections/List<#A>, noinline kotlin/Function1<#A, kotlin/Any>? = ..., noinline kotlin/Function1<#A, kotlin/Any?> = ..., crossinline kotlin/Function4<androidx.compose.foundation.lazy/LazyItemScope, #A, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>) // androidx.compose.foundation.lazy/items|items@androidx.compose.foundation.lazy.LazyListScope(kotlin.collections.List<0:0>;kotlin.Function1<0:0,kotlin.Any>?;kotlin.Function1<0:0,kotlin.Any?>;kotlin.Function4<androidx.compose.foundation.lazy.LazyItemScope,0:0,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>){0§<kotlin.Any?>}[0]
final inline fun <#A: kotlin/Any?> (androidx.compose.foundation.lazy/LazyListScope).androidx.compose.foundation.lazy/items(kotlin/Array<#A>, noinline kotlin/Function1<#A, kotlin/Any>? = ..., crossinline kotlin/Function4<androidx.compose.foundation.lazy/LazyItemScope, #A, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>) // androidx.compose.foundation.lazy/items|items@androidx.compose.foundation.lazy.LazyListScope(kotlin.Array<0:0>;kotlin.Function1<0:0,kotlin.Any>?;kotlin.Function4<androidx.compose.foundation.lazy.LazyItemScope,0:0,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>){0§<kotlin.Any?>}[0]
final inline fun <#A: kotlin/Any?> (androidx.compose.foundation.lazy/LazyListScope).androidx.compose.foundation.lazy/items(kotlin/Array<#A>, noinline kotlin/Function1<#A, kotlin/Any>? = ..., noinline kotlin/Function1<#A, kotlin/Any?> = ..., crossinline kotlin/Function4<androidx.compose.foundation.lazy/LazyItemScope, #A, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>) // androidx.compose.foundation.lazy/items|items@androidx.compose.foundation.lazy.LazyListScope(kotlin.Array<0:0>;kotlin.Function1<0:0,kotlin.Any>?;kotlin.Function1<0:0,kotlin.Any?>;kotlin.Function4<androidx.compose.foundation.lazy.LazyItemScope,0:0,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>){0§<kotlin.Any?>}[0]
final inline fun <#A: kotlin/Any?> (androidx.compose.foundation.lazy/LazyListScope).androidx.compose.foundation.lazy/itemsIndexed(kotlin.collections/List<#A>, noinline kotlin/Function2<kotlin/Int, #A, kotlin/Any>? = ..., crossinline kotlin/Function2<kotlin/Int, #A, kotlin/Any?> = ..., crossinline kotlin/Function5<androidx.compose.foundation.lazy/LazyItemScope, kotlin/Int, #A, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>) // androidx.compose.foundation.lazy/itemsIndexed|itemsIndexed@androidx.compose.foundation.lazy.LazyListScope(kotlin.collections.List<0:0>;kotlin.Function2<kotlin.Int,0:0,kotlin.Any>?;kotlin.Function2<kotlin.Int,0:0,kotlin.Any?>;kotlin.Function5<androidx.compose.foundation.lazy.LazyItemScope,kotlin.Int,0:0,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>){0§<kotlin.Any?>}[0]
final inline fun <#A: kotlin/Any?> (androidx.compose.foundation.lazy/LazyListScope).androidx.compose.foundation.lazy/itemsIndexed(kotlin.collections/List<#A>, noinline kotlin/Function2<kotlin/Int, #A, kotlin/Any>? = ..., crossinline kotlin/Function5<androidx.compose.foundation.lazy/LazyItemScope, kotlin/Int, #A, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>) // androidx.compose.foundation.lazy/itemsIndexed|itemsIndexed@androidx.compose.foundation.lazy.LazyListScope(kotlin.collections.List<0:0>;kotlin.Function2<kotlin.Int,0:0,kotlin.Any>?;kotlin.Function5<androidx.compose.foundation.lazy.LazyItemScope,kotlin.Int,0:0,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>){0§<kotlin.Any?>}[0]
final inline fun <#A: kotlin/Any?> (androidx.compose.foundation.lazy/LazyListScope).androidx.compose.foundation.lazy/itemsIndexed(kotlin/Array<#A>, noinline kotlin/Function2<kotlin/Int, #A, kotlin/Any>? = ..., crossinline kotlin/Function2<kotlin/Int, #A, kotlin/Any?> = ..., crossinline kotlin/Function5<androidx.compose.foundation.lazy/LazyItemScope, kotlin/Int, #A, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>) // androidx.compose.foundation.lazy/itemsIndexed|itemsIndexed@androidx.compose.foundation.lazy.LazyListScope(kotlin.Array<0:0>;kotlin.Function2<kotlin.Int,0:0,kotlin.Any>?;kotlin.Function2<kotlin.Int,0:0,kotlin.Any?>;kotlin.Function5<androidx.compose.foundation.lazy.LazyItemScope,kotlin.Int,0:0,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>){0§<kotlin.Any?>}[0]
final inline fun <#A: kotlin/Any?> (androidx.compose.foundation.lazy/LazyListScope).androidx.compose.foundation.lazy/itemsIndexed(kotlin/Array<#A>, noinline kotlin/Function2<kotlin/Int, #A, kotlin/Any>? = ..., crossinline kotlin/Function5<androidx.compose.foundation.lazy/LazyItemScope, kotlin/Int, #A, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>) // androidx.compose.foundation.lazy/itemsIndexed|itemsIndexed@androidx.compose.foundation.lazy.LazyListScope(kotlin.Array<0:0>;kotlin.Function2<kotlin.Int,0:0,kotlin.Any>?;kotlin.Function5<androidx.compose.foundation.lazy.LazyItemScope,kotlin.Int,0:0,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>){0§<kotlin.Any?>}[0]
final suspend fun (androidx.compose.foundation.gestures/Scrollable2DState).androidx.compose.foundation.gestures/animateScrollBy(androidx.compose.ui.geometry/Offset, androidx.compose.animation.core/AnimationSpec<androidx.compose.ui.geometry/Offset> = ...): androidx.compose.ui.geometry/Offset // androidx.compose.foundation.gestures/animateScrollBy|animateScrollBy@androidx.compose.foundation.gestures.Scrollable2DState(androidx.compose.ui.geometry.Offset;androidx.compose.animation.core.AnimationSpec<androidx.compose.ui.geometry.Offset>){}[0]
final suspend fun (androidx.compose.foundation.gestures/Scrollable2DState).androidx.compose.foundation.gestures/scrollBy(androidx.compose.ui.geometry/Offset): androidx.compose.ui.geometry/Offset // androidx.compose.foundation.gestures/scrollBy|scrollBy@androidx.compose.foundation.gestures.Scrollable2DState(androidx.compose.ui.geometry.Offset){}[0]
final suspend fun (androidx.compose.foundation.gestures/Scrollable2DState).androidx.compose.foundation.gestures/stopScroll(androidx.compose.foundation/MutatePriority = ...) // androidx.compose.foundation.gestures/stopScroll|stopScroll@androidx.compose.foundation.gestures.Scrollable2DState(androidx.compose.foundation.MutatePriority){}[0]
final suspend fun (androidx.compose.foundation.gestures/ScrollableState).androidx.compose.foundation.gestures/animateScrollBy(kotlin/Float, androidx.compose.animation.core/AnimationSpec<kotlin/Float> = ...): kotlin/Float // androidx.compose.foundation.gestures/animateScrollBy|animateScrollBy@androidx.compose.foundation.gestures.ScrollableState(kotlin.Float;androidx.compose.animation.core.AnimationSpec<kotlin.Float>){}[0]
final suspend fun (androidx.compose.foundation.gestures/ScrollableState).androidx.compose.foundation.gestures/scrollBy(kotlin/Float): kotlin/Float // androidx.compose.foundation.gestures/scrollBy|scrollBy@androidx.compose.foundation.gestures.ScrollableState(kotlin.Float){}[0]
final suspend fun (androidx.compose.foundation.gestures/ScrollableState).androidx.compose.foundation.gestures/stopScroll(androidx.compose.foundation/MutatePriority = ...) // androidx.compose.foundation.gestures/stopScroll|stopScroll@androidx.compose.foundation.gestures.ScrollableState(androidx.compose.foundation.MutatePriority){}[0]
final suspend fun (androidx.compose.foundation.gestures/TransformableState).androidx.compose.foundation.gestures/animateBy(kotlin/Float, androidx.compose.ui.geometry/Offset, kotlin/Float, androidx.compose.animation.core/AnimationSpec<kotlin/Float> = ..., androidx.compose.animation.core/AnimationSpec<androidx.compose.ui.geometry/Offset> = ..., androidx.compose.animation.core/AnimationSpec<kotlin/Float> = ...) // androidx.compose.foundation.gestures/animateBy|animateBy@androidx.compose.foundation.gestures.TransformableState(kotlin.Float;androidx.compose.ui.geometry.Offset;kotlin.Float;androidx.compose.animation.core.AnimationSpec<kotlin.Float>;androidx.compose.animation.core.AnimationSpec<androidx.compose.ui.geometry.Offset>;androidx.compose.animation.core.AnimationSpec<kotlin.Float>){}[0]
final suspend fun (androidx.compose.foundation.gestures/TransformableState).androidx.compose.foundation.gestures/animatePanBy(androidx.compose.ui.geometry/Offset, androidx.compose.animation.core/AnimationSpec<androidx.compose.ui.geometry/Offset> = ...) // androidx.compose.foundation.gestures/animatePanBy|animatePanBy@androidx.compose.foundation.gestures.TransformableState(androidx.compose.ui.geometry.Offset;androidx.compose.animation.core.AnimationSpec<androidx.compose.ui.geometry.Offset>){}[0]
final suspend fun (androidx.compose.foundation.gestures/TransformableState).androidx.compose.foundation.gestures/animateRotateBy(kotlin/Float, androidx.compose.animation.core/AnimationSpec<kotlin/Float> = ...) // androidx.compose.foundation.gestures/animateRotateBy|animateRotateBy@androidx.compose.foundation.gestures.TransformableState(kotlin.Float;androidx.compose.animation.core.AnimationSpec<kotlin.Float>){}[0]
final suspend fun (androidx.compose.foundation.gestures/TransformableState).androidx.compose.foundation.gestures/animateZoomBy(kotlin/Float, androidx.compose.animation.core/AnimationSpec<kotlin/Float> = ...) // androidx.compose.foundation.gestures/animateZoomBy|animateZoomBy@androidx.compose.foundation.gestures.TransformableState(kotlin.Float;androidx.compose.animation.core.AnimationSpec<kotlin.Float>){}[0]
final suspend fun (androidx.compose.foundation.gestures/TransformableState).androidx.compose.foundation.gestures/panBy(androidx.compose.ui.geometry/Offset) // androidx.compose.foundation.gestures/panBy|panBy@androidx.compose.foundation.gestures.TransformableState(androidx.compose.ui.geometry.Offset){}[0]
final suspend fun (androidx.compose.foundation.gestures/TransformableState).androidx.compose.foundation.gestures/rotateBy(kotlin/Float) // androidx.compose.foundation.gestures/rotateBy|rotateBy@androidx.compose.foundation.gestures.TransformableState(kotlin.Float){}[0]
final suspend fun (androidx.compose.foundation.gestures/TransformableState).androidx.compose.foundation.gestures/stopTransformation(androidx.compose.foundation/MutatePriority = ...) // androidx.compose.foundation.gestures/stopTransformation|stopTransformation@androidx.compose.foundation.gestures.TransformableState(androidx.compose.foundation.MutatePriority){}[0]
final suspend fun (androidx.compose.foundation.gestures/TransformableState).androidx.compose.foundation.gestures/zoomBy(kotlin/Float) // androidx.compose.foundation.gestures/zoomBy|zoomBy@androidx.compose.foundation.gestures.TransformableState(kotlin.Float){}[0]
final suspend fun (androidx.compose.ui.input.pointer/AwaitPointerEventScope).androidx.compose.foundation.gestures/awaitDragOrCancellation(androidx.compose.ui.input.pointer/PointerId): androidx.compose.ui.input.pointer/PointerInputChange? // androidx.compose.foundation.gestures/awaitDragOrCancellation|awaitDragOrCancellation@androidx.compose.ui.input.pointer.AwaitPointerEventScope(androidx.compose.ui.input.pointer.PointerId){}[0]
final suspend fun (androidx.compose.ui.input.pointer/AwaitPointerEventScope).androidx.compose.foundation.gestures/awaitFirstDown(kotlin/Boolean = ...): androidx.compose.ui.input.pointer/PointerInputChange // androidx.compose.foundation.gestures/awaitFirstDown|awaitFirstDown@androidx.compose.ui.input.pointer.AwaitPointerEventScope(kotlin.Boolean){}[0]
final suspend fun (androidx.compose.ui.input.pointer/AwaitPointerEventScope).androidx.compose.foundation.gestures/awaitFirstDown(kotlin/Boolean = ..., androidx.compose.ui.input.pointer/PointerEventPass = ...): androidx.compose.ui.input.pointer/PointerInputChange // androidx.compose.foundation.gestures/awaitFirstDown|awaitFirstDown@androidx.compose.ui.input.pointer.AwaitPointerEventScope(kotlin.Boolean;androidx.compose.ui.input.pointer.PointerEventPass){}[0]
final suspend fun (androidx.compose.ui.input.pointer/AwaitPointerEventScope).androidx.compose.foundation.gestures/awaitHorizontalDragOrCancellation(androidx.compose.ui.input.pointer/PointerId): androidx.compose.ui.input.pointer/PointerInputChange? // androidx.compose.foundation.gestures/awaitHorizontalDragOrCancellation|awaitHorizontalDragOrCancellation@androidx.compose.ui.input.pointer.AwaitPointerEventScope(androidx.compose.ui.input.pointer.PointerId){}[0]
final suspend fun (androidx.compose.ui.input.pointer/AwaitPointerEventScope).androidx.compose.foundation.gestures/awaitHorizontalPointerSlopOrCancellation(androidx.compose.ui.input.pointer/PointerId, androidx.compose.ui.input.pointer/PointerType, kotlin/Function2<androidx.compose.ui.input.pointer/PointerInputChange, kotlin/Float, kotlin/Unit>): androidx.compose.ui.input.pointer/PointerInputChange? // androidx.compose.foundation.gestures/awaitHorizontalPointerSlopOrCancellation|awaitHorizontalPointerSlopOrCancellation@androidx.compose.ui.input.pointer.AwaitPointerEventScope(androidx.compose.ui.input.pointer.PointerId;androidx.compose.ui.input.pointer.PointerType;kotlin.Function2<androidx.compose.ui.input.pointer.PointerInputChange,kotlin.Float,kotlin.Unit>){}[0]
final suspend fun (androidx.compose.ui.input.pointer/AwaitPointerEventScope).androidx.compose.foundation.gestures/awaitHorizontalTouchSlopOrCancellation(androidx.compose.ui.input.pointer/PointerId, kotlin/Function2<androidx.compose.ui.input.pointer/PointerInputChange, kotlin/Float, kotlin/Unit>): androidx.compose.ui.input.pointer/PointerInputChange? // androidx.compose.foundation.gestures/awaitHorizontalTouchSlopOrCancellation|awaitHorizontalTouchSlopOrCancellation@androidx.compose.ui.input.pointer.AwaitPointerEventScope(androidx.compose.ui.input.pointer.PointerId;kotlin.Function2<androidx.compose.ui.input.pointer.PointerInputChange,kotlin.Float,kotlin.Unit>){}[0]
final suspend fun (androidx.compose.ui.input.pointer/AwaitPointerEventScope).androidx.compose.foundation.gestures/awaitLongPressOrCancellation(androidx.compose.ui.input.pointer/PointerId): androidx.compose.ui.input.pointer/PointerInputChange? // androidx.compose.foundation.gestures/awaitLongPressOrCancellation|awaitLongPressOrCancellation@androidx.compose.ui.input.pointer.AwaitPointerEventScope(androidx.compose.ui.input.pointer.PointerId){}[0]
final suspend fun (androidx.compose.ui.input.pointer/AwaitPointerEventScope).androidx.compose.foundation.gestures/awaitTouchSlopOrCancellation(androidx.compose.ui.input.pointer/PointerId, kotlin/Function2<androidx.compose.ui.input.pointer/PointerInputChange, androidx.compose.ui.geometry/Offset, kotlin/Unit>): androidx.compose.ui.input.pointer/PointerInputChange? // androidx.compose.foundation.gestures/awaitTouchSlopOrCancellation|awaitTouchSlopOrCancellation@androidx.compose.ui.input.pointer.AwaitPointerEventScope(androidx.compose.ui.input.pointer.PointerId;kotlin.Function2<androidx.compose.ui.input.pointer.PointerInputChange,androidx.compose.ui.geometry.Offset,kotlin.Unit>){}[0]
final suspend fun (androidx.compose.ui.input.pointer/AwaitPointerEventScope).androidx.compose.foundation.gestures/awaitVerticalDragOrCancellation(androidx.compose.ui.input.pointer/PointerId): androidx.compose.ui.input.pointer/PointerInputChange? // androidx.compose.foundation.gestures/awaitVerticalDragOrCancellation|awaitVerticalDragOrCancellation@androidx.compose.ui.input.pointer.AwaitPointerEventScope(androidx.compose.ui.input.pointer.PointerId){}[0]
final suspend fun (androidx.compose.ui.input.pointer/AwaitPointerEventScope).androidx.compose.foundation.gestures/awaitVerticalPointerSlopOrCancellation(androidx.compose.ui.input.pointer/PointerId, androidx.compose.ui.input.pointer/PointerType, kotlin/Function2<androidx.compose.ui.input.pointer/PointerInputChange, kotlin/Float, kotlin/Unit>): androidx.compose.ui.input.pointer/PointerInputChange? // androidx.compose.foundation.gestures/awaitVerticalPointerSlopOrCancellation|awaitVerticalPointerSlopOrCancellation@androidx.compose.ui.input.pointer.AwaitPointerEventScope(androidx.compose.ui.input.pointer.PointerId;androidx.compose.ui.input.pointer.PointerType;kotlin.Function2<androidx.compose.ui.input.pointer.PointerInputChange,kotlin.Float,kotlin.Unit>){}[0]
final suspend fun (androidx.compose.ui.input.pointer/AwaitPointerEventScope).androidx.compose.foundation.gestures/awaitVerticalTouchSlopOrCancellation(androidx.compose.ui.input.pointer/PointerId, kotlin/Function2<androidx.compose.ui.input.pointer/PointerInputChange, kotlin/Float, kotlin/Unit>): androidx.compose.ui.input.pointer/PointerInputChange? // androidx.compose.foundation.gestures/awaitVerticalTouchSlopOrCancellation|awaitVerticalTouchSlopOrCancellation@androidx.compose.ui.input.pointer.AwaitPointerEventScope(androidx.compose.ui.input.pointer.PointerId;kotlin.Function2<androidx.compose.ui.input.pointer.PointerInputChange,kotlin.Float,kotlin.Unit>){}[0]
final suspend fun (androidx.compose.ui.input.pointer/AwaitPointerEventScope).androidx.compose.foundation.gestures/drag(androidx.compose.ui.input.pointer/PointerId, kotlin/Function1<androidx.compose.ui.input.pointer/PointerInputChange, kotlin/Unit>): kotlin/Boolean // androidx.compose.foundation.gestures/drag|drag@androidx.compose.ui.input.pointer.AwaitPointerEventScope(androidx.compose.ui.input.pointer.PointerId;kotlin.Function1<androidx.compose.ui.input.pointer.PointerInputChange,kotlin.Unit>){}[0]
final suspend fun (androidx.compose.ui.input.pointer/AwaitPointerEventScope).androidx.compose.foundation.gestures/horizontalDrag(androidx.compose.ui.input.pointer/PointerId, kotlin/Function1<androidx.compose.ui.input.pointer/PointerInputChange, kotlin/Unit>): kotlin/Boolean // androidx.compose.foundation.gestures/horizontalDrag|horizontalDrag@androidx.compose.ui.input.pointer.AwaitPointerEventScope(androidx.compose.ui.input.pointer.PointerId;kotlin.Function1<androidx.compose.ui.input.pointer.PointerInputChange,kotlin.Unit>){}[0]
final suspend fun (androidx.compose.ui.input.pointer/AwaitPointerEventScope).androidx.compose.foundation.gestures/verticalDrag(androidx.compose.ui.input.pointer/PointerId, kotlin/Function1<androidx.compose.ui.input.pointer/PointerInputChange, kotlin/Unit>): kotlin/Boolean // androidx.compose.foundation.gestures/verticalDrag|verticalDrag@androidx.compose.ui.input.pointer.AwaitPointerEventScope(androidx.compose.ui.input.pointer.PointerId;kotlin.Function1<androidx.compose.ui.input.pointer.PointerInputChange,kotlin.Unit>){}[0]
final suspend fun (androidx.compose.ui.input.pointer/AwaitPointerEventScope).androidx.compose.foundation.gestures/waitForUpOrCancellation(): androidx.compose.ui.input.pointer/PointerInputChange? // androidx.compose.foundation.gestures/waitForUpOrCancellation|waitForUpOrCancellation@androidx.compose.ui.input.pointer.AwaitPointerEventScope(){}[0]
final suspend fun (androidx.compose.ui.input.pointer/AwaitPointerEventScope).androidx.compose.foundation.gestures/waitForUpOrCancellation(androidx.compose.ui.input.pointer/PointerEventPass = ...): androidx.compose.ui.input.pointer/PointerInputChange? // androidx.compose.foundation.gestures/waitForUpOrCancellation|waitForUpOrCancellation@androidx.compose.ui.input.pointer.AwaitPointerEventScope(androidx.compose.ui.input.pointer.PointerEventPass){}[0]
final suspend fun (androidx.compose.ui.input.pointer/PointerInputScope).androidx.compose.foundation.gestures/awaitEachGesture(kotlin.coroutines/SuspendFunction1<androidx.compose.ui.input.pointer/AwaitPointerEventScope, kotlin/Unit>) // androidx.compose.foundation.gestures/awaitEachGesture|awaitEachGesture@androidx.compose.ui.input.pointer.PointerInputScope(kotlin.coroutines.SuspendFunction1<androidx.compose.ui.input.pointer.AwaitPointerEventScope,kotlin.Unit>){}[0]
final suspend fun (androidx.compose.ui.input.pointer/PointerInputScope).androidx.compose.foundation.gestures/detectDragGestures(androidx.compose.foundation.gestures/Orientation?, kotlin/Function3<androidx.compose.ui.input.pointer/PointerInputChange, androidx.compose.ui.input.pointer/PointerInputChange, androidx.compose.ui.geometry/Offset, kotlin/Unit> = ..., kotlin/Function1<androidx.compose.ui.input.pointer/PointerInputChange, kotlin/Unit> = ..., kotlin/Function0<kotlin/Unit> = ..., kotlin/Function0<kotlin/Boolean> = ..., kotlin/Function2<androidx.compose.ui.input.pointer/PointerInputChange, androidx.compose.ui.geometry/Offset, kotlin/Unit>) // androidx.compose.foundation.gestures/detectDragGestures|detectDragGestures@androidx.compose.ui.input.pointer.PointerInputScope(androidx.compose.foundation.gestures.Orientation?;kotlin.Function3<androidx.compose.ui.input.pointer.PointerInputChange,androidx.compose.ui.input.pointer.PointerInputChange,androidx.compose.ui.geometry.Offset,kotlin.Unit>;kotlin.Function1<androidx.compose.ui.input.pointer.PointerInputChange,kotlin.Unit>;kotlin.Function0<kotlin.Unit>;kotlin.Function0<kotlin.Boolean>;kotlin.Function2<androidx.compose.ui.input.pointer.PointerInputChange,androidx.compose.ui.geometry.Offset,kotlin.Unit>){}[0]
final suspend fun (androidx.compose.ui.input.pointer/PointerInputScope).androidx.compose.foundation.gestures/detectDragGestures(kotlin/Function1<androidx.compose.ui.geometry/Offset, kotlin/Unit> = ..., kotlin/Function0<kotlin/Unit> = ..., kotlin/Function0<kotlin/Unit> = ..., kotlin/Function2<androidx.compose.ui.input.pointer/PointerInputChange, androidx.compose.ui.geometry/Offset, kotlin/Unit>) // androidx.compose.foundation.gestures/detectDragGestures|detectDragGestures@androidx.compose.ui.input.pointer.PointerInputScope(kotlin.Function1<androidx.compose.ui.geometry.Offset,kotlin.Unit>;kotlin.Function0<kotlin.Unit>;kotlin.Function0<kotlin.Unit>;kotlin.Function2<androidx.compose.ui.input.pointer.PointerInputChange,androidx.compose.ui.geometry.Offset,kotlin.Unit>){}[0]
final suspend fun (androidx.compose.ui.input.pointer/PointerInputScope).androidx.compose.foundation.gestures/detectDragGesturesAfterLongPress(kotlin/Function1<androidx.compose.ui.geometry/Offset, kotlin/Unit> = ..., kotlin/Function0<kotlin/Unit> = ..., kotlin/Function0<kotlin/Unit> = ..., kotlin/Function2<androidx.compose.ui.input.pointer/PointerInputChange, androidx.compose.ui.geometry/Offset, kotlin/Unit>) // androidx.compose.foundation.gestures/detectDragGesturesAfterLongPress|detectDragGesturesAfterLongPress@androidx.compose.ui.input.pointer.PointerInputScope(kotlin.Function1<androidx.compose.ui.geometry.Offset,kotlin.Unit>;kotlin.Function0<kotlin.Unit>;kotlin.Function0<kotlin.Unit>;kotlin.Function2<androidx.compose.ui.input.pointer.PointerInputChange,androidx.compose.ui.geometry.Offset,kotlin.Unit>){}[0]
final suspend fun (androidx.compose.ui.input.pointer/PointerInputScope).androidx.compose.foundation.gestures/detectHorizontalDragGestures(kotlin/Function1<androidx.compose.ui.geometry/Offset, kotlin/Unit> = ..., kotlin/Function0<kotlin/Unit> = ..., kotlin/Function0<kotlin/Unit> = ..., kotlin/Function2<androidx.compose.ui.input.pointer/PointerInputChange, kotlin/Float, kotlin/Unit>) // androidx.compose.foundation.gestures/detectHorizontalDragGestures|detectHorizontalDragGestures@androidx.compose.ui.input.pointer.PointerInputScope(kotlin.Function1<androidx.compose.ui.geometry.Offset,kotlin.Unit>;kotlin.Function0<kotlin.Unit>;kotlin.Function0<kotlin.Unit>;kotlin.Function2<androidx.compose.ui.input.pointer.PointerInputChange,kotlin.Float,kotlin.Unit>){}[0]
final suspend fun (androidx.compose.ui.input.pointer/PointerInputScope).androidx.compose.foundation.gestures/detectTapGestures(kotlin/Function1<androidx.compose.ui.geometry/Offset, kotlin/Unit>? = ..., kotlin/Function1<androidx.compose.ui.geometry/Offset, kotlin/Unit>? = ..., kotlin.coroutines/SuspendFunction2<androidx.compose.foundation.gestures/PressGestureScope, androidx.compose.ui.geometry/Offset, kotlin/Unit> = ..., kotlin/Function1<androidx.compose.ui.geometry/Offset, kotlin/Unit>? = ...) // androidx.compose.foundation.gestures/detectTapGestures|detectTapGestures@androidx.compose.ui.input.pointer.PointerInputScope(kotlin.Function1<androidx.compose.ui.geometry.Offset,kotlin.Unit>?;kotlin.Function1<androidx.compose.ui.geometry.Offset,kotlin.Unit>?;kotlin.coroutines.SuspendFunction2<androidx.compose.foundation.gestures.PressGestureScope,androidx.compose.ui.geometry.Offset,kotlin.Unit>;kotlin.Function1<androidx.compose.ui.geometry.Offset,kotlin.Unit>?){}[0]
final suspend fun (androidx.compose.ui.input.pointer/PointerInputScope).androidx.compose.foundation.gestures/detectTransformGestures(kotlin/Boolean = ..., kotlin/Function4<androidx.compose.ui.geometry/Offset, androidx.compose.ui.geometry/Offset, kotlin/Float, kotlin/Float, kotlin/Unit>) // androidx.compose.foundation.gestures/detectTransformGestures|detectTransformGestures@androidx.compose.ui.input.pointer.PointerInputScope(kotlin.Boolean;kotlin.Function4<androidx.compose.ui.geometry.Offset,androidx.compose.ui.geometry.Offset,kotlin.Float,kotlin.Float,kotlin.Unit>){}[0]
final suspend fun (androidx.compose.ui.input.pointer/PointerInputScope).androidx.compose.foundation.gestures/detectVerticalDragGestures(kotlin/Function1<androidx.compose.ui.geometry/Offset, kotlin/Unit> = ..., kotlin/Function0<kotlin/Unit> = ..., kotlin/Function0<kotlin/Unit> = ..., kotlin/Function2<androidx.compose.ui.input.pointer/PointerInputChange, kotlin/Float, kotlin/Unit>) // androidx.compose.foundation.gestures/detectVerticalDragGestures|detectVerticalDragGestures@androidx.compose.ui.input.pointer.PointerInputScope(kotlin.Function1<androidx.compose.ui.geometry.Offset,kotlin.Unit>;kotlin.Function0<kotlin.Unit>;kotlin.Function0<kotlin.Unit>;kotlin.Function2<androidx.compose.ui.input.pointer.PointerInputChange,kotlin.Float,kotlin.Unit>){}[0]
final suspend fun (androidx.compose.ui.input.pointer/PointerInputScope).androidx.compose.foundation.gestures/forEachGesture(kotlin.coroutines/SuspendFunction1<androidx.compose.ui.input.pointer/PointerInputScope, kotlin/Unit>) // androidx.compose.foundation.gestures/forEachGesture|forEachGesture@androidx.compose.ui.input.pointer.PointerInputScope(kotlin.coroutines.SuspendFunction1<androidx.compose.ui.input.pointer.PointerInputScope,kotlin.Unit>){}[0]
final suspend fun <#A: kotlin/Any?> (androidx.compose.foundation.gestures/AnchoredDraggableState<#A>).androidx.compose.foundation.gestures/animateTo(#A, androidx.compose.animation.core/AnimationSpec<kotlin/Float> = ...) // androidx.compose.foundation.gestures/animateTo|animateTo@androidx.compose.foundation.gestures.AnchoredDraggableState<0:0>(0:0;androidx.compose.animation.core.AnimationSpec<kotlin.Float>){0§<kotlin.Any?>}[0]
final suspend fun <#A: kotlin/Any?> (androidx.compose.foundation.gestures/AnchoredDraggableState<#A>).androidx.compose.foundation.gestures/animateToWithDecay(#A, kotlin/Float, androidx.compose.animation.core/AnimationSpec<kotlin/Float> = ..., androidx.compose.animation.core/DecayAnimationSpec<kotlin/Float> = ...): kotlin/Float // androidx.compose.foundation.gestures/animateToWithDecay|animateToWithDecay@androidx.compose.foundation.gestures.AnchoredDraggableState<0:0>(0:0;kotlin.Float;androidx.compose.animation.core.AnimationSpec<kotlin.Float>;androidx.compose.animation.core.DecayAnimationSpec<kotlin.Float>){0§<kotlin.Any?>}[0]
final suspend fun <#A: kotlin/Any?> (androidx.compose.foundation.gestures/AnchoredDraggableState<#A>).androidx.compose.foundation.gestures/snapTo(#A) // androidx.compose.foundation.gestures/snapTo|snapTo@androidx.compose.foundation.gestures.AnchoredDraggableState<0:0>(0:0){0§<kotlin.Any?>}[0]
