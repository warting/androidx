// Signature format: 4.0
package androidx.compose.foundation.layout {

  public final class AlignmentLineKt {
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier paddingFrom(androidx.compose.ui.Modifier, androidx.compose.ui.layout.AlignmentLine alignmentLine, optional float before, optional float after);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier paddingFrom(androidx.compose.ui.Modifier, androidx.compose.ui.layout.AlignmentLine alignmentLine, optional long before, optional long after);
    method @BytecodeOnly @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier paddingFrom-4j6BHR0(androidx.compose.ui.Modifier, androidx.compose.ui.layout.AlignmentLine, float, float);
    method @BytecodeOnly @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier paddingFrom-Y_r0B1c(androidx.compose.ui.Modifier, androidx.compose.ui.layout.AlignmentLine, long, long);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier paddingFromBaseline(androidx.compose.ui.Modifier, optional float top, optional float bottom);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier paddingFromBaseline(androidx.compose.ui.Modifier, optional long top, optional long bottom);
    method @BytecodeOnly @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier paddingFromBaseline-VpY3zN4(androidx.compose.ui.Modifier, float, float);
    method @BytecodeOnly @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier paddingFromBaseline-wCyjxdI(androidx.compose.ui.Modifier, long, long);
  }

  @androidx.compose.runtime.Immutable public final class Arrangement {
    method @androidx.compose.runtime.Stable public androidx.compose.foundation.layout.Arrangement.Horizontal aligned(androidx.compose.ui.Alignment.Horizontal alignment);
    method @androidx.compose.runtime.Stable public androidx.compose.foundation.layout.Arrangement.Vertical aligned(androidx.compose.ui.Alignment.Vertical alignment);
    method public androidx.compose.foundation.layout.Arrangement.Vertical getBottom();
    method public androidx.compose.foundation.layout.Arrangement.HorizontalOrVertical getCenter();
    method public androidx.compose.foundation.layout.Arrangement.Horizontal getEnd();
    method public androidx.compose.foundation.layout.Arrangement.HorizontalOrVertical getSpaceAround();
    method public androidx.compose.foundation.layout.Arrangement.HorizontalOrVertical getSpaceBetween();
    method public androidx.compose.foundation.layout.Arrangement.HorizontalOrVertical getSpaceEvenly();
    method public androidx.compose.foundation.layout.Arrangement.Horizontal getStart();
    method public androidx.compose.foundation.layout.Arrangement.Vertical getTop();
    method @androidx.compose.runtime.Stable public androidx.compose.foundation.layout.Arrangement.HorizontalOrVertical spacedBy(float space);
    method @androidx.compose.runtime.Stable public androidx.compose.foundation.layout.Arrangement.Horizontal spacedBy(float space, androidx.compose.ui.Alignment.Horizontal alignment);
    method @androidx.compose.runtime.Stable public androidx.compose.foundation.layout.Arrangement.Vertical spacedBy(float space, androidx.compose.ui.Alignment.Vertical alignment);
    method @BytecodeOnly @androidx.compose.runtime.Stable public androidx.compose.foundation.layout.Arrangement.HorizontalOrVertical spacedBy-0680j_4(float);
    method @BytecodeOnly @androidx.compose.runtime.Stable public androidx.compose.foundation.layout.Arrangement.Horizontal spacedBy-D5KLDUw(float, androidx.compose.ui.Alignment.Horizontal);
    method @BytecodeOnly @androidx.compose.runtime.Stable public androidx.compose.foundation.layout.Arrangement.Vertical spacedBy-D5KLDUw(float, androidx.compose.ui.Alignment.Vertical);
    property @androidx.compose.runtime.Stable public androidx.compose.foundation.layout.Arrangement.Vertical Bottom;
    property @androidx.compose.runtime.Stable public androidx.compose.foundation.layout.Arrangement.HorizontalOrVertical Center;
    property @androidx.compose.runtime.Stable public androidx.compose.foundation.layout.Arrangement.Horizontal End;
    property @androidx.compose.runtime.Stable public androidx.compose.foundation.layout.Arrangement.HorizontalOrVertical SpaceAround;
    property @androidx.compose.runtime.Stable public androidx.compose.foundation.layout.Arrangement.HorizontalOrVertical SpaceBetween;
    property @androidx.compose.runtime.Stable public androidx.compose.foundation.layout.Arrangement.HorizontalOrVertical SpaceEvenly;
    property @androidx.compose.runtime.Stable public androidx.compose.foundation.layout.Arrangement.Horizontal Start;
    property @androidx.compose.runtime.Stable public androidx.compose.foundation.layout.Arrangement.Vertical Top;
    field public static final androidx.compose.foundation.layout.Arrangement INSTANCE;
  }

  @androidx.compose.runtime.Immutable public static final class Arrangement.Absolute {
    method @androidx.compose.runtime.Stable public androidx.compose.foundation.layout.Arrangement.Horizontal aligned(androidx.compose.ui.Alignment.Horizontal alignment);
    method public androidx.compose.foundation.layout.Arrangement.Horizontal getCenter();
    method public androidx.compose.foundation.layout.Arrangement.Horizontal getLeft();
    method public androidx.compose.foundation.layout.Arrangement.Horizontal getRight();
    method public androidx.compose.foundation.layout.Arrangement.Horizontal getSpaceAround();
    method public androidx.compose.foundation.layout.Arrangement.Horizontal getSpaceBetween();
    method public androidx.compose.foundation.layout.Arrangement.Horizontal getSpaceEvenly();
    method @androidx.compose.runtime.Stable public androidx.compose.foundation.layout.Arrangement.HorizontalOrVertical spacedBy(float space);
    method @androidx.compose.runtime.Stable public androidx.compose.foundation.layout.Arrangement.Horizontal spacedBy(float space, androidx.compose.ui.Alignment.Horizontal alignment);
    method @androidx.compose.runtime.Stable public androidx.compose.foundation.layout.Arrangement.Vertical spacedBy(float space, androidx.compose.ui.Alignment.Vertical alignment);
    method @BytecodeOnly @androidx.compose.runtime.Stable public androidx.compose.foundation.layout.Arrangement.HorizontalOrVertical spacedBy-0680j_4(float);
    method @BytecodeOnly @androidx.compose.runtime.Stable public androidx.compose.foundation.layout.Arrangement.Horizontal spacedBy-D5KLDUw(float, androidx.compose.ui.Alignment.Horizontal);
    method @BytecodeOnly @androidx.compose.runtime.Stable public androidx.compose.foundation.layout.Arrangement.Vertical spacedBy-D5KLDUw(float, androidx.compose.ui.Alignment.Vertical);
    property @androidx.compose.runtime.Stable public androidx.compose.foundation.layout.Arrangement.Horizontal Center;
    property @androidx.compose.runtime.Stable public androidx.compose.foundation.layout.Arrangement.Horizontal Left;
    property @androidx.compose.runtime.Stable public androidx.compose.foundation.layout.Arrangement.Horizontal Right;
    property @androidx.compose.runtime.Stable public androidx.compose.foundation.layout.Arrangement.Horizontal SpaceAround;
    property @androidx.compose.runtime.Stable public androidx.compose.foundation.layout.Arrangement.Horizontal SpaceBetween;
    property @androidx.compose.runtime.Stable public androidx.compose.foundation.layout.Arrangement.Horizontal SpaceEvenly;
    field public static final androidx.compose.foundation.layout.Arrangement.Absolute INSTANCE;
  }

  @androidx.compose.runtime.Stable @kotlin.jvm.JvmDefaultWithCompatibility public static interface Arrangement.Horizontal {
    method public void arrange(androidx.compose.ui.unit.Density, int totalSize, int[] sizes, androidx.compose.ui.unit.LayoutDirection layoutDirection, int[] outPositions);
    method @BytecodeOnly public default float getSpacing-D9Ej5fM();
    property public default androidx.compose.ui.unit.Dp spacing;
  }

  @androidx.compose.runtime.Stable @kotlin.jvm.JvmDefaultWithCompatibility public static interface Arrangement.HorizontalOrVertical extends androidx.compose.foundation.layout.Arrangement.Horizontal androidx.compose.foundation.layout.Arrangement.Vertical {
    property public default androidx.compose.ui.unit.Dp spacing;
  }

  @androidx.compose.runtime.Stable @kotlin.jvm.JvmDefaultWithCompatibility public static interface Arrangement.Vertical {
    method public void arrange(androidx.compose.ui.unit.Density, int totalSize, int[] sizes, int[] outPositions);
    method @BytecodeOnly public default float getSpacing-D9Ej5fM();
    property public default androidx.compose.ui.unit.Dp spacing;
  }

  public final class AspectRatioKt {
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier aspectRatio(androidx.compose.ui.Modifier, @FloatRange(from=0.0, fromInclusive=false) float ratio, optional boolean matchHeightConstraintsFirst);
  }

  public final class BoxKt {
    method @androidx.compose.runtime.Composable public static void Box(androidx.compose.ui.Modifier modifier);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void Box(androidx.compose.ui.Modifier, androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public static inline void Box(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Alignment contentAlignment, optional boolean propagateMinConstraints, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void Box(androidx.compose.ui.Modifier?, androidx.compose.ui.Alignment?, boolean, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
  }

  @androidx.compose.foundation.layout.LayoutScopeMarker @androidx.compose.runtime.Immutable public interface BoxScope {
    method @androidx.compose.runtime.Stable public androidx.compose.ui.Modifier align(androidx.compose.ui.Modifier, androidx.compose.ui.Alignment alignment);
    method @androidx.compose.runtime.Stable public androidx.compose.ui.Modifier matchParentSize(androidx.compose.ui.Modifier);
  }

  public final class BoxWithConstraintsKt {
    method @androidx.compose.runtime.Composable @androidx.compose.ui.UiComposable public static void BoxWithConstraints(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.ui.Alignment contentAlignment, optional boolean propagateMinConstraints, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxWithConstraintsScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.ui.UiComposable public static void BoxWithConstraints(androidx.compose.ui.Modifier?, androidx.compose.ui.Alignment?, boolean, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxWithConstraintsScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
  }

  @androidx.compose.runtime.Stable public interface BoxWithConstraintsScope extends androidx.compose.foundation.layout.BoxScope {
    method @BytecodeOnly public long getConstraints-msEJaDk();
    method @BytecodeOnly public float getMaxHeight-D9Ej5fM();
    method @BytecodeOnly public float getMaxWidth-D9Ej5fM();
    method @BytecodeOnly public float getMinHeight-D9Ej5fM();
    method @BytecodeOnly public float getMinWidth-D9Ej5fM();
    property public abstract androidx.compose.ui.unit.Constraints constraints;
    property public abstract androidx.compose.ui.unit.Dp maxHeight;
    property public abstract androidx.compose.ui.unit.Dp maxWidth;
    property public abstract androidx.compose.ui.unit.Dp minHeight;
    property public abstract androidx.compose.ui.unit.Dp minWidth;
  }

  public final class ColumnKt {
    method @androidx.compose.runtime.Composable public static inline void Column(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.foundation.layout.Arrangement.Vertical verticalArrangement, optional androidx.compose.ui.Alignment.Horizontal horizontalAlignment, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void Column(androidx.compose.ui.Modifier?, androidx.compose.foundation.layout.Arrangement.Vertical?, androidx.compose.ui.Alignment.Horizontal?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
  }

  @androidx.compose.foundation.layout.LayoutScopeMarker @androidx.compose.runtime.Immutable @kotlin.jvm.JvmDefaultWithCompatibility public interface ColumnScope {
    method @androidx.compose.runtime.Stable public androidx.compose.ui.Modifier align(androidx.compose.ui.Modifier, androidx.compose.ui.Alignment.Horizontal alignment);
    method @androidx.compose.runtime.Stable public androidx.compose.ui.Modifier alignBy(androidx.compose.ui.Modifier, androidx.compose.ui.layout.VerticalAlignmentLine alignmentLine);
    method @androidx.compose.runtime.Stable public androidx.compose.ui.Modifier alignBy(androidx.compose.ui.Modifier, kotlin.jvm.functions.Function1<? super androidx.compose.ui.layout.Measured,java.lang.Integer> alignmentLineBlock);
    method @androidx.compose.runtime.Stable public androidx.compose.ui.Modifier weight(androidx.compose.ui.Modifier, @FloatRange(from=0.0, fromInclusive=false) float weight, optional boolean fill);
  }

  @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi public final class ComposeFoundationLayoutFlags {
    field public static final androidx.compose.foundation.layout.ComposeFoundationLayoutFlags INSTANCE;
  }

  @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi public final class ContextualFlowColumnOverflow extends androidx.compose.foundation.layout.FlowLayoutOverflow {
    field @Deprecated public static final androidx.compose.foundation.layout.ContextualFlowColumnOverflow.Companion Companion;
  }

  @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi public static final class ContextualFlowColumnOverflow.Companion {
    method @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi public androidx.compose.foundation.layout.ContextualFlowColumnOverflow expandIndicator(kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.ContextualFlowColumnOverflowScope,kotlin.Unit> content);
    method @BytecodeOnly @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi public androidx.compose.foundation.layout.ContextualFlowColumnOverflow expandIndicator(kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ContextualFlowColumnOverflowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>);
    method @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.ContextualFlowColumnOverflow expandOrCollapseIndicator(kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.ContextualFlowColumnOverflowScope,kotlin.Unit> expandIndicator, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.ContextualFlowColumnOverflowScope,kotlin.Unit> collapseIndicator, optional int minColumnsToShowCollapse, optional float minWidthToShowCollapse);
    method @BytecodeOnly @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.ContextualFlowColumnOverflow expandOrCollapseIndicator--jt2gSs(kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ContextualFlowColumnOverflowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ContextualFlowColumnOverflowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, int, float, androidx.compose.runtime.Composer?, int, int);
    method @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi public androidx.compose.foundation.layout.ContextualFlowColumnOverflow getClip();
    method @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi public androidx.compose.foundation.layout.ContextualFlowColumnOverflow getVisible();
    property @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi public androidx.compose.foundation.layout.ContextualFlowColumnOverflow Clip;
    property @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi public androidx.compose.foundation.layout.ContextualFlowColumnOverflow Visible;
  }

  @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.foundation.layout.LayoutScopeMarker @androidx.compose.runtime.Stable public interface ContextualFlowColumnOverflowScope extends androidx.compose.foundation.layout.FlowColumnOverflowScope {
  }

  @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.foundation.layout.LayoutScopeMarker @androidx.compose.runtime.Stable public interface ContextualFlowColumnScope extends androidx.compose.foundation.layout.ColumnScope {
    method @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi public androidx.compose.ui.Modifier fillMaxColumnWidth(androidx.compose.ui.Modifier, optional @FloatRange(from=0.0, to=1.0) float fraction);
    method @Deprecated public int getIndexInLine();
    method @Deprecated public int getLineIndex();
    method @BytecodeOnly @Deprecated public float getMaxHeightInLine-D9Ej5fM();
    method @BytecodeOnly @Deprecated public float getMaxWidth-D9Ej5fM();
    property @Deprecated public abstract int indexInLine;
    property @Deprecated public abstract int lineIndex;
    property @Deprecated public abstract androidx.compose.ui.unit.Dp maxHeightInLine;
    property @Deprecated public abstract androidx.compose.ui.unit.Dp maxWidth;
  }

  public final class ContextualFlowLayoutKt {
    method @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable public static void ContextualFlowColumn(int itemCount, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.foundation.layout.Arrangement.Vertical verticalArrangement, optional androidx.compose.foundation.layout.Arrangement.Horizontal horizontalArrangement, optional androidx.compose.ui.Alignment.Horizontal itemHorizontalAlignment, optional int maxItemsInEachColumn, optional int maxLines, optional androidx.compose.foundation.layout.ContextualFlowColumnOverflow overflow, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.layout.ContextualFlowColumnScope,? super java.lang.Integer,kotlin.Unit> content);
    method @BytecodeOnly @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable public static void ContextualFlowColumn(int, androidx.compose.ui.Modifier?, androidx.compose.foundation.layout.Arrangement.Vertical?, androidx.compose.foundation.layout.Arrangement.Horizontal?, androidx.compose.ui.Alignment.Horizontal?, int, int, androidx.compose.foundation.layout.ContextualFlowColumnOverflow?, kotlin.jvm.functions.Function4<? super androidx.compose.foundation.layout.ContextualFlowColumnScope!,? super java.lang.Integer!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable public static void ContextualFlowRow(int itemCount, optional androidx.compose.ui.Modifier modifier, optional androidx.compose.foundation.layout.Arrangement.Horizontal horizontalArrangement, optional androidx.compose.foundation.layout.Arrangement.Vertical verticalArrangement, optional androidx.compose.ui.Alignment.Vertical itemVerticalAlignment, optional int maxItemsInEachRow, optional int maxLines, optional androidx.compose.foundation.layout.ContextualFlowRowOverflow overflow, kotlin.jvm.functions.Function2<? super androidx.compose.foundation.layout.ContextualFlowRowScope,? super java.lang.Integer,kotlin.Unit> content);
    method @BytecodeOnly @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable public static void ContextualFlowRow(int, androidx.compose.ui.Modifier?, androidx.compose.foundation.layout.Arrangement.Horizontal?, androidx.compose.foundation.layout.Arrangement.Vertical?, androidx.compose.ui.Alignment.Vertical?, int, int, androidx.compose.foundation.layout.ContextualFlowRowOverflow?, kotlin.jvm.functions.Function4<? super androidx.compose.foundation.layout.ContextualFlowRowScope!,? super java.lang.Integer!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
  }

  @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi public final class ContextualFlowRowOverflow extends androidx.compose.foundation.layout.FlowLayoutOverflow {
    field @Deprecated public static final androidx.compose.foundation.layout.ContextualFlowRowOverflow.Companion Companion;
  }

  @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi public static final class ContextualFlowRowOverflow.Companion {
    method @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi public androidx.compose.foundation.layout.ContextualFlowRowOverflow expandIndicator(kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.ContextualFlowRowOverflowScope,kotlin.Unit> content);
    method @BytecodeOnly @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi public androidx.compose.foundation.layout.ContextualFlowRowOverflow expandIndicator(kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ContextualFlowRowOverflowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>);
    method @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.ContextualFlowRowOverflow expandOrCollapseIndicator(kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.ContextualFlowRowOverflowScope,kotlin.Unit> expandIndicator, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.ContextualFlowRowOverflowScope,kotlin.Unit> collapseIndicator, optional int minRowsToShowCollapse, optional float minHeightToShowCollapse);
    method @BytecodeOnly @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.ContextualFlowRowOverflow expandOrCollapseIndicator--jt2gSs(kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ContextualFlowRowOverflowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ContextualFlowRowOverflowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, int, float, androidx.compose.runtime.Composer?, int, int);
    method @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi public androidx.compose.foundation.layout.ContextualFlowRowOverflow getClip();
    method @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi public androidx.compose.foundation.layout.ContextualFlowRowOverflow getVisible();
    property @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi public androidx.compose.foundation.layout.ContextualFlowRowOverflow Clip;
    property @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi public androidx.compose.foundation.layout.ContextualFlowRowOverflow Visible;
  }

  @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.foundation.layout.LayoutScopeMarker @androidx.compose.runtime.Stable public interface ContextualFlowRowOverflowScope extends androidx.compose.foundation.layout.FlowRowOverflowScope {
  }

  @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.foundation.layout.LayoutScopeMarker @androidx.compose.runtime.Stable public interface ContextualFlowRowScope extends androidx.compose.foundation.layout.RowScope {
    method @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi public androidx.compose.ui.Modifier fillMaxRowHeight(androidx.compose.ui.Modifier, optional @FloatRange(from=0.0, to=1.0) float fraction);
    method @Deprecated public int getIndexInLine();
    method @Deprecated public int getLineIndex();
    method @BytecodeOnly @Deprecated public float getMaxHeight-D9Ej5fM();
    method @BytecodeOnly @Deprecated public float getMaxWidthInLine-D9Ej5fM();
    property @Deprecated public abstract int indexInLine;
    property @Deprecated public abstract int lineIndex;
    property @Deprecated public abstract androidx.compose.ui.unit.Dp maxHeight;
    property @Deprecated public abstract androidx.compose.ui.unit.Dp maxWidthInLine;
  }

  @SuppressCompatibility @kotlin.RequiresOptIn(message="The API of this layout is experimental and is likely to change in the future.") @kotlin.annotation.Retention(kotlin.annotation.AnnotationRetention.BINARY) public @interface ExperimentalLayoutApi {
  }

  @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi public final class FlowColumnOverflow extends androidx.compose.foundation.layout.FlowLayoutOverflow {
    field @Deprecated public static final androidx.compose.foundation.layout.FlowColumnOverflow.Companion Companion;
  }

  @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi public static final class FlowColumnOverflow.Companion {
    method @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi public androidx.compose.foundation.layout.FlowColumnOverflow expandIndicator(kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.FlowColumnOverflowScope,kotlin.Unit> content);
    method @BytecodeOnly @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi public androidx.compose.foundation.layout.FlowColumnOverflow expandIndicator(kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.FlowColumnOverflowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>);
    method @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.FlowColumnOverflow expandOrCollapseIndicator(kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.FlowColumnOverflowScope,kotlin.Unit> expandIndicator, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.FlowColumnOverflowScope,kotlin.Unit> collapseIndicator, optional int minColumnsToShowCollapse, optional float minWidthToShowCollapse);
    method @BytecodeOnly @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.FlowColumnOverflow expandOrCollapseIndicator--jt2gSs(kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.FlowColumnOverflowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.FlowColumnOverflowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, int, float, androidx.compose.runtime.Composer?, int, int);
    method @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi public androidx.compose.foundation.layout.FlowColumnOverflow getClip();
    method @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi public androidx.compose.foundation.layout.FlowColumnOverflow getVisible();
    property @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi public androidx.compose.foundation.layout.FlowColumnOverflow Clip;
    property @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi public androidx.compose.foundation.layout.FlowColumnOverflow Visible;
  }

  @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.foundation.layout.LayoutScopeMarker @androidx.compose.runtime.Stable public interface FlowColumnOverflowScope extends androidx.compose.foundation.layout.FlowColumnScope {
    method @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi public int getShownItemCount();
    method @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi public int getTotalItemCount();
    property @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi public abstract int shownItemCount;
    property @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi public abstract int totalItemCount;
  }

  @androidx.compose.foundation.layout.LayoutScopeMarker @androidx.compose.runtime.Stable public interface FlowColumnScope extends androidx.compose.foundation.layout.ColumnScope {
    method @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi public androidx.compose.ui.Modifier fillMaxColumnWidth(androidx.compose.ui.Modifier, optional @FloatRange(from=0.0, to=1.0) float fraction);
  }

  public final class FlowLayoutKt {
    method @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable public static void FlowColumn(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.foundation.layout.Arrangement.Vertical verticalArrangement, optional androidx.compose.foundation.layout.Arrangement.Horizontal horizontalArrangement, optional androidx.compose.ui.Alignment.Horizontal itemHorizontalAlignment, optional int maxItemsInEachColumn, optional int maxLines, optional androidx.compose.foundation.layout.FlowColumnOverflow overflow, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.FlowColumnScope,kotlin.Unit> content);
    method @BytecodeOnly @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable public static void FlowColumn(androidx.compose.ui.Modifier?, androidx.compose.foundation.layout.Arrangement.Vertical?, androidx.compose.foundation.layout.Arrangement.Horizontal?, androidx.compose.ui.Alignment.Horizontal?, int, int, androidx.compose.foundation.layout.FlowColumnOverflow?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.FlowColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void FlowColumn(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.foundation.layout.Arrangement.Vertical verticalArrangement, optional androidx.compose.foundation.layout.Arrangement.Horizontal horizontalArrangement, optional androidx.compose.ui.Alignment.Horizontal itemHorizontalAlignment, optional int maxItemsInEachColumn, optional int maxLines, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.FlowColumnScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void FlowColumn(androidx.compose.ui.Modifier?, androidx.compose.foundation.layout.Arrangement.Vertical?, androidx.compose.foundation.layout.Arrangement.Horizontal?, androidx.compose.ui.Alignment.Horizontal?, int, int, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.FlowColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable public static void FlowRow(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.foundation.layout.Arrangement.Horizontal horizontalArrangement, optional androidx.compose.foundation.layout.Arrangement.Vertical verticalArrangement, optional androidx.compose.ui.Alignment.Vertical itemVerticalAlignment, optional int maxItemsInEachRow, optional int maxLines, optional androidx.compose.foundation.layout.FlowRowOverflow overflow, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.FlowRowScope,kotlin.Unit> content);
    method @BytecodeOnly @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable public static void FlowRow(androidx.compose.ui.Modifier?, androidx.compose.foundation.layout.Arrangement.Horizontal?, androidx.compose.foundation.layout.Arrangement.Vertical?, androidx.compose.ui.Alignment.Vertical?, int, int, androidx.compose.foundation.layout.FlowRowOverflow?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.FlowRowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void FlowRow(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.foundation.layout.Arrangement.Horizontal horizontalArrangement, optional androidx.compose.foundation.layout.Arrangement.Vertical verticalArrangement, optional androidx.compose.ui.Alignment.Vertical itemVerticalAlignment, optional int maxItemsInEachRow, optional int maxLines, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.FlowRowScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void FlowRow(androidx.compose.ui.Modifier?, androidx.compose.foundation.layout.Arrangement.Horizontal?, androidx.compose.foundation.layout.Arrangement.Vertical?, androidx.compose.ui.Alignment.Vertical?, int, int, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.FlowRowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
  }

  @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi public abstract sealed class FlowLayoutOverflow {
  }

  @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi public final class FlowRowOverflow extends androidx.compose.foundation.layout.FlowLayoutOverflow {
    field @Deprecated public static final androidx.compose.foundation.layout.FlowRowOverflow.Companion Companion;
  }

  @Deprecated public static final class FlowRowOverflow.Companion {
    method @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi public androidx.compose.foundation.layout.FlowRowOverflow expandIndicator(kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.FlowRowOverflowScope,kotlin.Unit> content);
    method @BytecodeOnly @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi public androidx.compose.foundation.layout.FlowRowOverflow expandIndicator(kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.FlowRowOverflowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>);
    method @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.FlowRowOverflow expandOrCollapseIndicator(kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.FlowRowOverflowScope,kotlin.Unit> expandIndicator, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.FlowRowOverflowScope,kotlin.Unit> collapseIndicator, optional int minRowsToShowCollapse, optional float minHeightToShowCollapse);
    method @BytecodeOnly @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable public androidx.compose.foundation.layout.FlowRowOverflow expandOrCollapseIndicator--jt2gSs(kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.FlowRowOverflowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.FlowRowOverflowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, int, float, androidx.compose.runtime.Composer?, int, int);
    method @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi public androidx.compose.foundation.layout.FlowRowOverflow getClip();
    method @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi public androidx.compose.foundation.layout.FlowRowOverflow getVisible();
    property @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi public androidx.compose.foundation.layout.FlowRowOverflow Clip;
    property @Deprecated @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi public androidx.compose.foundation.layout.FlowRowOverflow Visible;
  }

  @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.foundation.layout.LayoutScopeMarker @androidx.compose.runtime.Stable public interface FlowRowOverflowScope extends androidx.compose.foundation.layout.FlowRowScope {
    method @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi public int getShownItemCount();
    method @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi public int getTotalItemCount();
    property @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi public abstract int shownItemCount;
    property @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi public abstract int totalItemCount;
  }

  @androidx.compose.foundation.layout.LayoutScopeMarker @androidx.compose.runtime.Stable public interface FlowRowScope extends androidx.compose.foundation.layout.RowScope {
    method @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi public androidx.compose.ui.Modifier fillMaxRowHeight(androidx.compose.ui.Modifier, optional @FloatRange(from=0.0, to=1.0) float fraction);
  }

  public final class IntrinsicKt {
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier height(androidx.compose.ui.Modifier, androidx.compose.foundation.layout.IntrinsicSize intrinsicSize);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier requiredHeight(androidx.compose.ui.Modifier, androidx.compose.foundation.layout.IntrinsicSize intrinsicSize);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier requiredWidth(androidx.compose.ui.Modifier, androidx.compose.foundation.layout.IntrinsicSize intrinsicSize);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier width(androidx.compose.ui.Modifier, androidx.compose.foundation.layout.IntrinsicSize intrinsicSize);
  }

  public enum IntrinsicSize {
    enum_constant public static final androidx.compose.foundation.layout.IntrinsicSize Max;
    enum_constant public static final androidx.compose.foundation.layout.IntrinsicSize Min;
  }

  @kotlin.DslMarker public @interface LayoutScopeMarker {
  }

  @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi public final class MutableWindowInsets implements androidx.compose.foundation.layout.WindowInsets {
    ctor public MutableWindowInsets();
    ctor public MutableWindowInsets(optional androidx.compose.foundation.layout.WindowInsets initialInsets);
    method public int getBottom(androidx.compose.ui.unit.Density density);
    method public androidx.compose.foundation.layout.WindowInsets getInsets();
    method public int getLeft(androidx.compose.ui.unit.Density density, androidx.compose.ui.unit.LayoutDirection layoutDirection);
    method public int getRight(androidx.compose.ui.unit.Density density, androidx.compose.ui.unit.LayoutDirection layoutDirection);
    method public int getTop(androidx.compose.ui.unit.Density density);
    method public void setInsets(androidx.compose.foundation.layout.WindowInsets);
    property public androidx.compose.foundation.layout.WindowInsets insets;
  }

  public final class OffsetKt {
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier absoluteOffset(androidx.compose.ui.Modifier, optional float x, optional float y);
    method public static androidx.compose.ui.Modifier absoluteOffset(androidx.compose.ui.Modifier, kotlin.jvm.functions.Function1<? super androidx.compose.ui.unit.Density,androidx.compose.ui.unit.IntOffset> offset);
    method @BytecodeOnly @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier absoluteOffset-VpY3zN4(androidx.compose.ui.Modifier, float, float);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier offset(androidx.compose.ui.Modifier, optional float x, optional float y);
    method public static androidx.compose.ui.Modifier offset(androidx.compose.ui.Modifier, kotlin.jvm.functions.Function1<? super androidx.compose.ui.unit.Density,androidx.compose.ui.unit.IntOffset> offset);
    method @BytecodeOnly @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier offset-VpY3zN4(androidx.compose.ui.Modifier, float, float);
  }

  public final class PaddingKt {
    method @androidx.compose.runtime.Stable public static androidx.compose.foundation.layout.PaddingValues PaddingValues(float all);
    method @androidx.compose.runtime.Stable public static androidx.compose.foundation.layout.PaddingValues PaddingValues(optional float horizontal, optional float vertical);
    method @androidx.compose.runtime.Stable public static androidx.compose.foundation.layout.PaddingValues PaddingValues(optional float start, optional float top, optional float end, optional float bottom);
    method @BytecodeOnly @androidx.compose.runtime.Stable public static androidx.compose.foundation.layout.PaddingValues PaddingValues-0680j_4(float);
    method @BytecodeOnly @androidx.compose.runtime.Stable public static androidx.compose.foundation.layout.PaddingValues PaddingValues-YgX7TsA(float, float);
    method @BytecodeOnly @androidx.compose.runtime.Stable public static androidx.compose.foundation.layout.PaddingValues PaddingValues-a9UjIt4(float, float, float, float);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier absolutePadding(androidx.compose.ui.Modifier, optional float left, optional float top, optional float right, optional float bottom);
    method @BytecodeOnly @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier absolutePadding-qDBjuR0(androidx.compose.ui.Modifier, float, float, float, float);
    method @androidx.compose.runtime.Stable public static float calculateEndPadding(androidx.compose.foundation.layout.PaddingValues, androidx.compose.ui.unit.LayoutDirection layoutDirection);
    method @androidx.compose.runtime.Stable public static float calculateStartPadding(androidx.compose.foundation.layout.PaddingValues, androidx.compose.ui.unit.LayoutDirection layoutDirection);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier padding(androidx.compose.ui.Modifier, androidx.compose.foundation.layout.PaddingValues paddingValues);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier padding(androidx.compose.ui.Modifier, float all);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier padding(androidx.compose.ui.Modifier, optional float horizontal, optional float vertical);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier padding(androidx.compose.ui.Modifier, optional float start, optional float top, optional float end, optional float bottom);
    method @BytecodeOnly @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier padding-3ABfNKs(androidx.compose.ui.Modifier, float);
    method @BytecodeOnly @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier padding-VpY3zN4(androidx.compose.ui.Modifier, float, float);
    method @BytecodeOnly @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier padding-qDBjuR0(androidx.compose.ui.Modifier, float, float, float, float);
  }

  @androidx.compose.runtime.Stable public interface PaddingValues {
    method public float calculateBottomPadding();
    method @BytecodeOnly public float calculateBottomPadding-D9Ej5fM();
    method public float calculateLeftPadding(androidx.compose.ui.unit.LayoutDirection layoutDirection);
    method @BytecodeOnly public float calculateLeftPadding-u2uoSUM(androidx.compose.ui.unit.LayoutDirection);
    method public float calculateRightPadding(androidx.compose.ui.unit.LayoutDirection layoutDirection);
    method @BytecodeOnly public float calculateRightPadding-u2uoSUM(androidx.compose.ui.unit.LayoutDirection);
    method public float calculateTopPadding();
    method @BytecodeOnly public float calculateTopPadding-D9Ej5fM();
    field public static final androidx.compose.foundation.layout.PaddingValues.Companion Companion;
  }

  @androidx.compose.runtime.Immutable public static final class PaddingValues.Absolute implements androidx.compose.foundation.layout.PaddingValues {
    ctor public PaddingValues.Absolute();
    ctor @KotlinOnly public PaddingValues.Absolute(optional androidx.compose.ui.unit.Dp left, optional androidx.compose.ui.unit.Dp top, optional androidx.compose.ui.unit.Dp right, optional androidx.compose.ui.unit.Dp bottom);
    ctor @BytecodeOnly public PaddingValues.Absolute(float, float, float, float, kotlin.jvm.internal.DefaultConstructorMarker!);
    method public float calculateBottomPadding();
    method @BytecodeOnly public float calculateBottomPadding-D9Ej5fM();
    method public float calculateLeftPadding(androidx.compose.ui.unit.LayoutDirection layoutDirection);
    method @BytecodeOnly public float calculateLeftPadding-u2uoSUM(androidx.compose.ui.unit.LayoutDirection);
    method public float calculateRightPadding(androidx.compose.ui.unit.LayoutDirection layoutDirection);
    method @BytecodeOnly public float calculateRightPadding-u2uoSUM(androidx.compose.ui.unit.LayoutDirection);
    method public float calculateTopPadding();
    method @BytecodeOnly public float calculateTopPadding-D9Ej5fM();
  }

  public static final class PaddingValues.Companion {
    method @androidx.compose.runtime.Stable public androidx.compose.foundation.layout.PaddingValues getZero();
    property @androidx.compose.runtime.Stable public androidx.compose.foundation.layout.PaddingValues Zero;
  }

  public final class RowKt {
    method @androidx.compose.runtime.Composable public static inline void Row(optional androidx.compose.ui.Modifier modifier, optional androidx.compose.foundation.layout.Arrangement.Horizontal horizontalArrangement, optional androidx.compose.ui.Alignment.Vertical verticalAlignment, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void Row(androidx.compose.ui.Modifier?, androidx.compose.foundation.layout.Arrangement.Horizontal?, androidx.compose.ui.Alignment.Vertical?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
  }

  @androidx.compose.foundation.layout.LayoutScopeMarker @androidx.compose.runtime.Immutable @kotlin.jvm.JvmDefaultWithCompatibility public interface RowScope {
    method @androidx.compose.runtime.Stable public androidx.compose.ui.Modifier align(androidx.compose.ui.Modifier, androidx.compose.ui.Alignment.Vertical alignment);
    method @androidx.compose.runtime.Stable public androidx.compose.ui.Modifier alignBy(androidx.compose.ui.Modifier, androidx.compose.ui.layout.HorizontalAlignmentLine alignmentLine);
    method @androidx.compose.runtime.Stable public androidx.compose.ui.Modifier alignBy(androidx.compose.ui.Modifier, kotlin.jvm.functions.Function1<? super androidx.compose.ui.layout.Measured,java.lang.Integer> alignmentLineBlock);
    method @androidx.compose.runtime.Stable public androidx.compose.ui.Modifier alignByBaseline(androidx.compose.ui.Modifier);
    method @androidx.compose.runtime.Stable public androidx.compose.ui.Modifier weight(androidx.compose.ui.Modifier, @FloatRange(from=0.0, fromInclusive=false) float weight, optional boolean fill);
  }

  public final class RulerAlignmentKt {
    method public static androidx.compose.ui.Modifier fitInside(androidx.compose.ui.Modifier, androidx.compose.ui.layout.RectRulers rulers);
    method public static androidx.compose.ui.Modifier fitOutside(androidx.compose.ui.Modifier, androidx.compose.ui.layout.RectRulers rulers);
  }

  public final class SizeKt {
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier defaultMinSize(androidx.compose.ui.Modifier, optional float minWidth, optional float minHeight);
    method @BytecodeOnly @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier defaultMinSize-VpY3zN4(androidx.compose.ui.Modifier, float, float);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier fillMaxHeight(androidx.compose.ui.Modifier, optional @FloatRange(from=0.0, to=1.0) float fraction);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier fillMaxSize(androidx.compose.ui.Modifier, optional @FloatRange(from=0.0, to=1.0) float fraction);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier fillMaxWidth(androidx.compose.ui.Modifier, optional @FloatRange(from=0.0, to=1.0) float fraction);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier height(androidx.compose.ui.Modifier, float height);
    method @BytecodeOnly @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier height-3ABfNKs(androidx.compose.ui.Modifier, float);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier heightIn(androidx.compose.ui.Modifier, optional float min, optional float max);
    method @BytecodeOnly @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier heightIn-VpY3zN4(androidx.compose.ui.Modifier, float, float);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier requiredHeight(androidx.compose.ui.Modifier, float height);
    method @BytecodeOnly @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier requiredHeight-3ABfNKs(androidx.compose.ui.Modifier, float);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier requiredHeightIn(androidx.compose.ui.Modifier, optional float min, optional float max);
    method @BytecodeOnly @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier requiredHeightIn-VpY3zN4(androidx.compose.ui.Modifier, float, float);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier requiredSize(androidx.compose.ui.Modifier, float size);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier requiredSize(androidx.compose.ui.Modifier, float width, float height);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier requiredSize(androidx.compose.ui.Modifier, long size);
    method @BytecodeOnly @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier requiredSize-3ABfNKs(androidx.compose.ui.Modifier, float);
    method @BytecodeOnly @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier requiredSize-6HolHcs(androidx.compose.ui.Modifier, long);
    method @BytecodeOnly @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier requiredSize-VpY3zN4(androidx.compose.ui.Modifier, float, float);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier requiredSizeIn(androidx.compose.ui.Modifier, optional float minWidth, optional float minHeight, optional float maxWidth, optional float maxHeight);
    method @BytecodeOnly @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier requiredSizeIn-qDBjuR0(androidx.compose.ui.Modifier, float, float, float, float);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier requiredWidth(androidx.compose.ui.Modifier, float width);
    method @BytecodeOnly @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier requiredWidth-3ABfNKs(androidx.compose.ui.Modifier, float);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier requiredWidthIn(androidx.compose.ui.Modifier, optional float min, optional float max);
    method @BytecodeOnly @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier requiredWidthIn-VpY3zN4(androidx.compose.ui.Modifier, float, float);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier size(androidx.compose.ui.Modifier, float size);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier size(androidx.compose.ui.Modifier, float width, float height);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier size(androidx.compose.ui.Modifier, long size);
    method @BytecodeOnly @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier size-3ABfNKs(androidx.compose.ui.Modifier, float);
    method @BytecodeOnly @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier size-6HolHcs(androidx.compose.ui.Modifier, long);
    method @BytecodeOnly @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier size-VpY3zN4(androidx.compose.ui.Modifier, float, float);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier sizeIn(androidx.compose.ui.Modifier, optional float minWidth, optional float minHeight, optional float maxWidth, optional float maxHeight);
    method @BytecodeOnly @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier sizeIn-qDBjuR0(androidx.compose.ui.Modifier, float, float, float, float);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier width(androidx.compose.ui.Modifier, float width);
    method @BytecodeOnly @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier width-3ABfNKs(androidx.compose.ui.Modifier, float);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier widthIn(androidx.compose.ui.Modifier, optional float min, optional float max);
    method @BytecodeOnly @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier widthIn-VpY3zN4(androidx.compose.ui.Modifier, float, float);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier wrapContentHeight(androidx.compose.ui.Modifier, optional androidx.compose.ui.Alignment.Vertical align, optional boolean unbounded);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier wrapContentSize(androidx.compose.ui.Modifier, optional androidx.compose.ui.Alignment align, optional boolean unbounded);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier wrapContentWidth(androidx.compose.ui.Modifier, optional androidx.compose.ui.Alignment.Horizontal align, optional boolean unbounded);
  }

  public final class SpacerKt {
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static void Spacer(androidx.compose.ui.Modifier modifier);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void Spacer(androidx.compose.ui.Modifier, androidx.compose.runtime.Composer?, int);
  }

  @androidx.compose.runtime.Stable public interface WindowInsets {
    method public int getBottom(androidx.compose.ui.unit.Density density);
    method public int getLeft(androidx.compose.ui.unit.Density density, androidx.compose.ui.unit.LayoutDirection layoutDirection);
    method public int getRight(androidx.compose.ui.unit.Density density, androidx.compose.ui.unit.LayoutDirection layoutDirection);
    method public int getTop(androidx.compose.ui.unit.Density density);
    field public static final androidx.compose.foundation.layout.WindowInsets.Companion Companion;
  }

  public static final class WindowInsets.Companion {
  }

  public final class WindowInsetsConnection_androidKt {
    method @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi public static androidx.compose.ui.Modifier imeNestedScroll(androidx.compose.ui.Modifier);
  }

  public final class WindowInsetsKt {
    method public static androidx.compose.foundation.layout.WindowInsets WindowInsets();
    method public static androidx.compose.foundation.layout.WindowInsets WindowInsets(optional float left, optional float top, optional float right, optional float bottom);
    method public static androidx.compose.foundation.layout.WindowInsets WindowInsets(optional int left, optional int top, optional int right, optional int bottom);
    method @BytecodeOnly public static androidx.compose.foundation.layout.WindowInsets WindowInsets-a9UjIt4(float, float, float, float);
    method public static androidx.compose.foundation.layout.WindowInsets add(androidx.compose.foundation.layout.WindowInsets, androidx.compose.foundation.layout.WindowInsets insets);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static androidx.compose.foundation.layout.PaddingValues asPaddingValues(androidx.compose.foundation.layout.WindowInsets);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static androidx.compose.foundation.layout.PaddingValues asPaddingValues(androidx.compose.foundation.layout.WindowInsets, androidx.compose.runtime.Composer?, int);
    method public static androidx.compose.foundation.layout.PaddingValues asPaddingValues(androidx.compose.foundation.layout.WindowInsets, androidx.compose.ui.unit.Density density);
    method public static androidx.compose.foundation.layout.WindowInsets exclude(androidx.compose.foundation.layout.WindowInsets, androidx.compose.foundation.layout.WindowInsets insets);
    method public static androidx.compose.foundation.layout.WindowInsets only(androidx.compose.foundation.layout.WindowInsets, int sides);
    method @BytecodeOnly public static androidx.compose.foundation.layout.WindowInsets only-bOOhFvg(androidx.compose.foundation.layout.WindowInsets, int);
    method public static androidx.compose.foundation.layout.WindowInsets union(androidx.compose.foundation.layout.WindowInsets, androidx.compose.foundation.layout.WindowInsets insets);
  }

  public final class WindowInsetsPaddingKt {
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier consumeWindowInsets(androidx.compose.ui.Modifier, androidx.compose.foundation.layout.PaddingValues paddingValues);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier consumeWindowInsets(androidx.compose.ui.Modifier, androidx.compose.foundation.layout.WindowInsets insets);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier onConsumedWindowInsetsChanged(androidx.compose.ui.Modifier, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.WindowInsets,kotlin.Unit> block);
    method public static androidx.compose.ui.Modifier recalculateWindowInsets(androidx.compose.ui.Modifier);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier windowInsetsPadding(androidx.compose.ui.Modifier, androidx.compose.foundation.layout.WindowInsets insets);
  }

  public final class WindowInsetsPadding_androidKt {
    method public static androidx.compose.ui.Modifier captionBarPadding(androidx.compose.ui.Modifier);
    method public static androidx.compose.ui.Modifier displayCutoutPadding(androidx.compose.ui.Modifier);
    method public static androidx.compose.ui.Modifier imePadding(androidx.compose.ui.Modifier);
    method public static androidx.compose.ui.Modifier mandatorySystemGesturesPadding(androidx.compose.ui.Modifier);
    method public static androidx.compose.ui.Modifier navigationBarsPadding(androidx.compose.ui.Modifier);
    method public static androidx.compose.ui.Modifier safeContentPadding(androidx.compose.ui.Modifier);
    method public static androidx.compose.ui.Modifier safeDrawingPadding(androidx.compose.ui.Modifier);
    method public static androidx.compose.ui.Modifier safeGesturesPadding(androidx.compose.ui.Modifier);
    method public static androidx.compose.ui.Modifier statusBarsPadding(androidx.compose.ui.Modifier);
    method public static androidx.compose.ui.Modifier systemBarsPadding(androidx.compose.ui.Modifier);
    method public static androidx.compose.ui.Modifier systemGesturesPadding(androidx.compose.ui.Modifier);
    method public static androidx.compose.ui.Modifier waterfallPadding(androidx.compose.ui.Modifier);
  }

  @kotlin.jvm.JvmInline public final value class WindowInsetsSides {
    method @BytecodeOnly public static androidx.compose.foundation.layout.WindowInsetsSides! box-impl(int);
    method public operator int plus(int sides);
    method @BytecodeOnly public static int plus-gK_yJZ4(int, int);
    method @BytecodeOnly public int unbox-impl();
    field public static final androidx.compose.foundation.layout.WindowInsetsSides.Companion Companion;
  }

  public static final class WindowInsetsSides.Companion {
    method @BytecodeOnly public int getBottom-JoeWqyM();
    method @BytecodeOnly public int getEnd-JoeWqyM();
    method @BytecodeOnly public int getHorizontal-JoeWqyM();
    method @BytecodeOnly public int getLeft-JoeWqyM();
    method @BytecodeOnly public int getRight-JoeWqyM();
    method @BytecodeOnly public int getStart-JoeWqyM();
    method @BytecodeOnly public int getTop-JoeWqyM();
    method @BytecodeOnly public int getVertical-JoeWqyM();
    property public androidx.compose.foundation.layout.WindowInsetsSides Bottom;
    property public androidx.compose.foundation.layout.WindowInsetsSides End;
    property public androidx.compose.foundation.layout.WindowInsetsSides Horizontal;
    property public androidx.compose.foundation.layout.WindowInsetsSides Left;
    property public androidx.compose.foundation.layout.WindowInsetsSides Right;
    property public androidx.compose.foundation.layout.WindowInsetsSides Start;
    property public androidx.compose.foundation.layout.WindowInsetsSides Top;
    property public androidx.compose.foundation.layout.WindowInsetsSides Vertical;
  }

  public final class WindowInsetsSizeKt {
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier windowInsetsBottomHeight(androidx.compose.ui.Modifier, androidx.compose.foundation.layout.WindowInsets insets);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier windowInsetsEndWidth(androidx.compose.ui.Modifier, androidx.compose.foundation.layout.WindowInsets insets);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier windowInsetsStartWidth(androidx.compose.ui.Modifier, androidx.compose.foundation.layout.WindowInsets insets);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier windowInsetsTopHeight(androidx.compose.ui.Modifier, androidx.compose.foundation.layout.WindowInsets insets);
  }

  public final class WindowInsets_androidKt {
    method @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static boolean getAreNavigationBarsVisible(androidx.compose.foundation.layout.WindowInsets.Companion);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable public static boolean getAreNavigationBarsVisible(androidx.compose.foundation.layout.WindowInsets.Companion, androidx.compose.runtime.Composer?, int);
    method @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static boolean getAreStatusBarsVisible(androidx.compose.foundation.layout.WindowInsets.Companion);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable public static boolean getAreStatusBarsVisible(androidx.compose.foundation.layout.WindowInsets.Companion, androidx.compose.runtime.Composer?, int);
    method @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static boolean getAreSystemBarsVisible(androidx.compose.foundation.layout.WindowInsets.Companion);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable public static boolean getAreSystemBarsVisible(androidx.compose.foundation.layout.WindowInsets.Companion, androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static androidx.compose.foundation.layout.WindowInsets getCaptionBar(androidx.compose.foundation.layout.WindowInsets.Companion);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static androidx.compose.foundation.layout.WindowInsets getCaptionBar(androidx.compose.foundation.layout.WindowInsets.Companion, androidx.compose.runtime.Composer?, int);
    method @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static androidx.compose.foundation.layout.WindowInsets getCaptionBarIgnoringVisibility(androidx.compose.foundation.layout.WindowInsets.Companion);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable public static androidx.compose.foundation.layout.WindowInsets getCaptionBarIgnoringVisibility(androidx.compose.foundation.layout.WindowInsets.Companion, androidx.compose.runtime.Composer?, int);
    method public static boolean getConsumeWindowInsets(androidx.compose.ui.platform.AbstractComposeView);
    method @BytecodeOnly public static boolean getConsumeWindowInsets(androidx.compose.ui.platform.ComposeView!);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static androidx.compose.ui.graphics.Path? getCutoutPath(androidx.compose.foundation.layout.WindowInsets.Companion);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static androidx.compose.ui.graphics.Path? getCutoutPath(androidx.compose.foundation.layout.WindowInsets.Companion, androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static androidx.compose.foundation.layout.WindowInsets getDisplayCutout(androidx.compose.foundation.layout.WindowInsets.Companion);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static androidx.compose.foundation.layout.WindowInsets getDisplayCutout(androidx.compose.foundation.layout.WindowInsets.Companion, androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static androidx.compose.foundation.layout.WindowInsets getIme(androidx.compose.foundation.layout.WindowInsets.Companion);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static androidx.compose.foundation.layout.WindowInsets getIme(androidx.compose.foundation.layout.WindowInsets.Companion, androidx.compose.runtime.Composer?, int);
    method @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static androidx.compose.foundation.layout.WindowInsets getImeAnimationSource(androidx.compose.foundation.layout.WindowInsets.Companion);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable public static androidx.compose.foundation.layout.WindowInsets getImeAnimationSource(androidx.compose.foundation.layout.WindowInsets.Companion, androidx.compose.runtime.Composer?, int);
    method @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static androidx.compose.foundation.layout.WindowInsets getImeAnimationTarget(androidx.compose.foundation.layout.WindowInsets.Companion);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable public static androidx.compose.foundation.layout.WindowInsets getImeAnimationTarget(androidx.compose.foundation.layout.WindowInsets.Companion, androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static androidx.compose.foundation.layout.WindowInsets getMandatorySystemGestures(androidx.compose.foundation.layout.WindowInsets.Companion);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static androidx.compose.foundation.layout.WindowInsets getMandatorySystemGestures(androidx.compose.foundation.layout.WindowInsets.Companion, androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static androidx.compose.foundation.layout.WindowInsets getNavigationBars(androidx.compose.foundation.layout.WindowInsets.Companion);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static androidx.compose.foundation.layout.WindowInsets getNavigationBars(androidx.compose.foundation.layout.WindowInsets.Companion, androidx.compose.runtime.Composer?, int);
    method @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static androidx.compose.foundation.layout.WindowInsets getNavigationBarsIgnoringVisibility(androidx.compose.foundation.layout.WindowInsets.Companion);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable public static androidx.compose.foundation.layout.WindowInsets getNavigationBarsIgnoringVisibility(androidx.compose.foundation.layout.WindowInsets.Companion, androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static androidx.compose.foundation.layout.WindowInsets getSafeContent(androidx.compose.foundation.layout.WindowInsets.Companion);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static androidx.compose.foundation.layout.WindowInsets getSafeContent(androidx.compose.foundation.layout.WindowInsets.Companion, androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static androidx.compose.foundation.layout.WindowInsets getSafeDrawing(androidx.compose.foundation.layout.WindowInsets.Companion);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static androidx.compose.foundation.layout.WindowInsets getSafeDrawing(androidx.compose.foundation.layout.WindowInsets.Companion, androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static androidx.compose.foundation.layout.WindowInsets getSafeGestures(androidx.compose.foundation.layout.WindowInsets.Companion);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static androidx.compose.foundation.layout.WindowInsets getSafeGestures(androidx.compose.foundation.layout.WindowInsets.Companion, androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static androidx.compose.foundation.layout.WindowInsets getStatusBars(androidx.compose.foundation.layout.WindowInsets.Companion);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static androidx.compose.foundation.layout.WindowInsets getStatusBars(androidx.compose.foundation.layout.WindowInsets.Companion, androidx.compose.runtime.Composer?, int);
    method @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static androidx.compose.foundation.layout.WindowInsets getStatusBarsIgnoringVisibility(androidx.compose.foundation.layout.WindowInsets.Companion);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable public static androidx.compose.foundation.layout.WindowInsets getStatusBarsIgnoringVisibility(androidx.compose.foundation.layout.WindowInsets.Companion, androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static androidx.compose.foundation.layout.WindowInsets getSystemBars(androidx.compose.foundation.layout.WindowInsets.Companion);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static androidx.compose.foundation.layout.WindowInsets getSystemBars(androidx.compose.foundation.layout.WindowInsets.Companion, androidx.compose.runtime.Composer?, int);
    method @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static androidx.compose.foundation.layout.WindowInsets getSystemBarsIgnoringVisibility(androidx.compose.foundation.layout.WindowInsets.Companion);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable public static androidx.compose.foundation.layout.WindowInsets getSystemBarsIgnoringVisibility(androidx.compose.foundation.layout.WindowInsets.Companion, androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static androidx.compose.foundation.layout.WindowInsets getSystemGestures(androidx.compose.foundation.layout.WindowInsets.Companion);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static androidx.compose.foundation.layout.WindowInsets getSystemGestures(androidx.compose.foundation.layout.WindowInsets.Companion, androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static androidx.compose.foundation.layout.WindowInsets getTappableElement(androidx.compose.foundation.layout.WindowInsets.Companion);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static androidx.compose.foundation.layout.WindowInsets getTappableElement(androidx.compose.foundation.layout.WindowInsets.Companion, androidx.compose.runtime.Composer?, int);
    method @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static androidx.compose.foundation.layout.WindowInsets getTappableElementIgnoringVisibility(androidx.compose.foundation.layout.WindowInsets.Companion);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable public static androidx.compose.foundation.layout.WindowInsets getTappableElementIgnoringVisibility(androidx.compose.foundation.layout.WindowInsets.Companion, androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static androidx.compose.foundation.layout.WindowInsets getWaterfall(androidx.compose.foundation.layout.WindowInsets.Companion);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static androidx.compose.foundation.layout.WindowInsets getWaterfall(androidx.compose.foundation.layout.WindowInsets.Companion, androidx.compose.runtime.Composer?, int);
    method @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static boolean isCaptionBarVisible(androidx.compose.foundation.layout.WindowInsets.Companion);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable public static boolean isCaptionBarVisible(androidx.compose.foundation.layout.WindowInsets.Companion, androidx.compose.runtime.Composer?, int);
    method @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static boolean isImeVisible(androidx.compose.foundation.layout.WindowInsets.Companion);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable public static boolean isImeVisible(androidx.compose.foundation.layout.WindowInsets.Companion, androidx.compose.runtime.Composer?, int);
    method @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static boolean isTappableElementVisible(androidx.compose.foundation.layout.WindowInsets.Companion);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable public static boolean isTappableElementVisible(androidx.compose.foundation.layout.WindowInsets.Companion, androidx.compose.runtime.Composer?, int);
    method public static void setConsumeWindowInsets(androidx.compose.ui.platform.AbstractComposeView, boolean);
    method @BytecodeOnly public static void setConsumeWindowInsets(androidx.compose.ui.platform.ComposeView!, boolean);
    property @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static boolean androidx.compose.foundation.layout.WindowInsets.Companion.areNavigationBarsVisible;
    property @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static boolean androidx.compose.foundation.layout.WindowInsets.Companion.areStatusBarsVisible;
    property @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static boolean androidx.compose.foundation.layout.WindowInsets.Companion.areSystemBarsVisible;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static androidx.compose.foundation.layout.WindowInsets androidx.compose.foundation.layout.WindowInsets.Companion.captionBar;
    property @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static androidx.compose.foundation.layout.WindowInsets androidx.compose.foundation.layout.WindowInsets.Companion.captionBarIgnoringVisibility;
    property public static boolean androidx.compose.ui.platform.AbstractComposeView.consumeWindowInsets;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static androidx.compose.ui.graphics.Path? androidx.compose.foundation.layout.WindowInsets.Companion.cutoutPath;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static androidx.compose.foundation.layout.WindowInsets androidx.compose.foundation.layout.WindowInsets.Companion.displayCutout;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static androidx.compose.foundation.layout.WindowInsets androidx.compose.foundation.layout.WindowInsets.Companion.ime;
    property @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static androidx.compose.foundation.layout.WindowInsets androidx.compose.foundation.layout.WindowInsets.Companion.imeAnimationSource;
    property @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static androidx.compose.foundation.layout.WindowInsets androidx.compose.foundation.layout.WindowInsets.Companion.imeAnimationTarget;
    property @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static boolean androidx.compose.foundation.layout.WindowInsets.Companion.isCaptionBarVisible;
    property @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static boolean androidx.compose.foundation.layout.WindowInsets.Companion.isImeVisible;
    property @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static boolean androidx.compose.foundation.layout.WindowInsets.Companion.isTappableElementVisible;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static androidx.compose.foundation.layout.WindowInsets androidx.compose.foundation.layout.WindowInsets.Companion.mandatorySystemGestures;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static androidx.compose.foundation.layout.WindowInsets androidx.compose.foundation.layout.WindowInsets.Companion.navigationBars;
    property @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static androidx.compose.foundation.layout.WindowInsets androidx.compose.foundation.layout.WindowInsets.Companion.navigationBarsIgnoringVisibility;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static androidx.compose.foundation.layout.WindowInsets androidx.compose.foundation.layout.WindowInsets.Companion.safeContent;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static androidx.compose.foundation.layout.WindowInsets androidx.compose.foundation.layout.WindowInsets.Companion.safeDrawing;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static androidx.compose.foundation.layout.WindowInsets androidx.compose.foundation.layout.WindowInsets.Companion.safeGestures;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static androidx.compose.foundation.layout.WindowInsets androidx.compose.foundation.layout.WindowInsets.Companion.statusBars;
    property @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static androidx.compose.foundation.layout.WindowInsets androidx.compose.foundation.layout.WindowInsets.Companion.statusBarsIgnoringVisibility;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static androidx.compose.foundation.layout.WindowInsets androidx.compose.foundation.layout.WindowInsets.Companion.systemBars;
    property @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static androidx.compose.foundation.layout.WindowInsets androidx.compose.foundation.layout.WindowInsets.Companion.systemBarsIgnoringVisibility;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static androidx.compose.foundation.layout.WindowInsets androidx.compose.foundation.layout.WindowInsets.Companion.systemGestures;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static androidx.compose.foundation.layout.WindowInsets androidx.compose.foundation.layout.WindowInsets.Companion.tappableElement;
    property @SuppressCompatibility @androidx.compose.foundation.layout.ExperimentalLayoutApi @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static androidx.compose.foundation.layout.WindowInsets androidx.compose.foundation.layout.WindowInsets.Companion.tappableElementIgnoringVisibility;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static androidx.compose.foundation.layout.WindowInsets androidx.compose.foundation.layout.WindowInsets.Companion.waterfall;
  }

}

