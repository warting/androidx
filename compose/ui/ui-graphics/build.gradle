/*
 * Copyright 2020 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * This file was created using the `create_project.py` script located in the
 * `<AndroidX root>/development/project-creator` directory.
 *
 * Please use that script when creating a new project, rather than copying an existing project and
 * modifying its settings.
 */


import androidx.build.SoftwareType
import androidx.build.PlatformIdentifier
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id("AndroidXPlugin")
    id("com.android.library")
    id("AndroidXComposePlugin")
}

androidXMultiplatform {
    androidTarget()
    jvmStubs()
    linuxX64Stubs()

    defaultPlatform(PlatformIdentifier.ANDROID)

    sourceSets {
        commonMain {
            dependencies {
                implementation(libs.kotlinStdlib)
                api(libs.androidx.annotation)

                api(project(":compose:ui:ui-unit"))
                implementation(project(":compose:runtime:runtime"))
                implementation(project(":compose:ui:ui-util"))
                implementation("androidx.collection:collection:1.4.2")
            }
        }

        commonTest {
            dependencies {
                implementation(kotlin("test"))
            }
        }

        androidMain {
            dependsOn(commonMain)
            dependencies {
                // This has stub APIs for access to legacy Android APIs, so we don't want
                // any dependency on this module.
                compileOnly(project(":compose:ui:ui-android-stubs"))
                implementation("androidx.graphics:graphics-path:1.0.1")
                implementation libs.androidx.core
                api("androidx.annotation:annotation-experimental:1.4.1")
            }
        }

        commonStubsMain {
            dependsOn(commonMain)
        }
        jvmStubsMain {
            dependsOn(commonStubsMain)
        }
        linuxx64StubsMain {
            dependsOn(commonStubsMain)
        }

        androidInstrumentedTest {
            dependencies {
                implementation(project(":compose:ui:ui-graphics:ui-graphics-samples"))
                implementation(project(":compose:ui:ui-test-junit4"))
                implementation(project(":compose:test-utils"))
                implementation(libs.testRules)
                implementation(libs.testRunner)
                implementation(libs.espressoCore)
                implementation(libs.junit)
                implementation(libs.truth)
            }
        }

        androidUnitTest {
            dependencies {
                implementation(libs.testRules)
                implementation(libs.testRunner)
                implementation(libs.junit)
                implementation(libs.truth)
                implementation(project(":compose:test-utils"))
            }
        }
    }
}

dependencies {
    lintPublish(project(":compose:ui:ui-graphics-lint"))
}

androidx {
    name = "Compose Graphics"
    type = SoftwareType.PUBLISHED_LIBRARY_ONLY_USED_BY_KOTLIN_CONSUMERS
    inceptionYear = "2020"
    description = "Compose graphics"
    legacyDisableKotlinStrictApiMode = true
    metalavaK2UastEnabled = false
    enableRobolectric()
    samples(project(":compose:ui:ui-graphics:ui-graphics-samples"))
}

androidxCompose {
    composeCompilerPluginEnabled = false
}

android {
    compileSdk = 35
    namespace = "androidx.compose.ui.graphics"
    buildTypes.configureEach {
        consumerProguardFiles("proguard-rules.pro")
    }
}

// TODO(b/407640608): Task :compose:ui:ui-inspection:connectedCheck fails without this block
tasks.withType(KotlinCompile).configureEach {
    kotlinOptions {
        freeCompilerArgs += [
                "-Xlambdas=class"
        ]
    }
}
