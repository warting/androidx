/*
 * Copyright 2019 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * This file was created using the `create_project.py` script located in the
 * `<AndroidX root>/development/project-creator` directory.
 *
 * Please use that script when creating a new project, rather than copying an existing project and
 * modifying its settings.
 */

import androidx.build.SoftwareType
import androidx.build.PlatformIdentifier

plugins {
    id("AndroidXPlugin")
    id("AndroidXComposePlugin")
}

androidXMultiplatform {
    androidLibrary {
        compileSdk = 35
        namespace = "androidx.compose.ui.tooling"
        androidResources.enable = true
        // TODO(b/345531033)
        experimentalProperties["android.lint.useK2Uast"] = false
    }
    jvmStubs()

    defaultPlatform(PlatformIdentifier.ANDROID)

    sourceSets {
        commonMain {
            dependencies {
                implementation(libs.kotlinStdlib)
                api(project(":compose:runtime:runtime"))
                api(project(":compose:ui:ui-tooling-preview"))
                api(project(":compose:ui:ui"))
                api(project(":compose:ui:ui-tooling-data"))
            }
        }

        commonTest {
            dependencies {
            }
        }

        jvmMain {
            dependsOn(commonMain)
            dependencies {
            }
        }

        androidMain {
            dependsOn(jvmMain)
            dependencies {
                api("androidx.annotation:annotation:1.8.1")
                implementation(project(":compose:animation:animation"))
                implementation("androidx.savedstate:savedstate-ktx:1.2.1")
                implementation("androidx.compose.material:material:1.0.0")
                implementation("androidx.activity:activity-compose:1.7.0")
                implementation("androidx.lifecycle:lifecycle-common:2.6.1")

                // kotlin-reflect and tooling-animation-internal are provided by Studio at runtime
                compileOnly(project(":compose:animation:animation-tooling-internal"))
                compileOnly(libs.kotlinReflect)
            }
        }

        jvmStubsMain {
            dependsOn(jvmMain)
            dependencies {
            }
        }

        androidInstrumentedTest {
            dependsOn(commonTest)
            dependencies {
                implementation(project(":compose:ui:ui-test-junit4"))

                implementation(libs.junit)
                implementation(libs.testRunner)
                implementation(libs.testRules)
                implementation("androidx.compose.material:material-icons-core:1.6.7")
                implementation(project(":compose:foundation:foundation-layout"))
                implementation(project(":compose:foundation:foundation"))
                implementation(project(":compose:test-utils"))
                implementation(libs.truth)
                implementation(libs.kotlinReflect)
                implementation(project(":compose:animation:animation-tooling-internal"))
                implementation("androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1")
                implementation(project(":compose:runtime:runtime-livedata"))
            }
        }

        androidUnitTest {
            dependsOn(commonTest)
            dependencies {
            }
        }
    }
}

androidx {
    name = "Compose Tooling"
    type = SoftwareType.PUBLISHED_LIBRARY_ONLY_USED_BY_KOTLIN_CONSUMERS
    inceptionYear = "2019"
    description = "Compose tooling library. This library exposes information to our tools for better IDE support."
    legacyDisableKotlinStrictApiMode = true
    samples(project(":compose:animation:animation:animation-samples"))
    // samples(project(":compose:animation:animation-core:animation-core-samples")) TODO(b/318840087)
}
