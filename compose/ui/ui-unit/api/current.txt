// Signature format: 4.0
package androidx.compose.ui.unit {

  public final class AndroidDensity_androidKt {
    method public static androidx.compose.ui.unit.Density Density(android.content.Context context);
  }

  @androidx.compose.runtime.Immutable @kotlin.jvm.JvmInline public final value class Constraints {
    ctor public Constraints(@kotlin.PublishedApi long value);
    method public long copy(optional int minWidth, optional int maxWidth, optional int minHeight, optional int maxHeight);
    method public inline long copyMaxDimensions();
    property public boolean hasBoundedHeight;
    property public boolean hasBoundedWidth;
    property @androidx.compose.runtime.Stable public boolean hasFixedHeight;
    property @androidx.compose.runtime.Stable public boolean hasFixedWidth;
    property @androidx.compose.runtime.Stable public boolean isZero;
    property public int maxHeight;
    property public int maxWidth;
    property public int minHeight;
    property public int minWidth;
    field public static final androidx.compose.ui.unit.Constraints.Companion Companion;
    field public static final int Infinity = 2147483647; // 0x7fffffff
  }

  public static final class Constraints.Companion {
    method @androidx.compose.runtime.Stable public long fitPrioritizingHeight(int minWidth, int maxWidth, int minHeight, int maxHeight);
    method @androidx.compose.runtime.Stable public long fitPrioritizingWidth(int minWidth, int maxWidth, int minHeight, int maxHeight);
    method @androidx.compose.runtime.Stable public long fixed(int width, int height);
    method @androidx.compose.runtime.Stable public long fixedHeight(int height);
    method @androidx.compose.runtime.Stable public long fixedWidth(int width);
    method @Deprecated @androidx.compose.runtime.Stable public long restrictConstraints(int minWidth, int maxWidth, int minHeight, int maxHeight, optional boolean prioritizeWidth);
    property public static int Infinity;
  }

  public final class ConstraintsKt {
    method @androidx.compose.runtime.Stable public static long Constraints(optional int minWidth, optional int maxWidth, optional int minHeight, optional int maxHeight);
    method public static long constrain(long, long otherConstraints);
    method @androidx.compose.runtime.Stable public static long constrain(long, long size);
    method @androidx.compose.runtime.Stable public static int constrainHeight(long, int height);
    method @androidx.compose.runtime.Stable public static int constrainWidth(long, int width);
    method @androidx.compose.runtime.Stable public static boolean isSatisfiedBy(long, long size);
    method @androidx.compose.runtime.Stable public static long offset(long, optional int horizontal, optional int vertical);
  }

  @androidx.compose.runtime.Immutable @kotlin.jvm.JvmDefaultWithCompatibility public interface Density extends androidx.compose.ui.unit.FontScaling {
    method public float getDensity();
    method @androidx.compose.runtime.Stable public default int roundToPx(float);
    method @androidx.compose.runtime.Stable public default int roundToPx(long);
    method @androidx.compose.runtime.Stable public default float toDp(float);
    method @androidx.compose.runtime.Stable public default float toDp(int);
    method @androidx.compose.runtime.Stable public default long toDpSize(long);
    method @androidx.compose.runtime.Stable public default float toPx(float);
    method @androidx.compose.runtime.Stable public default float toPx(long);
    method @androidx.compose.runtime.Stable public default androidx.compose.ui.geometry.Rect toRect(androidx.compose.ui.unit.DpRect);
    method @androidx.compose.runtime.Stable public default long toSize(long);
    method @androidx.compose.runtime.Stable public default long toSp(int);
    property @androidx.compose.runtime.Stable public abstract float density;
  }

  public final class DensityKt {
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.unit.Density Density(float density, optional float fontScale);
  }

  @androidx.compose.runtime.Immutable @kotlin.jvm.JvmInline public final value class Dp implements java.lang.Comparable<androidx.compose.ui.unit.Dp> {
    ctor public Dp(float value);
    method @androidx.compose.runtime.Stable public operator int compareTo(float other);
    method @androidx.compose.runtime.Stable public inline operator float div(float other);
    method @androidx.compose.runtime.Stable public inline operator float div(float other);
    method @androidx.compose.runtime.Stable public inline operator float div(int other);
    method public float getValue();
    method @androidx.compose.runtime.Stable public inline operator float minus(float other);
    method @androidx.compose.runtime.Stable public inline operator float plus(float other);
    method @androidx.compose.runtime.Stable public inline operator float times(float other);
    method @androidx.compose.runtime.Stable public inline operator float times(int other);
    method @androidx.compose.runtime.Stable public inline operator float unaryMinus();
    property public float value;
    field public static final androidx.compose.ui.unit.Dp.Companion Companion;
  }

  public static final class Dp.Companion {
    method public float getHairline();
    method public float getInfinity();
    method public float getUnspecified();
    property @androidx.compose.runtime.Stable public float Hairline;
    property @androidx.compose.runtime.Stable public float Infinity;
    property @androidx.compose.runtime.Stable public float Unspecified;
  }

  public final class DpKt {
    method @androidx.compose.runtime.Stable public static inline long DpOffset(float x, float y);
    method @androidx.compose.runtime.Stable public static long DpSize(float width, float height);
    method @androidx.compose.runtime.Stable public static inline float coerceAtLeast(float, float minimumValue);
    method @androidx.compose.runtime.Stable public static inline float coerceAtMost(float, float maximumValue);
    method @androidx.compose.runtime.Stable public static inline float coerceIn(float, float minimumValue, float maximumValue);
    method public static long getCenter(long);
    method public static inline float getDp(double);
    method public static inline float getDp(float);
    method public static inline float getDp(int);
    method public static inline float getHeight(androidx.compose.ui.unit.DpRect);
    method public static inline long getSize(androidx.compose.ui.unit.DpRect);
    method public static inline float getWidth(androidx.compose.ui.unit.DpRect);
    method public static inline boolean isFinite(float);
    method public static inline boolean isSpecified(float);
    method public static inline boolean isSpecified(long);
    method public static inline boolean isSpecified(long);
    method public static inline boolean isUnspecified(float);
    method public static inline boolean isUnspecified(long);
    method public static inline boolean isUnspecified(long);
    method @androidx.compose.runtime.Stable public static float lerp(float start, float stop, float fraction);
    method @androidx.compose.runtime.Stable public static long lerp(long start, long stop, float fraction);
    method @androidx.compose.runtime.Stable public static long lerp(long start, long stop, float fraction);
    method @androidx.compose.runtime.Stable public static inline float max(float a, float b);
    method @androidx.compose.runtime.Stable public static inline float min(float a, float b);
    method public static inline float takeOrElse(float, kotlin.jvm.functions.Function0<androidx.compose.ui.unit.Dp> block);
    method public static inline long takeOrElse(long, kotlin.jvm.functions.Function0<androidx.compose.ui.unit.DpOffset> block);
    method public static inline long takeOrElse(long, kotlin.jvm.functions.Function0<androidx.compose.ui.unit.DpSize> block);
    method @androidx.compose.runtime.Stable public static inline operator float times(double, float other);
    method @androidx.compose.runtime.Stable public static inline operator float times(float, float other);
    method @androidx.compose.runtime.Stable public static inline operator long times(float, long size);
    method @androidx.compose.runtime.Stable public static inline operator float times(int, float other);
    method @androidx.compose.runtime.Stable public static inline operator long times(int, long size);
    property @androidx.compose.runtime.Stable public static long long.center;
    property @androidx.compose.runtime.Stable public static inline float int.dp;
    property @androidx.compose.runtime.Stable public static inline float double.dp;
    property @androidx.compose.runtime.Stable public static inline float float.dp;
    property @androidx.compose.runtime.Stable public static inline float androidx.compose.ui.unit.DpRect.height;
    property @androidx.compose.runtime.Stable public static inline boolean float.isFinite;
    property @androidx.compose.runtime.Stable public static inline boolean float.isSpecified;
    property @androidx.compose.runtime.Stable public static inline boolean long.isSpecified;
    property @androidx.compose.runtime.Stable public static inline boolean long.isSpecified;
    property @androidx.compose.runtime.Stable public static inline boolean float.isUnspecified;
    property @androidx.compose.runtime.Stable public static inline boolean long.isUnspecified;
    property @androidx.compose.runtime.Stable public static inline boolean long.isUnspecified;
    property @androidx.compose.runtime.Stable public static inline long androidx.compose.ui.unit.DpRect.size;
    property @androidx.compose.runtime.Stable public static inline float androidx.compose.ui.unit.DpRect.width;
  }

  @androidx.compose.runtime.Immutable @kotlin.jvm.JvmInline public final value class DpOffset {
    ctor public DpOffset(long packedValue);
    method public long copy(optional float x, optional float y);
    method public long getPackedValue();
    method @androidx.compose.runtime.Stable public operator long minus(long other);
    method @androidx.compose.runtime.Stable public operator long plus(long other);
    property public long packedValue;
    property @androidx.compose.runtime.Stable public float x;
    property @androidx.compose.runtime.Stable public float y;
    field public static final androidx.compose.ui.unit.DpOffset.Companion Companion;
  }

  public static final class DpOffset.Companion {
    method public long getUnspecified();
    method public long getZero();
    property public long Unspecified;
    property public long Zero;
  }

  @androidx.compose.runtime.Immutable public final class DpRect {
    ctor public DpRect(@androidx.compose.runtime.Stable float left, @androidx.compose.runtime.Stable float top, @androidx.compose.runtime.Stable float right, @androidx.compose.runtime.Stable float bottom);
    ctor public DpRect(long origin, long size);
    method public float component1-D9Ej5fM();
    method public float component2-D9Ej5fM();
    method public float component3-D9Ej5fM();
    method public float component4-D9Ej5fM();
    method public androidx.compose.ui.unit.DpRect copy-a9UjIt4(float left, float top, float right, float bottom);
    method public float getBottom();
    method public float getLeft();
    method public float getRight();
    method public float getTop();
    property @androidx.compose.runtime.Stable public float bottom;
    property @androidx.compose.runtime.Stable public float left;
    property @androidx.compose.runtime.Stable public float right;
    property @androidx.compose.runtime.Stable public float top;
    field public static final androidx.compose.ui.unit.DpRect.Companion Companion;
  }

  public static final class DpRect.Companion {
  }

  @androidx.compose.runtime.Immutable @kotlin.jvm.JvmInline public final value class DpSize {
    method @androidx.compose.runtime.Stable public inline operator float component1();
    method @androidx.compose.runtime.Stable public inline operator float component2();
    method public long copy(optional float width, optional float height);
    method @androidx.compose.runtime.Stable public operator long div(float other);
    method @androidx.compose.runtime.Stable public operator long div(int other);
    method @androidx.compose.runtime.Stable public operator long minus(long other);
    method @androidx.compose.runtime.Stable public operator long plus(long other);
    method @androidx.compose.runtime.Stable public operator long times(float other);
    method @androidx.compose.runtime.Stable public operator long times(int other);
    property @androidx.compose.runtime.Stable public float height;
    property @androidx.compose.runtime.Stable public float width;
    field public static final androidx.compose.ui.unit.DpSize.Companion Companion;
  }

  public static final class DpSize.Companion {
    method public long getUnspecified();
    method public long getZero();
    property public long Unspecified;
    property public long Zero;
  }

  @SuppressCompatibility @kotlin.RequiresOptIn(message="This API is experimental and is likely to change in the future.") @kotlin.annotation.Retention(kotlin.annotation.AnnotationRetention.BINARY) public @interface ExperimentalUnitApi {
  }

  @androidx.compose.runtime.Immutable @kotlin.jvm.JvmDefaultWithCompatibility public interface FontScaling {
    method public float getFontScale();
    method @androidx.compose.runtime.Stable public default float toDp(long);
    method @androidx.compose.runtime.Stable public default long toSp(float);
    property @androidx.compose.runtime.Stable public abstract float fontScale;
  }

  @androidx.compose.runtime.Immutable @kotlin.jvm.JvmInline public final value class IntOffset {
    ctor public IntOffset(long packedValue);
    method @androidx.compose.runtime.Stable public inline operator int component1();
    method @androidx.compose.runtime.Stable public inline operator int component2();
    method public long copy(optional int x, optional int y);
    method @androidx.compose.runtime.Stable public operator long div(float operand);
    method public long getPackedValue();
    method @androidx.compose.runtime.Stable public operator long minus(long other);
    method @androidx.compose.runtime.Stable public operator long plus(long other);
    method @androidx.compose.runtime.Stable public operator long rem(int operand);
    method @androidx.compose.runtime.Stable public operator long times(float operand);
    method @androidx.compose.runtime.Stable public operator long unaryMinus();
    property public long packedValue;
    property @androidx.compose.runtime.Stable public int x;
    property @androidx.compose.runtime.Stable public int y;
    field public static final androidx.compose.ui.unit.IntOffset.Companion Companion;
  }

  public static final class IntOffset.Companion {
    method public long getMax();
    method public long getZero();
    property public long Max;
    property public long Zero;
  }

  public final class IntOffsetKt {
    method @androidx.compose.runtime.Stable public static inline long IntOffset(int x, int y);
    method @androidx.compose.runtime.Stable public static long lerp(long start, long stop, float fraction);
    method @androidx.compose.runtime.Stable public static operator long minus(long, long offset);
    method @androidx.compose.runtime.Stable public static operator long minus(long, long offset);
    method @androidx.compose.runtime.Stable public static operator long plus(long, long offset);
    method @androidx.compose.runtime.Stable public static operator long plus(long, long offset);
    method @androidx.compose.runtime.Stable public static long round(long);
    method @androidx.compose.runtime.Stable public static inline long toOffset(long);
  }

  @androidx.compose.runtime.Immutable public final class IntRect {
    ctor public IntRect(@androidx.compose.runtime.Stable int left, @androidx.compose.runtime.Stable int top, @androidx.compose.runtime.Stable int right, @androidx.compose.runtime.Stable int bottom);
    method public int component1();
    method public int component2();
    method public int component3();
    method public int component4();
    method public boolean contains(long offset);
    method public androidx.compose.ui.unit.IntRect copy(optional int left, optional int top, optional int right, optional int bottom);
    method @androidx.compose.runtime.Stable public androidx.compose.ui.unit.IntRect deflate(int delta);
    method public int getBottom();
    method public long getBottomCenter();
    method public long getBottomLeft();
    method public long getBottomRight();
    method public long getCenter();
    method public long getCenterLeft();
    method public long getCenterRight();
    method public int getHeight();
    method public int getLeft();
    method public int getMaxDimension();
    method public int getMinDimension();
    method public int getRight();
    method public long getSize();
    method public int getTop();
    method public long getTopCenter();
    method public long getTopLeft();
    method public long getTopRight();
    method public int getWidth();
    method @androidx.compose.runtime.Stable public androidx.compose.ui.unit.IntRect inflate(int delta);
    method @androidx.compose.runtime.Stable public androidx.compose.ui.unit.IntRect intersect(androidx.compose.ui.unit.IntRect other);
    method public boolean isEmpty();
    method public boolean overlaps(androidx.compose.ui.unit.IntRect other);
    method @androidx.compose.runtime.Stable public androidx.compose.ui.unit.IntRect translate(int translateX, int translateY);
    method @androidx.compose.runtime.Stable public androidx.compose.ui.unit.IntRect translate(long offset);
    property @androidx.compose.runtime.Stable public int bottom;
    property public long bottomCenter;
    property public long bottomLeft;
    property public long bottomRight;
    property public long center;
    property public long centerLeft;
    property public long centerRight;
    property @androidx.compose.runtime.Stable public int height;
    property @androidx.compose.runtime.Stable public boolean isEmpty;
    property @androidx.compose.runtime.Stable public int left;
    property public int maxDimension;
    property public int minDimension;
    property @androidx.compose.runtime.Stable public int right;
    property @androidx.compose.runtime.Stable public long size;
    property @androidx.compose.runtime.Stable public int top;
    property public long topCenter;
    property public long topLeft;
    property public long topRight;
    property @androidx.compose.runtime.Stable public int width;
    field public static final androidx.compose.ui.unit.IntRect.Companion Companion;
  }

  public static final class IntRect.Companion {
    method public androidx.compose.ui.unit.IntRect getZero();
    property @androidx.compose.runtime.Stable public androidx.compose.ui.unit.IntRect Zero;
  }

  public final class IntRectKt {
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.unit.IntRect IntRect(long center, int radius);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.unit.IntRect IntRect(long offset, long size);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.unit.IntRect IntRect(long topLeft, long bottomRight);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.unit.IntRect lerp(androidx.compose.ui.unit.IntRect start, androidx.compose.ui.unit.IntRect stop, float fraction);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.unit.IntRect roundToIntRect(androidx.compose.ui.geometry.Rect);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.geometry.Rect toRect(androidx.compose.ui.unit.IntRect);
  }

  @androidx.compose.runtime.Immutable @kotlin.jvm.JvmInline public final value class IntSize {
    method @androidx.compose.runtime.Stable public inline operator int component1();
    method @androidx.compose.runtime.Stable public inline operator int component2();
    method @androidx.compose.runtime.Stable public operator long div(int other);
    method public long getPackedValue();
    method @androidx.compose.runtime.Stable public operator long times(int other);
    property @androidx.compose.runtime.Stable public inline int height;
    property public long packedValue;
    property @androidx.compose.runtime.Stable public inline int width;
    field public static final androidx.compose.ui.unit.IntSize.Companion Companion;
  }

  public static final class IntSize.Companion {
    method public long getZero();
    property public long Zero;
  }

  public final class IntSizeKt {
    method @androidx.compose.runtime.Stable public static inline long IntSize(int width, int height);
    method public static long getCenter(long);
    method @androidx.compose.runtime.Stable public static long roundToIntSize(long);
    method @androidx.compose.runtime.Stable public static inline operator long times(int, long size);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.unit.IntRect toIntRect(long);
    method @androidx.compose.runtime.Stable public static long toIntSize(long);
    method @androidx.compose.runtime.Stable public static long toSize(long);
    property @androidx.compose.runtime.Stable public static long long.center;
  }

  public enum LayoutDirection {
    enum_constant public static final androidx.compose.ui.unit.LayoutDirection Ltr;
    enum_constant public static final androidx.compose.ui.unit.LayoutDirection Rtl;
  }

  @androidx.compose.runtime.Immutable @kotlin.jvm.JvmInline public final value class TextUnit {
    method public inline operator int compareTo(long other);
    method public inline operator long div(double other);
    method public inline operator long div(float other);
    method public inline operator long div(int other);
    method public inline operator long times(double other);
    method public inline operator long times(float other);
    method public inline operator long times(int other);
    method public inline operator long unaryMinus();
    property public boolean isEm;
    property public boolean isSp;
    property public long type;
    property public float value;
    field public static final androidx.compose.ui.unit.TextUnit.Companion Companion;
  }

  public static final class TextUnit.Companion {
    method public long getUnspecified();
    property @androidx.compose.runtime.Stable public long Unspecified;
  }

  public final class TextUnitKt {
    method public static long TextUnit(float value, long type);
    method public static long getEm(double);
    method public static long getEm(float);
    method public static long getEm(int);
    method public static long getSp(double);
    method public static long getSp(float);
    method public static long getSp(int);
    method public static inline boolean isSpecified(long);
    method public static inline boolean isUnspecified(long);
    method @androidx.compose.runtime.Stable public static long lerp(long start, long stop, float fraction);
    method public static inline long takeOrElse(long, kotlin.jvm.functions.Function0<androidx.compose.ui.unit.TextUnit> block);
    method @androidx.compose.runtime.Stable public static inline operator long times(double, long other);
    method @androidx.compose.runtime.Stable public static inline operator long times(float, long other);
    method @androidx.compose.runtime.Stable public static inline operator long times(int, long other);
    property @androidx.compose.runtime.Stable public static long float.em;
    property @androidx.compose.runtime.Stable public static long double.em;
    property @androidx.compose.runtime.Stable public static long int.em;
    property @androidx.compose.runtime.Stable public static inline boolean long.isSpecified;
    property @androidx.compose.runtime.Stable public static inline boolean long.isUnspecified;
    property @androidx.compose.runtime.Stable public static long float.sp;
    property @androidx.compose.runtime.Stable public static long double.sp;
    property @androidx.compose.runtime.Stable public static long int.sp;
  }

  @kotlin.jvm.JvmInline public final value class TextUnitType {
    ctor public TextUnitType(long type);
    field public static final androidx.compose.ui.unit.TextUnitType.Companion Companion;
  }

  public static final class TextUnitType.Companion {
    method public long getEm();
    method public long getSp();
    method public long getUnspecified();
    property public long Em;
    property public long Sp;
    property public long Unspecified;
  }

  @androidx.compose.runtime.Immutable @kotlin.jvm.JvmInline public final value class Velocity {
    method @androidx.compose.runtime.Stable public inline operator float component1();
    method @androidx.compose.runtime.Stable public inline operator float component2();
    method public long copy(optional float x, optional float y);
    method @androidx.compose.runtime.Stable public operator long div(float operand);
    method @androidx.compose.runtime.Stable public operator long minus(long other);
    method @androidx.compose.runtime.Stable public operator long plus(long other);
    method @androidx.compose.runtime.Stable public operator long rem(float operand);
    method @androidx.compose.runtime.Stable public operator long times(float operand);
    method @androidx.compose.runtime.Stable public operator long unaryMinus();
    property @androidx.compose.runtime.Stable public float x;
    property @androidx.compose.runtime.Stable public float y;
    field public static final androidx.compose.ui.unit.Velocity.Companion Companion;
  }

  public static final class Velocity.Companion {
    method public long getZero();
    property @androidx.compose.runtime.Stable public long Zero;
  }

  public final class VelocityKt {
    method @androidx.compose.runtime.Stable public static long Velocity(float x, float y);
  }

}

