// Klib ABI Dump
// Targets: [linuxX64.linuxx64Stubs]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <androidx.compose.ui:ui-unit>
open annotation class androidx.compose.ui.unit/ExperimentalUnitApi : kotlin/Annotation { // androidx.compose.ui.unit/ExperimentalUnitApi|null[0]
    constructor <init>() // androidx.compose.ui.unit/ExperimentalUnitApi.<init>|<init>(){}[0]
}

final enum class androidx.compose.ui.unit/LayoutDirection : kotlin/Enum<androidx.compose.ui.unit/LayoutDirection> { // androidx.compose.ui.unit/LayoutDirection|null[0]
    enum entry Ltr // androidx.compose.ui.unit/LayoutDirection.Ltr|null[0]
    enum entry Rtl // androidx.compose.ui.unit/LayoutDirection.Rtl|null[0]

    final val entries // androidx.compose.ui.unit/LayoutDirection.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<androidx.compose.ui.unit/LayoutDirection> // androidx.compose.ui.unit/LayoutDirection.entries.<get-entries>|<get-entries>#static(){}[0]

    final fun valueOf(kotlin/String): androidx.compose.ui.unit/LayoutDirection // androidx.compose.ui.unit/LayoutDirection.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<androidx.compose.ui.unit/LayoutDirection> // androidx.compose.ui.unit/LayoutDirection.values|values#static(){}[0]
}

abstract interface androidx.compose.ui.unit/Density : androidx.compose.ui.unit/FontScalingLinear { // androidx.compose.ui.unit/Density|null[0]
    abstract val density // androidx.compose.ui.unit/Density.density|{}density[0]
        abstract fun <get-density>(): kotlin/Float // androidx.compose.ui.unit/Density.density.<get-density>|<get-density>(){}[0]

    open fun (androidx.compose.ui.geometry/Size).toDpSize(): androidx.compose.ui.unit/DpSize // androidx.compose.ui.unit/Density.toDpSize|toDpSize@androidx.compose.ui.geometry.Size(){}[0]
    open fun (androidx.compose.ui.unit/Dp).roundToPx(): kotlin/Int // androidx.compose.ui.unit/Density.roundToPx|roundToPx@androidx.compose.ui.unit.Dp(){}[0]
    open fun (androidx.compose.ui.unit/Dp).toPx(): kotlin/Float // androidx.compose.ui.unit/Density.toPx|toPx@androidx.compose.ui.unit.Dp(){}[0]
    open fun (androidx.compose.ui.unit/DpRect).toRect(): androidx.compose.ui.geometry/Rect // androidx.compose.ui.unit/Density.toRect|toRect@androidx.compose.ui.unit.DpRect(){}[0]
    open fun (androidx.compose.ui.unit/DpSize).toSize(): androidx.compose.ui.geometry/Size // androidx.compose.ui.unit/Density.toSize|toSize@androidx.compose.ui.unit.DpSize(){}[0]
    open fun (androidx.compose.ui.unit/TextUnit).roundToPx(): kotlin/Int // androidx.compose.ui.unit/Density.roundToPx|roundToPx@androidx.compose.ui.unit.TextUnit(){}[0]
    open fun (androidx.compose.ui.unit/TextUnit).toPx(): kotlin/Float // androidx.compose.ui.unit/Density.toPx|toPx@androidx.compose.ui.unit.TextUnit(){}[0]
    open fun (kotlin/Float).toDp(): androidx.compose.ui.unit/Dp // androidx.compose.ui.unit/Density.toDp|toDp@kotlin.Float(){}[0]
    open fun (kotlin/Float).toSp(): androidx.compose.ui.unit/TextUnit // androidx.compose.ui.unit/Density.toSp|toSp@kotlin.Float(){}[0]
    open fun (kotlin/Int).toDp(): androidx.compose.ui.unit/Dp // androidx.compose.ui.unit/Density.toDp|toDp@kotlin.Int(){}[0]
    open fun (kotlin/Int).toSp(): androidx.compose.ui.unit/TextUnit // androidx.compose.ui.unit/Density.toSp|toSp@kotlin.Int(){}[0]
}

abstract interface androidx.compose.ui.unit/FontScalingLinear { // androidx.compose.ui.unit/FontScalingLinear|null[0]
    abstract val fontScale // androidx.compose.ui.unit/FontScalingLinear.fontScale|{}fontScale[0]
        abstract fun <get-fontScale>(): kotlin/Float // androidx.compose.ui.unit/FontScalingLinear.fontScale.<get-fontScale>|<get-fontScale>(){}[0]

    open fun (androidx.compose.ui.unit/Dp).toSp(): androidx.compose.ui.unit/TextUnit // androidx.compose.ui.unit/FontScalingLinear.toSp|toSp@androidx.compose.ui.unit.Dp(){}[0]
    open fun (androidx.compose.ui.unit/TextUnit).toDp(): androidx.compose.ui.unit/Dp // androidx.compose.ui.unit/FontScalingLinear.toDp|toDp@androidx.compose.ui.unit.TextUnit(){}[0]
}

final class androidx.compose.ui.unit/DpRect { // androidx.compose.ui.unit/DpRect|null[0]
    constructor <init>(androidx.compose.ui.unit/Dp, androidx.compose.ui.unit/Dp, androidx.compose.ui.unit/Dp, androidx.compose.ui.unit/Dp) // androidx.compose.ui.unit/DpRect.<init>|<init>(androidx.compose.ui.unit.Dp;androidx.compose.ui.unit.Dp;androidx.compose.ui.unit.Dp;androidx.compose.ui.unit.Dp){}[0]
    constructor <init>(androidx.compose.ui.unit/DpOffset, androidx.compose.ui.unit/DpSize) // androidx.compose.ui.unit/DpRect.<init>|<init>(androidx.compose.ui.unit.DpOffset;androidx.compose.ui.unit.DpSize){}[0]

    final val bottom // androidx.compose.ui.unit/DpRect.bottom|{}bottom[0]
        final fun <get-bottom>(): androidx.compose.ui.unit/Dp // androidx.compose.ui.unit/DpRect.bottom.<get-bottom>|<get-bottom>(){}[0]
    final val left // androidx.compose.ui.unit/DpRect.left|{}left[0]
        final fun <get-left>(): androidx.compose.ui.unit/Dp // androidx.compose.ui.unit/DpRect.left.<get-left>|<get-left>(){}[0]
    final val right // androidx.compose.ui.unit/DpRect.right|{}right[0]
        final fun <get-right>(): androidx.compose.ui.unit/Dp // androidx.compose.ui.unit/DpRect.right.<get-right>|<get-right>(){}[0]
    final val top // androidx.compose.ui.unit/DpRect.top|{}top[0]
        final fun <get-top>(): androidx.compose.ui.unit/Dp // androidx.compose.ui.unit/DpRect.top.<get-top>|<get-top>(){}[0]

    final fun component1(): androidx.compose.ui.unit/Dp // androidx.compose.ui.unit/DpRect.component1|component1(){}[0]
    final fun component2(): androidx.compose.ui.unit/Dp // androidx.compose.ui.unit/DpRect.component2|component2(){}[0]
    final fun component3(): androidx.compose.ui.unit/Dp // androidx.compose.ui.unit/DpRect.component3|component3(){}[0]
    final fun component4(): androidx.compose.ui.unit/Dp // androidx.compose.ui.unit/DpRect.component4|component4(){}[0]
    final fun copy(androidx.compose.ui.unit/Dp = ..., androidx.compose.ui.unit/Dp = ..., androidx.compose.ui.unit/Dp = ..., androidx.compose.ui.unit/Dp = ...): androidx.compose.ui.unit/DpRect // androidx.compose.ui.unit/DpRect.copy|copy(androidx.compose.ui.unit.Dp;androidx.compose.ui.unit.Dp;androidx.compose.ui.unit.Dp;androidx.compose.ui.unit.Dp){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // androidx.compose.ui.unit/DpRect.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // androidx.compose.ui.unit/DpRect.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // androidx.compose.ui.unit/DpRect.toString|toString(){}[0]

    final object Companion // androidx.compose.ui.unit/DpRect.Companion|null[0]
}

final class androidx.compose.ui.unit/IntRect { // androidx.compose.ui.unit/IntRect|null[0]
    constructor <init>(kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int) // androidx.compose.ui.unit/IntRect.<init>|<init>(kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int){}[0]

    final val bottom // androidx.compose.ui.unit/IntRect.bottom|{}bottom[0]
        final fun <get-bottom>(): kotlin/Int // androidx.compose.ui.unit/IntRect.bottom.<get-bottom>|<get-bottom>(){}[0]
    final val bottomCenter // androidx.compose.ui.unit/IntRect.bottomCenter|{}bottomCenter[0]
        final fun <get-bottomCenter>(): androidx.compose.ui.unit/IntOffset // androidx.compose.ui.unit/IntRect.bottomCenter.<get-bottomCenter>|<get-bottomCenter>(){}[0]
    final val bottomLeft // androidx.compose.ui.unit/IntRect.bottomLeft|{}bottomLeft[0]
        final fun <get-bottomLeft>(): androidx.compose.ui.unit/IntOffset // androidx.compose.ui.unit/IntRect.bottomLeft.<get-bottomLeft>|<get-bottomLeft>(){}[0]
    final val bottomRight // androidx.compose.ui.unit/IntRect.bottomRight|{}bottomRight[0]
        final fun <get-bottomRight>(): androidx.compose.ui.unit/IntOffset // androidx.compose.ui.unit/IntRect.bottomRight.<get-bottomRight>|<get-bottomRight>(){}[0]
    final val center // androidx.compose.ui.unit/IntRect.center|{}center[0]
        final fun <get-center>(): androidx.compose.ui.unit/IntOffset // androidx.compose.ui.unit/IntRect.center.<get-center>|<get-center>(){}[0]
    final val centerLeft // androidx.compose.ui.unit/IntRect.centerLeft|{}centerLeft[0]
        final fun <get-centerLeft>(): androidx.compose.ui.unit/IntOffset // androidx.compose.ui.unit/IntRect.centerLeft.<get-centerLeft>|<get-centerLeft>(){}[0]
    final val centerRight // androidx.compose.ui.unit/IntRect.centerRight|{}centerRight[0]
        final fun <get-centerRight>(): androidx.compose.ui.unit/IntOffset // androidx.compose.ui.unit/IntRect.centerRight.<get-centerRight>|<get-centerRight>(){}[0]
    final val height // androidx.compose.ui.unit/IntRect.height|{}height[0]
        final fun <get-height>(): kotlin/Int // androidx.compose.ui.unit/IntRect.height.<get-height>|<get-height>(){}[0]
    final val isEmpty // androidx.compose.ui.unit/IntRect.isEmpty|{}isEmpty[0]
        final fun <get-isEmpty>(): kotlin/Boolean // androidx.compose.ui.unit/IntRect.isEmpty.<get-isEmpty>|<get-isEmpty>(){}[0]
    final val left // androidx.compose.ui.unit/IntRect.left|{}left[0]
        final fun <get-left>(): kotlin/Int // androidx.compose.ui.unit/IntRect.left.<get-left>|<get-left>(){}[0]
    final val maxDimension // androidx.compose.ui.unit/IntRect.maxDimension|{}maxDimension[0]
        final fun <get-maxDimension>(): kotlin/Int // androidx.compose.ui.unit/IntRect.maxDimension.<get-maxDimension>|<get-maxDimension>(){}[0]
    final val minDimension // androidx.compose.ui.unit/IntRect.minDimension|{}minDimension[0]
        final fun <get-minDimension>(): kotlin/Int // androidx.compose.ui.unit/IntRect.minDimension.<get-minDimension>|<get-minDimension>(){}[0]
    final val right // androidx.compose.ui.unit/IntRect.right|{}right[0]
        final fun <get-right>(): kotlin/Int // androidx.compose.ui.unit/IntRect.right.<get-right>|<get-right>(){}[0]
    final val size // androidx.compose.ui.unit/IntRect.size|{}size[0]
        final fun <get-size>(): androidx.compose.ui.unit/IntSize // androidx.compose.ui.unit/IntRect.size.<get-size>|<get-size>(){}[0]
    final val top // androidx.compose.ui.unit/IntRect.top|{}top[0]
        final fun <get-top>(): kotlin/Int // androidx.compose.ui.unit/IntRect.top.<get-top>|<get-top>(){}[0]
    final val topCenter // androidx.compose.ui.unit/IntRect.topCenter|{}topCenter[0]
        final fun <get-topCenter>(): androidx.compose.ui.unit/IntOffset // androidx.compose.ui.unit/IntRect.topCenter.<get-topCenter>|<get-topCenter>(){}[0]
    final val topLeft // androidx.compose.ui.unit/IntRect.topLeft|{}topLeft[0]
        final fun <get-topLeft>(): androidx.compose.ui.unit/IntOffset // androidx.compose.ui.unit/IntRect.topLeft.<get-topLeft>|<get-topLeft>(){}[0]
    final val topRight // androidx.compose.ui.unit/IntRect.topRight|{}topRight[0]
        final fun <get-topRight>(): androidx.compose.ui.unit/IntOffset // androidx.compose.ui.unit/IntRect.topRight.<get-topRight>|<get-topRight>(){}[0]
    final val width // androidx.compose.ui.unit/IntRect.width|{}width[0]
        final fun <get-width>(): kotlin/Int // androidx.compose.ui.unit/IntRect.width.<get-width>|<get-width>(){}[0]

    final fun component1(): kotlin/Int // androidx.compose.ui.unit/IntRect.component1|component1(){}[0]
    final fun component2(): kotlin/Int // androidx.compose.ui.unit/IntRect.component2|component2(){}[0]
    final fun component3(): kotlin/Int // androidx.compose.ui.unit/IntRect.component3|component3(){}[0]
    final fun component4(): kotlin/Int // androidx.compose.ui.unit/IntRect.component4|component4(){}[0]
    final fun contains(androidx.compose.ui.unit/IntOffset): kotlin/Boolean // androidx.compose.ui.unit/IntRect.contains|contains(androidx.compose.ui.unit.IntOffset){}[0]
    final fun copy(kotlin/Int = ..., kotlin/Int = ..., kotlin/Int = ..., kotlin/Int = ...): androidx.compose.ui.unit/IntRect // androidx.compose.ui.unit/IntRect.copy|copy(kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
    final fun deflate(kotlin/Int): androidx.compose.ui.unit/IntRect // androidx.compose.ui.unit/IntRect.deflate|deflate(kotlin.Int){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // androidx.compose.ui.unit/IntRect.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // androidx.compose.ui.unit/IntRect.hashCode|hashCode(){}[0]
    final fun inflate(kotlin/Int): androidx.compose.ui.unit/IntRect // androidx.compose.ui.unit/IntRect.inflate|inflate(kotlin.Int){}[0]
    final fun intersect(androidx.compose.ui.unit/IntRect): androidx.compose.ui.unit/IntRect // androidx.compose.ui.unit/IntRect.intersect|intersect(androidx.compose.ui.unit.IntRect){}[0]
    final fun overlaps(androidx.compose.ui.unit/IntRect): kotlin/Boolean // androidx.compose.ui.unit/IntRect.overlaps|overlaps(androidx.compose.ui.unit.IntRect){}[0]
    final fun toString(): kotlin/String // androidx.compose.ui.unit/IntRect.toString|toString(){}[0]
    final fun translate(androidx.compose.ui.unit/IntOffset): androidx.compose.ui.unit/IntRect // androidx.compose.ui.unit/IntRect.translate|translate(androidx.compose.ui.unit.IntOffset){}[0]
    final fun translate(kotlin/Int, kotlin/Int): androidx.compose.ui.unit/IntRect // androidx.compose.ui.unit/IntRect.translate|translate(kotlin.Int;kotlin.Int){}[0]

    final object Companion { // androidx.compose.ui.unit/IntRect.Companion|null[0]
        final val Zero // androidx.compose.ui.unit/IntRect.Companion.Zero|{}Zero[0]
            final fun <get-Zero>(): androidx.compose.ui.unit/IntRect // androidx.compose.ui.unit/IntRect.Companion.Zero.<get-Zero>|<get-Zero>(){}[0]
    }
}

final value class androidx.compose.ui.unit/Constraints { // androidx.compose.ui.unit/Constraints|null[0]
    constructor <init>(kotlin/Long) // androidx.compose.ui.unit/Constraints.<init>|<init>(kotlin.Long){}[0]

    final val hasBoundedHeight // androidx.compose.ui.unit/Constraints.hasBoundedHeight|{}hasBoundedHeight[0]
        final fun <get-hasBoundedHeight>(): kotlin/Boolean // androidx.compose.ui.unit/Constraints.hasBoundedHeight.<get-hasBoundedHeight>|<get-hasBoundedHeight>(){}[0]
    final val hasBoundedWidth // androidx.compose.ui.unit/Constraints.hasBoundedWidth|{}hasBoundedWidth[0]
        final fun <get-hasBoundedWidth>(): kotlin/Boolean // androidx.compose.ui.unit/Constraints.hasBoundedWidth.<get-hasBoundedWidth>|<get-hasBoundedWidth>(){}[0]
    final val hasFixedHeight // androidx.compose.ui.unit/Constraints.hasFixedHeight|{}hasFixedHeight[0]
        final fun <get-hasFixedHeight>(): kotlin/Boolean // androidx.compose.ui.unit/Constraints.hasFixedHeight.<get-hasFixedHeight>|<get-hasFixedHeight>(){}[0]
    final val hasFixedWidth // androidx.compose.ui.unit/Constraints.hasFixedWidth|{}hasFixedWidth[0]
        final fun <get-hasFixedWidth>(): kotlin/Boolean // androidx.compose.ui.unit/Constraints.hasFixedWidth.<get-hasFixedWidth>|<get-hasFixedWidth>(){}[0]
    final val isZero // androidx.compose.ui.unit/Constraints.isZero|{}isZero[0]
        final fun <get-isZero>(): kotlin/Boolean // androidx.compose.ui.unit/Constraints.isZero.<get-isZero>|<get-isZero>(){}[0]
    final val maxHeight // androidx.compose.ui.unit/Constraints.maxHeight|{}maxHeight[0]
        final fun <get-maxHeight>(): kotlin/Int // androidx.compose.ui.unit/Constraints.maxHeight.<get-maxHeight>|<get-maxHeight>(){}[0]
    final val maxWidth // androidx.compose.ui.unit/Constraints.maxWidth|{}maxWidth[0]
        final fun <get-maxWidth>(): kotlin/Int // androidx.compose.ui.unit/Constraints.maxWidth.<get-maxWidth>|<get-maxWidth>(){}[0]
    final val minHeight // androidx.compose.ui.unit/Constraints.minHeight|{}minHeight[0]
        final fun <get-minHeight>(): kotlin/Int // androidx.compose.ui.unit/Constraints.minHeight.<get-minHeight>|<get-minHeight>(){}[0]
    final val minWidth // androidx.compose.ui.unit/Constraints.minWidth|{}minWidth[0]
        final fun <get-minWidth>(): kotlin/Int // androidx.compose.ui.unit/Constraints.minWidth.<get-minWidth>|<get-minWidth>(){}[0]
    final val value // androidx.compose.ui.unit/Constraints.value|{}value[0]
        final fun <get-value>(): kotlin/Long // androidx.compose.ui.unit/Constraints.value.<get-value>|<get-value>(){}[0]

    final fun copy(kotlin/Int = ..., kotlin/Int = ..., kotlin/Int = ..., kotlin/Int = ...): androidx.compose.ui.unit/Constraints // androidx.compose.ui.unit/Constraints.copy|copy(kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // androidx.compose.ui.unit/Constraints.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // androidx.compose.ui.unit/Constraints.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // androidx.compose.ui.unit/Constraints.toString|toString(){}[0]
    final inline fun copyMaxDimensions(): androidx.compose.ui.unit/Constraints // androidx.compose.ui.unit/Constraints.copyMaxDimensions|copyMaxDimensions(){}[0]

    final object Companion { // androidx.compose.ui.unit/Constraints.Companion|null[0]
        final const val Infinity // androidx.compose.ui.unit/Constraints.Companion.Infinity|{}Infinity[0]
            final fun <get-Infinity>(): kotlin/Int // androidx.compose.ui.unit/Constraints.Companion.Infinity.<get-Infinity>|<get-Infinity>(){}[0]

        final fun fitPrioritizingHeight(kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int): androidx.compose.ui.unit/Constraints // androidx.compose.ui.unit/Constraints.Companion.fitPrioritizingHeight|fitPrioritizingHeight(kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
        final fun fitPrioritizingWidth(kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int): androidx.compose.ui.unit/Constraints // androidx.compose.ui.unit/Constraints.Companion.fitPrioritizingWidth|fitPrioritizingWidth(kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
        final fun fixed(kotlin/Int, kotlin/Int): androidx.compose.ui.unit/Constraints // androidx.compose.ui.unit/Constraints.Companion.fixed|fixed(kotlin.Int;kotlin.Int){}[0]
        final fun fixedHeight(kotlin/Int): androidx.compose.ui.unit/Constraints // androidx.compose.ui.unit/Constraints.Companion.fixedHeight|fixedHeight(kotlin.Int){}[0]
        final fun fixedWidth(kotlin/Int): androidx.compose.ui.unit/Constraints // androidx.compose.ui.unit/Constraints.Companion.fixedWidth|fixedWidth(kotlin.Int){}[0]
        final fun restrictConstraints(kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Boolean = ...): androidx.compose.ui.unit/Constraints // androidx.compose.ui.unit/Constraints.Companion.restrictConstraints|restrictConstraints(kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Boolean){}[0]
    }
}

final value class androidx.compose.ui.unit/Dp : kotlin/Comparable<androidx.compose.ui.unit/Dp> { // androidx.compose.ui.unit/Dp|null[0]
    constructor <init>(kotlin/Float) // androidx.compose.ui.unit/Dp.<init>|<init>(kotlin.Float){}[0]

    final val value // androidx.compose.ui.unit/Dp.value|{}value[0]
        final fun <get-value>(): kotlin/Float // androidx.compose.ui.unit/Dp.value.<get-value>|<get-value>(){}[0]

    final fun compareTo(androidx.compose.ui.unit/Dp): kotlin/Int // androidx.compose.ui.unit/Dp.compareTo|compareTo(androidx.compose.ui.unit.Dp){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // androidx.compose.ui.unit/Dp.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // androidx.compose.ui.unit/Dp.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // androidx.compose.ui.unit/Dp.toString|toString(){}[0]
    final inline fun div(androidx.compose.ui.unit/Dp): kotlin/Float // androidx.compose.ui.unit/Dp.div|div(androidx.compose.ui.unit.Dp){}[0]
    final inline fun div(kotlin/Float): androidx.compose.ui.unit/Dp // androidx.compose.ui.unit/Dp.div|div(kotlin.Float){}[0]
    final inline fun div(kotlin/Int): androidx.compose.ui.unit/Dp // androidx.compose.ui.unit/Dp.div|div(kotlin.Int){}[0]
    final inline fun minus(androidx.compose.ui.unit/Dp): androidx.compose.ui.unit/Dp // androidx.compose.ui.unit/Dp.minus|minus(androidx.compose.ui.unit.Dp){}[0]
    final inline fun plus(androidx.compose.ui.unit/Dp): androidx.compose.ui.unit/Dp // androidx.compose.ui.unit/Dp.plus|plus(androidx.compose.ui.unit.Dp){}[0]
    final inline fun times(kotlin/Float): androidx.compose.ui.unit/Dp // androidx.compose.ui.unit/Dp.times|times(kotlin.Float){}[0]
    final inline fun times(kotlin/Int): androidx.compose.ui.unit/Dp // androidx.compose.ui.unit/Dp.times|times(kotlin.Int){}[0]
    final inline fun unaryMinus(): androidx.compose.ui.unit/Dp // androidx.compose.ui.unit/Dp.unaryMinus|unaryMinus(){}[0]

    final object Companion { // androidx.compose.ui.unit/Dp.Companion|null[0]
        final val Hairline // androidx.compose.ui.unit/Dp.Companion.Hairline|{}Hairline[0]
            final fun <get-Hairline>(): androidx.compose.ui.unit/Dp // androidx.compose.ui.unit/Dp.Companion.Hairline.<get-Hairline>|<get-Hairline>(){}[0]
        final val Infinity // androidx.compose.ui.unit/Dp.Companion.Infinity|{}Infinity[0]
            final fun <get-Infinity>(): androidx.compose.ui.unit/Dp // androidx.compose.ui.unit/Dp.Companion.Infinity.<get-Infinity>|<get-Infinity>(){}[0]
        final val Unspecified // androidx.compose.ui.unit/Dp.Companion.Unspecified|{}Unspecified[0]
            final fun <get-Unspecified>(): androidx.compose.ui.unit/Dp // androidx.compose.ui.unit/Dp.Companion.Unspecified.<get-Unspecified>|<get-Unspecified>(){}[0]
    }
}

final value class androidx.compose.ui.unit/DpOffset { // androidx.compose.ui.unit/DpOffset|null[0]
    constructor <init>(kotlin/Long) // androidx.compose.ui.unit/DpOffset.<init>|<init>(kotlin.Long){}[0]

    final val packedValue // androidx.compose.ui.unit/DpOffset.packedValue|{}packedValue[0]
        final fun <get-packedValue>(): kotlin/Long // androidx.compose.ui.unit/DpOffset.packedValue.<get-packedValue>|<get-packedValue>(){}[0]
    final val x // androidx.compose.ui.unit/DpOffset.x|{}x[0]
        final fun <get-x>(): androidx.compose.ui.unit/Dp // androidx.compose.ui.unit/DpOffset.x.<get-x>|<get-x>(){}[0]
    final val y // androidx.compose.ui.unit/DpOffset.y|{}y[0]
        final fun <get-y>(): androidx.compose.ui.unit/Dp // androidx.compose.ui.unit/DpOffset.y.<get-y>|<get-y>(){}[0]

    final fun copy(androidx.compose.ui.unit/Dp = ..., androidx.compose.ui.unit/Dp = ...): androidx.compose.ui.unit/DpOffset // androidx.compose.ui.unit/DpOffset.copy|copy(androidx.compose.ui.unit.Dp;androidx.compose.ui.unit.Dp){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // androidx.compose.ui.unit/DpOffset.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // androidx.compose.ui.unit/DpOffset.hashCode|hashCode(){}[0]
    final fun minus(androidx.compose.ui.unit/DpOffset): androidx.compose.ui.unit/DpOffset // androidx.compose.ui.unit/DpOffset.minus|minus(androidx.compose.ui.unit.DpOffset){}[0]
    final fun plus(androidx.compose.ui.unit/DpOffset): androidx.compose.ui.unit/DpOffset // androidx.compose.ui.unit/DpOffset.plus|plus(androidx.compose.ui.unit.DpOffset){}[0]
    final fun toString(): kotlin/String // androidx.compose.ui.unit/DpOffset.toString|toString(){}[0]

    final object Companion { // androidx.compose.ui.unit/DpOffset.Companion|null[0]
        final val Unspecified // androidx.compose.ui.unit/DpOffset.Companion.Unspecified|{}Unspecified[0]
            final fun <get-Unspecified>(): androidx.compose.ui.unit/DpOffset // androidx.compose.ui.unit/DpOffset.Companion.Unspecified.<get-Unspecified>|<get-Unspecified>(){}[0]
        final val Zero // androidx.compose.ui.unit/DpOffset.Companion.Zero|{}Zero[0]
            final fun <get-Zero>(): androidx.compose.ui.unit/DpOffset // androidx.compose.ui.unit/DpOffset.Companion.Zero.<get-Zero>|<get-Zero>(){}[0]
    }
}

final value class androidx.compose.ui.unit/DpSize { // androidx.compose.ui.unit/DpSize|null[0]
    final val height // androidx.compose.ui.unit/DpSize.height|{}height[0]
        final fun <get-height>(): androidx.compose.ui.unit/Dp // androidx.compose.ui.unit/DpSize.height.<get-height>|<get-height>(){}[0]
    final val packedValue // androidx.compose.ui.unit/DpSize.packedValue|{}packedValue[0]
        final fun <get-packedValue>(): kotlin/Long // androidx.compose.ui.unit/DpSize.packedValue.<get-packedValue>|<get-packedValue>(){}[0]
    final val width // androidx.compose.ui.unit/DpSize.width|{}width[0]
        final fun <get-width>(): androidx.compose.ui.unit/Dp // androidx.compose.ui.unit/DpSize.width.<get-width>|<get-width>(){}[0]

    final fun copy(androidx.compose.ui.unit/Dp = ..., androidx.compose.ui.unit/Dp = ...): androidx.compose.ui.unit/DpSize // androidx.compose.ui.unit/DpSize.copy|copy(androidx.compose.ui.unit.Dp;androidx.compose.ui.unit.Dp){}[0]
    final fun div(kotlin/Float): androidx.compose.ui.unit/DpSize // androidx.compose.ui.unit/DpSize.div|div(kotlin.Float){}[0]
    final fun div(kotlin/Int): androidx.compose.ui.unit/DpSize // androidx.compose.ui.unit/DpSize.div|div(kotlin.Int){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // androidx.compose.ui.unit/DpSize.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // androidx.compose.ui.unit/DpSize.hashCode|hashCode(){}[0]
    final fun minus(androidx.compose.ui.unit/DpSize): androidx.compose.ui.unit/DpSize // androidx.compose.ui.unit/DpSize.minus|minus(androidx.compose.ui.unit.DpSize){}[0]
    final fun plus(androidx.compose.ui.unit/DpSize): androidx.compose.ui.unit/DpSize // androidx.compose.ui.unit/DpSize.plus|plus(androidx.compose.ui.unit.DpSize){}[0]
    final fun times(kotlin/Float): androidx.compose.ui.unit/DpSize // androidx.compose.ui.unit/DpSize.times|times(kotlin.Float){}[0]
    final fun times(kotlin/Int): androidx.compose.ui.unit/DpSize // androidx.compose.ui.unit/DpSize.times|times(kotlin.Int){}[0]
    final fun toString(): kotlin/String // androidx.compose.ui.unit/DpSize.toString|toString(){}[0]
    final inline fun component1(): androidx.compose.ui.unit/Dp // androidx.compose.ui.unit/DpSize.component1|component1(){}[0]
    final inline fun component2(): androidx.compose.ui.unit/Dp // androidx.compose.ui.unit/DpSize.component2|component2(){}[0]

    final object Companion { // androidx.compose.ui.unit/DpSize.Companion|null[0]
        final val Unspecified // androidx.compose.ui.unit/DpSize.Companion.Unspecified|{}Unspecified[0]
            final fun <get-Unspecified>(): androidx.compose.ui.unit/DpSize // androidx.compose.ui.unit/DpSize.Companion.Unspecified.<get-Unspecified>|<get-Unspecified>(){}[0]
        final val Zero // androidx.compose.ui.unit/DpSize.Companion.Zero|{}Zero[0]
            final fun <get-Zero>(): androidx.compose.ui.unit/DpSize // androidx.compose.ui.unit/DpSize.Companion.Zero.<get-Zero>|<get-Zero>(){}[0]
    }
}

final value class androidx.compose.ui.unit/IntOffset { // androidx.compose.ui.unit/IntOffset|null[0]
    constructor <init>(kotlin/Long) // androidx.compose.ui.unit/IntOffset.<init>|<init>(kotlin.Long){}[0]

    final val packedValue // androidx.compose.ui.unit/IntOffset.packedValue|{}packedValue[0]
        final fun <get-packedValue>(): kotlin/Long // androidx.compose.ui.unit/IntOffset.packedValue.<get-packedValue>|<get-packedValue>(){}[0]
    final val x // androidx.compose.ui.unit/IntOffset.x|{}x[0]
        final fun <get-x>(): kotlin/Int // androidx.compose.ui.unit/IntOffset.x.<get-x>|<get-x>(){}[0]
    final val y // androidx.compose.ui.unit/IntOffset.y|{}y[0]
        final fun <get-y>(): kotlin/Int // androidx.compose.ui.unit/IntOffset.y.<get-y>|<get-y>(){}[0]

    final fun copy(kotlin/Int = ..., kotlin/Int = ...): androidx.compose.ui.unit/IntOffset // androidx.compose.ui.unit/IntOffset.copy|copy(kotlin.Int;kotlin.Int){}[0]
    final fun div(kotlin/Float): androidx.compose.ui.unit/IntOffset // androidx.compose.ui.unit/IntOffset.div|div(kotlin.Float){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // androidx.compose.ui.unit/IntOffset.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // androidx.compose.ui.unit/IntOffset.hashCode|hashCode(){}[0]
    final fun minus(androidx.compose.ui.unit/IntOffset): androidx.compose.ui.unit/IntOffset // androidx.compose.ui.unit/IntOffset.minus|minus(androidx.compose.ui.unit.IntOffset){}[0]
    final fun plus(androidx.compose.ui.unit/IntOffset): androidx.compose.ui.unit/IntOffset // androidx.compose.ui.unit/IntOffset.plus|plus(androidx.compose.ui.unit.IntOffset){}[0]
    final fun rem(kotlin/Int): androidx.compose.ui.unit/IntOffset // androidx.compose.ui.unit/IntOffset.rem|rem(kotlin.Int){}[0]
    final fun times(kotlin/Float): androidx.compose.ui.unit/IntOffset // androidx.compose.ui.unit/IntOffset.times|times(kotlin.Float){}[0]
    final fun toString(): kotlin/String // androidx.compose.ui.unit/IntOffset.toString|toString(){}[0]
    final fun unaryMinus(): androidx.compose.ui.unit/IntOffset // androidx.compose.ui.unit/IntOffset.unaryMinus|unaryMinus(){}[0]
    final inline fun component1(): kotlin/Int // androidx.compose.ui.unit/IntOffset.component1|component1(){}[0]
    final inline fun component2(): kotlin/Int // androidx.compose.ui.unit/IntOffset.component2|component2(){}[0]

    final object Companion { // androidx.compose.ui.unit/IntOffset.Companion|null[0]
        final val Max // androidx.compose.ui.unit/IntOffset.Companion.Max|{}Max[0]
            final fun <get-Max>(): androidx.compose.ui.unit/IntOffset // androidx.compose.ui.unit/IntOffset.Companion.Max.<get-Max>|<get-Max>(){}[0]
        final val Zero // androidx.compose.ui.unit/IntOffset.Companion.Zero|{}Zero[0]
            final fun <get-Zero>(): androidx.compose.ui.unit/IntOffset // androidx.compose.ui.unit/IntOffset.Companion.Zero.<get-Zero>|<get-Zero>(){}[0]
    }
}

final value class androidx.compose.ui.unit/IntSize { // androidx.compose.ui.unit/IntSize|null[0]
    constructor <init>(kotlin/Long) // androidx.compose.ui.unit/IntSize.<init>|<init>(kotlin.Long){}[0]

    final val height // androidx.compose.ui.unit/IntSize.height|{}height[0]
        final inline fun <get-height>(): kotlin/Int // androidx.compose.ui.unit/IntSize.height.<get-height>|<get-height>(){}[0]
    final val packedValue // androidx.compose.ui.unit/IntSize.packedValue|{}packedValue[0]
        final fun <get-packedValue>(): kotlin/Long // androidx.compose.ui.unit/IntSize.packedValue.<get-packedValue>|<get-packedValue>(){}[0]
    final val width // androidx.compose.ui.unit/IntSize.width|{}width[0]
        final inline fun <get-width>(): kotlin/Int // androidx.compose.ui.unit/IntSize.width.<get-width>|<get-width>(){}[0]

    final fun div(kotlin/Int): androidx.compose.ui.unit/IntSize // androidx.compose.ui.unit/IntSize.div|div(kotlin.Int){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // androidx.compose.ui.unit/IntSize.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // androidx.compose.ui.unit/IntSize.hashCode|hashCode(){}[0]
    final fun times(kotlin/Int): androidx.compose.ui.unit/IntSize // androidx.compose.ui.unit/IntSize.times|times(kotlin.Int){}[0]
    final fun toString(): kotlin/String // androidx.compose.ui.unit/IntSize.toString|toString(){}[0]
    final inline fun component1(): kotlin/Int // androidx.compose.ui.unit/IntSize.component1|component1(){}[0]
    final inline fun component2(): kotlin/Int // androidx.compose.ui.unit/IntSize.component2|component2(){}[0]

    final object Companion { // androidx.compose.ui.unit/IntSize.Companion|null[0]
        final val Zero // androidx.compose.ui.unit/IntSize.Companion.Zero|{}Zero[0]
            final fun <get-Zero>(): androidx.compose.ui.unit/IntSize // androidx.compose.ui.unit/IntSize.Companion.Zero.<get-Zero>|<get-Zero>(){}[0]
    }
}

final value class androidx.compose.ui.unit/TextUnit { // androidx.compose.ui.unit/TextUnit|null[0]
    final val isEm // androidx.compose.ui.unit/TextUnit.isEm|{}isEm[0]
        final fun <get-isEm>(): kotlin/Boolean // androidx.compose.ui.unit/TextUnit.isEm.<get-isEm>|<get-isEm>(){}[0]
    final val isSp // androidx.compose.ui.unit/TextUnit.isSp|{}isSp[0]
        final fun <get-isSp>(): kotlin/Boolean // androidx.compose.ui.unit/TextUnit.isSp.<get-isSp>|<get-isSp>(){}[0]
    final val rawType // androidx.compose.ui.unit/TextUnit.rawType|{}rawType[0]
        final fun <get-rawType>(): kotlin/Long // androidx.compose.ui.unit/TextUnit.rawType.<get-rawType>|<get-rawType>(){}[0]
    final val type // androidx.compose.ui.unit/TextUnit.type|{}type[0]
        final fun <get-type>(): androidx.compose.ui.unit/TextUnitType // androidx.compose.ui.unit/TextUnit.type.<get-type>|<get-type>(){}[0]
    final val value // androidx.compose.ui.unit/TextUnit.value|{}value[0]
        final fun <get-value>(): kotlin/Float // androidx.compose.ui.unit/TextUnit.value.<get-value>|<get-value>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // androidx.compose.ui.unit/TextUnit.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // androidx.compose.ui.unit/TextUnit.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // androidx.compose.ui.unit/TextUnit.toString|toString(){}[0]
    final inline fun compareTo(androidx.compose.ui.unit/TextUnit): kotlin/Int // androidx.compose.ui.unit/TextUnit.compareTo|compareTo(androidx.compose.ui.unit.TextUnit){}[0]
    final inline fun div(kotlin/Double): androidx.compose.ui.unit/TextUnit // androidx.compose.ui.unit/TextUnit.div|div(kotlin.Double){}[0]
    final inline fun div(kotlin/Float): androidx.compose.ui.unit/TextUnit // androidx.compose.ui.unit/TextUnit.div|div(kotlin.Float){}[0]
    final inline fun div(kotlin/Int): androidx.compose.ui.unit/TextUnit // androidx.compose.ui.unit/TextUnit.div|div(kotlin.Int){}[0]
    final inline fun times(kotlin/Double): androidx.compose.ui.unit/TextUnit // androidx.compose.ui.unit/TextUnit.times|times(kotlin.Double){}[0]
    final inline fun times(kotlin/Float): androidx.compose.ui.unit/TextUnit // androidx.compose.ui.unit/TextUnit.times|times(kotlin.Float){}[0]
    final inline fun times(kotlin/Int): androidx.compose.ui.unit/TextUnit // androidx.compose.ui.unit/TextUnit.times|times(kotlin.Int){}[0]
    final inline fun unaryMinus(): androidx.compose.ui.unit/TextUnit // androidx.compose.ui.unit/TextUnit.unaryMinus|unaryMinus(){}[0]

    final object Companion { // androidx.compose.ui.unit/TextUnit.Companion|null[0]
        final val Unspecified // androidx.compose.ui.unit/TextUnit.Companion.Unspecified|{}Unspecified[0]
            final fun <get-Unspecified>(): androidx.compose.ui.unit/TextUnit // androidx.compose.ui.unit/TextUnit.Companion.Unspecified.<get-Unspecified>|<get-Unspecified>(){}[0]
    }
}

final value class androidx.compose.ui.unit/TextUnitType { // androidx.compose.ui.unit/TextUnitType|null[0]
    constructor <init>(kotlin/Long) // androidx.compose.ui.unit/TextUnitType.<init>|<init>(kotlin.Long){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // androidx.compose.ui.unit/TextUnitType.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // androidx.compose.ui.unit/TextUnitType.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // androidx.compose.ui.unit/TextUnitType.toString|toString(){}[0]

    final object Companion { // androidx.compose.ui.unit/TextUnitType.Companion|null[0]
        final val Em // androidx.compose.ui.unit/TextUnitType.Companion.Em|{}Em[0]
            final fun <get-Em>(): androidx.compose.ui.unit/TextUnitType // androidx.compose.ui.unit/TextUnitType.Companion.Em.<get-Em>|<get-Em>(){}[0]
        final val Sp // androidx.compose.ui.unit/TextUnitType.Companion.Sp|{}Sp[0]
            final fun <get-Sp>(): androidx.compose.ui.unit/TextUnitType // androidx.compose.ui.unit/TextUnitType.Companion.Sp.<get-Sp>|<get-Sp>(){}[0]
        final val Unspecified // androidx.compose.ui.unit/TextUnitType.Companion.Unspecified|{}Unspecified[0]
            final fun <get-Unspecified>(): androidx.compose.ui.unit/TextUnitType // androidx.compose.ui.unit/TextUnitType.Companion.Unspecified.<get-Unspecified>|<get-Unspecified>(){}[0]
    }
}

final value class androidx.compose.ui.unit/Velocity { // androidx.compose.ui.unit/Velocity|null[0]
    final val x // androidx.compose.ui.unit/Velocity.x|{}x[0]
        final fun <get-x>(): kotlin/Float // androidx.compose.ui.unit/Velocity.x.<get-x>|<get-x>(){}[0]
    final val y // androidx.compose.ui.unit/Velocity.y|{}y[0]
        final fun <get-y>(): kotlin/Float // androidx.compose.ui.unit/Velocity.y.<get-y>|<get-y>(){}[0]

    final fun copy(kotlin/Float = ..., kotlin/Float = ...): androidx.compose.ui.unit/Velocity // androidx.compose.ui.unit/Velocity.copy|copy(kotlin.Float;kotlin.Float){}[0]
    final fun div(kotlin/Float): androidx.compose.ui.unit/Velocity // androidx.compose.ui.unit/Velocity.div|div(kotlin.Float){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // androidx.compose.ui.unit/Velocity.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // androidx.compose.ui.unit/Velocity.hashCode|hashCode(){}[0]
    final fun minus(androidx.compose.ui.unit/Velocity): androidx.compose.ui.unit/Velocity // androidx.compose.ui.unit/Velocity.minus|minus(androidx.compose.ui.unit.Velocity){}[0]
    final fun plus(androidx.compose.ui.unit/Velocity): androidx.compose.ui.unit/Velocity // androidx.compose.ui.unit/Velocity.plus|plus(androidx.compose.ui.unit.Velocity){}[0]
    final fun rem(kotlin/Float): androidx.compose.ui.unit/Velocity // androidx.compose.ui.unit/Velocity.rem|rem(kotlin.Float){}[0]
    final fun times(kotlin/Float): androidx.compose.ui.unit/Velocity // androidx.compose.ui.unit/Velocity.times|times(kotlin.Float){}[0]
    final fun toString(): kotlin/String // androidx.compose.ui.unit/Velocity.toString|toString(){}[0]
    final fun unaryMinus(): androidx.compose.ui.unit/Velocity // androidx.compose.ui.unit/Velocity.unaryMinus|unaryMinus(){}[0]
    final inline fun component1(): kotlin/Float // androidx.compose.ui.unit/Velocity.component1|component1(){}[0]
    final inline fun component2(): kotlin/Float // androidx.compose.ui.unit/Velocity.component2|component2(){}[0]

    final object Companion { // androidx.compose.ui.unit/Velocity.Companion|null[0]
        final val Zero // androidx.compose.ui.unit/Velocity.Companion.Zero|{}Zero[0]
            final fun <get-Zero>(): androidx.compose.ui.unit/Velocity // androidx.compose.ui.unit/Velocity.Companion.Zero.<get-Zero>|<get-Zero>(){}[0]
    }
}

final const val androidx.compose.ui.unit/MaxDimensionsAndFocusMask // androidx.compose.ui.unit/MaxDimensionsAndFocusMask|{}MaxDimensionsAndFocusMask[0]
    final fun <get-MaxDimensionsAndFocusMask>(): kotlin/Long // androidx.compose.ui.unit/MaxDimensionsAndFocusMask.<get-MaxDimensionsAndFocusMask>|<get-MaxDimensionsAndFocusMask>(){}[0]

final val androidx.compose.ui.unit/androidx_compose_ui_unit_DpRect$stableprop // androidx.compose.ui.unit/androidx_compose_ui_unit_DpRect$stableprop|#static{}androidx_compose_ui_unit_DpRect$stableprop[0]
final val androidx.compose.ui.unit/androidx_compose_ui_unit_IntRect$stableprop // androidx.compose.ui.unit/androidx_compose_ui_unit_IntRect$stableprop|#static{}androidx_compose_ui_unit_IntRect$stableprop[0]
final val androidx.compose.ui.unit/center // androidx.compose.ui.unit/center|@androidx.compose.ui.unit.DpSize{}center[0]
    final fun (androidx.compose.ui.unit/DpSize).<get-center>(): androidx.compose.ui.unit/DpOffset // androidx.compose.ui.unit/center.<get-center>|<get-center>@androidx.compose.ui.unit.DpSize(){}[0]
final val androidx.compose.ui.unit/center // androidx.compose.ui.unit/center|@androidx.compose.ui.unit.IntSize{}center[0]
    final fun (androidx.compose.ui.unit/IntSize).<get-center>(): androidx.compose.ui.unit/IntOffset // androidx.compose.ui.unit/center.<get-center>|<get-center>@androidx.compose.ui.unit.IntSize(){}[0]
final val androidx.compose.ui.unit/dp // androidx.compose.ui.unit/dp|@kotlin.Double{}dp[0]
    final inline fun (kotlin/Double).<get-dp>(): androidx.compose.ui.unit/Dp // androidx.compose.ui.unit/dp.<get-dp>|<get-dp>@kotlin.Double(){}[0]
final val androidx.compose.ui.unit/dp // androidx.compose.ui.unit/dp|@kotlin.Float{}dp[0]
    final inline fun (kotlin/Float).<get-dp>(): androidx.compose.ui.unit/Dp // androidx.compose.ui.unit/dp.<get-dp>|<get-dp>@kotlin.Float(){}[0]
final val androidx.compose.ui.unit/dp // androidx.compose.ui.unit/dp|@kotlin.Int{}dp[0]
    final inline fun (kotlin/Int).<get-dp>(): androidx.compose.ui.unit/Dp // androidx.compose.ui.unit/dp.<get-dp>|<get-dp>@kotlin.Int(){}[0]
final val androidx.compose.ui.unit/em // androidx.compose.ui.unit/em|@kotlin.Double{}em[0]
    final fun (kotlin/Double).<get-em>(): androidx.compose.ui.unit/TextUnit // androidx.compose.ui.unit/em.<get-em>|<get-em>@kotlin.Double(){}[0]
final val androidx.compose.ui.unit/em // androidx.compose.ui.unit/em|@kotlin.Float{}em[0]
    final fun (kotlin/Float).<get-em>(): androidx.compose.ui.unit/TextUnit // androidx.compose.ui.unit/em.<get-em>|<get-em>@kotlin.Float(){}[0]
final val androidx.compose.ui.unit/em // androidx.compose.ui.unit/em|@kotlin.Int{}em[0]
    final fun (kotlin/Int).<get-em>(): androidx.compose.ui.unit/TextUnit // androidx.compose.ui.unit/em.<get-em>|<get-em>@kotlin.Int(){}[0]
final val androidx.compose.ui.unit/height // androidx.compose.ui.unit/height|@androidx.compose.ui.unit.DpRect{}height[0]
    final inline fun (androidx.compose.ui.unit/DpRect).<get-height>(): androidx.compose.ui.unit/Dp // androidx.compose.ui.unit/height.<get-height>|<get-height>@androidx.compose.ui.unit.DpRect(){}[0]
final val androidx.compose.ui.unit/isFinite // androidx.compose.ui.unit/isFinite|@androidx.compose.ui.unit.Dp{}isFinite[0]
    final inline fun (androidx.compose.ui.unit/Dp).<get-isFinite>(): kotlin/Boolean // androidx.compose.ui.unit/isFinite.<get-isFinite>|<get-isFinite>@androidx.compose.ui.unit.Dp(){}[0]
final val androidx.compose.ui.unit/isSpecified // androidx.compose.ui.unit/isSpecified|@androidx.compose.ui.unit.DpOffset{}isSpecified[0]
    final inline fun (androidx.compose.ui.unit/DpOffset).<get-isSpecified>(): kotlin/Boolean // androidx.compose.ui.unit/isSpecified.<get-isSpecified>|<get-isSpecified>@androidx.compose.ui.unit.DpOffset(){}[0]
final val androidx.compose.ui.unit/isSpecified // androidx.compose.ui.unit/isSpecified|@androidx.compose.ui.unit.DpSize{}isSpecified[0]
    final inline fun (androidx.compose.ui.unit/DpSize).<get-isSpecified>(): kotlin/Boolean // androidx.compose.ui.unit/isSpecified.<get-isSpecified>|<get-isSpecified>@androidx.compose.ui.unit.DpSize(){}[0]
final val androidx.compose.ui.unit/isSpecified // androidx.compose.ui.unit/isSpecified|@androidx.compose.ui.unit.Dp{}isSpecified[0]
    final inline fun (androidx.compose.ui.unit/Dp).<get-isSpecified>(): kotlin/Boolean // androidx.compose.ui.unit/isSpecified.<get-isSpecified>|<get-isSpecified>@androidx.compose.ui.unit.Dp(){}[0]
final val androidx.compose.ui.unit/isSpecified // androidx.compose.ui.unit/isSpecified|@androidx.compose.ui.unit.TextUnit{}isSpecified[0]
    final inline fun (androidx.compose.ui.unit/TextUnit).<get-isSpecified>(): kotlin/Boolean // androidx.compose.ui.unit/isSpecified.<get-isSpecified>|<get-isSpecified>@androidx.compose.ui.unit.TextUnit(){}[0]
final val androidx.compose.ui.unit/isUnspecified // androidx.compose.ui.unit/isUnspecified|@androidx.compose.ui.unit.DpOffset{}isUnspecified[0]
    final inline fun (androidx.compose.ui.unit/DpOffset).<get-isUnspecified>(): kotlin/Boolean // androidx.compose.ui.unit/isUnspecified.<get-isUnspecified>|<get-isUnspecified>@androidx.compose.ui.unit.DpOffset(){}[0]
final val androidx.compose.ui.unit/isUnspecified // androidx.compose.ui.unit/isUnspecified|@androidx.compose.ui.unit.DpSize{}isUnspecified[0]
    final inline fun (androidx.compose.ui.unit/DpSize).<get-isUnspecified>(): kotlin/Boolean // androidx.compose.ui.unit/isUnspecified.<get-isUnspecified>|<get-isUnspecified>@androidx.compose.ui.unit.DpSize(){}[0]
final val androidx.compose.ui.unit/isUnspecified // androidx.compose.ui.unit/isUnspecified|@androidx.compose.ui.unit.Dp{}isUnspecified[0]
    final inline fun (androidx.compose.ui.unit/Dp).<get-isUnspecified>(): kotlin/Boolean // androidx.compose.ui.unit/isUnspecified.<get-isUnspecified>|<get-isUnspecified>@androidx.compose.ui.unit.Dp(){}[0]
final val androidx.compose.ui.unit/isUnspecified // androidx.compose.ui.unit/isUnspecified|@androidx.compose.ui.unit.TextUnit{}isUnspecified[0]
    final inline fun (androidx.compose.ui.unit/TextUnit).<get-isUnspecified>(): kotlin/Boolean // androidx.compose.ui.unit/isUnspecified.<get-isUnspecified>|<get-isUnspecified>@androidx.compose.ui.unit.TextUnit(){}[0]
final val androidx.compose.ui.unit/size // androidx.compose.ui.unit/size|@androidx.compose.ui.unit.DpRect{}size[0]
    final inline fun (androidx.compose.ui.unit/DpRect).<get-size>(): androidx.compose.ui.unit/DpSize // androidx.compose.ui.unit/size.<get-size>|<get-size>@androidx.compose.ui.unit.DpRect(){}[0]
final val androidx.compose.ui.unit/sp // androidx.compose.ui.unit/sp|@kotlin.Double{}sp[0]
    final fun (kotlin/Double).<get-sp>(): androidx.compose.ui.unit/TextUnit // androidx.compose.ui.unit/sp.<get-sp>|<get-sp>@kotlin.Double(){}[0]
final val androidx.compose.ui.unit/sp // androidx.compose.ui.unit/sp|@kotlin.Float{}sp[0]
    final fun (kotlin/Float).<get-sp>(): androidx.compose.ui.unit/TextUnit // androidx.compose.ui.unit/sp.<get-sp>|<get-sp>@kotlin.Float(){}[0]
final val androidx.compose.ui.unit/sp // androidx.compose.ui.unit/sp|@kotlin.Int{}sp[0]
    final fun (kotlin/Int).<get-sp>(): androidx.compose.ui.unit/TextUnit // androidx.compose.ui.unit/sp.<get-sp>|<get-sp>@kotlin.Int(){}[0]
final val androidx.compose.ui.unit/width // androidx.compose.ui.unit/width|@androidx.compose.ui.unit.DpRect{}width[0]
    final inline fun (androidx.compose.ui.unit/DpRect).<get-width>(): androidx.compose.ui.unit/Dp // androidx.compose.ui.unit/width.<get-width>|<get-width>@androidx.compose.ui.unit.DpRect(){}[0]

final fun (androidx.compose.ui.geometry/Offset).androidx.compose.ui.unit/minus(androidx.compose.ui.unit/IntOffset): androidx.compose.ui.geometry/Offset // androidx.compose.ui.unit/minus|minus@androidx.compose.ui.geometry.Offset(androidx.compose.ui.unit.IntOffset){}[0]
final fun (androidx.compose.ui.geometry/Offset).androidx.compose.ui.unit/plus(androidx.compose.ui.unit/IntOffset): androidx.compose.ui.geometry/Offset // androidx.compose.ui.unit/plus|plus@androidx.compose.ui.geometry.Offset(androidx.compose.ui.unit.IntOffset){}[0]
final fun (androidx.compose.ui.geometry/Offset).androidx.compose.ui.unit/round(): androidx.compose.ui.unit/IntOffset // androidx.compose.ui.unit/round|round@androidx.compose.ui.geometry.Offset(){}[0]
final fun (androidx.compose.ui.geometry/Rect).androidx.compose.ui.unit/roundToIntRect(): androidx.compose.ui.unit/IntRect // androidx.compose.ui.unit/roundToIntRect|roundToIntRect@androidx.compose.ui.geometry.Rect(){}[0]
final fun (androidx.compose.ui.geometry/Size).androidx.compose.ui.unit/roundToIntSize(): androidx.compose.ui.unit/IntSize // androidx.compose.ui.unit/roundToIntSize|roundToIntSize@androidx.compose.ui.geometry.Size(){}[0]
final fun (androidx.compose.ui.geometry/Size).androidx.compose.ui.unit/toIntSize(): androidx.compose.ui.unit/IntSize // androidx.compose.ui.unit/toIntSize|toIntSize@androidx.compose.ui.geometry.Size(){}[0]
final fun (androidx.compose.ui.unit/Constraints).androidx.compose.ui.unit/constrain(androidx.compose.ui.unit/Constraints): androidx.compose.ui.unit/Constraints // androidx.compose.ui.unit/constrain|constrain@androidx.compose.ui.unit.Constraints(androidx.compose.ui.unit.Constraints){}[0]
final fun (androidx.compose.ui.unit/Constraints).androidx.compose.ui.unit/constrain(androidx.compose.ui.unit/IntSize): androidx.compose.ui.unit/IntSize // androidx.compose.ui.unit/constrain|constrain@androidx.compose.ui.unit.Constraints(androidx.compose.ui.unit.IntSize){}[0]
final fun (androidx.compose.ui.unit/Constraints).androidx.compose.ui.unit/constrainHeight(kotlin/Int): kotlin/Int // androidx.compose.ui.unit/constrainHeight|constrainHeight@androidx.compose.ui.unit.Constraints(kotlin.Int){}[0]
final fun (androidx.compose.ui.unit/Constraints).androidx.compose.ui.unit/constrainWidth(kotlin/Int): kotlin/Int // androidx.compose.ui.unit/constrainWidth|constrainWidth@androidx.compose.ui.unit.Constraints(kotlin.Int){}[0]
final fun (androidx.compose.ui.unit/Constraints).androidx.compose.ui.unit/isSatisfiedBy(androidx.compose.ui.unit/IntSize): kotlin/Boolean // androidx.compose.ui.unit/isSatisfiedBy|isSatisfiedBy@androidx.compose.ui.unit.Constraints(androidx.compose.ui.unit.IntSize){}[0]
final fun (androidx.compose.ui.unit/Constraints).androidx.compose.ui.unit/offset(kotlin/Int = ..., kotlin/Int = ...): androidx.compose.ui.unit/Constraints // androidx.compose.ui.unit/offset|offset@androidx.compose.ui.unit.Constraints(kotlin.Int;kotlin.Int){}[0]
final fun (androidx.compose.ui.unit/IntOffset).androidx.compose.ui.unit/minus(androidx.compose.ui.geometry/Offset): androidx.compose.ui.geometry/Offset // androidx.compose.ui.unit/minus|minus@androidx.compose.ui.unit.IntOffset(androidx.compose.ui.geometry.Offset){}[0]
final fun (androidx.compose.ui.unit/IntOffset).androidx.compose.ui.unit/plus(androidx.compose.ui.geometry/Offset): androidx.compose.ui.geometry/Offset // androidx.compose.ui.unit/plus|plus@androidx.compose.ui.unit.IntOffset(androidx.compose.ui.geometry.Offset){}[0]
final fun (androidx.compose.ui.unit/IntRect).androidx.compose.ui.unit/toRect(): androidx.compose.ui.geometry/Rect // androidx.compose.ui.unit/toRect|toRect@androidx.compose.ui.unit.IntRect(){}[0]
final fun (androidx.compose.ui.unit/IntSize).androidx.compose.ui.unit/toIntRect(): androidx.compose.ui.unit/IntRect // androidx.compose.ui.unit/toIntRect|toIntRect@androidx.compose.ui.unit.IntSize(){}[0]
final fun (androidx.compose.ui.unit/IntSize).androidx.compose.ui.unit/toSize(): androidx.compose.ui.geometry/Size // androidx.compose.ui.unit/toSize|toSize@androidx.compose.ui.unit.IntSize(){}[0]
final fun androidx.compose.ui.unit/Constraints(kotlin/Int = ..., kotlin/Int = ..., kotlin/Int = ..., kotlin/Int = ...): androidx.compose.ui.unit/Constraints // androidx.compose.ui.unit/Constraints|Constraints(kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
final fun androidx.compose.ui.unit/Density(kotlin/Float, kotlin/Float = ...): androidx.compose.ui.unit/Density // androidx.compose.ui.unit/Density|Density(kotlin.Float;kotlin.Float){}[0]
final fun androidx.compose.ui.unit/DpSize(androidx.compose.ui.unit/Dp, androidx.compose.ui.unit/Dp): androidx.compose.ui.unit/DpSize // androidx.compose.ui.unit/DpSize|DpSize(androidx.compose.ui.unit.Dp;androidx.compose.ui.unit.Dp){}[0]
final fun androidx.compose.ui.unit/IntRect(androidx.compose.ui.unit/IntOffset, androidx.compose.ui.unit/IntOffset): androidx.compose.ui.unit/IntRect // androidx.compose.ui.unit/IntRect|IntRect(androidx.compose.ui.unit.IntOffset;androidx.compose.ui.unit.IntOffset){}[0]
final fun androidx.compose.ui.unit/IntRect(androidx.compose.ui.unit/IntOffset, androidx.compose.ui.unit/IntSize): androidx.compose.ui.unit/IntRect // androidx.compose.ui.unit/IntRect|IntRect(androidx.compose.ui.unit.IntOffset;androidx.compose.ui.unit.IntSize){}[0]
final fun androidx.compose.ui.unit/IntRect(androidx.compose.ui.unit/IntOffset, kotlin/Int): androidx.compose.ui.unit/IntRect // androidx.compose.ui.unit/IntRect|IntRect(androidx.compose.ui.unit.IntOffset;kotlin.Int){}[0]
final fun androidx.compose.ui.unit/TextUnit(kotlin/Float, androidx.compose.ui.unit/TextUnitType): androidx.compose.ui.unit/TextUnit // androidx.compose.ui.unit/TextUnit|TextUnit(kotlin.Float;androidx.compose.ui.unit.TextUnitType){}[0]
final fun androidx.compose.ui.unit/Velocity(kotlin/Float, kotlin/Float): androidx.compose.ui.unit/Velocity // androidx.compose.ui.unit/Velocity|Velocity(kotlin.Float;kotlin.Float){}[0]
final fun androidx.compose.ui.unit/androidx_compose_ui_unit_DpRect$stableprop_getter(): kotlin/Int // androidx.compose.ui.unit/androidx_compose_ui_unit_DpRect$stableprop_getter|androidx_compose_ui_unit_DpRect$stableprop_getter(){}[0]
final fun androidx.compose.ui.unit/androidx_compose_ui_unit_IntRect$stableprop_getter(): kotlin/Int // androidx.compose.ui.unit/androidx_compose_ui_unit_IntRect$stableprop_getter|androidx_compose_ui_unit_IntRect$stableprop_getter(){}[0]
final fun androidx.compose.ui.unit/checkArithmetic(androidx.compose.ui.unit/TextUnit) // androidx.compose.ui.unit/checkArithmetic|checkArithmetic(androidx.compose.ui.unit.TextUnit){}[0]
final fun androidx.compose.ui.unit/checkArithmetic(androidx.compose.ui.unit/TextUnit, androidx.compose.ui.unit/TextUnit) // androidx.compose.ui.unit/checkArithmetic|checkArithmetic(androidx.compose.ui.unit.TextUnit;androidx.compose.ui.unit.TextUnit){}[0]
final fun androidx.compose.ui.unit/checkArithmetic(androidx.compose.ui.unit/TextUnit, androidx.compose.ui.unit/TextUnit, androidx.compose.ui.unit/TextUnit) // androidx.compose.ui.unit/checkArithmetic|checkArithmetic(androidx.compose.ui.unit.TextUnit;androidx.compose.ui.unit.TextUnit;androidx.compose.ui.unit.TextUnit){}[0]
final fun androidx.compose.ui.unit/lerp(androidx.compose.ui.unit/Dp, androidx.compose.ui.unit/Dp, kotlin/Float): androidx.compose.ui.unit/Dp // androidx.compose.ui.unit/lerp|lerp(androidx.compose.ui.unit.Dp;androidx.compose.ui.unit.Dp;kotlin.Float){}[0]
final fun androidx.compose.ui.unit/lerp(androidx.compose.ui.unit/DpOffset, androidx.compose.ui.unit/DpOffset, kotlin/Float): androidx.compose.ui.unit/DpOffset // androidx.compose.ui.unit/lerp|lerp(androidx.compose.ui.unit.DpOffset;androidx.compose.ui.unit.DpOffset;kotlin.Float){}[0]
final fun androidx.compose.ui.unit/lerp(androidx.compose.ui.unit/DpSize, androidx.compose.ui.unit/DpSize, kotlin/Float): androidx.compose.ui.unit/DpSize // androidx.compose.ui.unit/lerp|lerp(androidx.compose.ui.unit.DpSize;androidx.compose.ui.unit.DpSize;kotlin.Float){}[0]
final fun androidx.compose.ui.unit/lerp(androidx.compose.ui.unit/IntOffset, androidx.compose.ui.unit/IntOffset, kotlin/Float): androidx.compose.ui.unit/IntOffset // androidx.compose.ui.unit/lerp|lerp(androidx.compose.ui.unit.IntOffset;androidx.compose.ui.unit.IntOffset;kotlin.Float){}[0]
final fun androidx.compose.ui.unit/lerp(androidx.compose.ui.unit/IntRect, androidx.compose.ui.unit/IntRect, kotlin/Float): androidx.compose.ui.unit/IntRect // androidx.compose.ui.unit/lerp|lerp(androidx.compose.ui.unit.IntRect;androidx.compose.ui.unit.IntRect;kotlin.Float){}[0]
final fun androidx.compose.ui.unit/lerp(androidx.compose.ui.unit/TextUnit, androidx.compose.ui.unit/TextUnit, kotlin/Float): androidx.compose.ui.unit/TextUnit // androidx.compose.ui.unit/lerp|lerp(androidx.compose.ui.unit.TextUnit;androidx.compose.ui.unit.TextUnit;kotlin.Float){}[0]
final fun androidx.compose.ui.unit/pack(kotlin/Long, kotlin/Float): androidx.compose.ui.unit/TextUnit // androidx.compose.ui.unit/pack|pack(kotlin.Long;kotlin.Float){}[0]
final inline fun (androidx.compose.ui.unit/Dp).androidx.compose.ui.unit/coerceAtLeast(androidx.compose.ui.unit/Dp): androidx.compose.ui.unit/Dp // androidx.compose.ui.unit/coerceAtLeast|coerceAtLeast@androidx.compose.ui.unit.Dp(androidx.compose.ui.unit.Dp){}[0]
final inline fun (androidx.compose.ui.unit/Dp).androidx.compose.ui.unit/coerceAtMost(androidx.compose.ui.unit/Dp): androidx.compose.ui.unit/Dp // androidx.compose.ui.unit/coerceAtMost|coerceAtMost@androidx.compose.ui.unit.Dp(androidx.compose.ui.unit.Dp){}[0]
final inline fun (androidx.compose.ui.unit/Dp).androidx.compose.ui.unit/coerceIn(androidx.compose.ui.unit/Dp, androidx.compose.ui.unit/Dp): androidx.compose.ui.unit/Dp // androidx.compose.ui.unit/coerceIn|coerceIn@androidx.compose.ui.unit.Dp(androidx.compose.ui.unit.Dp;androidx.compose.ui.unit.Dp){}[0]
final inline fun (androidx.compose.ui.unit/Dp).androidx.compose.ui.unit/takeOrElse(kotlin/Function0<androidx.compose.ui.unit/Dp>): androidx.compose.ui.unit/Dp // androidx.compose.ui.unit/takeOrElse|takeOrElse@androidx.compose.ui.unit.Dp(kotlin.Function0<androidx.compose.ui.unit.Dp>){}[0]
final inline fun (androidx.compose.ui.unit/DpOffset).androidx.compose.ui.unit/takeOrElse(kotlin/Function0<androidx.compose.ui.unit/DpOffset>): androidx.compose.ui.unit/DpOffset // androidx.compose.ui.unit/takeOrElse|takeOrElse@androidx.compose.ui.unit.DpOffset(kotlin.Function0<androidx.compose.ui.unit.DpOffset>){}[0]
final inline fun (androidx.compose.ui.unit/DpSize).androidx.compose.ui.unit/takeOrElse(kotlin/Function0<androidx.compose.ui.unit/DpSize>): androidx.compose.ui.unit/DpSize // androidx.compose.ui.unit/takeOrElse|takeOrElse@androidx.compose.ui.unit.DpSize(kotlin.Function0<androidx.compose.ui.unit.DpSize>){}[0]
final inline fun (androidx.compose.ui.unit/IntOffset).androidx.compose.ui.unit/toOffset(): androidx.compose.ui.geometry/Offset // androidx.compose.ui.unit/toOffset|toOffset@androidx.compose.ui.unit.IntOffset(){}[0]
final inline fun (androidx.compose.ui.unit/TextUnit).androidx.compose.ui.unit/takeOrElse(kotlin/Function0<androidx.compose.ui.unit/TextUnit>): androidx.compose.ui.unit/TextUnit // androidx.compose.ui.unit/takeOrElse|takeOrElse@androidx.compose.ui.unit.TextUnit(kotlin.Function0<androidx.compose.ui.unit.TextUnit>){}[0]
final inline fun (kotlin/Double).androidx.compose.ui.unit/times(androidx.compose.ui.unit/Dp): androidx.compose.ui.unit/Dp // androidx.compose.ui.unit/times|times@kotlin.Double(androidx.compose.ui.unit.Dp){}[0]
final inline fun (kotlin/Double).androidx.compose.ui.unit/times(androidx.compose.ui.unit/TextUnit): androidx.compose.ui.unit/TextUnit // androidx.compose.ui.unit/times|times@kotlin.Double(androidx.compose.ui.unit.TextUnit){}[0]
final inline fun (kotlin/Float).androidx.compose.ui.unit/times(androidx.compose.ui.unit/Dp): androidx.compose.ui.unit/Dp // androidx.compose.ui.unit/times|times@kotlin.Float(androidx.compose.ui.unit.Dp){}[0]
final inline fun (kotlin/Float).androidx.compose.ui.unit/times(androidx.compose.ui.unit/DpSize): androidx.compose.ui.unit/DpSize // androidx.compose.ui.unit/times|times@kotlin.Float(androidx.compose.ui.unit.DpSize){}[0]
final inline fun (kotlin/Float).androidx.compose.ui.unit/times(androidx.compose.ui.unit/TextUnit): androidx.compose.ui.unit/TextUnit // androidx.compose.ui.unit/times|times@kotlin.Float(androidx.compose.ui.unit.TextUnit){}[0]
final inline fun (kotlin/Int).androidx.compose.ui.unit/times(androidx.compose.ui.unit/Dp): androidx.compose.ui.unit/Dp // androidx.compose.ui.unit/times|times@kotlin.Int(androidx.compose.ui.unit.Dp){}[0]
final inline fun (kotlin/Int).androidx.compose.ui.unit/times(androidx.compose.ui.unit/DpSize): androidx.compose.ui.unit/DpSize // androidx.compose.ui.unit/times|times@kotlin.Int(androidx.compose.ui.unit.DpSize){}[0]
final inline fun (kotlin/Int).androidx.compose.ui.unit/times(androidx.compose.ui.unit/IntSize): androidx.compose.ui.unit/IntSize // androidx.compose.ui.unit/times|times@kotlin.Int(androidx.compose.ui.unit.IntSize){}[0]
final inline fun (kotlin/Int).androidx.compose.ui.unit/times(androidx.compose.ui.unit/TextUnit): androidx.compose.ui.unit/TextUnit // androidx.compose.ui.unit/times|times@kotlin.Int(androidx.compose.ui.unit.TextUnit){}[0]
final inline fun androidx.compose.ui.unit/DpOffset(androidx.compose.ui.unit/Dp, androidx.compose.ui.unit/Dp): androidx.compose.ui.unit/DpOffset // androidx.compose.ui.unit/DpOffset|DpOffset(androidx.compose.ui.unit.Dp;androidx.compose.ui.unit.Dp){}[0]
final inline fun androidx.compose.ui.unit/IntOffset(kotlin/Int, kotlin/Int): androidx.compose.ui.unit/IntOffset // androidx.compose.ui.unit/IntOffset|IntOffset(kotlin.Int;kotlin.Int){}[0]
final inline fun androidx.compose.ui.unit/IntSize(kotlin/Int, kotlin/Int): androidx.compose.ui.unit/IntSize // androidx.compose.ui.unit/IntSize|IntSize(kotlin.Int;kotlin.Int){}[0]
final inline fun androidx.compose.ui.unit/max(androidx.compose.ui.unit/Dp, androidx.compose.ui.unit/Dp): androidx.compose.ui.unit/Dp // androidx.compose.ui.unit/max|max(androidx.compose.ui.unit.Dp;androidx.compose.ui.unit.Dp){}[0]
final inline fun androidx.compose.ui.unit/min(androidx.compose.ui.unit/Dp, androidx.compose.ui.unit/Dp): androidx.compose.ui.unit/Dp // androidx.compose.ui.unit/min|min(androidx.compose.ui.unit.Dp;androidx.compose.ui.unit.Dp){}[0]
