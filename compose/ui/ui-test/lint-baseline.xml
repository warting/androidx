<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 8.13.0-alpha01" type="baseline" client="gradle" dependencies="false" name="AGP (8.13.0-alpha01)" variant="all" version="8.13.0-alpha01">

    <issue
        id="BanThreadSleep"
        message="Uses Thread.sleep()"
        errorLine1="                Thread.sleep(10)"
        errorLine2="                       ~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/test/ComposeUiTest.android.kt"/>
    </issue>

    <issue
        id="BanThreadSleep"
        message="Uses Thread.sleep()"
        errorLine1="        Thread.sleep(10)"
        errorLine2="               ~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/test/android/WindowCapture.android.kt"/>
    </issue>

    <issue
        id="CoroutineCreationDuringComposition"
        message="Calls to launch should happen inside a LaunchedEffect and not composition"
        errorLine1="            setContent { rememberCoroutineScope().launch { withFrameNanos {} } }"
        errorLine2="                                                  ~~~~~~">
        <location
            file="src/androidInstrumentedTest/kotlin/androidx/compose/ui/test/CustomEffectContextTest.kt"/>
    </issue>

    <issue
        id="ModifierFactoryExtensionFunction"
        message="Modifier factory functions should be extensions on Modifier"
        errorLine1="    private fun rowModifier(): Modifier ="
        errorLine2="                ~~~~~~~~~~~">
        <location
            file="src/androidInstrumentedTest/kotlin/androidx/compose/ui/test/actions/ScrollToNodeTest.kt"/>
    </issue>

    <issue
        id="ModifierFactoryExtensionFunction"
        message="Modifier factory functions should be extensions on Modifier"
        errorLine1="    private fun columnModifier(): Modifier ="
        errorLine2="                ~~~~~~~~~~~~~~">
        <location
            file="src/androidInstrumentedTest/kotlin/androidx/compose/ui/test/actions/ScrollToNodeTest.kt"/>
    </issue>

    <issue
        id="ModifierFactoryExtensionFunction"
        message="Modifier factory functions should be extensions on Modifier"
        errorLine1="    private fun rowModifier(scrollState: ScrollState): Modifier ="
        errorLine2="                ~~~~~~~~~~~">
        <location
            file="src/androidInstrumentedTest/kotlin/androidx/compose/ui/test/actions/ScrollToTest.kt"/>
    </issue>

    <issue
        id="ModifierFactoryExtensionFunction"
        message="Modifier factory functions should be extensions on Modifier"
        errorLine1="    private fun columnModifier(scrollState: ScrollState): Modifier ="
        errorLine2="                ~~~~~~~~~~~~~~">
        <location
            file="src/androidInstrumentedTest/kotlin/androidx/compose/ui/test/actions/ScrollToTest.kt"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        message="Unnecessary; `SDK_INT` is always >= 23"
        errorLine1="@RequiresApi(23)"
        errorLine2="~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/test/DeviceConfigurationOverride.android.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="field MouseAsTouchEvents with type List&lt;Integer>: replace with IntList"
        errorLine1="private val MouseAsTouchEvents = listOf(ACTION_DOWN, ACTION_MOVE, ACTION_UP)"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/test/AndroidInputDispatcher.android.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="variable absoluteHistoricalTimes with type List&lt;? extends Long>: replace with LongList"
        errorLine1="        val absoluteHistoricalTimes = relativeHistoricalTimes.map { currentTime + it }"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/test/AndroidInputDispatcher.android.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="method enqueueTouchEvent has parameter pointerIds with type List&lt;Integer>: replace with IntList"
        errorLine1="        pointerIds: List&lt;Int>,"
        errorLine2="                    ~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/test/AndroidInputDispatcher.android.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="method enqueueTouchEvent has parameter eventTimes with type List&lt;Long>: replace with LongList"
        errorLine1="        eventTimes: List&lt;Long>,"
        errorLine2="                    ~~~~~~~~~~">
        <location
            file="src/androidMain/kotlin/androidx/compose/ui/test/AndroidInputDispatcher.android.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="method enqueueTouchMoves has parameter relativeHistoricalTimes with type List&lt;Long>: replace with LongList"
        errorLine1="        relativeHistoricalTimes: List&lt;Long>,"
        errorLine2="                                 ~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/test/InputDispatcher.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="method enqueueMoves has parameter relativeHistoricalTimes with type List&lt;Long>: replace with LongList"
        errorLine1="        relativeHistoricalTimes: List&lt;Long>,"
        errorLine2="                                 ~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/test/InputDispatcher.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="field lastPositions with type Map&lt;Integer, Offset>: replace with IntLongMap"
        errorLine1="    val lastPositions = mutableMapOf(Pair(pointerId, startPosition))"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/test/InputDispatcher.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="return type Map&lt;Integer, Offset> of getLastPositions: replace with IntLongMap"
        errorLine1="    val lastPositions = mutableMapOf(Pair(pointerId, startPosition))"
        errorLine2="        ~~~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/test/InputDispatcher.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="field pressedButtons with type Set&lt;Integer>: replace with IntSet"
        errorLine1="    val pressedButtons: MutableSet&lt;Int> = mutableSetOf()"
        errorLine2="                        ~~~~~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/test/InputDispatcher.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="return type Set&lt;Integer> of getPressedButtons: replace with IntSet"
        errorLine1="    val pressedButtons: MutableSet&lt;Int> = mutableSetOf()"
        errorLine2="                        ~~~~~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/test/InputDispatcher.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="field downKeys with type HashSet&lt;Key>: replace with LongSet"
        errorLine1="    private val downKeys: HashSet&lt;Key> = hashSetOf()"
        errorLine2="                          ~~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/test/InputDispatcher.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="method withKeysDown has parameter keys with type List&lt;Key>: replace with LongList"
        errorLine1="fun KeyInjectionScope.withKeysDown(keys: List&lt;Key>, block: KeyInjectionScope.() -> Unit) {"
        errorLine2="                                         ~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/test/KeyInjectionScope.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="method withKeysToggled has parameter keys with type List&lt;Key>: replace with LongList"
        errorLine1="fun KeyInjectionScope.withKeysToggled(keys: List&lt;Key>, block: KeyInjectionScope.() -> Unit) {"
        errorLine2="                                            ~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/test/KeyInjectionScope.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="method pressKeys has parameter keys with type List&lt;Key>: replace with LongList"
        errorLine1="private fun KeyInjectionScope.pressKeys(keys: List&lt;Key>) ="
        errorLine2="                                              ~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/test/KeyInjectionScope.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="method moveWithHistoryMultiPointer has parameter relativeHistoricalTimes with type List&lt;Long>: replace with LongList"
        errorLine1="        relativeHistoricalTimes: List&lt;Long>,"
        errorLine2="                                 ~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/test/TouchInjectionScope.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="method moveWithHistory has parameter relativeHistoricalTimes with type List&lt;Long>: replace with LongList"
        errorLine1="        relativeHistoricalTimes: List&lt;Long>,"
        errorLine2="                                 ~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/test/TouchInjectionScope.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="method moveWithHistory has parameter historicalCoordinates with type List&lt;Offset>: replace with LongList"
        errorLine1="        historicalCoordinates: List&lt;Offset>,"
        errorLine2="                               ~~~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/test/TouchInjectionScope.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="method swipe has parameter keyTimes with type List&lt;Long>: replace with LongList"
        errorLine1="    keyTimes: List&lt;Long> = emptyList(),"
        errorLine2="              ~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/test/TouchInjectionScope.kt"/>
    </issue>

    <issue
        id="PrimitiveInCollection"
        message="method multiTouchSwipe has parameter keyTimes with type List&lt;Long>: replace with LongList"
        errorLine1="    keyTimes: List&lt;Long> = emptyList(),"
        errorLine2="              ~~~~~~~~~~">
        <location
            file="src/commonMain/kotlin/androidx/compose/ui/test/TouchInjectionScope.kt"/>
    </issue>

</issues>
