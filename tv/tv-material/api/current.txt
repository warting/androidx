// Signature format: 4.0
package androidx.tv.material3 {

  @SuppressCompatibility @androidx.tv.material3.ExperimentalTvMaterial3Api public final class AssistChipDefaults {
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.ClickableChipBorder border(optional androidx.tv.material3.Border border, optional androidx.tv.material3.Border focusedBorder, optional androidx.tv.material3.Border pressedBorder, optional androidx.tv.material3.Border disabledBorder, optional androidx.tv.material3.Border focusedDisabledBorder);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.ClickableChipBorder border(androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.ClickableChipColors colors(optional long containerColor, optional long contentColor, optional long focusedContainerColor, optional long focusedContentColor, optional long pressedContainerColor, optional long pressedContentColor, optional long disabledContainerColor, optional long disabledContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.ClickableChipColors colors-oq7We08(long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method public float getContainerHeight();
    method @BytecodeOnly public float getContainerHeight-D9Ej5fM();
    method public androidx.compose.foundation.shape.RoundedCornerShape getContainerShape();
    method public float getIconSize();
    method @BytecodeOnly public float getIconSize-D9Ej5fM();
    method public androidx.tv.material3.ClickableChipGlow glow(optional androidx.tv.material3.Glow glow, optional androidx.tv.material3.Glow focusedGlow, optional androidx.tv.material3.Glow pressedGlow);
    method public androidx.tv.material3.ClickableChipScale scale(optional @FloatRange(from=0.0) float scale, optional @FloatRange(from=0.0) float focusedScale, optional @FloatRange(from=0.0) float pressedScale, optional @FloatRange(from=0.0) float disabledScale, optional @FloatRange(from=0.0) float focusedDisabledScale);
    method public androidx.tv.material3.ClickableChipShape shape(optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Shape focusedShape, optional androidx.compose.ui.graphics.Shape pressedShape, optional androidx.compose.ui.graphics.Shape disabledShape, optional androidx.compose.ui.graphics.Shape focusedDisabledShape);
    property public float ContainerHeight;
    property public androidx.compose.foundation.shape.RoundedCornerShape ContainerShape;
    property public float IconSize;
    field public static final androidx.tv.material3.AssistChipDefaults INSTANCE;
  }

  @androidx.compose.runtime.Immutable public final class Border {
    ctor @KotlinOnly public Border(androidx.compose.foundation.BorderStroke border, optional androidx.compose.ui.unit.Dp inset, optional androidx.compose.ui.graphics.Shape shape);
    ctor @BytecodeOnly public Border(androidx.compose.foundation.BorderStroke!, float, androidx.compose.ui.graphics.Shape!, kotlin.jvm.internal.DefaultConstructorMarker!);
    method public androidx.tv.material3.Border copy(optional androidx.compose.foundation.BorderStroke? border, optional androidx.compose.ui.unit.Dp? inset, optional androidx.compose.ui.graphics.Shape? shape);
    method @BytecodeOnly public androidx.tv.material3.Border copy-ZCAqi1o(androidx.compose.foundation.BorderStroke?, androidx.compose.ui.unit.Dp?, androidx.compose.ui.graphics.Shape?);
    method public androidx.compose.foundation.BorderStroke getBorder();
    method public float getInset();
    method @BytecodeOnly public float getInset-D9Ej5fM();
    method public androidx.compose.ui.graphics.Shape getShape();
    property public androidx.compose.foundation.BorderStroke border;
    property public float inset;
    property public androidx.compose.ui.graphics.Shape shape;
    field public static final androidx.tv.material3.Border.Companion Companion;
  }

  public static final class Border.Companion {
    method public androidx.tv.material3.Border getNone();
    property public androidx.tv.material3.Border None;
  }

  @androidx.compose.runtime.Immutable public final class ButtonBorder {
  }

  @androidx.compose.runtime.Immutable public final class ButtonColors {
  }

  public final class ButtonDefaults {
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.ButtonBorder border(optional androidx.tv.material3.Border border, optional androidx.tv.material3.Border focusedBorder, optional androidx.tv.material3.Border pressedBorder, optional androidx.tv.material3.Border disabledBorder, optional androidx.tv.material3.Border focusedDisabledBorder);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.ButtonBorder border(androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.ButtonColors colors(optional long containerColor, optional long contentColor, optional long focusedContainerColor, optional long focusedContentColor, optional long pressedContainerColor, optional long pressedContentColor, optional long disabledContainerColor, optional long disabledContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.ButtonColors colors-oq7We08(long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method public androidx.compose.foundation.layout.PaddingValues getButtonWithIconContentPadding();
    method public androidx.compose.foundation.layout.PaddingValues getContentPadding();
    method public float getIconSize();
    method @BytecodeOnly public float getIconSize-D9Ej5fM();
    method public float getIconSpacing();
    method @BytecodeOnly public float getIconSpacing-D9Ej5fM();
    method public androidx.tv.material3.ButtonGlow glow(optional androidx.tv.material3.Glow glow, optional androidx.tv.material3.Glow focusedGlow, optional androidx.tv.material3.Glow pressedGlow);
    method public androidx.tv.material3.ButtonScale scale(optional @FloatRange(from=0.0) float scale, optional @FloatRange(from=0.0) float focusedScale, optional @FloatRange(from=0.0) float pressedScale, optional @FloatRange(from=0.0) float disabledScale, optional @FloatRange(from=0.0) float focusedDisabledScale);
    method public androidx.tv.material3.ButtonShape shape(optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Shape focusedShape, optional androidx.compose.ui.graphics.Shape pressedShape, optional androidx.compose.ui.graphics.Shape disabledShape, optional androidx.compose.ui.graphics.Shape focusedDisabledShape);
    property public androidx.compose.foundation.layout.PaddingValues ButtonWithIconContentPadding;
    property public androidx.compose.foundation.layout.PaddingValues ContentPadding;
    property public float IconSize;
    property public float IconSpacing;
    field public static final androidx.tv.material3.ButtonDefaults INSTANCE;
  }

  @androidx.compose.runtime.Immutable public final class ButtonGlow {
  }

  public final class ButtonKt {
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static void Button(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional boolean enabled, optional androidx.tv.material3.ButtonScale scale, optional androidx.tv.material3.ButtonGlow glow, optional androidx.tv.material3.ButtonShape shape, optional androidx.tv.material3.ButtonColors colors, optional float tonalElevation, optional androidx.tv.material3.ButtonBorder border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void Button-TCVpFMg(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function0<kotlin.Unit!>?, boolean, androidx.tv.material3.ButtonScale?, androidx.tv.material3.ButtonGlow?, androidx.tv.material3.ButtonShape?, androidx.tv.material3.ButtonColors?, float, androidx.tv.material3.ButtonBorder?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static void OutlinedButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional boolean enabled, optional androidx.tv.material3.ButtonScale scale, optional androidx.tv.material3.ButtonGlow glow, optional androidx.tv.material3.ButtonShape shape, optional androidx.tv.material3.ButtonColors colors, optional float tonalElevation, optional androidx.tv.material3.ButtonBorder border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void OutlinedButton-TCVpFMg(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function0<kotlin.Unit!>?, boolean, androidx.tv.material3.ButtonScale?, androidx.tv.material3.ButtonGlow?, androidx.tv.material3.ButtonShape?, androidx.tv.material3.ButtonColors?, float, androidx.tv.material3.ButtonBorder?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
  }

  @androidx.compose.runtime.Immutable public final class ButtonScale {
    field public static final androidx.tv.material3.ButtonScale.Companion Companion;
  }

  public static final class ButtonScale.Companion {
    method public androidx.tv.material3.ButtonScale getNone();
    property public androidx.tv.material3.ButtonScale None;
  }

  @androidx.compose.runtime.Immutable public final class ButtonShape {
  }

  @androidx.compose.runtime.Immutable public final class CardBorder {
  }

  @androidx.compose.runtime.Immutable public final class CardColors {
  }

  @androidx.compose.runtime.Immutable public final class CardContainerColors {
  }

  public final class CardContainerDefaults {
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.CardContainerColors contentColor(optional long contentColor, optional long focusedContentColor, optional long pressedContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.CardContainerColors contentColor-RGew2ao(long, long, long, androidx.compose.runtime.Composer?, int, int);
    field public static final androidx.tv.material3.CardContainerDefaults INSTANCE;
  }

  public final class CardContainerKt {
    method @androidx.compose.runtime.Composable public static void StandardCardContainer(kotlin.jvm.functions.Function1<? super androidx.compose.foundation.interaction.MutableInteractionSource,kotlin.Unit> imageCard, kotlin.jvm.functions.Function0<kotlin.Unit> title, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit> subtitle, optional kotlin.jvm.functions.Function0<kotlin.Unit> description, optional androidx.tv.material3.CardContainerColors contentColor, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void StandardCardContainer(kotlin.jvm.functions.Function3<? super androidx.compose.foundation.interaction.MutableInteractionSource!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.tv.material3.CardContainerColors?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void WideCardContainer(kotlin.jvm.functions.Function1<? super androidx.compose.foundation.interaction.MutableInteractionSource,kotlin.Unit> imageCard, kotlin.jvm.functions.Function0<kotlin.Unit> title, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit> subtitle, optional kotlin.jvm.functions.Function0<kotlin.Unit> description, optional androidx.tv.material3.CardContainerColors contentColor, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void WideCardContainer(kotlin.jvm.functions.Function3<? super androidx.compose.foundation.interaction.MutableInteractionSource!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.tv.material3.CardContainerColors?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.runtime.Composer?, int, int);
  }

  public final class CardDefaults {
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.CardBorder border(optional androidx.tv.material3.Border border, optional androidx.tv.material3.Border focusedBorder, optional androidx.tv.material3.Border pressedBorder);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.CardBorder border(androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.CardColors colors(optional long containerColor, optional long contentColor, optional long focusedContainerColor, optional long focusedContentColor, optional long pressedContainerColor, optional long pressedContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.CardColors colors-5tl4gsc(long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.CardColors compactCardColors(optional long containerColor, optional long contentColor, optional long focusedContainerColor, optional long focusedContentColor, optional long pressedContainerColor, optional long pressedContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.CardColors compactCardColors-5tl4gsc(long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method public androidx.compose.ui.graphics.Brush getScrimBrush();
    method public androidx.tv.material3.CardGlow glow(optional androidx.tv.material3.Glow glow, optional androidx.tv.material3.Glow focusedGlow, optional androidx.tv.material3.Glow pressedGlow);
    method public androidx.tv.material3.CardScale scale(optional @FloatRange(from=0.0) float scale, optional @FloatRange(from=0.0) float focusedScale, optional @FloatRange(from=0.0) float pressedScale);
    method public androidx.tv.material3.CardShape shape(optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Shape focusedShape, optional androidx.compose.ui.graphics.Shape pressedShape);
    property public static float HorizontalImageAspectRatio;
    property public androidx.compose.ui.graphics.Brush ScrimBrush;
    property public static float SquareImageAspectRatio;
    property public static float VerticalImageAspectRatio;
    field public static final float HorizontalImageAspectRatio = 1.7777778f;
    field public static final androidx.tv.material3.CardDefaults INSTANCE;
    field public static final float SquareImageAspectRatio = 1.0f;
    field public static final float VerticalImageAspectRatio = 0.6666667f;
  }

  @androidx.compose.runtime.Immutable public final class CardGlow {
  }

  public final class CardKt {
    method @androidx.compose.runtime.Composable public static void Card(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional androidx.tv.material3.CardShape shape, optional androidx.tv.material3.CardColors colors, optional androidx.tv.material3.CardScale scale, optional androidx.tv.material3.CardBorder border, optional androidx.tv.material3.CardGlow glow, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void Card(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function0<kotlin.Unit!>?, androidx.tv.material3.CardShape?, androidx.tv.material3.CardColors?, androidx.tv.material3.CardScale?, androidx.tv.material3.CardBorder?, androidx.tv.material3.CardGlow?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.ColumnScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void ClassicCard(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> image, kotlin.jvm.functions.Function0<kotlin.Unit> title, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional kotlin.jvm.functions.Function0<kotlin.Unit> subtitle, optional kotlin.jvm.functions.Function0<kotlin.Unit> description, optional androidx.tv.material3.CardShape shape, optional androidx.tv.material3.CardColors colors, optional androidx.tv.material3.CardScale scale, optional androidx.tv.material3.CardBorder border, optional androidx.tv.material3.CardGlow glow, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void ClassicCard(kotlin.jvm.functions.Function0<kotlin.Unit!>, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function0<kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.tv.material3.CardShape?, androidx.tv.material3.CardColors?, androidx.tv.material3.CardScale?, androidx.tv.material3.CardBorder?, androidx.tv.material3.CardGlow?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.runtime.Composer?, int, int, int);
    method @androidx.compose.runtime.Composable public static void CompactCard(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> image, kotlin.jvm.functions.Function0<kotlin.Unit> title, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional kotlin.jvm.functions.Function0<kotlin.Unit> subtitle, optional kotlin.jvm.functions.Function0<kotlin.Unit> description, optional androidx.tv.material3.CardShape shape, optional androidx.tv.material3.CardColors colors, optional androidx.tv.material3.CardScale scale, optional androidx.tv.material3.CardBorder border, optional androidx.tv.material3.CardGlow glow, optional androidx.compose.ui.graphics.Brush scrimBrush, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void CompactCard(kotlin.jvm.functions.Function0<kotlin.Unit!>, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function0<kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.tv.material3.CardShape?, androidx.tv.material3.CardColors?, androidx.tv.material3.CardScale?, androidx.tv.material3.CardBorder?, androidx.tv.material3.CardGlow?, androidx.compose.ui.graphics.Brush?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.runtime.Composer?, int, int, int);
    method @androidx.compose.runtime.Composable public static void WideClassicCard(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> image, kotlin.jvm.functions.Function0<kotlin.Unit> title, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional kotlin.jvm.functions.Function0<kotlin.Unit> subtitle, optional kotlin.jvm.functions.Function0<kotlin.Unit> description, optional androidx.tv.material3.CardShape shape, optional androidx.tv.material3.CardColors colors, optional androidx.tv.material3.CardScale scale, optional androidx.tv.material3.CardBorder border, optional androidx.tv.material3.CardGlow glow, optional androidx.compose.foundation.layout.PaddingValues contentPadding, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void WideClassicCard(kotlin.jvm.functions.Function0<kotlin.Unit!>, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function0<kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.tv.material3.CardShape?, androidx.tv.material3.CardColors?, androidx.tv.material3.CardScale?, androidx.tv.material3.CardBorder?, androidx.tv.material3.CardGlow?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.runtime.Composer?, int, int, int);
  }

  @androidx.compose.runtime.Immutable public final class CardScale {
    field public static final androidx.tv.material3.CardScale.Companion Companion;
  }

  public static final class CardScale.Companion {
    method public androidx.tv.material3.CardScale getNone();
    property public androidx.tv.material3.CardScale None;
  }

  @androidx.compose.runtime.Immutable public final class CardShape {
  }

  @SuppressCompatibility @androidx.tv.material3.ExperimentalTvMaterial3Api public final class CarouselDefaults {
    method @androidx.compose.runtime.Composable public void IndicatorRow(int itemCount, int activeItemIndex, optional androidx.compose.ui.Modifier modifier, optional float spacing, optional kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit> indicator);
    method @BytecodeOnly @androidx.compose.runtime.Composable public void IndicatorRow-hGBTI10(int, int, androidx.compose.ui.Modifier?, float, kotlin.jvm.functions.Function3<? super java.lang.Boolean!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.compose.animation.ContentTransform getContentTransform();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.compose.animation.ContentTransform getContentTransform(androidx.compose.runtime.Composer?, int);
    property public static long TimeToDisplayItemMillis;
    property @androidx.compose.runtime.Composable public androidx.compose.animation.ContentTransform contentTransform;
    field public static final androidx.tv.material3.CarouselDefaults INSTANCE;
    field public static final long TimeToDisplayItemMillis = 5000L; // 0x1388L
  }

  public final class CarouselKt {
    method @SuppressCompatibility @androidx.compose.runtime.Composable @androidx.tv.material3.ExperimentalTvMaterial3Api public static void Carousel(int itemCount, optional androidx.compose.ui.Modifier modifier, optional androidx.tv.material3.CarouselState carouselState, optional long autoScrollDurationMillis, optional androidx.compose.animation.ContentTransform contentTransformStartToEnd, optional androidx.compose.animation.ContentTransform contentTransformEndToStart, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> carouselIndicator, kotlin.jvm.functions.Function2<? super androidx.compose.animation.AnimatedContentScope,? super java.lang.Integer,kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.runtime.Composable @androidx.tv.material3.ExperimentalTvMaterial3Api public static void Carousel(int, androidx.compose.ui.Modifier?, androidx.tv.material3.CarouselState?, long, androidx.compose.animation.ContentTransform?, androidx.compose.animation.ContentTransform?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function4<? super androidx.compose.animation.AnimatedContentScope!,? super java.lang.Integer!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @SuppressCompatibility @androidx.compose.runtime.Composable @androidx.tv.material3.ExperimentalTvMaterial3Api public static androidx.tv.material3.CarouselState rememberCarouselState(optional int initialActiveItemIndex);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.runtime.Composable @androidx.tv.material3.ExperimentalTvMaterial3Api public static androidx.tv.material3.CarouselState rememberCarouselState(int, androidx.compose.runtime.Composer?, int, int);
  }

  @SuppressCompatibility @androidx.compose.runtime.Stable @androidx.tv.material3.ExperimentalTvMaterial3Api public final class CarouselState {
    ctor public CarouselState();
    ctor public CarouselState(optional int initialActiveItemIndex);
    method public int getActiveItemIndex();
    method public androidx.tv.material3.ScrollPauseHandle pauseAutoScroll(int itemIndex);
    property public int activeItemIndex;
    field public static final androidx.tv.material3.CarouselState.Companion Companion;
  }

  public static final class CarouselState.Companion {
    method public androidx.compose.runtime.saveable.Saver<androidx.tv.material3.CarouselState,? extends java.lang.Object?> getSaver();
    property public androidx.compose.runtime.saveable.Saver<androidx.tv.material3.CarouselState,? extends java.lang.Object?> Saver;
  }

  @androidx.compose.runtime.Immutable public final class CheckboxColors {
    ctor @KotlinOnly public CheckboxColors(androidx.compose.ui.graphics.Color checkedCheckmarkColor, androidx.compose.ui.graphics.Color uncheckedCheckmarkColor, androidx.compose.ui.graphics.Color checkedBoxColor, androidx.compose.ui.graphics.Color uncheckedBoxColor, androidx.compose.ui.graphics.Color disabledCheckedBoxColor, androidx.compose.ui.graphics.Color disabledUncheckedBoxColor, androidx.compose.ui.graphics.Color disabledIndeterminateBoxColor, androidx.compose.ui.graphics.Color checkedBorderColor, androidx.compose.ui.graphics.Color uncheckedBorderColor, androidx.compose.ui.graphics.Color disabledBorderColor, androidx.compose.ui.graphics.Color disabledUncheckedBorderColor, androidx.compose.ui.graphics.Color disabledIndeterminateBorderColor);
    ctor @BytecodeOnly public CheckboxColors(long, long, long, long, long, long, long, long, long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method public androidx.tv.material3.CheckboxColors copy(optional long checkedCheckmarkColor, optional long uncheckedCheckmarkColor, optional long checkedBoxColor, optional long uncheckedBoxColor, optional long disabledCheckedBoxColor, optional long disabledUncheckedBoxColor, optional long disabledIndeterminateBoxColor, optional long checkedBorderColor, optional long uncheckedBorderColor, optional long disabledBorderColor, optional long disabledUncheckedBorderColor, optional long disabledIndeterminateBorderColor);
    method @BytecodeOnly public androidx.tv.material3.CheckboxColors copy-2qZNXz8(long, long, long, long, long, long, long, long, long, long, long, long);
    method public long getCheckedBorderColor();
    method @BytecodeOnly public long getCheckedBorderColor-0d7_KjU();
    method public long getCheckedBoxColor();
    method @BytecodeOnly public long getCheckedBoxColor-0d7_KjU();
    method public long getCheckedCheckmarkColor();
    method @BytecodeOnly public long getCheckedCheckmarkColor-0d7_KjU();
    method public long getDisabledBorderColor();
    method @BytecodeOnly public long getDisabledBorderColor-0d7_KjU();
    method public long getDisabledCheckedBoxColor();
    method @BytecodeOnly public long getDisabledCheckedBoxColor-0d7_KjU();
    method public long getDisabledIndeterminateBorderColor();
    method @BytecodeOnly public long getDisabledIndeterminateBorderColor-0d7_KjU();
    method public long getDisabledIndeterminateBoxColor();
    method @BytecodeOnly public long getDisabledIndeterminateBoxColor-0d7_KjU();
    method public long getDisabledUncheckedBorderColor();
    method @BytecodeOnly public long getDisabledUncheckedBorderColor-0d7_KjU();
    method public long getDisabledUncheckedBoxColor();
    method @BytecodeOnly public long getDisabledUncheckedBoxColor-0d7_KjU();
    method public long getUncheckedBorderColor();
    method @BytecodeOnly public long getUncheckedBorderColor-0d7_KjU();
    method public long getUncheckedBoxColor();
    method @BytecodeOnly public long getUncheckedBoxColor-0d7_KjU();
    method public long getUncheckedCheckmarkColor();
    method @BytecodeOnly public long getUncheckedCheckmarkColor-0d7_KjU();
    property public long checkedBorderColor;
    property public long checkedBoxColor;
    property public long checkedCheckmarkColor;
    property public long disabledBorderColor;
    property public long disabledCheckedBoxColor;
    property public long disabledIndeterminateBorderColor;
    property public long disabledIndeterminateBoxColor;
    property public long disabledUncheckedBorderColor;
    property public long disabledUncheckedBoxColor;
    property public long uncheckedBorderColor;
    property public long uncheckedBoxColor;
    property public long uncheckedCheckmarkColor;
  }

  public final class CheckboxDefaults {
    method @androidx.compose.runtime.Composable public androidx.tv.material3.CheckboxColors colors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.tv.material3.CheckboxColors colors(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.tv.material3.CheckboxColors colors(optional long checkedColor, optional long uncheckedColor, optional long checkmarkColor, optional long disabledCheckedColor, optional long disabledUncheckedColor, optional long disabledIndeterminateColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.tv.material3.CheckboxColors colors-5tl4gsc(long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    field public static final androidx.tv.material3.CheckboxDefaults INSTANCE;
  }

  public final class CheckboxKt {
    method @androidx.compose.runtime.Composable public static void Checkbox(boolean checked, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit>? onCheckedChange, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.tv.material3.CheckboxColors colors, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void Checkbox(boolean, kotlin.jvm.functions.Function1<? super java.lang.Boolean!,kotlin.Unit!>?, androidx.compose.ui.Modifier?, boolean, androidx.tv.material3.CheckboxColors?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void TriStateCheckbox(androidx.compose.ui.state.ToggleableState state, kotlin.jvm.functions.Function0<kotlin.Unit>? onClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.tv.material3.CheckboxColors colors, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void TriStateCheckbox(androidx.compose.ui.state.ToggleableState, kotlin.jvm.functions.Function0<kotlin.Unit!>?, androidx.compose.ui.Modifier?, boolean, androidx.tv.material3.CheckboxColors?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.runtime.Composer?, int, int);
  }

  public final class ChipKt {
    method @SuppressCompatibility @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable @androidx.tv.material3.ExperimentalTvMaterial3Api public static void AssistChip(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional kotlin.jvm.functions.Function0<kotlin.Unit>? leadingIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? trailingIcon, optional androidx.tv.material3.ClickableChipShape shape, optional androidx.tv.material3.ClickableChipColors colors, optional androidx.tv.material3.ClickableChipScale scale, optional androidx.tv.material3.ClickableChipBorder border, optional androidx.tv.material3.ClickableChipGlow glow, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.runtime.Composable @androidx.tv.material3.ExperimentalTvMaterial3Api public static void AssistChip(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.tv.material3.ClickableChipShape?, androidx.tv.material3.ClickableChipColors?, androidx.tv.material3.ClickableChipScale?, androidx.tv.material3.ClickableChipBorder?, androidx.tv.material3.ClickableChipGlow?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @SuppressCompatibility @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable @androidx.tv.material3.ExperimentalTvMaterial3Api public static void FilterChip(boolean selected, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional kotlin.jvm.functions.Function0<kotlin.Unit>? leadingIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? trailingIcon, optional androidx.tv.material3.SelectableChipShape shape, optional androidx.tv.material3.SelectableChipColors colors, optional androidx.tv.material3.SelectableChipScale scale, optional androidx.tv.material3.SelectableChipBorder border, optional androidx.tv.material3.SelectableChipGlow glow, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.runtime.Composable @androidx.tv.material3.ExperimentalTvMaterial3Api public static void FilterChip(boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.tv.material3.SelectableChipShape?, androidx.tv.material3.SelectableChipColors?, androidx.tv.material3.SelectableChipScale?, androidx.tv.material3.SelectableChipBorder?, androidx.tv.material3.SelectableChipGlow?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @SuppressCompatibility @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable @androidx.tv.material3.ExperimentalTvMaterial3Api public static void InputChip(boolean selected, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional kotlin.jvm.functions.Function0<kotlin.Unit>? leadingIcon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? avatar, optional kotlin.jvm.functions.Function0<kotlin.Unit>? trailingIcon, optional androidx.tv.material3.SelectableChipShape shape, optional androidx.tv.material3.SelectableChipColors colors, optional androidx.tv.material3.SelectableChipScale scale, optional androidx.tv.material3.SelectableChipBorder border, optional androidx.tv.material3.SelectableChipGlow glow, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.runtime.Composable @androidx.tv.material3.ExperimentalTvMaterial3Api public static void InputChip(boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.tv.material3.SelectableChipShape?, androidx.tv.material3.SelectableChipColors?, androidx.tv.material3.SelectableChipScale?, androidx.tv.material3.SelectableChipBorder?, androidx.tv.material3.SelectableChipGlow?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @SuppressCompatibility @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable @androidx.tv.material3.ExperimentalTvMaterial3Api public static void SuggestionChip(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional androidx.tv.material3.ClickableChipShape shape, optional androidx.tv.material3.ClickableChipColors colors, optional androidx.tv.material3.ClickableChipScale scale, optional androidx.tv.material3.ClickableChipBorder border, optional androidx.tv.material3.ClickableChipGlow glow, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @SuppressCompatibility @androidx.compose.runtime.Composable @androidx.tv.material3.ExperimentalTvMaterial3Api public static void SuggestionChip(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>?, androidx.tv.material3.ClickableChipShape?, androidx.tv.material3.ClickableChipColors?, androidx.tv.material3.ClickableChipScale?, androidx.tv.material3.ClickableChipBorder?, androidx.tv.material3.ClickableChipGlow?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
  }

  @SuppressCompatibility @androidx.compose.runtime.Immutable @androidx.tv.material3.ExperimentalTvMaterial3Api public final class ClickableChipBorder {
  }

  @SuppressCompatibility @androidx.compose.runtime.Immutable @androidx.tv.material3.ExperimentalTvMaterial3Api public final class ClickableChipColors {
  }

  @SuppressCompatibility @androidx.compose.runtime.Immutable @androidx.tv.material3.ExperimentalTvMaterial3Api public final class ClickableChipGlow {
  }

  @SuppressCompatibility @androidx.compose.runtime.Immutable @androidx.tv.material3.ExperimentalTvMaterial3Api public final class ClickableChipScale {
    field public static final androidx.tv.material3.ClickableChipScale.Companion Companion;
  }

  public static final class ClickableChipScale.Companion {
    method public androidx.tv.material3.ClickableChipScale getNone();
    property public androidx.tv.material3.ClickableChipScale None;
  }

  @SuppressCompatibility @androidx.compose.runtime.Immutable @androidx.tv.material3.ExperimentalTvMaterial3Api public final class ClickableChipShape {
  }

  @androidx.compose.runtime.Immutable public final class ClickableSurfaceBorder {
  }

  @androidx.compose.runtime.Immutable public final class ClickableSurfaceColors {
  }

  public final class ClickableSurfaceDefaults {
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.ClickableSurfaceBorder border(optional androidx.tv.material3.Border border, optional androidx.tv.material3.Border focusedBorder, optional androidx.tv.material3.Border pressedBorder, optional androidx.tv.material3.Border disabledBorder, optional androidx.tv.material3.Border focusedDisabledBorder);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.ClickableSurfaceBorder border(androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.ClickableSurfaceColors colors(optional long containerColor, optional long contentColor, optional long focusedContainerColor, optional long focusedContentColor, optional long pressedContainerColor, optional long pressedContentColor, optional long disabledContainerColor, optional long disabledContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.ClickableSurfaceColors colors-oq7We08(long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method public androidx.tv.material3.ClickableSurfaceGlow glow(optional androidx.tv.material3.Glow glow, optional androidx.tv.material3.Glow focusedGlow, optional androidx.tv.material3.Glow pressedGlow);
    method public androidx.tv.material3.ClickableSurfaceScale scale(optional @FloatRange(from=0.0) float scale, optional @FloatRange(from=0.0) float focusedScale, optional @FloatRange(from=0.0) float pressedScale, optional @FloatRange(from=0.0) float disabledScale, optional @FloatRange(from=0.0) float focusedDisabledScale);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.ClickableSurfaceShape shape(optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Shape focusedShape, optional androidx.compose.ui.graphics.Shape pressedShape, optional androidx.compose.ui.graphics.Shape disabledShape, optional androidx.compose.ui.graphics.Shape focusedDisabledShape);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.ClickableSurfaceShape shape(androidx.compose.ui.graphics.Shape?, androidx.compose.ui.graphics.Shape?, androidx.compose.ui.graphics.Shape?, androidx.compose.ui.graphics.Shape?, androidx.compose.ui.graphics.Shape?, androidx.compose.runtime.Composer?, int, int);
    field public static final androidx.tv.material3.ClickableSurfaceDefaults INSTANCE;
  }

  @androidx.compose.runtime.Immutable public final class ClickableSurfaceGlow {
  }

  @androidx.compose.runtime.Immutable public final class ClickableSurfaceScale {
    field public static final androidx.tv.material3.ClickableSurfaceScale.Companion Companion;
  }

  public static final class ClickableSurfaceScale.Companion {
    method public androidx.tv.material3.ClickableSurfaceScale getNone();
    property public androidx.tv.material3.ClickableSurfaceScale None;
  }

  @androidx.compose.runtime.Immutable public final class ClickableSurfaceShape {
  }

  @androidx.compose.runtime.Stable public final class ColorScheme {
    ctor @KotlinOnly public ColorScheme(androidx.compose.ui.graphics.Color primary, androidx.compose.ui.graphics.Color onPrimary, androidx.compose.ui.graphics.Color primaryContainer, androidx.compose.ui.graphics.Color onPrimaryContainer, androidx.compose.ui.graphics.Color inversePrimary, androidx.compose.ui.graphics.Color secondary, androidx.compose.ui.graphics.Color onSecondary, androidx.compose.ui.graphics.Color secondaryContainer, androidx.compose.ui.graphics.Color onSecondaryContainer, androidx.compose.ui.graphics.Color tertiary, androidx.compose.ui.graphics.Color onTertiary, androidx.compose.ui.graphics.Color tertiaryContainer, androidx.compose.ui.graphics.Color onTertiaryContainer, androidx.compose.ui.graphics.Color background, androidx.compose.ui.graphics.Color onBackground, androidx.compose.ui.graphics.Color surface, androidx.compose.ui.graphics.Color onSurface, androidx.compose.ui.graphics.Color surfaceVariant, androidx.compose.ui.graphics.Color onSurfaceVariant, androidx.compose.ui.graphics.Color surfaceTint, androidx.compose.ui.graphics.Color inverseSurface, androidx.compose.ui.graphics.Color inverseOnSurface, androidx.compose.ui.graphics.Color error, androidx.compose.ui.graphics.Color onError, androidx.compose.ui.graphics.Color errorContainer, androidx.compose.ui.graphics.Color onErrorContainer, androidx.compose.ui.graphics.Color border, androidx.compose.ui.graphics.Color borderVariant, androidx.compose.ui.graphics.Color scrim);
    ctor @BytecodeOnly public ColorScheme(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method public androidx.tv.material3.ColorScheme copy(optional long primary, optional long onPrimary, optional long primaryContainer, optional long onPrimaryContainer, optional long inversePrimary, optional long secondary, optional long onSecondary, optional long secondaryContainer, optional long onSecondaryContainer, optional long tertiary, optional long onTertiary, optional long tertiaryContainer, optional long onTertiaryContainer, optional long background, optional long onBackground, optional long surface, optional long onSurface, optional long surfaceVariant, optional long onSurfaceVariant, optional long surfaceTint, optional long inverseSurface, optional long inverseOnSurface, optional long error, optional long onError, optional long errorContainer, optional long onErrorContainer, optional long border, optional long borderVariant, optional long scrim);
    method @BytecodeOnly public androidx.tv.material3.ColorScheme copy-G1PFc-w(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long);
    method public long getBackground();
    method @BytecodeOnly public long getBackground-0d7_KjU();
    method public long getBorder();
    method @BytecodeOnly public long getBorder-0d7_KjU();
    method public long getBorderVariant();
    method @BytecodeOnly public long getBorderVariant-0d7_KjU();
    method public long getError();
    method @BytecodeOnly public long getError-0d7_KjU();
    method public long getErrorContainer();
    method @BytecodeOnly public long getErrorContainer-0d7_KjU();
    method public long getInverseOnSurface();
    method @BytecodeOnly public long getInverseOnSurface-0d7_KjU();
    method public long getInversePrimary();
    method @BytecodeOnly public long getInversePrimary-0d7_KjU();
    method public long getInverseSurface();
    method @BytecodeOnly public long getInverseSurface-0d7_KjU();
    method public long getOnBackground();
    method @BytecodeOnly public long getOnBackground-0d7_KjU();
    method public long getOnError();
    method @BytecodeOnly public long getOnError-0d7_KjU();
    method public long getOnErrorContainer();
    method @BytecodeOnly public long getOnErrorContainer-0d7_KjU();
    method public long getOnPrimary();
    method @BytecodeOnly public long getOnPrimary-0d7_KjU();
    method public long getOnPrimaryContainer();
    method @BytecodeOnly public long getOnPrimaryContainer-0d7_KjU();
    method public long getOnSecondary();
    method @BytecodeOnly public long getOnSecondary-0d7_KjU();
    method public long getOnSecondaryContainer();
    method @BytecodeOnly public long getOnSecondaryContainer-0d7_KjU();
    method public long getOnSurface();
    method @BytecodeOnly public long getOnSurface-0d7_KjU();
    method public long getOnSurfaceVariant();
    method @BytecodeOnly public long getOnSurfaceVariant-0d7_KjU();
    method public long getOnTertiary();
    method @BytecodeOnly public long getOnTertiary-0d7_KjU();
    method public long getOnTertiaryContainer();
    method @BytecodeOnly public long getOnTertiaryContainer-0d7_KjU();
    method public long getPrimary();
    method @BytecodeOnly public long getPrimary-0d7_KjU();
    method public long getPrimaryContainer();
    method @BytecodeOnly public long getPrimaryContainer-0d7_KjU();
    method public long getScrim();
    method @BytecodeOnly public long getScrim-0d7_KjU();
    method public long getSecondary();
    method @BytecodeOnly public long getSecondary-0d7_KjU();
    method public long getSecondaryContainer();
    method @BytecodeOnly public long getSecondaryContainer-0d7_KjU();
    method public long getSurface();
    method @BytecodeOnly public long getSurface-0d7_KjU();
    method public long getSurfaceTint();
    method @BytecodeOnly public long getSurfaceTint-0d7_KjU();
    method public long getSurfaceVariant();
    method @BytecodeOnly public long getSurfaceVariant-0d7_KjU();
    method public long getTertiary();
    method @BytecodeOnly public long getTertiary-0d7_KjU();
    method public long getTertiaryContainer();
    method @BytecodeOnly public long getTertiaryContainer-0d7_KjU();
    property public long background;
    property public long border;
    property public long borderVariant;
    property public long error;
    property public long errorContainer;
    property public long inverseOnSurface;
    property public long inversePrimary;
    property public long inverseSurface;
    property public long onBackground;
    property public long onError;
    property public long onErrorContainer;
    property public long onPrimary;
    property public long onPrimaryContainer;
    property public long onSecondary;
    property public long onSecondaryContainer;
    property public long onSurface;
    property public long onSurfaceVariant;
    property public long onTertiary;
    property public long onTertiaryContainer;
    property public long primary;
    property public long primaryContainer;
    property public long scrim;
    property public long secondary;
    property public long secondaryContainer;
    property public long surface;
    property public long surfaceTint;
    property public long surfaceVariant;
    property public long tertiary;
    property public long tertiaryContainer;
  }

  public final class ColorSchemeKt {
    method public static long contentColorFor(androidx.tv.material3.ColorScheme, long backgroundColor);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static long contentColorFor(long backgroundColor);
    method @BytecodeOnly public static long contentColorFor-4WTKRHQ(androidx.tv.material3.ColorScheme, long);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public static long contentColorFor-ek8zF_U(long, androidx.compose.runtime.Composer?, int);
    method public static androidx.tv.material3.ColorScheme darkColorScheme(optional long primary, optional long onPrimary, optional long primaryContainer, optional long onPrimaryContainer, optional long inversePrimary, optional long secondary, optional long onSecondary, optional long secondaryContainer, optional long onSecondaryContainer, optional long tertiary, optional long onTertiary, optional long tertiaryContainer, optional long onTertiaryContainer, optional long background, optional long onBackground, optional long surface, optional long onSurface, optional long surfaceVariant, optional long onSurfaceVariant, optional long surfaceTint, optional long inverseSurface, optional long inverseOnSurface, optional long error, optional long onError, optional long errorContainer, optional long onErrorContainer, optional long border, optional long borderVariant, optional long scrim);
    method @BytecodeOnly public static androidx.tv.material3.ColorScheme darkColorScheme-G1PFc-w(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long);
    method public static androidx.tv.material3.ColorScheme lightColorScheme(optional long primary, optional long onPrimary, optional long primaryContainer, optional long onPrimaryContainer, optional long inversePrimary, optional long secondary, optional long onSecondary, optional long secondaryContainer, optional long onSecondaryContainer, optional long tertiary, optional long onTertiary, optional long tertiaryContainer, optional long onTertiaryContainer, optional long background, optional long onBackground, optional long surface, optional long onSurface, optional long surfaceVariant, optional long onSurfaceVariant, optional long surfaceTint, optional long inverseSurface, optional long inverseOnSurface, optional long error, optional long onError, optional long errorContainer, optional long onErrorContainer, optional long border, optional long borderVariant, optional long scrim);
    method @BytecodeOnly public static androidx.tv.material3.ColorScheme lightColorScheme-G1PFc-w(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long);
    method public static long surfaceColorAtElevation(androidx.tv.material3.ColorScheme, float elevation);
    method @BytecodeOnly public static long surfaceColorAtElevation-3ABfNKs(androidx.tv.material3.ColorScheme, float);
  }

  public final class ContentColorKt {
    method public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.ui.graphics.Color> getLocalContentColor();
    property public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.ui.graphics.Color> LocalContentColor;
  }

  public final class DrawerState {
    ctor public DrawerState();
    ctor public DrawerState(optional androidx.tv.material3.DrawerValue initialValue);
    method public androidx.tv.material3.DrawerValue getCurrentValue();
    method public void setValue(androidx.tv.material3.DrawerValue drawerValue);
    property public androidx.tv.material3.DrawerValue currentValue;
    field public static final androidx.tv.material3.DrawerState.Companion Companion;
  }

  public static final class DrawerState.Companion {
    method public androidx.compose.runtime.saveable.Saver<androidx.tv.material3.DrawerState,androidx.tv.material3.DrawerValue> getSaver();
    property public androidx.compose.runtime.saveable.Saver<androidx.tv.material3.DrawerState,androidx.tv.material3.DrawerValue> Saver;
  }

  public enum DrawerValue {
    enum_constant public static final androidx.tv.material3.DrawerValue Closed;
    enum_constant public static final androidx.tv.material3.DrawerValue Open;
  }

  @SuppressCompatibility @kotlin.RequiresOptIn(message="This tv-material API is experimental and likely to change or be removed in the future.") @kotlin.annotation.Retention(kotlin.annotation.AnnotationRetention.BINARY) public @interface ExperimentalTvMaterial3Api {
  }

  @SuppressCompatibility @androidx.tv.material3.ExperimentalTvMaterial3Api public final class FilterChipDefaults {
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.SelectableChipBorder border(optional androidx.tv.material3.Border border, optional androidx.tv.material3.Border focusedBorder, optional androidx.tv.material3.Border pressedBorder, optional androidx.tv.material3.Border selectedBorder, optional androidx.tv.material3.Border disabledBorder, optional androidx.tv.material3.Border focusedSelectedBorder, optional androidx.tv.material3.Border focusedDisabledBorder, optional androidx.tv.material3.Border pressedSelectedBorder, optional androidx.tv.material3.Border selectedDisabledBorder, optional androidx.tv.material3.Border focusedSelectedDisabledBorder);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.SelectableChipBorder border(androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.compose.runtime.Composer?, int, int, int);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.SelectableChipColors colors(optional long containerColor, optional long contentColor, optional long focusedContainerColor, optional long focusedContentColor, optional long pressedContainerColor, optional long pressedContentColor, optional long selectedContainerColor, optional long selectedContentColor, optional long disabledContainerColor, optional long disabledContentColor, optional long focusedSelectedContainerColor, optional long focusedSelectedContentColor, optional long pressedSelectedContainerColor, optional long pressedSelectedContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.SelectableChipColors colors-u3YEpmA(long, long, long, long, long, long, long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int, int);
    method public float getContainerHeight();
    method @BytecodeOnly public float getContainerHeight-D9Ej5fM();
    method public androidx.compose.foundation.shape.RoundedCornerShape getContainerShape();
    method public float getIconSize();
    method @BytecodeOnly public float getIconSize-D9Ej5fM();
    method public androidx.tv.material3.SelectableChipGlow glow(optional androidx.tv.material3.Glow glow, optional androidx.tv.material3.Glow focusedGlow, optional androidx.tv.material3.Glow pressedGlow, optional androidx.tv.material3.Glow selectedGlow, optional androidx.tv.material3.Glow focusedSelectedGlow, optional androidx.tv.material3.Glow pressedSelectedGlow);
    method public androidx.tv.material3.SelectableChipScale scale(optional @FloatRange(from=0.0) float scale, optional @FloatRange(from=0.0) float focusedScale, optional @FloatRange(from=0.0) float pressedScale, optional @FloatRange(from=0.0) float selectedScale, optional @FloatRange(from=0.0) float disabledScale, optional @FloatRange(from=0.0) float focusedSelectedScale, optional @FloatRange(from=0.0) float focusedDisabledScale, optional @FloatRange(from=0.0) float pressedSelectedScale, optional @FloatRange(from=0.0) float selectedDisabledScale, optional @FloatRange(from=0.0) float focusedSelectedDisabledScale);
    method public androidx.tv.material3.SelectableChipShape shape(optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Shape focusedShape, optional androidx.compose.ui.graphics.Shape pressedShape, optional androidx.compose.ui.graphics.Shape selectedShape, optional androidx.compose.ui.graphics.Shape disabledShape, optional androidx.compose.ui.graphics.Shape focusedSelectedShape, optional androidx.compose.ui.graphics.Shape focusedDisabledShape, optional androidx.compose.ui.graphics.Shape pressedSelectedShape, optional androidx.compose.ui.graphics.Shape selectedDisabledShape, optional androidx.compose.ui.graphics.Shape focusedSelectedDisabledShape);
    property public float ContainerHeight;
    property public androidx.compose.foundation.shape.RoundedCornerShape ContainerShape;
    property public float IconSize;
    field public static final androidx.tv.material3.FilterChipDefaults INSTANCE;
  }

  @androidx.compose.runtime.Immutable public final class Glow {
    ctor @KotlinOnly public Glow(androidx.compose.ui.graphics.Color elevationColor, androidx.compose.ui.unit.Dp elevation);
    ctor @BytecodeOnly public Glow(long, float, kotlin.jvm.internal.DefaultConstructorMarker!);
    method public androidx.tv.material3.Glow copy(optional androidx.compose.ui.graphics.Color? glowColor, optional androidx.compose.ui.unit.Dp? glowElevation);
    method @BytecodeOnly public androidx.tv.material3.Glow copy-4CeajsE(androidx.compose.ui.graphics.Color?, androidx.compose.ui.unit.Dp?);
    method public float getElevation();
    method @BytecodeOnly public float getElevation-D9Ej5fM();
    method public long getElevationColor();
    method @BytecodeOnly public long getElevationColor-0d7_KjU();
    property public float elevation;
    property public long elevationColor;
    field public static final androidx.tv.material3.Glow.Companion Companion;
  }

  public static final class Glow.Companion {
    method public androidx.tv.material3.Glow getNone();
    property public androidx.tv.material3.Glow None;
  }

  public final class IconButtonDefaults {
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.ButtonBorder border(optional androidx.tv.material3.Border border, optional androidx.tv.material3.Border focusedBorder, optional androidx.tv.material3.Border pressedBorder, optional androidx.tv.material3.Border disabledBorder, optional androidx.tv.material3.Border focusedDisabledBorder);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.ButtonBorder border(androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.ButtonColors colors(optional long containerColor, optional long contentColor, optional long focusedContainerColor, optional long focusedContentColor, optional long pressedContainerColor, optional long pressedContentColor, optional long disabledContainerColor, optional long disabledContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.ButtonColors colors-oq7We08(long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method public float getLargeButtonSize();
    method @BytecodeOnly public float getLargeButtonSize-D9Ej5fM();
    method public float getLargeIconSize();
    method @BytecodeOnly public float getLargeIconSize-D9Ej5fM();
    method public float getMediumButtonSize();
    method @BytecodeOnly public float getMediumButtonSize-D9Ej5fM();
    method public float getMediumIconSize();
    method @BytecodeOnly public float getMediumIconSize-D9Ej5fM();
    method public float getSmallButtonSize();
    method @BytecodeOnly public float getSmallButtonSize-D9Ej5fM();
    method public float getSmallIconSize();
    method @BytecodeOnly public float getSmallIconSize-D9Ej5fM();
    method public androidx.tv.material3.ButtonGlow glow(optional androidx.tv.material3.Glow glow, optional androidx.tv.material3.Glow focusedGlow, optional androidx.tv.material3.Glow pressedGlow);
    method public androidx.tv.material3.ButtonScale scale(optional @FloatRange(from=0.0) float scale, optional @FloatRange(from=0.0) float focusedScale, optional @FloatRange(from=0.0) float pressedScale, optional @FloatRange(from=0.0) float disabledScale, optional @FloatRange(from=0.0) float focusedDisabledScale);
    method public androidx.tv.material3.ButtonShape shape(optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Shape focusedShape, optional androidx.compose.ui.graphics.Shape pressedShape, optional androidx.compose.ui.graphics.Shape disabledShape, optional androidx.compose.ui.graphics.Shape focusedDisabledShape);
    property public float LargeButtonSize;
    property public float LargeIconSize;
    property public float MediumButtonSize;
    property public float MediumIconSize;
    property public float SmallButtonSize;
    property public float SmallIconSize;
    field public static final androidx.tv.material3.IconButtonDefaults INSTANCE;
  }

  public final class IconButtonKt {
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static void IconButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional boolean enabled, optional androidx.tv.material3.ButtonScale scale, optional androidx.tv.material3.ButtonGlow glow, optional androidx.tv.material3.ButtonShape shape, optional androidx.tv.material3.ButtonColors colors, optional androidx.tv.material3.ButtonBorder border, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void IconButton(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function0<kotlin.Unit!>?, boolean, androidx.tv.material3.ButtonScale?, androidx.tv.material3.ButtonGlow?, androidx.tv.material3.ButtonShape?, androidx.tv.material3.ButtonColors?, androidx.tv.material3.ButtonBorder?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static void OutlinedIconButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional boolean enabled, optional androidx.tv.material3.ButtonScale scale, optional androidx.tv.material3.ButtonGlow glow, optional androidx.tv.material3.ButtonShape shape, optional androidx.tv.material3.ButtonColors colors, optional androidx.tv.material3.ButtonBorder border, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void OutlinedIconButton(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function0<kotlin.Unit!>?, boolean, androidx.tv.material3.ButtonScale?, androidx.tv.material3.ButtonGlow?, androidx.tv.material3.ButtonShape?, androidx.tv.material3.ButtonColors?, androidx.tv.material3.ButtonBorder?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
  }

  public final class IconKt {
    method @androidx.compose.runtime.Composable public static void Icon(androidx.compose.ui.graphics.ImageBitmap bitmap, String? contentDescription, optional androidx.compose.ui.Modifier modifier, optional long tint);
    method @androidx.compose.runtime.Composable public static void Icon(androidx.compose.ui.graphics.painter.Painter painter, String? contentDescription, optional androidx.compose.ui.Modifier modifier, optional long tint);
    method @androidx.compose.runtime.Composable public static void Icon(androidx.compose.ui.graphics.vector.ImageVector imageVector, String? contentDescription, optional androidx.compose.ui.Modifier modifier, optional long tint);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void Icon-ww6aTOc(androidx.compose.ui.graphics.ImageBitmap, String?, androidx.compose.ui.Modifier?, long, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void Icon-ww6aTOc(androidx.compose.ui.graphics.painter.Painter, String?, androidx.compose.ui.Modifier?, long, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void Icon-ww6aTOc(androidx.compose.ui.graphics.vector.ImageVector, String?, androidx.compose.ui.Modifier?, long, androidx.compose.runtime.Composer?, int, int);
  }

  @SuppressCompatibility @androidx.tv.material3.ExperimentalTvMaterial3Api public final class InputChipDefaults {
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.SelectableChipBorder border(boolean hasAvatar, optional androidx.tv.material3.Border border, optional androidx.tv.material3.Border focusedBorder, optional androidx.tv.material3.Border pressedBorder, optional androidx.tv.material3.Border selectedBorder, optional androidx.tv.material3.Border disabledBorder, optional androidx.tv.material3.Border focusedSelectedBorder, optional androidx.tv.material3.Border focusedDisabledBorder, optional androidx.tv.material3.Border pressedSelectedBorder, optional androidx.tv.material3.Border selectedDisabledBorder, optional androidx.tv.material3.Border focusedSelectedDisabledBorder);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.SelectableChipBorder border(boolean, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.compose.runtime.Composer?, int, int, int);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.SelectableChipColors colors(optional long containerColor, optional long contentColor, optional long focusedContainerColor, optional long focusedContentColor, optional long pressedContainerColor, optional long pressedContentColor, optional long selectedContainerColor, optional long selectedContentColor, optional long disabledContainerColor, optional long disabledContentColor, optional long focusedSelectedContainerColor, optional long focusedSelectedContentColor, optional long pressedSelectedContainerColor, optional long pressedSelectedContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.SelectableChipColors colors-u3YEpmA(long, long, long, long, long, long, long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int, int);
    method public float getAvatarSize();
    method @BytecodeOnly public float getAvatarSize-D9Ej5fM();
    method public float getContainerHeight();
    method @BytecodeOnly public float getContainerHeight-D9Ej5fM();
    method public androidx.compose.foundation.shape.RoundedCornerShape getContainerShape();
    method public androidx.compose.foundation.shape.RoundedCornerShape getContainerShapeWithAvatar();
    method public float getIconSize();
    method @BytecodeOnly public float getIconSize-D9Ej5fM();
    method public androidx.tv.material3.SelectableChipGlow glow(optional androidx.tv.material3.Glow glow, optional androidx.tv.material3.Glow focusedGlow, optional androidx.tv.material3.Glow pressedGlow, optional androidx.tv.material3.Glow selectedGlow, optional androidx.tv.material3.Glow focusedSelectedGlow, optional androidx.tv.material3.Glow pressedSelectedGlow);
    method public androidx.tv.material3.SelectableChipScale scale(optional @FloatRange(from=0.0) float scale, optional @FloatRange(from=0.0) float focusedScale, optional @FloatRange(from=0.0) float pressedScale, optional @FloatRange(from=0.0) float selectedScale, optional @FloatRange(from=0.0) float disabledScale, optional @FloatRange(from=0.0) float focusedSelectedScale, optional @FloatRange(from=0.0) float focusedDisabledScale, optional @FloatRange(from=0.0) float pressedSelectedScale, optional @FloatRange(from=0.0) float selectedDisabledScale, optional @FloatRange(from=0.0) float focusedSelectedDisabledScale);
    method public androidx.tv.material3.SelectableChipShape shape(boolean hasAvatar, optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Shape focusedShape, optional androidx.compose.ui.graphics.Shape pressedShape, optional androidx.compose.ui.graphics.Shape selectedShape, optional androidx.compose.ui.graphics.Shape disabledShape, optional androidx.compose.ui.graphics.Shape focusedSelectedShape, optional androidx.compose.ui.graphics.Shape focusedDisabledShape, optional androidx.compose.ui.graphics.Shape pressedSelectedShape, optional androidx.compose.ui.graphics.Shape selectedDisabledShape, optional androidx.compose.ui.graphics.Shape focusedSelectedDisabledShape);
    property public float AvatarSize;
    property public float ContainerHeight;
    property public androidx.compose.foundation.shape.RoundedCornerShape ContainerShape;
    property public androidx.compose.foundation.shape.RoundedCornerShape ContainerShapeWithAvatar;
    property public float IconSize;
    field public static final androidx.tv.material3.InputChipDefaults INSTANCE;
  }

  @androidx.compose.runtime.Immutable public final class ListItemBorder {
    ctor public ListItemBorder(androidx.tv.material3.Border border, androidx.tv.material3.Border focusedBorder, androidx.tv.material3.Border pressedBorder, androidx.tv.material3.Border selectedBorder, androidx.tv.material3.Border disabledBorder, androidx.tv.material3.Border focusedSelectedBorder, androidx.tv.material3.Border focusedDisabledBorder, androidx.tv.material3.Border pressedSelectedBorder);
    method public androidx.tv.material3.Border getBorder();
    method public androidx.tv.material3.Border getDisabledBorder();
    method public androidx.tv.material3.Border getFocusedBorder();
    method public androidx.tv.material3.Border getFocusedDisabledBorder();
    method public androidx.tv.material3.Border getFocusedSelectedBorder();
    method public androidx.tv.material3.Border getPressedBorder();
    method public androidx.tv.material3.Border getPressedSelectedBorder();
    method public androidx.tv.material3.Border getSelectedBorder();
    property public androidx.tv.material3.Border border;
    property public androidx.tv.material3.Border disabledBorder;
    property public androidx.tv.material3.Border focusedBorder;
    property public androidx.tv.material3.Border focusedDisabledBorder;
    property public androidx.tv.material3.Border focusedSelectedBorder;
    property public androidx.tv.material3.Border pressedBorder;
    property public androidx.tv.material3.Border pressedSelectedBorder;
    property public androidx.tv.material3.Border selectedBorder;
  }

  @androidx.compose.runtime.Immutable public final class ListItemColors {
    ctor @KotlinOnly public ListItemColors(androidx.compose.ui.graphics.Color containerColor, androidx.compose.ui.graphics.Color contentColor, androidx.compose.ui.graphics.Color focusedContainerColor, androidx.compose.ui.graphics.Color focusedContentColor, androidx.compose.ui.graphics.Color pressedContainerColor, androidx.compose.ui.graphics.Color pressedContentColor, androidx.compose.ui.graphics.Color selectedContainerColor, androidx.compose.ui.graphics.Color selectedContentColor, androidx.compose.ui.graphics.Color disabledContainerColor, androidx.compose.ui.graphics.Color disabledContentColor, androidx.compose.ui.graphics.Color focusedSelectedContainerColor, androidx.compose.ui.graphics.Color focusedSelectedContentColor, androidx.compose.ui.graphics.Color pressedSelectedContainerColor, androidx.compose.ui.graphics.Color pressedSelectedContentColor);
    ctor @BytecodeOnly public ListItemColors(long, long, long, long, long, long, long, long, long, long, long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method public long getContainerColor();
    method @BytecodeOnly public long getContainerColor-0d7_KjU();
    method public long getContentColor();
    method @BytecodeOnly public long getContentColor-0d7_KjU();
    method public long getDisabledContainerColor();
    method @BytecodeOnly public long getDisabledContainerColor-0d7_KjU();
    method public long getDisabledContentColor();
    method @BytecodeOnly public long getDisabledContentColor-0d7_KjU();
    method public long getFocusedContainerColor();
    method @BytecodeOnly public long getFocusedContainerColor-0d7_KjU();
    method public long getFocusedContentColor();
    method @BytecodeOnly public long getFocusedContentColor-0d7_KjU();
    method public long getFocusedSelectedContainerColor();
    method @BytecodeOnly public long getFocusedSelectedContainerColor-0d7_KjU();
    method public long getFocusedSelectedContentColor();
    method @BytecodeOnly public long getFocusedSelectedContentColor-0d7_KjU();
    method public long getPressedContainerColor();
    method @BytecodeOnly public long getPressedContainerColor-0d7_KjU();
    method public long getPressedContentColor();
    method @BytecodeOnly public long getPressedContentColor-0d7_KjU();
    method public long getPressedSelectedContainerColor();
    method @BytecodeOnly public long getPressedSelectedContainerColor-0d7_KjU();
    method public long getPressedSelectedContentColor();
    method @BytecodeOnly public long getPressedSelectedContentColor-0d7_KjU();
    method public long getSelectedContainerColor();
    method @BytecodeOnly public long getSelectedContainerColor-0d7_KjU();
    method public long getSelectedContentColor();
    method @BytecodeOnly public long getSelectedContentColor-0d7_KjU();
    property public long containerColor;
    property public long contentColor;
    property public long disabledContainerColor;
    property public long disabledContentColor;
    property public long focusedContainerColor;
    property public long focusedContentColor;
    property public long focusedSelectedContainerColor;
    property public long focusedSelectedContentColor;
    property public long pressedContainerColor;
    property public long pressedContentColor;
    property public long pressedSelectedContainerColor;
    property public long pressedSelectedContentColor;
    property public long selectedContainerColor;
    property public long selectedContentColor;
  }

  public final class ListItemDefaults {
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.ListItemBorder border(optional androidx.tv.material3.Border border, optional androidx.tv.material3.Border focusedBorder, optional androidx.tv.material3.Border pressedBorder, optional androidx.tv.material3.Border selectedBorder, optional androidx.tv.material3.Border disabledBorder, optional androidx.tv.material3.Border focusedSelectedBorder, optional androidx.tv.material3.Border focusedDisabledBorder, optional androidx.tv.material3.Border pressedSelectedBorder);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.ListItemBorder border(androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.ListItemColors colors(optional long containerColor, optional long contentColor, optional long focusedContainerColor, optional long focusedContentColor, optional long pressedContainerColor, optional long pressedContentColor, optional long selectedContainerColor, optional long selectedContentColor, optional long disabledContainerColor, optional long disabledContentColor, optional long focusedSelectedContainerColor, optional long focusedSelectedContentColor, optional long pressedSelectedContainerColor, optional long pressedSelectedContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.ListItemColors colors-u3YEpmA(long, long, long, long, long, long, long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int, int);
    method public float getIconSize();
    method @BytecodeOnly public float getIconSize-D9Ej5fM();
    method public float getIconSizeDense();
    method @BytecodeOnly public float getIconSizeDense-D9Ej5fM();
    method public float getTonalElevation();
    method @BytecodeOnly public float getTonalElevation-D9Ej5fM();
    method public androidx.tv.material3.ListItemGlow glow(optional androidx.tv.material3.Glow glow, optional androidx.tv.material3.Glow focusedGlow, optional androidx.tv.material3.Glow pressedGlow, optional androidx.tv.material3.Glow selectedGlow, optional androidx.tv.material3.Glow focusedSelectedGlow, optional androidx.tv.material3.Glow pressedSelectedGlow);
    method public androidx.tv.material3.ListItemScale scale(optional @FloatRange(from=0.0) float scale, optional @FloatRange(from=0.0) float focusedScale, optional @FloatRange(from=0.0) float pressedScale, optional @FloatRange(from=0.0) float selectedScale, optional @FloatRange(from=0.0) float disabledScale, optional @FloatRange(from=0.0) float focusedSelectedScale, optional @FloatRange(from=0.0) float focusedDisabledScale, optional @FloatRange(from=0.0) float pressedSelectedScale);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.ListItemShape shape(optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Shape focusedShape, optional androidx.compose.ui.graphics.Shape pressedShape, optional androidx.compose.ui.graphics.Shape selectedShape, optional androidx.compose.ui.graphics.Shape disabledShape, optional androidx.compose.ui.graphics.Shape focusedSelectedShape, optional androidx.compose.ui.graphics.Shape focusedDisabledShape, optional androidx.compose.ui.graphics.Shape pressedSelectedShape);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.ListItemShape shape(androidx.compose.ui.graphics.Shape?, androidx.compose.ui.graphics.Shape?, androidx.compose.ui.graphics.Shape?, androidx.compose.ui.graphics.Shape?, androidx.compose.ui.graphics.Shape?, androidx.compose.ui.graphics.Shape?, androidx.compose.ui.graphics.Shape?, androidx.compose.ui.graphics.Shape?, androidx.compose.runtime.Composer?, int, int);
    property public float IconSize;
    property public float IconSizeDense;
    property public float TonalElevation;
    field public static final androidx.tv.material3.ListItemDefaults INSTANCE;
  }

  @androidx.compose.runtime.Immutable public final class ListItemGlow {
    ctor public ListItemGlow(androidx.tv.material3.Glow glow, androidx.tv.material3.Glow focusedGlow, androidx.tv.material3.Glow pressedGlow, androidx.tv.material3.Glow selectedGlow, androidx.tv.material3.Glow focusedSelectedGlow, androidx.tv.material3.Glow pressedSelectedGlow);
    method public androidx.tv.material3.Glow getFocusedGlow();
    method public androidx.tv.material3.Glow getFocusedSelectedGlow();
    method public androidx.tv.material3.Glow getGlow();
    method public androidx.tv.material3.Glow getPressedGlow();
    method public androidx.tv.material3.Glow getPressedSelectedGlow();
    method public androidx.tv.material3.Glow getSelectedGlow();
    property public androidx.tv.material3.Glow focusedGlow;
    property public androidx.tv.material3.Glow focusedSelectedGlow;
    property public androidx.tv.material3.Glow glow;
    property public androidx.tv.material3.Glow pressedGlow;
    property public androidx.tv.material3.Glow pressedSelectedGlow;
    property public androidx.tv.material3.Glow selectedGlow;
  }

  public final class ListItemKt {
    method @androidx.compose.runtime.Composable public static void DenseListItem(boolean selected, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, kotlin.jvm.functions.Function0<kotlin.Unit> headlineContent, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional kotlin.jvm.functions.Function0<kotlin.Unit>? overlineContent, optional kotlin.jvm.functions.Function0<kotlin.Unit>? supportingContent, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? leadingContent, optional kotlin.jvm.functions.Function0<kotlin.Unit>? trailingContent, optional float tonalElevation, optional androidx.tv.material3.ListItemShape shape, optional androidx.tv.material3.ListItemColors colors, optional androidx.tv.material3.ListItemScale scale, optional androidx.tv.material3.ListItemBorder border, optional androidx.tv.material3.ListItemGlow glow, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void DenseListItem-tpvImbo(boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, float, androidx.tv.material3.ListItemShape?, androidx.tv.material3.ListItemColors?, androidx.tv.material3.ListItemScale?, androidx.tv.material3.ListItemBorder?, androidx.tv.material3.ListItemGlow?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.runtime.Composer?, int, int, int);
    method @androidx.compose.runtime.Composable public static void ListItem(boolean selected, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, kotlin.jvm.functions.Function0<kotlin.Unit> headlineContent, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional kotlin.jvm.functions.Function0<kotlin.Unit>? overlineContent, optional kotlin.jvm.functions.Function0<kotlin.Unit>? supportingContent, optional kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit>? leadingContent, optional kotlin.jvm.functions.Function0<kotlin.Unit>? trailingContent, optional float tonalElevation, optional androidx.tv.material3.ListItemShape shape, optional androidx.tv.material3.ListItemColors colors, optional androidx.tv.material3.ListItemScale scale, optional androidx.tv.material3.ListItemBorder border, optional androidx.tv.material3.ListItemGlow glow, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void ListItem-tpvImbo(boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, float, androidx.tv.material3.ListItemShape?, androidx.tv.material3.ListItemColors?, androidx.tv.material3.ListItemScale?, androidx.tv.material3.ListItemBorder?, androidx.tv.material3.ListItemGlow?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.runtime.Composer?, int, int, int);
  }

  @androidx.compose.runtime.Immutable public final class ListItemScale {
    ctor public ListItemScale(@FloatRange(from=0.0) float scale, @FloatRange(from=0.0) float focusedScale, @FloatRange(from=0.0) float pressedScale, @FloatRange(from=0.0) float selectedScale, @FloatRange(from=0.0) float disabledScale, @FloatRange(from=0.0) float focusedSelectedScale, @FloatRange(from=0.0) float focusedDisabledScale, @FloatRange(from=0.0) float pressedSelectedScale);
    method public float getDisabledScale();
    method public float getFocusedDisabledScale();
    method public float getFocusedScale();
    method public float getFocusedSelectedScale();
    method public float getPressedScale();
    method public float getPressedSelectedScale();
    method public float getScale();
    method public float getSelectedScale();
    property @FloatRange(from=0.0) public float disabledScale;
    property @FloatRange(from=0.0) public float focusedDisabledScale;
    property @FloatRange(from=0.0) public float focusedScale;
    property @FloatRange(from=0.0) public float focusedSelectedScale;
    property @FloatRange(from=0.0) public float pressedScale;
    property @FloatRange(from=0.0) public float pressedSelectedScale;
    property @FloatRange(from=0.0) public float scale;
    property @FloatRange(from=0.0) public float selectedScale;
    field public static final androidx.tv.material3.ListItemScale.Companion Companion;
  }

  public static final class ListItemScale.Companion {
    method public androidx.tv.material3.ListItemScale getNone();
    property public androidx.tv.material3.ListItemScale None;
  }

  @androidx.compose.runtime.Immutable public final class ListItemShape {
    ctor public ListItemShape(androidx.compose.ui.graphics.Shape shape, androidx.compose.ui.graphics.Shape focusedShape, androidx.compose.ui.graphics.Shape pressedShape, androidx.compose.ui.graphics.Shape selectedShape, androidx.compose.ui.graphics.Shape disabledShape, androidx.compose.ui.graphics.Shape focusedSelectedShape, androidx.compose.ui.graphics.Shape focusedDisabledShape, androidx.compose.ui.graphics.Shape pressedSelectedShape);
    method public androidx.compose.ui.graphics.Shape getDisabledShape();
    method public androidx.compose.ui.graphics.Shape getFocusedDisabledShape();
    method public androidx.compose.ui.graphics.Shape getFocusedSelectedShape();
    method public androidx.compose.ui.graphics.Shape getFocusedShape();
    method public androidx.compose.ui.graphics.Shape getPressedSelectedShape();
    method public androidx.compose.ui.graphics.Shape getPressedShape();
    method public androidx.compose.ui.graphics.Shape getSelectedShape();
    method public androidx.compose.ui.graphics.Shape getShape();
    property public androidx.compose.ui.graphics.Shape disabledShape;
    property public androidx.compose.ui.graphics.Shape focusedDisabledShape;
    property public androidx.compose.ui.graphics.Shape focusedSelectedShape;
    property public androidx.compose.ui.graphics.Shape focusedShape;
    property public androidx.compose.ui.graphics.Shape pressedSelectedShape;
    property public androidx.compose.ui.graphics.Shape pressedShape;
    property public androidx.compose.ui.graphics.Shape selectedShape;
    property public androidx.compose.ui.graphics.Shape shape;
  }

  public final class MaterialTheme {
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.ColorScheme getColorScheme();
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.ColorScheme getColorScheme(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.Shapes getShapes();
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.Shapes getShapes(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.Typography getTypography();
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.Typography getTypography(androidx.compose.runtime.Composer?, int);
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.ColorScheme colorScheme;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.Shapes shapes;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.Typography typography;
    field public static final androidx.tv.material3.MaterialTheme INSTANCE;
  }

  public final class MaterialThemeKt {
    method @androidx.compose.runtime.Composable public static void MaterialTheme(optional androidx.tv.material3.ColorScheme colorScheme, optional androidx.tv.material3.Shapes shapes, optional androidx.tv.material3.Typography typography, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void MaterialTheme(androidx.tv.material3.ColorScheme?, androidx.tv.material3.Shapes?, androidx.tv.material3.Typography?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
  }

  @androidx.compose.runtime.Immutable public final class NavigationDrawerItemBorder {
    ctor public NavigationDrawerItemBorder(androidx.tv.material3.Border border, androidx.tv.material3.Border focusedBorder, androidx.tv.material3.Border pressedBorder, androidx.tv.material3.Border selectedBorder, androidx.tv.material3.Border disabledBorder, androidx.tv.material3.Border focusedSelectedBorder, androidx.tv.material3.Border focusedDisabledBorder, androidx.tv.material3.Border pressedSelectedBorder);
    method public androidx.tv.material3.Border getBorder();
    method public androidx.tv.material3.Border getDisabledBorder();
    method public androidx.tv.material3.Border getFocusedBorder();
    method public androidx.tv.material3.Border getFocusedDisabledBorder();
    method public androidx.tv.material3.Border getFocusedSelectedBorder();
    method public androidx.tv.material3.Border getPressedBorder();
    method public androidx.tv.material3.Border getPressedSelectedBorder();
    method public androidx.tv.material3.Border getSelectedBorder();
    property public androidx.tv.material3.Border border;
    property public androidx.tv.material3.Border disabledBorder;
    property public androidx.tv.material3.Border focusedBorder;
    property public androidx.tv.material3.Border focusedDisabledBorder;
    property public androidx.tv.material3.Border focusedSelectedBorder;
    property public androidx.tv.material3.Border pressedBorder;
    property public androidx.tv.material3.Border pressedSelectedBorder;
    property public androidx.tv.material3.Border selectedBorder;
  }

  @androidx.compose.runtime.Immutable public final class NavigationDrawerItemColors {
    ctor @KotlinOnly public NavigationDrawerItemColors(androidx.compose.ui.graphics.Color containerColor, androidx.compose.ui.graphics.Color contentColor, androidx.compose.ui.graphics.Color inactiveContentColor, androidx.compose.ui.graphics.Color focusedContainerColor, androidx.compose.ui.graphics.Color focusedContentColor, androidx.compose.ui.graphics.Color pressedContainerColor, androidx.compose.ui.graphics.Color pressedContentColor, androidx.compose.ui.graphics.Color selectedContainerColor, androidx.compose.ui.graphics.Color selectedContentColor, androidx.compose.ui.graphics.Color disabledContainerColor, androidx.compose.ui.graphics.Color disabledContentColor, androidx.compose.ui.graphics.Color disabledInactiveContentColor, androidx.compose.ui.graphics.Color focusedSelectedContainerColor, androidx.compose.ui.graphics.Color focusedSelectedContentColor, androidx.compose.ui.graphics.Color pressedSelectedContainerColor, androidx.compose.ui.graphics.Color pressedSelectedContentColor);
    ctor @BytecodeOnly public NavigationDrawerItemColors(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method public long getContainerColor();
    method @BytecodeOnly public long getContainerColor-0d7_KjU();
    method public long getContentColor();
    method @BytecodeOnly public long getContentColor-0d7_KjU();
    method public long getDisabledContainerColor();
    method @BytecodeOnly public long getDisabledContainerColor-0d7_KjU();
    method public long getDisabledContentColor();
    method @BytecodeOnly public long getDisabledContentColor-0d7_KjU();
    method public long getDisabledInactiveContentColor();
    method @BytecodeOnly public long getDisabledInactiveContentColor-0d7_KjU();
    method public long getFocusedContainerColor();
    method @BytecodeOnly public long getFocusedContainerColor-0d7_KjU();
    method public long getFocusedContentColor();
    method @BytecodeOnly public long getFocusedContentColor-0d7_KjU();
    method public long getFocusedSelectedContainerColor();
    method @BytecodeOnly public long getFocusedSelectedContainerColor-0d7_KjU();
    method public long getFocusedSelectedContentColor();
    method @BytecodeOnly public long getFocusedSelectedContentColor-0d7_KjU();
    method public long getInactiveContentColor();
    method @BytecodeOnly public long getInactiveContentColor-0d7_KjU();
    method public long getPressedContainerColor();
    method @BytecodeOnly public long getPressedContainerColor-0d7_KjU();
    method public long getPressedContentColor();
    method @BytecodeOnly public long getPressedContentColor-0d7_KjU();
    method public long getPressedSelectedContainerColor();
    method @BytecodeOnly public long getPressedSelectedContainerColor-0d7_KjU();
    method public long getPressedSelectedContentColor();
    method @BytecodeOnly public long getPressedSelectedContentColor-0d7_KjU();
    method public long getSelectedContainerColor();
    method @BytecodeOnly public long getSelectedContainerColor-0d7_KjU();
    method public long getSelectedContentColor();
    method @BytecodeOnly public long getSelectedContentColor-0d7_KjU();
    property public long containerColor;
    property public long contentColor;
    property public long disabledContainerColor;
    property public long disabledContentColor;
    property public long disabledInactiveContentColor;
    property public long focusedContainerColor;
    property public long focusedContentColor;
    property public long focusedSelectedContainerColor;
    property public long focusedSelectedContentColor;
    property public long inactiveContentColor;
    property public long pressedContainerColor;
    property public long pressedContentColor;
    property public long pressedSelectedContainerColor;
    property public long pressedSelectedContentColor;
    property public long selectedContainerColor;
    property public long selectedContentColor;
  }

  public final class NavigationDrawerItemDefaults {
    method @androidx.compose.runtime.Composable public void TrailingBadge(String text, optional long containerColor, optional long contentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void TrailingBadge-RIQooxk(String, long, long, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.NavigationDrawerItemBorder border(optional androidx.tv.material3.Border border, optional androidx.tv.material3.Border focusedBorder, optional androidx.tv.material3.Border pressedBorder, optional androidx.tv.material3.Border selectedBorder, optional androidx.tv.material3.Border disabledBorder, optional androidx.tv.material3.Border focusedSelectedBorder, optional androidx.tv.material3.Border focusedDisabledBorder, optional androidx.tv.material3.Border pressedSelectedBorder);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.NavigationDrawerItemBorder border(androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.NavigationDrawerItemColors colors(optional long containerColor, optional long contentColor, optional long inactiveContentColor, optional long focusedContainerColor, optional long focusedContentColor, optional long pressedContainerColor, optional long pressedContentColor, optional long selectedContainerColor, optional long selectedContentColor, optional long disabledContainerColor, optional long disabledContentColor, optional long disabledInactiveContentColor, optional long focusedSelectedContainerColor, optional long focusedSelectedContentColor, optional long pressedSelectedContainerColor, optional long pressedSelectedContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.NavigationDrawerItemColors colors-V1nXRL4(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int, int);
    method public float getCollapsedDrawerItemWidth();
    method @BytecodeOnly public float getCollapsedDrawerItemWidth-D9Ej5fM();
    method public float getContainerHeightOneLine();
    method @BytecodeOnly public float getContainerHeightOneLine-D9Ej5fM();
    method public float getContainerHeightTwoLine();
    method @BytecodeOnly public float getContainerHeightTwoLine-D9Ej5fM();
    method public androidx.compose.animation.EnterTransition getContentAnimationEnter();
    method public androidx.compose.animation.ExitTransition getContentAnimationExit();
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.Border getDefaultBorder();
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.Border getDefaultBorder(androidx.compose.runtime.Composer?, int);
    method public float getExpandedDrawerItemWidth();
    method @BytecodeOnly public float getExpandedDrawerItemWidth-D9Ej5fM();
    method public float getIconSize();
    method @BytecodeOnly public float getIconSize-D9Ej5fM();
    method public float getNavigationDrawerItemElevation();
    method @BytecodeOnly public float getNavigationDrawerItemElevation-D9Ej5fM();
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public long getTrailingBadgeContainerColor();
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public long getTrailingBadgeContainerColor(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public long getTrailingBadgeContentColor();
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public long getTrailingBadgeContentColor(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.ui.text.TextStyle getTrailingBadgeTextStyle();
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.ui.text.TextStyle getTrailingBadgeTextStyle(androidx.compose.runtime.Composer?, int);
    method public androidx.tv.material3.NavigationDrawerItemGlow glow(optional androidx.tv.material3.Glow glow, optional androidx.tv.material3.Glow focusedGlow, optional androidx.tv.material3.Glow pressedGlow, optional androidx.tv.material3.Glow selectedGlow, optional androidx.tv.material3.Glow focusedSelectedGlow, optional androidx.tv.material3.Glow pressedSelectedGlow);
    method public androidx.tv.material3.NavigationDrawerItemScale scale(optional @FloatRange(from=0.0) float scale, optional @FloatRange(from=0.0) float focusedScale, optional @FloatRange(from=0.0) float pressedScale, optional @FloatRange(from=0.0) float selectedScale, optional @FloatRange(from=0.0) float disabledScale, optional @FloatRange(from=0.0) float focusedSelectedScale, optional @FloatRange(from=0.0) float focusedDisabledScale, optional @FloatRange(from=0.0) float pressedSelectedScale);
    method public androidx.tv.material3.NavigationDrawerItemShape shape(optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Shape focusedShape, optional androidx.compose.ui.graphics.Shape pressedShape, optional androidx.compose.ui.graphics.Shape selectedShape, optional androidx.compose.ui.graphics.Shape disabledShape, optional androidx.compose.ui.graphics.Shape focusedSelectedShape, optional androidx.compose.ui.graphics.Shape focusedDisabledShape, optional androidx.compose.ui.graphics.Shape pressedSelectedShape);
    property public float CollapsedDrawerItemWidth;
    property public float ContainerHeightOneLine;
    property public float ContainerHeightTwoLine;
    property public androidx.compose.animation.EnterTransition ContentAnimationEnter;
    property public androidx.compose.animation.ExitTransition ContentAnimationExit;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.Border DefaultBorder;
    property public float ExpandedDrawerItemWidth;
    property public float IconSize;
    property public float NavigationDrawerItemElevation;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public long TrailingBadgeContainerColor;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public long TrailingBadgeContentColor;
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.ui.text.TextStyle TrailingBadgeTextStyle;
    field public static final androidx.tv.material3.NavigationDrawerItemDefaults INSTANCE;
  }

  @androidx.compose.runtime.Immutable public final class NavigationDrawerItemGlow {
    ctor public NavigationDrawerItemGlow(androidx.tv.material3.Glow glow, androidx.tv.material3.Glow focusedGlow, androidx.tv.material3.Glow pressedGlow, androidx.tv.material3.Glow selectedGlow, androidx.tv.material3.Glow focusedSelectedGlow, androidx.tv.material3.Glow pressedSelectedGlow);
    method public androidx.tv.material3.Glow getFocusedGlow();
    method public androidx.tv.material3.Glow getFocusedSelectedGlow();
    method public androidx.tv.material3.Glow getGlow();
    method public androidx.tv.material3.Glow getPressedGlow();
    method public androidx.tv.material3.Glow getPressedSelectedGlow();
    method public androidx.tv.material3.Glow getSelectedGlow();
    property public androidx.tv.material3.Glow focusedGlow;
    property public androidx.tv.material3.Glow focusedSelectedGlow;
    property public androidx.tv.material3.Glow glow;
    property public androidx.tv.material3.Glow pressedGlow;
    property public androidx.tv.material3.Glow pressedSelectedGlow;
    property public androidx.tv.material3.Glow selectedGlow;
  }

  public final class NavigationDrawerItemKt {
    method @androidx.compose.runtime.Composable public static void NavigationDrawerItem(androidx.tv.material3.NavigationDrawerScope, boolean selected, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, kotlin.jvm.functions.Function0<kotlin.Unit> leadingContent, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional kotlin.jvm.functions.Function0<kotlin.Unit>? supportingContent, optional kotlin.jvm.functions.Function0<kotlin.Unit>? trailingContent, optional float tonalElevation, optional androidx.tv.material3.NavigationDrawerItemShape shape, optional androidx.tv.material3.NavigationDrawerItemColors colors, optional androidx.tv.material3.NavigationDrawerItemScale scale, optional androidx.tv.material3.NavigationDrawerItemBorder border, optional androidx.tv.material3.NavigationDrawerItemGlow glow, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void NavigationDrawerItem-eLwUrMk(androidx.tv.material3.NavigationDrawerScope, boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, float, androidx.tv.material3.NavigationDrawerItemShape?, androidx.tv.material3.NavigationDrawerItemColors?, androidx.tv.material3.NavigationDrawerItemScale?, androidx.tv.material3.NavigationDrawerItemBorder?, androidx.tv.material3.NavigationDrawerItemGlow?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
  }

  @androidx.compose.runtime.Immutable public final class NavigationDrawerItemScale {
    ctor public NavigationDrawerItemScale(@FloatRange(from=0.0) float scale, @FloatRange(from=0.0) float focusedScale, @FloatRange(from=0.0) float pressedScale, @FloatRange(from=0.0) float selectedScale, @FloatRange(from=0.0) float disabledScale, @FloatRange(from=0.0) float focusedSelectedScale, @FloatRange(from=0.0) float focusedDisabledScale, @FloatRange(from=0.0) float pressedSelectedScale);
    method public float getDisabledScale();
    method public float getFocusedDisabledScale();
    method public float getFocusedScale();
    method public float getFocusedSelectedScale();
    method public float getPressedScale();
    method public float getPressedSelectedScale();
    method public float getScale();
    method public float getSelectedScale();
    property @FloatRange(from=0.0) public float disabledScale;
    property @FloatRange(from=0.0) public float focusedDisabledScale;
    property @FloatRange(from=0.0) public float focusedScale;
    property @FloatRange(from=0.0) public float focusedSelectedScale;
    property @FloatRange(from=0.0) public float pressedScale;
    property @FloatRange(from=0.0) public float pressedSelectedScale;
    property @FloatRange(from=0.0) public float scale;
    property @FloatRange(from=0.0) public float selectedScale;
    field public static final androidx.tv.material3.NavigationDrawerItemScale.Companion Companion;
  }

  public static final class NavigationDrawerItemScale.Companion {
    method public androidx.tv.material3.NavigationDrawerItemScale getNone();
    property public androidx.tv.material3.NavigationDrawerItemScale None;
  }

  @androidx.compose.runtime.Immutable public final class NavigationDrawerItemShape {
    ctor public NavigationDrawerItemShape(androidx.compose.ui.graphics.Shape shape, androidx.compose.ui.graphics.Shape focusedShape, androidx.compose.ui.graphics.Shape pressedShape, androidx.compose.ui.graphics.Shape selectedShape, androidx.compose.ui.graphics.Shape disabledShape, androidx.compose.ui.graphics.Shape focusedSelectedShape, androidx.compose.ui.graphics.Shape focusedDisabledShape, androidx.compose.ui.graphics.Shape pressedSelectedShape);
    method public androidx.compose.ui.graphics.Shape getDisabledShape();
    method public androidx.compose.ui.graphics.Shape getFocusedDisabledShape();
    method public androidx.compose.ui.graphics.Shape getFocusedSelectedShape();
    method public androidx.compose.ui.graphics.Shape getFocusedShape();
    method public androidx.compose.ui.graphics.Shape getPressedSelectedShape();
    method public androidx.compose.ui.graphics.Shape getPressedShape();
    method public androidx.compose.ui.graphics.Shape getSelectedShape();
    method public androidx.compose.ui.graphics.Shape getShape();
    property public androidx.compose.ui.graphics.Shape disabledShape;
    property public androidx.compose.ui.graphics.Shape focusedDisabledShape;
    property public androidx.compose.ui.graphics.Shape focusedSelectedShape;
    property public androidx.compose.ui.graphics.Shape focusedShape;
    property public androidx.compose.ui.graphics.Shape pressedSelectedShape;
    property public androidx.compose.ui.graphics.Shape pressedShape;
    property public androidx.compose.ui.graphics.Shape selectedShape;
    property public androidx.compose.ui.graphics.Shape shape;
  }

  public final class NavigationDrawerKt {
    method @androidx.compose.runtime.Composable public static void ModalNavigationDrawer(kotlin.jvm.functions.Function2<? super androidx.tv.material3.NavigationDrawerScope,? super androidx.tv.material3.DrawerValue,kotlin.Unit> drawerContent, optional androidx.compose.ui.Modifier modifier, optional androidx.tv.material3.DrawerState drawerState, optional androidx.compose.ui.graphics.Brush scrimBrush, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void ModalNavigationDrawer(kotlin.jvm.functions.Function4<? super androidx.tv.material3.NavigationDrawerScope!,? super androidx.tv.material3.DrawerValue!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, androidx.tv.material3.DrawerState?, androidx.compose.ui.graphics.Brush?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static void NavigationDrawer(kotlin.jvm.functions.Function2<? super androidx.tv.material3.NavigationDrawerScope,? super androidx.tv.material3.DrawerValue,kotlin.Unit> drawerContent, optional androidx.compose.ui.Modifier modifier, optional androidx.tv.material3.DrawerState drawerState, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void NavigationDrawer(kotlin.jvm.functions.Function4<? super androidx.tv.material3.NavigationDrawerScope!,? super androidx.tv.material3.DrawerValue!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, androidx.tv.material3.DrawerState?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public static androidx.tv.material3.DrawerState rememberDrawerState(androidx.tv.material3.DrawerValue initialValue);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static androidx.tv.material3.DrawerState rememberDrawerState(androidx.tv.material3.DrawerValue, androidx.compose.runtime.Composer?, int);
  }

  public interface NavigationDrawerScope {
    method public boolean getHasFocus();
    property public abstract boolean hasFocus;
  }

  public final class OutlinedButtonDefaults {
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.ButtonBorder border(optional androidx.tv.material3.Border border, optional androidx.tv.material3.Border focusedBorder, optional androidx.tv.material3.Border pressedBorder, optional androidx.tv.material3.Border disabledBorder, optional androidx.tv.material3.Border focusedDisabledBorder);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.ButtonBorder border(androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.ButtonColors colors(optional long containerColor, optional long contentColor, optional long focusedContainerColor, optional long focusedContentColor, optional long pressedContainerColor, optional long pressedContentColor, optional long disabledContainerColor, optional long disabledContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.ButtonColors colors-oq7We08(long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method public androidx.compose.foundation.layout.PaddingValues getButtonWithIconContentPadding();
    method public androidx.compose.foundation.layout.PaddingValues getContentPadding();
    method public float getIconSize();
    method @BytecodeOnly public float getIconSize-D9Ej5fM();
    method public float getIconSpacing();
    method @BytecodeOnly public float getIconSpacing-D9Ej5fM();
    method public androidx.tv.material3.ButtonGlow glow(optional androidx.tv.material3.Glow glow, optional androidx.tv.material3.Glow focusedGlow, optional androidx.tv.material3.Glow pressedGlow);
    method public androidx.tv.material3.ButtonScale scale(optional @FloatRange(from=0.0) float scale, optional @FloatRange(from=0.0) float focusedScale, optional @FloatRange(from=0.0) float pressedScale, optional @FloatRange(from=0.0) float disabledScale, optional @FloatRange(from=0.0) float focusedDisabledScale);
    method public androidx.tv.material3.ButtonShape shape(optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Shape focusedShape, optional androidx.compose.ui.graphics.Shape pressedShape, optional androidx.compose.ui.graphics.Shape disabledShape, optional androidx.compose.ui.graphics.Shape focusedDisabledShape);
    property public androidx.compose.foundation.layout.PaddingValues ButtonWithIconContentPadding;
    property public androidx.compose.foundation.layout.PaddingValues ContentPadding;
    property public float IconSize;
    property public float IconSpacing;
    field public static final androidx.tv.material3.OutlinedButtonDefaults INSTANCE;
  }

  public final class OutlinedIconButtonDefaults {
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.ButtonBorder border(optional androidx.tv.material3.Border border, optional androidx.tv.material3.Border focusedBorder, optional androidx.tv.material3.Border pressedBorder, optional androidx.tv.material3.Border disabledBorder, optional androidx.tv.material3.Border focusedDisabledBorder);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.ButtonBorder border(androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.ButtonColors colors(optional long containerColor, optional long contentColor, optional long focusedContainerColor, optional long focusedContentColor, optional long pressedContainerColor, optional long pressedContentColor, optional long disabledContainerColor, optional long disabledContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.ButtonColors colors-oq7We08(long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method public float getLargeButtonSize();
    method @BytecodeOnly public float getLargeButtonSize-D9Ej5fM();
    method public float getLargeIconSize();
    method @BytecodeOnly public float getLargeIconSize-D9Ej5fM();
    method public float getMediumButtonSize();
    method @BytecodeOnly public float getMediumButtonSize-D9Ej5fM();
    method public float getMediumIconSize();
    method @BytecodeOnly public float getMediumIconSize-D9Ej5fM();
    method public float getSmallButtonSize();
    method @BytecodeOnly public float getSmallButtonSize-D9Ej5fM();
    method public float getSmallIconSize();
    method @BytecodeOnly public float getSmallIconSize-D9Ej5fM();
    method public androidx.tv.material3.ButtonGlow glow(optional androidx.tv.material3.Glow glow, optional androidx.tv.material3.Glow focusedGlow, optional androidx.tv.material3.Glow pressedGlow);
    method public androidx.tv.material3.ButtonScale scale(optional @FloatRange(from=0.0) float scale, optional @FloatRange(from=0.0) float focusedScale, optional @FloatRange(from=0.0) float pressedScale, optional @FloatRange(from=0.0) float disabledScale, optional @FloatRange(from=0.0) float focusedDisabledScale);
    method public androidx.tv.material3.ButtonShape shape(optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Shape focusedShape, optional androidx.compose.ui.graphics.Shape pressedShape, optional androidx.compose.ui.graphics.Shape disabledShape, optional androidx.compose.ui.graphics.Shape focusedDisabledShape);
    property public float LargeButtonSize;
    property public float LargeIconSize;
    property public float MediumButtonSize;
    property public float MediumIconSize;
    property public float SmallButtonSize;
    property public float SmallIconSize;
    field public static final androidx.tv.material3.OutlinedIconButtonDefaults INSTANCE;
  }

  @androidx.compose.runtime.Immutable public final class RadioButtonColors {
    ctor @KotlinOnly public RadioButtonColors(androidx.compose.ui.graphics.Color selectedColor, androidx.compose.ui.graphics.Color unselectedColor, androidx.compose.ui.graphics.Color disabledSelectedColor, androidx.compose.ui.graphics.Color disabledUnselectedColor);
    ctor @BytecodeOnly public RadioButtonColors(long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method public androidx.tv.material3.RadioButtonColors copy(optional long selectedColor, optional long unselectedColor, optional long disabledSelectedColor, optional long disabledUnselectedColor);
    method @BytecodeOnly public androidx.tv.material3.RadioButtonColors copy-jRlVdoo(long, long, long, long);
    method public long getDisabledSelectedColor();
    method @BytecodeOnly public long getDisabledSelectedColor-0d7_KjU();
    method public long getDisabledUnselectedColor();
    method @BytecodeOnly public long getDisabledUnselectedColor-0d7_KjU();
    method public long getSelectedColor();
    method @BytecodeOnly public long getSelectedColor-0d7_KjU();
    method public long getUnselectedColor();
    method @BytecodeOnly public long getUnselectedColor-0d7_KjU();
    property public long disabledSelectedColor;
    property public long disabledUnselectedColor;
    property public long selectedColor;
    property public long unselectedColor;
  }

  public final class RadioButtonDefaults {
    method @androidx.compose.runtime.Composable public androidx.tv.material3.RadioButtonColors colors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.tv.material3.RadioButtonColors colors(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.tv.material3.RadioButtonColors colors(optional long selectedColor, optional long unselectedColor, optional long disabledSelectedColor, optional long disabledUnselectedColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.tv.material3.RadioButtonColors colors-ro_MJ88(long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    field public static final androidx.tv.material3.RadioButtonDefaults INSTANCE;
  }

  public final class RadioButtonKt {
    method @androidx.compose.runtime.Composable public static void RadioButton(boolean selected, kotlin.jvm.functions.Function0<kotlin.Unit>? onClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional androidx.tv.material3.RadioButtonColors colors, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void RadioButton(boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>?, androidx.compose.ui.Modifier?, boolean, androidx.tv.material3.RadioButtonColors?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.runtime.Composer?, int, int);
  }

  @SuppressCompatibility @androidx.tv.material3.ExperimentalTvMaterial3Api public sealed interface ScrollPauseHandle {
    method public void resumeAutoScroll();
  }

  @SuppressCompatibility @androidx.compose.runtime.Immutable @androidx.tv.material3.ExperimentalTvMaterial3Api public final class SelectableChipBorder {
  }

  @SuppressCompatibility @androidx.compose.runtime.Immutable @androidx.tv.material3.ExperimentalTvMaterial3Api public final class SelectableChipColors {
  }

  @SuppressCompatibility @androidx.compose.runtime.Immutable @androidx.tv.material3.ExperimentalTvMaterial3Api public final class SelectableChipGlow {
  }

  @SuppressCompatibility @androidx.compose.runtime.Immutable @androidx.tv.material3.ExperimentalTvMaterial3Api public final class SelectableChipScale {
    field public static final androidx.tv.material3.SelectableChipScale.Companion Companion;
  }

  public static final class SelectableChipScale.Companion {
    method public androidx.tv.material3.SelectableChipScale getNone();
    property public androidx.tv.material3.SelectableChipScale None;
  }

  @SuppressCompatibility @androidx.compose.runtime.Immutable @androidx.tv.material3.ExperimentalTvMaterial3Api public final class SelectableChipShape {
  }

  @androidx.compose.runtime.Immutable public final class SelectableSurfaceBorder {
  }

  @androidx.compose.runtime.Immutable public final class SelectableSurfaceColors {
  }

  public final class SelectableSurfaceDefaults {
    method public androidx.tv.material3.SelectableSurfaceBorder border(optional androidx.tv.material3.Border border, optional androidx.tv.material3.Border focusedBorder, optional androidx.tv.material3.Border pressedBorder, optional androidx.tv.material3.Border selectedBorder, optional androidx.tv.material3.Border disabledBorder, optional androidx.tv.material3.Border focusedSelectedBorder, optional androidx.tv.material3.Border focusedDisabledBorder, optional androidx.tv.material3.Border pressedSelectedBorder, optional androidx.tv.material3.Border selectedDisabledBorder, optional androidx.tv.material3.Border focusedSelectedDisabledBorder);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.SelectableSurfaceColors colors(optional long containerColor, optional long contentColor, optional long focusedContainerColor, optional long focusedContentColor, optional long pressedContainerColor, optional long pressedContentColor, optional long selectedContainerColor, optional long selectedContentColor, optional long disabledContainerColor, optional long disabledContentColor, optional long focusedSelectedContainerColor, optional long focusedSelectedContentColor, optional long pressedSelectedContainerColor, optional long pressedSelectedContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.SelectableSurfaceColors colors-u3YEpmA(long, long, long, long, long, long, long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int, int);
    method public androidx.tv.material3.SelectableSurfaceGlow glow(optional androidx.tv.material3.Glow glow, optional androidx.tv.material3.Glow focusedGlow, optional androidx.tv.material3.Glow pressedGlow, optional androidx.tv.material3.Glow selectedGlow, optional androidx.tv.material3.Glow focusedSelectedGlow, optional androidx.tv.material3.Glow pressedSelectedGlow);
    method public androidx.tv.material3.SelectableSurfaceScale scale(optional float scale, optional float focusedScale, optional float pressedScale, optional float selectedScale, optional float disabledScale, optional float focusedSelectedScale, optional float focusedDisabledScale, optional float pressedSelectedScale, optional float selectedDisabledScale, optional float focusedSelectedDisabledScale);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.SelectableSurfaceShape shape(optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Shape focusedShape, optional androidx.compose.ui.graphics.Shape pressedShape, optional androidx.compose.ui.graphics.Shape selectedShape, optional androidx.compose.ui.graphics.Shape disabledShape, optional androidx.compose.ui.graphics.Shape focusedSelectedShape, optional androidx.compose.ui.graphics.Shape focusedDisabledShape, optional androidx.compose.ui.graphics.Shape pressedSelectedShape, optional androidx.compose.ui.graphics.Shape selectedDisabledShape, optional androidx.compose.ui.graphics.Shape focusedSelectedDisabledShape);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.SelectableSurfaceShape shape(androidx.compose.ui.graphics.Shape?, androidx.compose.ui.graphics.Shape?, androidx.compose.ui.graphics.Shape?, androidx.compose.ui.graphics.Shape?, androidx.compose.ui.graphics.Shape?, androidx.compose.ui.graphics.Shape?, androidx.compose.ui.graphics.Shape?, androidx.compose.ui.graphics.Shape?, androidx.compose.ui.graphics.Shape?, androidx.compose.ui.graphics.Shape?, androidx.compose.runtime.Composer?, int, int, int);
    field public static final androidx.tv.material3.SelectableSurfaceDefaults INSTANCE;
  }

  @androidx.compose.runtime.Immutable public final class SelectableSurfaceGlow {
  }

  @androidx.compose.runtime.Immutable public final class SelectableSurfaceScale {
    field public static final androidx.tv.material3.SelectableSurfaceScale.Companion Companion;
  }

  public static final class SelectableSurfaceScale.Companion {
    method public androidx.tv.material3.SelectableSurfaceScale getNone();
    property public androidx.tv.material3.SelectableSurfaceScale None;
  }

  @androidx.compose.runtime.Immutable public final class SelectableSurfaceShape {
  }

  public final class ShapeDefaults {
    method public androidx.compose.foundation.shape.CornerBasedShape getExtraLarge();
    method public androidx.compose.foundation.shape.CornerBasedShape getExtraSmall();
    method public androidx.compose.foundation.shape.CornerBasedShape getLarge();
    method public androidx.compose.foundation.shape.CornerBasedShape getMedium();
    method public androidx.compose.foundation.shape.CornerBasedShape getSmall();
    property public androidx.compose.foundation.shape.CornerBasedShape ExtraLarge;
    property public androidx.compose.foundation.shape.CornerBasedShape ExtraSmall;
    property public androidx.compose.foundation.shape.CornerBasedShape Large;
    property public androidx.compose.foundation.shape.CornerBasedShape Medium;
    property public androidx.compose.foundation.shape.CornerBasedShape Small;
    field public static final androidx.tv.material3.ShapeDefaults INSTANCE;
  }

  @androidx.compose.runtime.Immutable public final class Shapes {
    ctor public Shapes();
    ctor public Shapes(optional androidx.compose.foundation.shape.CornerBasedShape extraSmall, optional androidx.compose.foundation.shape.CornerBasedShape small, optional androidx.compose.foundation.shape.CornerBasedShape medium, optional androidx.compose.foundation.shape.CornerBasedShape large, optional androidx.compose.foundation.shape.CornerBasedShape extraLarge);
    method public androidx.tv.material3.Shapes copy(optional androidx.compose.foundation.shape.CornerBasedShape extraSmall, optional androidx.compose.foundation.shape.CornerBasedShape small, optional androidx.compose.foundation.shape.CornerBasedShape medium, optional androidx.compose.foundation.shape.CornerBasedShape large, optional androidx.compose.foundation.shape.CornerBasedShape extraLarge);
    method public androidx.compose.foundation.shape.CornerBasedShape getExtraLarge();
    method public androidx.compose.foundation.shape.CornerBasedShape getExtraSmall();
    method public androidx.compose.foundation.shape.CornerBasedShape getLarge();
    method public androidx.compose.foundation.shape.CornerBasedShape getMedium();
    method public androidx.compose.foundation.shape.CornerBasedShape getSmall();
    property public androidx.compose.foundation.shape.CornerBasedShape extraLarge;
    property public androidx.compose.foundation.shape.CornerBasedShape extraSmall;
    property public androidx.compose.foundation.shape.CornerBasedShape large;
    property public androidx.compose.foundation.shape.CornerBasedShape medium;
    property public androidx.compose.foundation.shape.CornerBasedShape small;
  }

  @SuppressCompatibility @androidx.tv.material3.ExperimentalTvMaterial3Api public final class SuggestionChipDefaults {
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.ClickableChipBorder border(optional androidx.tv.material3.Border border, optional androidx.tv.material3.Border focusedBorder, optional androidx.tv.material3.Border pressedBorder, optional androidx.tv.material3.Border disabledBorder, optional androidx.tv.material3.Border focusedDisabledBorder);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.ClickableChipBorder border(androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.ClickableChipColors colors(optional long containerColor, optional long contentColor, optional long focusedContainerColor, optional long focusedContentColor, optional long pressedContainerColor, optional long pressedContentColor, optional long disabledContainerColor, optional long disabledContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.ClickableChipColors colors-oq7We08(long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method public float getContainerHeight();
    method @BytecodeOnly public float getContainerHeight-D9Ej5fM();
    method public androidx.compose.foundation.shape.RoundedCornerShape getContainerShape();
    method public androidx.tv.material3.ClickableChipGlow glow(optional androidx.tv.material3.Glow glow, optional androidx.tv.material3.Glow focusedGlow, optional androidx.tv.material3.Glow pressedGlow);
    method public androidx.tv.material3.ClickableChipScale scale(optional @FloatRange(from=0.0) float scale, optional @FloatRange(from=0.0) float focusedScale, optional @FloatRange(from=0.0) float pressedScale, optional @FloatRange(from=0.0) float disabledScale, optional @FloatRange(from=0.0) float focusedDisabledScale);
    method public androidx.tv.material3.ClickableChipShape shape(optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Shape focusedShape, optional androidx.compose.ui.graphics.Shape pressedShape, optional androidx.compose.ui.graphics.Shape disabledShape, optional androidx.compose.ui.graphics.Shape focusedDisabledShape);
    property public float ContainerHeight;
    property public androidx.compose.foundation.shape.RoundedCornerShape ContainerShape;
    field public static final androidx.tv.material3.SuggestionChipDefaults INSTANCE;
  }

  @androidx.compose.runtime.Immutable public final class SurfaceColors {
  }

  public final class SurfaceDefaults {
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.SurfaceColors colors(optional long containerColor, optional long contentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.SurfaceColors colors-dgg9oW8(long, long, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.ui.graphics.Shape getShape();
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.ui.graphics.Shape getShape(androidx.compose.runtime.Composer?, int);
    property @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.compose.ui.graphics.Shape shape;
    field public static final androidx.tv.material3.SurfaceDefaults INSTANCE;
  }

  public final class SurfaceKt {
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static void Surface(optional androidx.compose.ui.Modifier modifier, optional float tonalElevation, optional androidx.compose.ui.graphics.Shape shape, optional androidx.tv.material3.SurfaceColors colors, optional androidx.tv.material3.Border border, optional androidx.tv.material3.Glow glow, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void Surface(boolean selected, kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional boolean enabled, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional float tonalElevation, optional androidx.tv.material3.SelectableSurfaceShape shape, optional androidx.tv.material3.SelectableSurfaceColors colors, optional androidx.tv.material3.SelectableSurfaceScale scale, optional androidx.tv.material3.SelectableSurfaceBorder border, optional androidx.tv.material3.SelectableSurfaceGlow glow, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> content);
    method @androidx.compose.runtime.Composable public static void Surface(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional boolean enabled, optional float tonalElevation, optional androidx.tv.material3.ClickableSurfaceShape shape, optional androidx.tv.material3.ClickableSurfaceColors colors, optional androidx.tv.material3.ClickableSurfaceScale scale, optional androidx.tv.material3.ClickableSurfaceBorder border, optional androidx.tv.material3.ClickableSurfaceGlow glow, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.BoxScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void Surface-05tvjtU(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function0<kotlin.Unit!>?, boolean, float, androidx.tv.material3.ClickableSurfaceShape?, androidx.tv.material3.ClickableSurfaceColors?, androidx.tv.material3.ClickableSurfaceScale?, androidx.tv.material3.ClickableSurfaceBorder?, androidx.tv.material3.ClickableSurfaceGlow?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void Surface-jfnsLPA(androidx.compose.ui.Modifier?, float, androidx.compose.ui.graphics.Shape?, androidx.tv.material3.SurfaceColors?, androidx.tv.material3.Border?, androidx.tv.material3.Glow?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void Surface-xYaah8o(boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>?, float, androidx.tv.material3.SelectableSurfaceShape?, androidx.tv.material3.SelectableSurfaceColors?, androidx.tv.material3.SelectableSurfaceScale?, androidx.tv.material3.SelectableSurfaceBorder?, androidx.tv.material3.SelectableSurfaceGlow?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.BoxScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
  }

  @androidx.compose.runtime.Immutable public final class SwitchColors {
    ctor @KotlinOnly public SwitchColors(androidx.compose.ui.graphics.Color checkedThumbColor, androidx.compose.ui.graphics.Color checkedTrackColor, androidx.compose.ui.graphics.Color checkedBorderColor, androidx.compose.ui.graphics.Color checkedIconColor, androidx.compose.ui.graphics.Color uncheckedThumbColor, androidx.compose.ui.graphics.Color uncheckedTrackColor, androidx.compose.ui.graphics.Color uncheckedBorderColor, androidx.compose.ui.graphics.Color uncheckedIconColor, androidx.compose.ui.graphics.Color disabledCheckedThumbColor, androidx.compose.ui.graphics.Color disabledCheckedTrackColor, androidx.compose.ui.graphics.Color disabledCheckedBorderColor, androidx.compose.ui.graphics.Color disabledCheckedIconColor, androidx.compose.ui.graphics.Color disabledUncheckedThumbColor, androidx.compose.ui.graphics.Color disabledUncheckedTrackColor, androidx.compose.ui.graphics.Color disabledUncheckedBorderColor, androidx.compose.ui.graphics.Color disabledUncheckedIconColor);
    ctor @BytecodeOnly public SwitchColors(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, kotlin.jvm.internal.DefaultConstructorMarker!);
    method public androidx.tv.material3.SwitchColors copy(optional long checkedThumbColor, optional long checkedTrackColor, optional long checkedBorderColor, optional long checkedIconColor, optional long uncheckedThumbColor, optional long uncheckedTrackColor, optional long uncheckedBorderColor, optional long uncheckedIconColor, optional long disabledCheckedThumbColor, optional long disabledCheckedTrackColor, optional long disabledCheckedBorderColor, optional long disabledCheckedIconColor, optional long disabledUncheckedThumbColor, optional long disabledUncheckedTrackColor, optional long disabledUncheckedBorderColor, optional long disabledUncheckedIconColor);
    method @BytecodeOnly public androidx.tv.material3.SwitchColors copy-Q_H9qLU(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long);
    method public long getCheckedBorderColor();
    method @BytecodeOnly public long getCheckedBorderColor-0d7_KjU();
    method public long getCheckedIconColor();
    method @BytecodeOnly public long getCheckedIconColor-0d7_KjU();
    method public long getCheckedThumbColor();
    method @BytecodeOnly public long getCheckedThumbColor-0d7_KjU();
    method public long getCheckedTrackColor();
    method @BytecodeOnly public long getCheckedTrackColor-0d7_KjU();
    method public long getDisabledCheckedBorderColor();
    method @BytecodeOnly public long getDisabledCheckedBorderColor-0d7_KjU();
    method public long getDisabledCheckedIconColor();
    method @BytecodeOnly public long getDisabledCheckedIconColor-0d7_KjU();
    method public long getDisabledCheckedThumbColor();
    method @BytecodeOnly public long getDisabledCheckedThumbColor-0d7_KjU();
    method public long getDisabledCheckedTrackColor();
    method @BytecodeOnly public long getDisabledCheckedTrackColor-0d7_KjU();
    method public long getDisabledUncheckedBorderColor();
    method @BytecodeOnly public long getDisabledUncheckedBorderColor-0d7_KjU();
    method public long getDisabledUncheckedIconColor();
    method @BytecodeOnly public long getDisabledUncheckedIconColor-0d7_KjU();
    method public long getDisabledUncheckedThumbColor();
    method @BytecodeOnly public long getDisabledUncheckedThumbColor-0d7_KjU();
    method public long getDisabledUncheckedTrackColor();
    method @BytecodeOnly public long getDisabledUncheckedTrackColor-0d7_KjU();
    method public long getUncheckedBorderColor();
    method @BytecodeOnly public long getUncheckedBorderColor-0d7_KjU();
    method public long getUncheckedIconColor();
    method @BytecodeOnly public long getUncheckedIconColor-0d7_KjU();
    method public long getUncheckedThumbColor();
    method @BytecodeOnly public long getUncheckedThumbColor-0d7_KjU();
    method public long getUncheckedTrackColor();
    method @BytecodeOnly public long getUncheckedTrackColor-0d7_KjU();
    property public long checkedBorderColor;
    property public long checkedIconColor;
    property public long checkedThumbColor;
    property public long checkedTrackColor;
    property public long disabledCheckedBorderColor;
    property public long disabledCheckedIconColor;
    property public long disabledCheckedThumbColor;
    property public long disabledCheckedTrackColor;
    property public long disabledUncheckedBorderColor;
    property public long disabledUncheckedIconColor;
    property public long disabledUncheckedThumbColor;
    property public long disabledUncheckedTrackColor;
    property public long uncheckedBorderColor;
    property public long uncheckedIconColor;
    property public long uncheckedThumbColor;
    property public long uncheckedTrackColor;
  }

  public final class SwitchDefaults {
    method @androidx.compose.runtime.Composable public androidx.tv.material3.SwitchColors colors();
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.tv.material3.SwitchColors colors(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public androidx.tv.material3.SwitchColors colors(optional long checkedThumbColor, optional long checkedTrackColor, optional long checkedBorderColor, optional long checkedIconColor, optional long uncheckedThumbColor, optional long uncheckedTrackColor, optional long uncheckedBorderColor, optional long uncheckedIconColor, optional long disabledCheckedThumbColor, optional long disabledCheckedTrackColor, optional long disabledCheckedBorderColor, optional long disabledCheckedIconColor, optional long disabledUncheckedThumbColor, optional long disabledUncheckedTrackColor, optional long disabledUncheckedBorderColor, optional long disabledUncheckedIconColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.tv.material3.SwitchColors colors-V1nXRL4(long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int, int);
    method public float getIconSize();
    method @BytecodeOnly public float getIconSize-D9Ej5fM();
    property public float IconSize;
    field public static final androidx.tv.material3.SwitchDefaults INSTANCE;
  }

  public final class SwitchKt {
    method @androidx.compose.runtime.Composable public static void Switch(boolean checked, kotlin.jvm.functions.Function1<? super java.lang.Boolean,kotlin.Unit>? onCheckedChange, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? thumbContent, optional boolean enabled, optional androidx.tv.material3.SwitchColors colors, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void Switch(boolean, kotlin.jvm.functions.Function1<? super java.lang.Boolean!,kotlin.Unit!>?, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, boolean, androidx.tv.material3.SwitchColors?, androidx.compose.foundation.interaction.MutableInteractionSource?, androidx.compose.runtime.Composer?, int, int);
  }

  public final class TabColors {
  }

  public final class TabDefaults {
    method @androidx.compose.runtime.Composable public androidx.tv.material3.TabColors pillIndicatorTabColors(optional long contentColor, optional long inactiveContentColor, optional long selectedContentColor, optional long focusedContentColor, optional long focusedSelectedContentColor, optional long disabledContentColor, optional long disabledInactiveContentColor, optional long disabledSelectedContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.tv.material3.TabColors pillIndicatorTabColors-oq7We08(long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public androidx.tv.material3.TabColors underlinedIndicatorTabColors(optional long contentColor, optional long inactiveContentColor, optional long selectedContentColor, optional long focusedContentColor, optional long focusedSelectedContentColor, optional long disabledContentColor, optional long disabledInactiveContentColor, optional long disabledSelectedContentColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable public androidx.tv.material3.TabColors underlinedIndicatorTabColors-oq7We08(long, long, long, long, long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    field public static final androidx.tv.material3.TabDefaults INSTANCE;
  }

  public final class TabKt {
    method @androidx.compose.runtime.Composable public static void Tab(androidx.tv.material3.TabRowScope, boolean selected, kotlin.jvm.functions.Function0<kotlin.Unit> onFocus, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional boolean enabled, optional androidx.tv.material3.TabColors colors, optional androidx.compose.foundation.interaction.MutableInteractionSource? interactionSource, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void Tab(androidx.tv.material3.TabRowScope, boolean, kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function0<kotlin.Unit!>?, boolean, androidx.tv.material3.TabColors?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
  }

  public final class TabRowDefaults {
    method @androidx.compose.runtime.Composable public void PillIndicator(androidx.compose.ui.unit.DpRect currentTabPosition, boolean doesTabRowHaveFocus, optional androidx.compose.ui.Modifier modifier, optional long activeColor, optional long inactiveColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void PillIndicator-jA1GFJw(androidx.compose.ui.unit.DpRect, boolean, androidx.compose.ui.Modifier?, long, long, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public void TabSeparator();
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void TabSeparator(androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public void UnderlinedIndicator(androidx.compose.ui.unit.DpRect currentTabPosition, boolean doesTabRowHaveFocus, optional androidx.compose.ui.Modifier modifier, optional long activeColor, optional long inactiveColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void UnderlinedIndicator-jA1GFJw(androidx.compose.ui.unit.DpRect, boolean, androidx.compose.ui.Modifier?, long, long, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable public long contentColor();
    method @BytecodeOnly @androidx.compose.runtime.Composable public long contentColor-WaAFU9c(androidx.compose.runtime.Composer?, int);
    method public long getContainerColor();
    method @BytecodeOnly public long getContainerColor-0d7_KjU();
    property public long ContainerColor;
    field public static final androidx.tv.material3.TabRowDefaults INSTANCE;
  }

  public final class TabRowKt {
    method @androidx.compose.runtime.Composable public static void TabRow(int selectedTabIndex, optional androidx.compose.ui.Modifier modifier, optional long containerColor, optional long contentColor, optional kotlin.jvm.functions.Function0<kotlin.Unit> separator, optional kotlin.jvm.functions.Function2<? super java.util.List<androidx.compose.ui.unit.DpRect>,? super java.lang.Boolean,kotlin.Unit> indicator, kotlin.jvm.functions.Function1<? super androidx.tv.material3.TabRowScope,kotlin.Unit> tabs);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void TabRow-pAZo6Ak(int, androidx.compose.ui.Modifier?, long, long, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function4<? super java.util.List<androidx.compose.ui.unit.DpRect!>!,? super java.lang.Boolean!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function3<? super androidx.tv.material3.TabRowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int);
  }

  public interface TabRowScope {
    method public boolean getHasFocus();
    property public abstract boolean hasFocus;
  }

  public final class TextKt {
    method @androidx.compose.runtime.Composable public static void ProvideTextStyle(androidx.compose.ui.text.TextStyle value, kotlin.jvm.functions.Function0<kotlin.Unit> content);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void ProvideTextStyle(androidx.compose.ui.text.TextStyle, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable public static void Text(androidx.compose.ui.text.AnnotatedString text, optional androidx.compose.ui.Modifier modifier, optional long color, optional long fontSize, optional androidx.compose.ui.text.font.FontStyle? fontStyle, optional androidx.compose.ui.text.font.FontWeight? fontWeight, optional androidx.compose.ui.text.font.FontFamily? fontFamily, optional long letterSpacing, optional androidx.compose.ui.text.style.TextDecoration? textDecoration, optional androidx.compose.ui.text.style.TextAlign? textAlign, optional long lineHeight, optional int overflow, optional boolean softWrap, optional int maxLines, optional int minLines, optional java.util.Map<java.lang.String,androidx.compose.foundation.text.InlineTextContent> inlineContent, optional kotlin.jvm.functions.Function1<? super androidx.compose.ui.text.TextLayoutResult,kotlin.Unit> onTextLayout, optional androidx.compose.ui.text.TextStyle style);
    method @androidx.compose.runtime.Composable public static void Text(String text, optional androidx.compose.ui.Modifier modifier, optional long color, optional long fontSize, optional androidx.compose.ui.text.font.FontStyle? fontStyle, optional androidx.compose.ui.text.font.FontWeight? fontWeight, optional androidx.compose.ui.text.font.FontFamily? fontFamily, optional long letterSpacing, optional androidx.compose.ui.text.style.TextDecoration? textDecoration, optional androidx.compose.ui.text.style.TextAlign? textAlign, optional long lineHeight, optional int overflow, optional boolean softWrap, optional int maxLines, optional int minLines, optional kotlin.jvm.functions.Function1<? super androidx.compose.ui.text.TextLayoutResult,kotlin.Unit> onTextLayout, optional androidx.compose.ui.text.TextStyle style);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void Text--4IGK_g(String, androidx.compose.ui.Modifier?, long, long, androidx.compose.ui.text.font.FontStyle?, androidx.compose.ui.text.font.FontWeight?, androidx.compose.ui.text.font.FontFamily?, long, androidx.compose.ui.text.style.TextDecoration?, androidx.compose.ui.text.style.TextAlign?, long, int, boolean, int, int, kotlin.jvm.functions.Function1<? super androidx.compose.ui.text.TextLayoutResult!,kotlin.Unit!>?, androidx.compose.ui.text.TextStyle?, androidx.compose.runtime.Composer?, int, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public static void Text-IbK3jfQ(androidx.compose.ui.text.AnnotatedString, androidx.compose.ui.Modifier?, long, long, androidx.compose.ui.text.font.FontStyle?, androidx.compose.ui.text.font.FontWeight?, androidx.compose.ui.text.font.FontFamily?, long, androidx.compose.ui.text.style.TextDecoration?, androidx.compose.ui.text.style.TextAlign?, long, int, boolean, int, int, java.util.Map<java.lang.String!,androidx.compose.foundation.text.InlineTextContent!>?, kotlin.jvm.functions.Function1<? super androidx.compose.ui.text.TextLayoutResult!,kotlin.Unit!>?, androidx.compose.ui.text.TextStyle?, androidx.compose.runtime.Composer?, int, int, int);
    method public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.ui.text.TextStyle> getLocalTextStyle();
    property public static androidx.compose.runtime.ProvidableCompositionLocal<androidx.compose.ui.text.TextStyle> LocalTextStyle;
  }

  @androidx.compose.runtime.Immutable public final class Typography {
    ctor public Typography();
    ctor public Typography(optional androidx.compose.ui.text.TextStyle displayLarge, optional androidx.compose.ui.text.TextStyle displayMedium, optional androidx.compose.ui.text.TextStyle displaySmall, optional androidx.compose.ui.text.TextStyle headlineLarge, optional androidx.compose.ui.text.TextStyle headlineMedium, optional androidx.compose.ui.text.TextStyle headlineSmall, optional androidx.compose.ui.text.TextStyle titleLarge, optional androidx.compose.ui.text.TextStyle titleMedium, optional androidx.compose.ui.text.TextStyle titleSmall, optional androidx.compose.ui.text.TextStyle bodyLarge, optional androidx.compose.ui.text.TextStyle bodyMedium, optional androidx.compose.ui.text.TextStyle bodySmall, optional androidx.compose.ui.text.TextStyle labelLarge, optional androidx.compose.ui.text.TextStyle labelMedium, optional androidx.compose.ui.text.TextStyle labelSmall);
    method public androidx.tv.material3.Typography copy(optional androidx.compose.ui.text.TextStyle displayLarge, optional androidx.compose.ui.text.TextStyle displayMedium, optional androidx.compose.ui.text.TextStyle displaySmall, optional androidx.compose.ui.text.TextStyle headlineLarge, optional androidx.compose.ui.text.TextStyle headlineMedium, optional androidx.compose.ui.text.TextStyle headlineSmall, optional androidx.compose.ui.text.TextStyle titleLarge, optional androidx.compose.ui.text.TextStyle titleMedium, optional androidx.compose.ui.text.TextStyle titleSmall, optional androidx.compose.ui.text.TextStyle bodyLarge, optional androidx.compose.ui.text.TextStyle bodyMedium, optional androidx.compose.ui.text.TextStyle bodySmall, optional androidx.compose.ui.text.TextStyle labelLarge, optional androidx.compose.ui.text.TextStyle labelMedium, optional androidx.compose.ui.text.TextStyle labelSmall);
    method public androidx.compose.ui.text.TextStyle getBodyLarge();
    method public androidx.compose.ui.text.TextStyle getBodyMedium();
    method public androidx.compose.ui.text.TextStyle getBodySmall();
    method public androidx.compose.ui.text.TextStyle getDisplayLarge();
    method public androidx.compose.ui.text.TextStyle getDisplayMedium();
    method public androidx.compose.ui.text.TextStyle getDisplaySmall();
    method public androidx.compose.ui.text.TextStyle getHeadlineLarge();
    method public androidx.compose.ui.text.TextStyle getHeadlineMedium();
    method public androidx.compose.ui.text.TextStyle getHeadlineSmall();
    method public androidx.compose.ui.text.TextStyle getLabelLarge();
    method public androidx.compose.ui.text.TextStyle getLabelMedium();
    method public androidx.compose.ui.text.TextStyle getLabelSmall();
    method public androidx.compose.ui.text.TextStyle getTitleLarge();
    method public androidx.compose.ui.text.TextStyle getTitleMedium();
    method public androidx.compose.ui.text.TextStyle getTitleSmall();
    property public androidx.compose.ui.text.TextStyle bodyLarge;
    property public androidx.compose.ui.text.TextStyle bodyMedium;
    property public androidx.compose.ui.text.TextStyle bodySmall;
    property public androidx.compose.ui.text.TextStyle displayLarge;
    property public androidx.compose.ui.text.TextStyle displayMedium;
    property public androidx.compose.ui.text.TextStyle displaySmall;
    property public androidx.compose.ui.text.TextStyle headlineLarge;
    property public androidx.compose.ui.text.TextStyle headlineMedium;
    property public androidx.compose.ui.text.TextStyle headlineSmall;
    property public androidx.compose.ui.text.TextStyle labelLarge;
    property public androidx.compose.ui.text.TextStyle labelMedium;
    property public androidx.compose.ui.text.TextStyle labelSmall;
    property public androidx.compose.ui.text.TextStyle titleLarge;
    property public androidx.compose.ui.text.TextStyle titleMedium;
    property public androidx.compose.ui.text.TextStyle titleSmall;
  }

  @androidx.compose.runtime.Immutable public final class WideButtonContentColor {
  }

  public final class WideButtonDefaults {
    method @androidx.compose.runtime.Composable public void Background(boolean enabled, androidx.compose.foundation.interaction.MutableInteractionSource interactionSource);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ComposableTarget(applier="androidx.compose.ui.UiComposable") public void Background(boolean, androidx.compose.foundation.interaction.MutableInteractionSource, androidx.compose.runtime.Composer?, int);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.ButtonBorder border(optional androidx.tv.material3.Border border, optional androidx.tv.material3.Border focusedBorder, optional androidx.tv.material3.Border pressedBorder, optional androidx.tv.material3.Border disabledBorder, optional androidx.tv.material3.Border focusedDisabledBorder);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.ButtonBorder border(androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.tv.material3.Border?, androidx.compose.runtime.Composer?, int, int);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.WideButtonContentColor contentColor(optional long color, optional long focusedColor, optional long pressedColor, optional long disabledColor);
    method @BytecodeOnly @androidx.compose.runtime.Composable @androidx.compose.runtime.ReadOnlyComposable public androidx.tv.material3.WideButtonContentColor contentColor-ro_MJ88(long, long, long, long, androidx.compose.runtime.Composer?, int, int);
    method public androidx.tv.material3.ButtonGlow glow(optional androidx.tv.material3.Glow glow, optional androidx.tv.material3.Glow focusedGlow, optional androidx.tv.material3.Glow pressedGlow);
    method public androidx.tv.material3.ButtonScale scale(optional @FloatRange(from=0.0) float scale, optional @FloatRange(from=0.0) float focusedScale, optional @FloatRange(from=0.0) float pressedScale, optional @FloatRange(from=0.0) float disabledScale, optional @FloatRange(from=0.0) float focusedDisabledScale);
    method public androidx.tv.material3.ButtonShape shape(optional androidx.compose.ui.graphics.Shape shape, optional androidx.compose.ui.graphics.Shape focusedShape, optional androidx.compose.ui.graphics.Shape pressedShape, optional androidx.compose.ui.graphics.Shape disabledShape, optional androidx.compose.ui.graphics.Shape focusedDisabledShape);
    field public static final androidx.tv.material3.WideButtonDefaults INSTANCE;
  }

  public final class WideButtonKt {
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static void WideButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional boolean enabled, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional kotlin.jvm.functions.Function0<kotlin.Unit> background, optional androidx.tv.material3.ButtonScale scale, optional androidx.tv.material3.ButtonGlow glow, optional androidx.tv.material3.ButtonShape shape, optional androidx.tv.material3.WideButtonContentColor contentColor, optional float tonalElevation, optional androidx.tv.material3.ButtonBorder border, optional androidx.compose.foundation.layout.PaddingValues contentPadding, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> content);
    method @androidx.compose.runtime.Composable @androidx.compose.runtime.NonRestartableComposable public static void WideButton(kotlin.jvm.functions.Function0<kotlin.Unit> onClick, kotlin.jvm.functions.Function0<kotlin.Unit> title, optional androidx.compose.ui.Modifier modifier, optional kotlin.jvm.functions.Function0<kotlin.Unit>? onLongClick, optional boolean enabled, optional kotlin.jvm.functions.Function0<kotlin.Unit>? icon, optional kotlin.jvm.functions.Function0<kotlin.Unit>? subtitle, optional androidx.compose.foundation.interaction.MutableInteractionSource interactionSource, optional kotlin.jvm.functions.Function0<kotlin.Unit> background, optional androidx.tv.material3.ButtonScale scale, optional androidx.tv.material3.ButtonGlow glow, optional androidx.tv.material3.ButtonShape shape, optional androidx.tv.material3.WideButtonContentColor contentColor, optional float tonalElevation, optional androidx.tv.material3.ButtonBorder border, optional androidx.compose.foundation.layout.PaddingValues contentPadding);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void WideButton-1hbxZUk(kotlin.jvm.functions.Function0<kotlin.Unit!>, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function0<kotlin.Unit!>?, boolean, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.tv.material3.ButtonScale?, androidx.tv.material3.ButtonGlow?, androidx.tv.material3.ButtonShape?, androidx.tv.material3.WideButtonContentColor?, float, androidx.tv.material3.ButtonBorder?, androidx.compose.foundation.layout.PaddingValues?, androidx.compose.runtime.Composer?, int, int, int);
    method @BytecodeOnly @androidx.compose.runtime.Composable public static void WideButton-WsuR4So(kotlin.jvm.functions.Function0<kotlin.Unit!>, androidx.compose.ui.Modifier?, kotlin.jvm.functions.Function0<kotlin.Unit!>?, boolean, androidx.compose.foundation.interaction.MutableInteractionSource?, kotlin.jvm.functions.Function2<? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>?, androidx.tv.material3.ButtonScale?, androidx.tv.material3.ButtonGlow?, androidx.tv.material3.ButtonShape?, androidx.tv.material3.WideButtonContentColor?, float, androidx.tv.material3.ButtonBorder?, androidx.compose.foundation.layout.PaddingValues?, kotlin.jvm.functions.Function3<? super androidx.compose.foundation.layout.RowScope!,? super androidx.compose.runtime.Composer!,? super java.lang.Integer!,kotlin.Unit!>, androidx.compose.runtime.Composer?, int, int, int);
  }

}

