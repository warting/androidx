/*
 * Copyright (C) 2022 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * This file was created using the `create_project.py` script located in the
 * `<AndroidX root>/development/project-creator` directory.
 *
 * Please use that script when creating a new project, rather than copying an existing project and
 * modifying its settings.
 */

import androidx.build.PlatformIdentifier
import androidx.build.SoftwareType
import org.jetbrains.kotlin.gradle.plugin.KotlinPlatformType

plugins {
    id("AndroidXPlugin")
}

androidXMultiplatform {
    androidLibrary {
        namespace = "androidx.graphics.shapes"
    }
    desktop()
    linux()
    ios()
    watchos()
    tvos()
    mac()
    mingwX64()
    js()
    wasmJs()

    defaultPlatform(PlatformIdentifier.ANDROID)

    sourceSets {
        commonMain {
            dependencies {
                implementation(libs.kotlinStdlib)
                implementation("androidx.collection:collection:1.5.0")
                implementation("androidx.annotation:annotation:1.9.1")
            }
        }

        commonTest {
            dependencies {
                // https://youtrack.jetbrains.com/issue/KT-71032
                implementation(libs.kotlinTestForWasmTests)
                implementation(project(":kruth:kruth"))
            }
        }

        jvmMain {
            dependsOn(commonMain)
        }

        jvmTest {
            dependsOn(commonTest)
        }

        androidMain {
            dependsOn(jvmMain)
            dependencies {
                implementation("androidx.core:core-ktx:1.10.0")
                implementation("androidx.annotation:annotation-experimental:1.4.1")
            }
        }

        androidInstrumentedTest {
            dependsOn(jvmTest)
            dependencies {
                implementation(libs.testRules)
                implementation(libs.testRunner)
                implementation(libs.junit)
            }
        }

        desktopMain {
            dependsOn(jvmMain)
        }

        desktopTest {
            dependsOn(jvmTest)
        }

        nonJvmMain {
            dependsOn(commonMain)
        }

        nonJvmTest {
            dependsOn(commonTest)
        }

        nativeMain {
            dependsOn(nonJvmMain)
        }

        nativeTest {
            dependsOn(nonJvmTest)
        }

        jsMain {
            dependsOn(nonJvmMain)
            dependencies {
                implementation(libs.kotlinStdlibJs)
            }
        }

        jsTest {
            dependencies {
                implementation(libs.kotlinStdlibJs)
                implementation(libs.kotlinTestJs)
            }
        }

        wasmJsMain {
            dependsOn(nonJvmMain)
            dependencies {
                implementation(libs.kotlinStdlibWasm)
            }
        }

        wasmJsTest {
            dependencies {
                implementation(libs.kotlinStdlibWasm)
                implementation(libs.kotlinTestWasm)
            }
        }

        targets.configureEach { target ->
            if (target.platformType == KotlinPlatformType.native) {
                target.compilations["main"].defaultSourceSet.dependsOn(nativeMain)
                target.compilations["test"].defaultSourceSet.dependsOn(nativeTest)
            }
        }
    }

    enableBinaryCompatibilityValidator = false
}


androidx {
    name = "Graphics Shapes"
    type = SoftwareType.PUBLISHED_LIBRARY
    mavenVersion = LibraryVersions.GRAPHICS_SHAPES
    inceptionYear = "2022"
    description = "create and render rounded polygonal shapes"
    legacyDisableKotlinStrictApiMode = true
}
