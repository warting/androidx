// Signature format: 4.0
package androidx.privacysandbox.sdkruntime.core {

  public final class AppOwnedSdkSandboxInterfaceCompat {
    ctor public AppOwnedSdkSandboxInterfaceCompat(String name, long version, android.os.IBinder binder);
    method public android.os.IBinder getInterface();
    method public String getName();
    method public long getVersion();
  }

  public final class LoadSdkCompatException extends java.lang.Exception {
    ctor public LoadSdkCompatException(Throwable cause, android.os.Bundle extraInfo);
    method public android.os.Bundle getExtraInformation();
    method public int getLoadSdkErrorCode();
    property public android.os.Bundle extraInformation;
    property public int loadSdkErrorCode;
    field public static final androidx.privacysandbox.sdkruntime.core.LoadSdkCompatException.Companion Companion;
    field public static final int LOAD_SDK_ALREADY_LOADED = 101; // 0x65
    field public static final int LOAD_SDK_INTERNAL_ERROR = 500; // 0x1f4
    field public static final int LOAD_SDK_NOT_FOUND = 100; // 0x64
    field public static final int LOAD_SDK_SDK_DEFINED_ERROR = 102; // 0x66
    field public static final int LOAD_SDK_SDK_SANDBOX_DISABLED = 103; // 0x67
    field public static final int SDK_SANDBOX_PROCESS_NOT_AVAILABLE = 503; // 0x1f7
  }

  public static final class LoadSdkCompatException.Companion {
    property public static int LOAD_SDK_ALREADY_LOADED;
    property public static int LOAD_SDK_INTERNAL_ERROR;
    property public static int LOAD_SDK_NOT_FOUND;
    property public static int LOAD_SDK_SDK_DEFINED_ERROR;
    property public static int LOAD_SDK_SDK_SANDBOX_DISABLED;
    property public static int SDK_SANDBOX_PROCESS_NOT_AVAILABLE;
  }

  public final class SandboxedSdkCompat {
    ctor public SandboxedSdkCompat(android.os.IBinder sdkInterface);
    method public android.os.IBinder? getInterface();
    method public androidx.privacysandbox.sdkruntime.core.SandboxedSdkInfo? getSdkInfo();
  }

  public final class SandboxedSdkInfo {
    ctor public SandboxedSdkInfo(String name, long version);
    method public String getName();
    method public long getVersion();
    property public String name;
    property public long version;
  }

  public abstract class SandboxedSdkProviderCompat {
    ctor public SandboxedSdkProviderCompat();
    method public final void attachContext(android.content.Context context);
    method public void beforeUnloadSdk();
    method public final android.content.Context? getContext();
    method @kotlin.jvm.Throws(exceptionClasses=LoadSdkCompatException::class) public abstract androidx.privacysandbox.sdkruntime.core.SandboxedSdkCompat onLoadSdk(android.os.Bundle params) throws androidx.privacysandbox.sdkruntime.core.LoadSdkCompatException;
    property public final android.content.Context? context;
  }

  public interface SdkSandboxClientImportanceListenerCompat {
    method public void onForegroundImportanceChanged(boolean isForeground);
  }

}

package androidx.privacysandbox.sdkruntime.core.activity {

  public interface ActivityHolder extends androidx.lifecycle.LifecycleOwner {
    method public android.app.Activity getActivity();
    method public androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher();
  }

  public interface SdkSandboxActivityHandlerCompat {
    method public void onActivityCreated(androidx.privacysandbox.sdkruntime.core.activity.ActivityHolder activityHolder);
  }

}

package androidx.privacysandbox.sdkruntime.core.controller {

  @Deprecated public final class SdkSandboxControllerCompat {
    method @Deprecated public static androidx.privacysandbox.sdkruntime.core.controller.SdkSandboxControllerCompat from(android.content.Context context);
    method @Deprecated public java.util.List<androidx.privacysandbox.sdkruntime.core.AppOwnedSdkSandboxInterfaceCompat> getAppOwnedSdkSandboxInterfaces();
    method @Deprecated public String getClientPackageName();
    method @Deprecated public java.util.List<androidx.privacysandbox.sdkruntime.core.SandboxedSdkCompat> getSandboxedSdks();
    method @Deprecated public suspend Object? loadSdk(String sdkName, android.os.Bundle params, kotlin.coroutines.Continuation<? super androidx.privacysandbox.sdkruntime.core.SandboxedSdkCompat>);
    method @Deprecated public android.os.IBinder registerSdkSandboxActivityHandler(androidx.privacysandbox.sdkruntime.core.activity.SdkSandboxActivityHandlerCompat handlerCompat);
    method @Deprecated public void registerSdkSandboxClientImportanceListener(java.util.concurrent.Executor executor, androidx.privacysandbox.sdkruntime.core.SdkSandboxClientImportanceListenerCompat listenerCompat);
    method @Deprecated public void unregisterSdkSandboxActivityHandler(androidx.privacysandbox.sdkruntime.core.activity.SdkSandboxActivityHandlerCompat handlerCompat);
    method @Deprecated public void unregisterSdkSandboxClientImportanceListener(androidx.privacysandbox.sdkruntime.core.SdkSandboxClientImportanceListenerCompat listenerCompat);
    field @Deprecated public static final androidx.privacysandbox.sdkruntime.core.controller.SdkSandboxControllerCompat.Companion Companion;
  }

  @Deprecated public static final class SdkSandboxControllerCompat.Companion {
    method @Deprecated public androidx.privacysandbox.sdkruntime.core.controller.SdkSandboxControllerCompat from(android.content.Context context);
  }

}

