// Signature format: 4.0
package androidx.privacysandbox.databridge.sdkprovider {

  public abstract class DataBridgeSdkProvider {
    method public static final androidx.privacysandbox.databridge.sdkprovider.DataBridgeSdkProvider getInstance(android.content.Context sdkContext);
    method public abstract suspend Object? getValues(java.util.Set<androidx.privacysandbox.databridge.core.Key> keys, kotlin.coroutines.Continuation<? super java.util.Map<androidx.privacysandbox.databridge.core.Key,? extends kotlin.Result<? extends java.lang.Object?>>>);
    method public abstract void registerKeyUpdateCallback(java.util.Set<androidx.privacysandbox.databridge.core.Key> keys, java.util.concurrent.Executor executor, androidx.privacysandbox.databridge.core.KeyUpdateCallback callback);
    method public abstract suspend Object? removeValues(java.util.Set<androidx.privacysandbox.databridge.core.Key> keys, kotlin.coroutines.Continuation<? super kotlin.Unit>);
    method public abstract suspend Object? setValues(java.util.Map<androidx.privacysandbox.databridge.core.Key,? extends java.lang.Object?> keyValueMap, kotlin.coroutines.Continuation<? super kotlin.Unit>);
    method public abstract void unregisterKeyUpdateCallback(androidx.privacysandbox.databridge.core.KeyUpdateCallback callback);
    field public static final androidx.privacysandbox.databridge.sdkprovider.DataBridgeSdkProvider.Companion Companion;
  }

  public static final class DataBridgeSdkProvider.Companion {
    method public androidx.privacysandbox.databridge.sdkprovider.DataBridgeSdkProvider getInstance(android.content.Context sdkContext);
  }

}

