// Signature format: 4.0
package androidx.pdf {

  @SuppressCompatibility @kotlin.RequiresOptIn @kotlin.annotation.Retention(kotlin.annotation.AnnotationRetention.BINARY) public @interface ExperimentalPdfApi {
  }

  public interface PdfDocument extends java.io.Closeable {
    method public androidx.pdf.PdfDocument.BitmapSource getPageBitmapSource(int pageNumber);
    method public suspend Object? getPageContent(int pageNumber, kotlin.coroutines.Continuation<? super androidx.pdf.PdfDocument.PdfPageContent?>);
    method public int getPageCount();
    method public suspend Object? getPageInfo(int pageNumber, kotlin.coroutines.Continuation<? super androidx.pdf.PdfDocument.PageInfo>);
    method public suspend Object? getPageInfos(kotlin.ranges.IntRange pageRange, kotlin.coroutines.Continuation<? super java.util.List<androidx.pdf.PdfDocument.PageInfo>>);
    method public suspend Object? getPageLinks(int pageNumber, kotlin.coroutines.Continuation<? super androidx.pdf.PdfDocument.PdfPageLinks>);
    method public suspend Object? getSelectionBounds(int pageNumber, android.graphics.PointF start, android.graphics.PointF stop, kotlin.coroutines.Continuation<? super androidx.pdf.content.PageSelection?>);
    method public android.net.Uri getUri();
    method public boolean isLinearized();
    method public suspend Object? searchDocument(String query, kotlin.ranges.IntRange pageRange, kotlin.coroutines.Continuation<? super android.util.SparseArray<java.util.List<androidx.pdf.content.PageMatchBounds>>>);
    property public abstract boolean isLinearized;
    property public abstract int pageCount;
    property public abstract android.net.Uri uri;
    field public static final androidx.pdf.PdfDocument.Companion Companion;
  }

  public static interface PdfDocument.BitmapSource extends java.io.Closeable {
    method public suspend Object? getBitmap(android.util.Size scaledPageSizePx, optional android.graphics.Rect? tileRegion, kotlin.coroutines.Continuation<? super android.graphics.Bitmap>);
    method public int getPageNumber();
    property public abstract int pageNumber;
  }

  public static final class PdfDocument.Companion {
  }

  public static final class PdfDocument.PageInfo {
    ctor public PdfDocument.PageInfo(int pageNum, int height, int width);
    method public int getHeight();
    method public int getPageNum();
    method public int getWidth();
    property public int height;
    property public int pageNum;
    property public int width;
  }

  public static final class PdfDocument.PdfPageContent {
    ctor public PdfDocument.PdfPageContent(java.util.List<androidx.pdf.content.PdfPageTextContent> textContents, java.util.List<androidx.pdf.content.PdfPageImageContent> imageContents);
    method public java.util.List<androidx.pdf.content.PdfPageImageContent> getImageContents();
    method public java.util.List<androidx.pdf.content.PdfPageTextContent> getTextContents();
    property public java.util.List<androidx.pdf.content.PdfPageImageContent> imageContents;
    property public java.util.List<androidx.pdf.content.PdfPageTextContent> textContents;
  }

  public static final class PdfDocument.PdfPageLinks {
    ctor public PdfDocument.PdfPageLinks(java.util.List<androidx.pdf.content.PdfPageGotoLinkContent> gotoLinks, java.util.List<androidx.pdf.content.PdfPageLinkContent> externalLinks);
    method public java.util.List<androidx.pdf.content.PdfPageLinkContent> getExternalLinks();
    method public java.util.List<androidx.pdf.content.PdfPageGotoLinkContent> getGotoLinks();
    property public java.util.List<androidx.pdf.content.PdfPageLinkContent> externalLinks;
    property public java.util.List<androidx.pdf.content.PdfPageGotoLinkContent> gotoLinks;
  }

  public interface PdfLoader {
    method @kotlin.jvm.Throws(exceptionClasses=IOException::class) public suspend Object? openDocument(android.net.Uri uri, android.os.ParcelFileDescriptor fileDescriptor, optional String? password, kotlin.coroutines.Continuation<? super androidx.pdf.PdfDocument>) throws java.io.IOException;
    method @kotlin.jvm.Throws(exceptionClasses=IOException::class) public suspend Object? openDocument(android.net.Uri uri, optional String? password, kotlin.coroutines.Continuation<? super androidx.pdf.PdfDocument>) throws java.io.IOException;
  }

  public final class PdfPasswordException extends java.lang.SecurityException {
    ctor public PdfPasswordException(String message);
  }

  public final class PdfPoint {
    ctor public PdfPoint(int pageNum, android.graphics.PointF pagePoint);
    ctor public PdfPoint(int pageNum, float x, float y);
    method public int getPageNum();
    method public float getX();
    method public float getY();
    property public int pageNum;
    property public float x;
    property public float y;
  }

  public final class PdfRect {
    ctor public PdfRect(int pageNum, android.graphics.RectF pageRect);
    ctor public PdfRect(int pageNum, float left, float top, float right, float bottom);
    method public float getBottom();
    method public float getLeft();
    method public int getPageNum();
    method public float getRight();
    method public float getTop();
    property public float bottom;
    property public float left;
    property public int pageNum;
    property public float right;
    property public float top;
  }

}

package androidx.pdf.content {

  public final class ExternalLink {
    ctor public ExternalLink(android.net.Uri uri);
    method public android.net.Uri getUri();
    property public android.net.Uri uri;
  }

  public final class PageMatchBounds {
    ctor public PageMatchBounds(java.util.List<? extends android.graphics.RectF> bounds, int textStartIndex);
    method public java.util.List<android.graphics.RectF> getBounds();
    method public int getTextStartIndex();
    property public java.util.List<android.graphics.RectF> bounds;
    property public int textStartIndex;
  }

  public final class PageSelection {
    ctor public PageSelection(int page, androidx.pdf.content.SelectionBoundary start, androidx.pdf.content.SelectionBoundary stop, java.util.List<androidx.pdf.content.PdfPageTextContent> selectedTextContents);
    method public int getPage();
    method public java.util.List<androidx.pdf.content.PdfPageTextContent> getSelectedTextContents();
    method public androidx.pdf.content.SelectionBoundary getStart();
    method public androidx.pdf.content.SelectionBoundary getStop();
    property public int page;
    property public java.util.List<androidx.pdf.content.PdfPageTextContent> selectedTextContents;
    property public androidx.pdf.content.SelectionBoundary start;
    property public androidx.pdf.content.SelectionBoundary stop;
  }

  public final class PdfPageGotoLinkContent {
    ctor public PdfPageGotoLinkContent(java.util.List<? extends android.graphics.RectF> bounds, androidx.pdf.content.PdfPageGotoLinkContent.Destination destination);
    method public java.util.List<android.graphics.RectF> getBounds();
    method public androidx.pdf.content.PdfPageGotoLinkContent.Destination getDestination();
    property public java.util.List<android.graphics.RectF> bounds;
    property public androidx.pdf.content.PdfPageGotoLinkContent.Destination destination;
  }

  public static final class PdfPageGotoLinkContent.Destination {
    ctor public PdfPageGotoLinkContent.Destination(int pageNumber, float xCoordinate, float yCoordinate, float zoom);
    method public int getPageNumber();
    method public float getXCoordinate();
    method public float getYCoordinate();
    method public float getZoom();
    property public int pageNumber;
    property public float xCoordinate;
    property public float yCoordinate;
    property public float zoom;
  }

  public final class PdfPageImageContent {
    ctor public PdfPageImageContent(String altText);
    method public String getAltText();
    property public String altText;
  }

  public final class PdfPageLinkContent {
    ctor public PdfPageLinkContent(java.util.List<? extends android.graphics.RectF> bounds, android.net.Uri uri);
    method public java.util.List<android.graphics.RectF> getBounds();
    method public android.net.Uri getUri();
    property public java.util.List<android.graphics.RectF> bounds;
    property public android.net.Uri uri;
  }

  public final class PdfPageTextContent {
    ctor public PdfPageTextContent(java.util.List<? extends android.graphics.RectF> bounds, String text);
    method public java.util.List<android.graphics.RectF> getBounds();
    method public String getText();
    property public java.util.List<android.graphics.RectF> bounds;
    property public String text;
  }

  public final class SelectionBoundary {
    ctor public SelectionBoundary();
    ctor public SelectionBoundary(optional int index, optional android.graphics.Point? point, optional boolean isRtl);
    method public int getIndex();
    method public android.graphics.Point? getPoint();
    method public boolean isRtl();
    property public int index;
    property public boolean isRtl;
    property public android.graphics.Point? point;
  }

}

package androidx.pdf.selection {

  public interface Selection {
    method public java.util.List<androidx.pdf.PdfRect> getBounds();
    property public abstract java.util.List<androidx.pdf.PdfRect> bounds;
  }

}

package androidx.pdf.selection.model {

  public final class TextSelection implements androidx.pdf.selection.Selection {
    ctor public TextSelection(CharSequence text, java.util.List<androidx.pdf.PdfRect> bounds);
    method public java.util.List<androidx.pdf.PdfRect> getBounds();
    method public CharSequence getText();
    method public String textAsString();
    property public java.util.List<androidx.pdf.PdfRect> bounds;
    property public CharSequence text;
  }

}

package androidx.pdf.view {

  public final class Highlight {
    ctor public Highlight(androidx.pdf.PdfRect area, @ColorInt int color);
    method public androidx.pdf.PdfRect getArea();
    method public int getColor();
    property public androidx.pdf.PdfRect area;
    property public int color;
  }

  public class PdfView extends android.view.View {
    ctor public PdfView(android.content.Context context);
    ctor public PdfView(android.content.Context context, optional android.util.AttributeSet? attrs);
    ctor public PdfView(android.content.Context context, optional android.util.AttributeSet? attrs, optional int defStyle);
    method public final void addOnGestureStateChangedListener(androidx.pdf.view.PdfView.OnGestureStateChangedListener listener);
    method public final void addOnSelectionChangedListener(androidx.pdf.view.PdfView.OnSelectionChangedListener listener);
    method public final void addOnViewportChangedListener(androidx.pdf.view.PdfView.OnViewportChangedListener listener);
    method public final void clearSelection();
    method public final androidx.pdf.selection.Selection? getCurrentSelection();
    method public final android.graphics.drawable.Drawable getFastScrollPageIndicatorBackgroundDrawable();
    method public final int getFastScrollPageIndicatorMarginEnd();
    method public final android.graphics.drawable.Drawable getFastScrollVerticalThumbDrawable();
    method public final int getFastScrollVerticalThumbMarginEnd();
    method public final int getFirstVisiblePage();
    method public final int getGestureState();
    method public final float getMaxZoom();
    method public final float getMinZoom();
    method public final androidx.pdf.PdfDocument? getPdfDocument();
    method public final int getVisiblePagesCount();
    method public final float getZoom();
    method public final android.graphics.PointF? pdfToViewPoint(androidx.pdf.PdfPoint pdfPoint);
    method public final void removeOnGestureStateChangedListener(androidx.pdf.view.PdfView.OnGestureStateChangedListener listener);
    method public final void removeOnSelectionChangedListener(androidx.pdf.view.PdfView.OnSelectionChangedListener listener);
    method public final void removeOnViewportChangedListener(androidx.pdf.view.PdfView.OnViewportChangedListener listener);
    method public final void scrollToPage(int pageNum);
    method public final void scrollToPosition(androidx.pdf.PdfPoint position);
    method public final void setFastScrollPageIndicatorBackgroundDrawable(android.graphics.drawable.Drawable);
    method public final void setFastScrollPageIndicatorMarginEnd(int);
    method public final void setFastScrollVerticalThumbDrawable(android.graphics.drawable.Drawable);
    method public final void setFastScrollVerticalThumbMarginEnd(int);
    method public final void setHighlights(java.util.List<androidx.pdf.view.Highlight> highlights);
    method public final void setLinkClickListener(androidx.pdf.view.PdfView.LinkClickListener? listener);
    method public final void setMaxZoom(float);
    method public final void setMinZoom(float);
    method public final void setPdfDocument(androidx.pdf.PdfDocument?);
    method public final void setZoom(float);
    method public final androidx.pdf.PdfPoint? viewToPdfPoint(android.graphics.PointF viewPoint);
    method public final androidx.pdf.PdfPoint? viewToPdfPoint(float x, float y);
    property public final androidx.pdf.selection.Selection? currentSelection;
    property public final android.graphics.drawable.Drawable fastScrollPageIndicatorBackgroundDrawable;
    property public final int fastScrollPageIndicatorMarginEnd;
    property public final android.graphics.drawable.Drawable fastScrollVerticalThumbDrawable;
    property public final int fastScrollVerticalThumbMarginEnd;
    property public final int firstVisiblePage;
    property public final int gestureState;
    property public final float maxZoom;
    property public final float minZoom;
    property public final androidx.pdf.PdfDocument? pdfDocument;
    property public final int visiblePagesCount;
    property public final float zoom;
    field public static final androidx.pdf.view.PdfView.Companion Companion;
    field public static final int GESTURE_STATE_IDLE = 0; // 0x0
    field public static final int GESTURE_STATE_INTERACTING = 1; // 0x1
    field public static final int GESTURE_STATE_SETTLING = 2; // 0x2
  }

  public static final class PdfView.Companion {
    property public static int GESTURE_STATE_IDLE;
    property public static int GESTURE_STATE_INTERACTING;
    property public static int GESTURE_STATE_SETTLING;
  }

  public static interface PdfView.LinkClickListener {
    method public boolean onLinkClicked(androidx.pdf.content.ExternalLink externalLink);
  }

  public static interface PdfView.OnGestureStateChangedListener {
    method public void onGestureStateChanged(int newState);
  }

  public static interface PdfView.OnSelectionChangedListener {
    method public void onSelectionChanged(androidx.pdf.selection.Selection? newSelection);
  }

  public static interface PdfView.OnViewportChangedListener {
    method public void onViewportChanged(int firstVisiblePage, int visiblePagesCount, android.util.SparseArray<android.graphics.RectF> pageLocations, float zoomLevel);
  }

}

